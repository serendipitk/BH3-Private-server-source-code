/* eslint-disable */

export const protobufPackage = "";

export enum AccountType {
  ACCOUNT_NONE = 0,
  ACCOUNT_MIHOYO = 1,
  ACCOUNT_BILIBILI = 2,
  ACCOUNT_UC = 3,
  ACCOUNT_360 = 4,
  ACCOUNT_YYB = 5,
  ACCOUNT_XIAOMI = 6,
  ACCOUNT_HUAWEI = 7,
  ACCOUNT_OPPO = 8,
  ACCOUNT_VIVO = 9,
  ACCOUNT_MEIZU = 10,
  ACCOUNT_COOLPAD = 11,
  ACCOUNT_LENOVO = 12,
  ACCOUNT_GIONEE = 13,
  ACCOUNT_BAIDU = 14,
  ACCOUNT_WANDOUJIA = 15,
  ACCOUNT_LESHI = 16,
  ACCOUNT_GOOGLE = 17,
  ACCOUNT_FACEBOOK = 18,
  ACCOUNT_ITUNES_GC = 19,
  ACCOUNT_SIGNIN_APPLE = 20,
  ACCOUNT_WEGAME = 21,
  ACCOUNT_BYTEDANCE = 22,
  ACCOUNT_STEAM = 23,
  ACCOUNT_HOYOLAB = 24,
  UNRECOGNIZED = -1,
}

export enum AccurateGoodsTriggerType {
  ACCURATE_GOODS_TRIGGER_TYPE_NONE = 0,
  ACCURATE_GOODS_TRIGGER_TYPE_UNLOCK_AVATAR = 1,
  ACCURATE_GOODS_TRIGGER_TYPE_FIRST_GOT = 2,
  ACCURATE_GOODS_TRIGGER_TYPE_REPEAT_GOT = 3,
  ACCURATE_GOODS_TRIGGER_TYPE_UNLOCK_ELF = 4,
  ACCURATE_GOODS_TRIGGER_TYPE_FINISH_MISSION = 5,
  ACCURATE_GOODS_TRIGGER_TYPE_EXCHANGE_SCOIN = 6,
  ACCURATE_GOODS_TRIGGER_TYPE_EXCHANGE_STAMINA = 7,
  ACCURATE_GOODS_TRIGGER_TYPE_LOSE_STAGE = 8,
  ACCURATE_GOODS_TRIGGER_TYPE_WIN_STAGE_FIRST = 9,
  ACCURATE_GOODS_TRIGGER_TYPE_AVATAR_LEVEL = 10,
  ACCURATE_GOODS_TRIGGER_TYPE_PLAYER_LEVEL = 11,
  ACCURATE_GOODS_TRIGGER_TYPE_GOBACK_DAYS = 12,
  ACCURATE_GOODS_TRIGGER_TYPE_AVATAR_STAR = 13,
  UNRECOGNIZED = -1,
}

export enum AchievementType {
  ACHIEVE_TYPE_NONE = 0,
  ACHIEVE_TYPE_CAPTAIN = 1,
  ACHIEVE_TYPE_DEVELOP = 2,
  ACHIEVE_TYPE_SOCIAL = 3,
  ACHIEVE_TYPE_STAGE = 4,
  ACHIEVE_TYPE_ISLAND = 5,
  ACHIEVE_TYPE_CHALLENGE = 6,
  ACHIEVE_TYPE_DORM = 7,
  ACHIEVE_TYPE_EXTRA_STORY = 8,
  UNRECOGNIZED = -1,
}

export enum ActivitySeriesSweepTimesType {
  ACTIVITY_SERIES_SWEEP_TIMES_NONE = 0,
  ACTIVITY_SERIES_SWEEP_TIMES_DAILY = 1,
  ACTIVITY_SERIES_SWEEP_TIMES_WEEKLY = 2,
  UNRECOGNIZED = -1,
}

export enum ActivityType {
  ACTIVITY_NONE = 0,
  ACTIVITY_WEEK_DAY = 1,
  ACTIVITY_BEFALL = 2,
  ACTIVITY_NUCLEAR = 3,
  ACTIVITY_MULTIPLAYER = 4,
  ACTIVITY_MP_RAID = 5,
  ACTIVITY_SIMULATE_RANK = 7,
  ACTIVITY_BOSS_RUSH = 8,
  ACTIVITY_MINUTE = 9,
  ACTIVITY_SIMULATE_NO_RANK = 10,
  ACTIVITY_WORLDBOSS = 11,
  ACTIVITY_RECLAIM = 12,
  ACTIVITY_MP_OPENWORLD_BOSS = 13,
  ACTIVITY_MATRIX = 14,
  UNRECOGNIZED = -1,
}

export enum ActivityWorldChatroomType {
  ACTIVITY_WORLD_CHATROOM_TYPE_NONE = 0,
  ACTIVITY_WORLD_CHATROOM_TYPE_KINGDOM = 1,
  ACTIVITY_WORLD_CHATROOM_TYPE_GLOBAL_WAR = 2,
  ACTIVITY_WORLD_CHATROOM_TYPE_CHATWORLD_BEAST = 3,
  ACTIVITY_WORLD_CHATROOM_TYPE_SLG = 4,
  UNRECOGNIZED = -1,
}

export enum AddFriendAction {
  ADD_FRIEND_ACTION_ASK = 1,
  ADD_FRIEND_ACTION_AGREE = 2,
  ADD_FRIEND_ACTION_REJECT = 3,
  UNRECOGNIZED = -1,
}

export enum AdventureQuestResult {
  ADVENTURE_QUEST_RESULT_NONE = 0,
  ADVENTURE_QUEST_RESULT_FAIL = 1,
  ADVENTURE_QUEST_RESULT_SUCC = 2,
  ADVENTURE_QUEST_RESULT_BIG_SUCC = 3,
  UNRECOGNIZED = -1,
}

export enum AdventureQuestStatus {
  ADVENTURE_QUEST_STATUS_NONE = 0,
  ADVENTURE_QUEST_STATUS_DOING = 1,
  ADVENTURE_QUEST_STATUS_FINISHED = 2,
  UNRECOGNIZED = -1,
}

export enum AdventureRecordType {
  ADVENTURE_RECORD_NONE = 0,
  ADVENTURE_RECORD_GROWTH = 1,
  ADVENTURE_RECORD_GROWTH_STAGE = 2,
  ADVENTURE_RECORD_SKILL_STAGE = 3,
  UNRECOGNIZED = -1,
}

export enum AdventureWelfareType {
  ADVENTURE_WELFARE_NONE = 0,
  ADVENTURE_WELFARE_VENTURE_STAMINA = 1,
  ADVENTURE_WELFARE_SHOP = 2,
  ADVENTURE_WELFARE_QUEST_LEVEL = 3,
  ADVENTURE_WELFARE_SCOIN = 4,
  ADVENTURE_WELFARE_STAMINA = 5,
  UNRECOGNIZED = -1,
}

export enum AreaType {
  AREA_CN = 1,
  AREA_JP = 2,
  AREA_ASIA = 3,
  AREA_WEST = 4,
  AREA_KR = 5,
  AREA_OVERSEAS = 6,
  UNRECOGNIZED = -1,
}

export enum ArmadaActivityType {
  ARMADA_ACTIVITY_TYPE_NONE = 0,
  ARMADA_ACTIVITY_ARMADA_BOSS = 1,
  ARMADA_ACTIVITY_MATRIX = 2,
  ARMADA_ACTIVITY_QUESTION = 3,
  ARMADA_ACTIVITY_TRADING_CARD = 4,
  ARMADA_ACTIVITY_ARMADA_STAGE_SCORE_ACTIVITY = 5,
  ARMADA_ACTIVITY_REUNION = 6,
  UNRECOGNIZED = -1,
}

export enum ArmadaApplyNotifyType {
  ARMADA_APPLY_NOTIFY_NEW = 1,
  ARMADA_APPLY_NOTIFY_APPROVE = 2,
  ARMADA_APPLY_NOTIFY_REJECT = 3,
  UNRECOGNIZED = -1,
}

export enum ArmadaBuildNotifyType {
  ARMADA_BUILD_NOTIFY_START = 1,
  ARMADA_BUILD_NOTIFY_CANCEL = 2,
  ARMADA_BUILD_NOTIFY_FINISH = 3,
  ARMADA_BUILD_NOTIFY_MOVE = 4,
  UNRECOGNIZED = -1,
}

export enum ArmadaCabinType {
  ARMADA_CABIN_NONE = 0,
  ARMADA_CABIN_MAIN = 1,
  ARMADA_CABIN_CONTACT = 2,
  ARMADA_CABIN_HANGAR = 3,
  ARMADA_CABIN_WORKSHOP = 4,
  ARMADA_CABIN_EXCHEQUER = 5,
  ARMADA_CABIN_BOSS = 6,
  UNRECOGNIZED = -1,
}

export enum ArmadaImpeachOperation {
  START_IMPEACH = 1,
  END_IMPEACH = 2,
  CANCEL_IMPEACH = 3,
  UNRECOGNIZED = -1,
}

export enum ArmadaImpeachStatus {
  ARMADA_IMPEACH_STATUS_NORMAL = 0,
  ARMADA_IMPEACH_STATUS_IMPEACH = 1,
  ARMADA_IMPEACH_STATUS_ELECTION = 2,
  UNRECOGNIZED = -1,
}

export enum ArmadaLabelType {
  ARMADA_LABEL_PREFIX = 1,
  ARMADA_LABEL = 2,
  UNRECOGNIZED = -1,
}

export enum ArmadaManageNotifyType {
  ARMADA_MANAGE_NOTIFY_LEADER = 1,
  ARMADA_MANAGE_NOTIFY_VICE_LEADER_SET = 2,
  ARMADA_MANAGE_NOTIFY_VICE_LEADER_CANCEL = 3,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixAvatarState {
  ARMADA_MATRIX_AVATAR_STATE_INVALID = 0,
  ARMADA_MATRIX_AVATAR_STATE_LIVE = 1,
  ARMADA_MATRIX_AVATAR_STATE_DEAD = 2,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixBuffCategory {
  ARMADA_MATRIX_BUFF_OVERLAP = 1,
  ARMADA_MATRIX_BUFF_TEMPORARY = 2,
  ARMADA_MATRIX_BUFF_FLOOR = 3,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixEventType {
  ARMADA_MATRIX_EVENT_TYPE_ITEM = 1,
  ARMADA_MATRIX_EVENT_TYPE_DEPOSIT = 2,
  ARMADA_MATRIX_EVENT_TYPE_BATTLE = 3,
  ARMADA_MATRIX_EVENT_TYPE_FATIGUE = 4,
  ARMADA_MATRIX_EVENT_TYPE_EXPLORE_POWER = 5,
  ARMADA_MATRIX_EVENT_TYPE_SHOP = 6,
  ARMADA_MATRIX_EVENT_TYPE_OUTER_ITEM = 7,
  ARMADA_MATRIX_EVENT_TYPE_SUPPLY = 8,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixExitConditionStatus {
  ARMADA_MATRIX_EXIT_CONDITION_STATUS_NONE = 0,
  ARMADA_MATRIX_EXIT_CONDITION_STATUS_DOING = 1,
  ARMADA_MATRIX_EXIT_CONDITION_STATUS_FINISH = 2,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixExitConditionType {
  ARMADA_MATRIX_EXIT_CONDITION_BOSS = 1,
  ARMADA_MATRIX_EXIT_CONDITION_MONSTER = 2,
  ARMADA_MATRIX_EXIT_CONDITION_ITEM = 3,
  ARMADA_MATRIX_EXIT_CONDITION_TREASURE = 4,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixGridState {
  ARMADA_MATRIX_GRID_STATE_NONE = 0,
  ARMADA_MATRIX_GRID_STATE_FOG = 1,
  ARMADA_MATRIX_GRID_STATE_VISBLE = 2,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixGridType {
  ARMADA_MATRIX_GRID_NONE = 0,
  ARMADA_MATRIX_GRID_EMPTY = 1,
  ARMADA_MATRIX_GRID_BARRIER = 2,
  ARMADA_MATRIX_GRID_START = 3,
  ARMADA_MATRIX_GRID_ITEM = 4,
  ARMADA_MATRIX_GRID_MONSTER = 5,
  ARMADA_MATRIX_GRID_RANDOM = 6,
  ARMADA_MATRIX_GRID_TRAP = 7,
  ARMADA_MATRIX_GRID_SHOP = 8,
  ARMADA_MATRIX_GRID_EXIT = 9,
  ARMADA_MATRIX_GRID_DIALOG = 10,
  ARMADA_MATRIX_GRID_TRANSPORT = 11,
  ARMADA_MATRIX_GRID_QUESTION = 12,
  ARMADA_MATRIX_GRID_INVALID = -1,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixItemEffectType {
  ARMADA_MATRIX_ITEM_EFFECT_TYPE_RECOVER_FATIGUE = 1,
  ARMADA_MATRIX_ITEM_EFFECT_TYPE_BUFF = 2,
  ARMADA_MATRIX_ITEM_EFFECT_TYPE_FLARE = 3,
  ARMADA_MATRIX_ITEM_EFFECT_TYPE_SIGNAL_FLARE = 4,
  ARMADA_MATRIX_ITEM_EFFECT_TYPE_EXPLORE_POWER = 5,
  ARMADA_MATRIX_ITEM_EFFECT_TYPE_INTERACT_SUPPLY = 6,
  ARMADA_MATRIX_ITEM_EFFECT_TYPE_INTERACT_BOSS = 7,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixItemSubType {
  ARMADA_MATRIX_ITEM_TYPE_TEAM = 1,
  ARMADA_MATRIX_ITEM_TYPE_AVATAR = 2,
  ARMADA_MATRIX_ITEM_TYPE_MAP = 3,
  ARMADA_MATRIX_ITEM_TYPE_GLOBAL = 4,
  ARMADA_MATRIX_ITEM_TYPE_OTHERS = 5,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixItemType {
  ARMADA_MATRIX_NONE = 0,
  ARMADA_MATRIX_ITEM = 2,
  ARMADA_MATRIX_BUFF = 3,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixLocationType {
  ARMADA_MATRIX_LOCATION_NONE = 0,
  ARMADA_MATRIX_LOCATION_PLAYER = 1,
  ARMADA_MATRIX_LOCATION_MONSTER = 2,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixMissionMonsterType {
  ARMADA_MATRIX_MISSION_MONSTER_ANY = 0,
  ARMADA_MATRIX_MISSION_MONSTER_LOCAL = 1,
  ARMADA_MATRIX_MISSION_MONSTER_ARMADA = 2,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixMonsterType {
  ARMADA_MATRIX_MONSTER_TYPE_NONE = 0,
  ARMADA_MATRIX_MONSTER_TYPE_1 = 1,
  ARMADA_MATRIX_MONSTER_TYPE_2 = 2,
  ARMADA_MATRIX_MONSTER_TYPE_3 = 3,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixPresetType {
  ARMADA_MATRIX_PRESET_TYPE_NONE = 0,
  ARMADA_MATRIX_PRESET_TYPE_ARMADA_BOSS = 100,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixRewardType {
  ARMADA_MATRIX_REWARD_TYPE_NONE = 0,
  ARMADA_MATRIX_REWARD_TYPE_PERSONAL = 1,
  ARMADA_MATRIX_REWARD_TYPE_ARMADA = 2,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixShopType {
  ARMADA_MATRIX_SHOP_TYPE_GRID = 1,
  ARMADA_MATRIX_SHOP_TYPE_EVENT = 2,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixSyncNotifyType {
  ARMADA_MATRIX_NOTIFY_UNKNOWN = 0,
  ARMADA_MATRIX_NOTIFY_ADVANCE = 1,
  ARMADA_MATRIX_NOTIFY_TRANSPORT = 2,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixTreasureType {
  ARMADA_MATRIX_TREASURE_ITEM = 1,
  ARMADA_MATRIX_TREASURE_DEPOSIT = 2,
  ARMADA_MATRIX_TREASURE_OUTER_ITEM = 3,
  UNRECOGNIZED = -1,
}

export enum ArmadaPlayerNotifyType {
  ARMADA_PLAYER_NOTIFY_JOIN = 1,
  ARMADA_PLAYER_NOTIFY_QUIT = 2,
  ARMADA_PLAYER_NOTIFY_KICK = 3,
  ARMADA_PLAYER_NOTIFY_DISSOLVE = 4,
  ARMADA_PLAYER_NOTIFY_CHANGE_NAME = 5,
  UNRECOGNIZED = -1,
}

export enum ArmadaPlayerStatus {
  ARMADA_PLAYER_NOT_JOIN = 1,
  ARMADA_PLAYER_APPLY = 2,
  ARMADA_PLAYER_CHOOSE_CONTACT = 3,
  ARMADA_PLAYER_JOINED = 4,
  UNRECOGNIZED = -1,
}

export enum ArmadaPosition {
  ARMADA_POSITION_NONE = 0,
  ARMADA_POSITION_LEADER = 1,
  ARMADA_POSITION_VICELEADER = 2,
  ARMADA_POSITION_MEMBER = 3,
  UNRECOGNIZED = -1,
}

export enum ArmadaStageScoreActivityRewardType {
  ARMADA_STAGE_SCORE_ACTIVITY_REWARD_TYPE_NONE = 0,
  ARMADA_STAGE_SCORE_ACTIVITY_REWARD_TYPE_SELF = 1,
  ARMADA_STAGE_SCORE_ACTIVITY_REWARD_TYPE_ARMADA = 2,
  UNRECOGNIZED = -1,
}

export enum ArmadaSystemChatMsgType {
  ARMADA_CHAT_MSG_GACHA = 1,
  ARMADA_CHAT_MSG_AVATAR_STAR_UP = 2,
  ARMADA_CHAT_MSG_AVATAR_UNLOCK = 3,
  ARMADA_CHAT_MSG_JOIN_ARMADA = 4,
  ARMADA_CHAT_MSG_MISSION_FINISH = 5,
  ARMADA_CHAT_MSG_LEVEL_UP = 6,
  ARMADA_CHAT_MSG_CABIN_BUILD_FINISH = 7,
  ARMADA_CHAT_MSG_CABIN_LEVEL_UP = 8,
  ARMADA_CHAT_MSG_POSITION = 9,
  ARMADA_CHAT_MSG_KICK = 10,
  ARMADA_CHAT_MSG_KEEPUP = 11,
  ARMADA_CHAT_MSG_CANCEL_DISSOLVE = 12,
  ARMADA_CHAT_MSG_CHANGE_NAME = 13,
  ARMADA_CHAT_MSG_TEXT_MAP = 14,
  UNRECOGNIZED = -1,
}

export enum AuditOpType {
  AUDIT_OP_NONE = 0,
  AUDIT_OP_CHANGE_NICKNAME = 1,
  AUDIT_OP_CHANGE_DESC = 2,
  AUDIT_OP_CHANGE_ARMADA_NAME = 3,
  AUDIT_OP_CHANGE_ARMADA_BULLETIN = 4,
  AUDIT_OP_CREATE_CHATGROUP = 5,
  AUDIT_OP_CHANGE_CHATGROUP = 6,
  AUDIT_OP_CHANGE_DORM = 7,
  AUDIT_OP_CHANGE_MASTER_PUPIL_CARD = 8,
  UNRECOGNIZED = -1,
}

export enum AuthkeySignType {
  AUTHKEY_SIGN_TYPE_DEFAULT = 1,
  AUTHKEY_SIGN_TYPE_RSA = 2,
  UNRECOGNIZED = -1,
}

export enum AutoDeleteType {
  AUTO_DELETE_BINGO = 2,
  AUTO_DELETE_BULLETIN_SCORE = 3,
  AUTO_DELETE_CONTINUOUS_RECHARGE = 4,
  AUTO_DELETE_FARM = 5,
  AUTO_DELETE_FLOP = 6,
  AUTO_DELETE_KINGDOM = 7,
  AUTO_DELETE_LOTTERY = 8,
  AUTO_DELETE_ELF_EQUIP_TALENT_FREE = 9,
  AUTO_DELETE_THEME = 10,
  AUTO_DELETE_RELATION = 11,
  AUTO_DELETE_BBQ = 12,
  AUTO_DELETE_CITY = 13,
  AUTO_DELETE_GRATUITY = 14,
  AUTO_DELETE_MONOPOLY = 15,
  AUTO_DELETE_OVERLAP = 16,
  AUTO_DELETE_RECLAIM = 17,
  AUTO_DELETE_SCRATCH = 18,
  AUTO_DELETE_SEASON = 19,
  AUTO_DELETE_TOWER_RAID = 20,
  AUTO_DELETE_VERSION = 21,
  AUTO_DELETE_GLOBAL_WAR = 22,
  AUTO_DELETE_LOGIN = 23,
  AUTO_DELETE_GENERAL = 24,
  AUTO_DELETE_NINJA = 25,
  AUTO_DELETE_QUESTION = 26,
  AUTO_DELETE_TRADING_CARD = 27,
  AUTO_DELETE_ARMADA_STAGE_SCORE = 28,
  AUTO_DELETE_PICTURE = 29,
  AUTO_DELETE_JIGSAW = 30,
  AUTO_DELETE_ARMADA_REUNION = 31,
  AUTO_DELETE_GARDEN = 32,
  AUTO_DELETE_DROP_LIMIT = 33,
  AUTO_DELETE_RPG_TALE = 34,
  AUTO_DELETE_SANCTUARY = 35,
  AUTO_DELETE_ACTIVITY_REWARD = 36,
  AUTO_DELETE_SLOT_MACHINE = 37,
  AUTO_DELETE_EXAMINATION = 38,
  AUTO_DELETE_SUPPORT = 39,
  AUTO_DELETE_MOSAIC = 40,
  AUTO_DELETE_LOGIN_WISH = 41,
  AUTO_DELETE_TVT = 43,
  AUTO_DELETE_BURDEN_ALLEVIATION = 44,
  AUTO_DELETE_CHATWORLD_BEAST = 45,
  AUTO_DELETE_CHATWORLD_BOX = 46,
  AUTO_DELETE_DREAM = 47,
  AUTO_DELETE_OPENWORLD_AVATAR = 48,
  AUTO_DELETE_GRANT_TICKET = 49,
  AUTO_DELETE_SLG = 50,
  AUTO_DELETE_GLOBAL_POLLING = 51,
  AUTO_DELETE_REWARD_LINE_SCHEDULE = 52,
  AUTO_DELETE_GOD_WAR_TALE = 53,
  AUTO_DELETE_OPENWORLD_HUNT = 54,
  AUTO_DELETE_BUFF_ASSIST = 55,
  UNRECOGNIZED = -1,
}

export enum AvatarAttrType {
  AVATAR_HP = 1,
  AVATAR_SP = 2,
  AVATAR_ATTACK = 3,
  AVATAR_DEFENSE = 4,
  AVATAR_CRITICAL = 5,
  UNRECOGNIZED = -1,
}

export enum AvatarBindEquipMode {
  AVATAR_BIND_EQUIP_COMMON = 0,
  AVATAR_BIND_EQUIP_EXTRA_STORY = 1,
  UNRECOGNIZED = -1,
}

export enum AvatarClassType {
  AVATAR_KIANA = 1,
  AVATAR_MEI = 2,
  AVATAR_BRONYA = 3,
  AVATAR_HIMEKO = 4,
  AVATAR_THERESA = 5,
  AVATAR_FUKA = 6,
  AVATAR_RITA = 7,
  AVATAR_DURANDAL = 8,
  AVATAR_FISCHL = 9,
  AVATAR_PARDOFELIS = 10,
  UNRECOGNIZED = -1,
}

export enum AvatarID {
  AVATAR_KIANA_PT = 101,
  AVATAR_KIANA_FX = 102,
  AVATAR_KIANA_YN = 103,
  AVATAR_KIANA_QN = 104,
  AVATAR_MEI_CK = 201,
  AVATAR_MEI_WS = 202,
  AVATAR_MEI_DH = 203,
  AVATAR_MEI_LD = 204,
  AVATAR_SAKURA_YS = 211,
  AVATAR_SAKURA_ZF = 212,
  AVATAR_BRONYA_ZP = 301,
  AVATAR_BRONYA_BQ = 302,
  AVATAR_BRONYA_JJ = 303,
  AVATAR_BRONYA_BX = 304,
  AVATAR_HIMEKO_VV = 401,
  AVATAR_HIMEKO_NX = 402,
  AVATAR_HIMEKO_KZ = 403,
  AVATAR_HIMEKO_BZ = 404,
  AVATAR_THERESA_YD = 501,
  AVATAR_THERESA_TP = 502,
  AVATAR_THERESA_FY = 503,
  AVATAR_THERESA_JX = 504,
  AVATAR_RITA_NP = 701,
  UNRECOGNIZED = -1,
}

export enum AvatarRecommendSource {
  AVATAR_RECOMMEND_SOURCE_NONE = 0,
  AVATAR_RECOMMEND_SOURCE_DB = 1,
  AVATAR_RECOMMEND_SOURCE_DESIGN_DATA = 2,
  UNRECOGNIZED = -1,
}

export enum AvatarRecommendStyle {
  AVATAR_RECOMMEND_STYLE_NONE = 0,
  AVATAR_RECOMMEND_STYLE_HOT = 1,
  AVATAR_RECOMMEND_STYLE_CHOICE = 2,
  AVATAR_RECOMMEND_STYLE_SINGLE_AVATAR = 3,
  UNRECOGNIZED = -1,
}

export enum AvatarRecommendType {
  AVATAR_RECOMMEND_NONE = 0,
  AVATAR_RECOMMEND_STAGE = 1,
  AVATAR_RECOMMEND_EXBOSS = 2,
  AVATAR_RECOMMEND_WEEKLY_REPORT_ENDLESS = 3,
  AVATAR_RECOMMEND_WEEKLY_REPORT_EX_BOSS = 4,
  AVATAR_RECOMMEND_WEEKLY_REPORT_ULTRA_ENDLESS = 5,
  AVATAR_RECOMMEND_ULTRA_ENDLESS = 6,
  AVATAR_RECOMMEND_GREEDY = 7,
  AVATAR_RECOMMEND_WEEKLY_REPORT_GREEDY = 8,
  UNRECOGNIZED = -1,
}

export enum AvatarReviveEnum {
  AVATAR_REVIVE_TIMES_UN_LIMIT = 65535,
  UNRECOGNIZED = -1,
}

export enum AvatarRoleType {
  AVATAR_ROLE_KIANA = 1,
  AVATAR_ROLE_MEI = 2,
  AVATAR_ROLE_BRONYA = 3,
  AVATAR_ROLE_HIMEKO = 4,
  AVATAR_ROLE_THERESA = 5,
  AVATAR_ROLE_FUKA = 6,
  AVATAR_ROLE_RITA = 7,
  AVATAR_ROLE_TWINS = 8,
  AVATAR_ROLE_SEELE = 9,
  AVATAR_ROLE_DURANDAL = 10,
  AVATAR_ROLE_ASUKA = 11,
  AVATAR_ROLE_FISCHL = 12,
  AVATAR_ROLE_KEQING = 13,
  AVATAR_ROLE_ELYSIA = 14,
  AVATAR_ROLE_MOBIUS = 15,
  AVATAR_ROLE_RAVEN = 16,
  AVATAR_ROLE_PARDOFELIS = 17,
  AVATAR_ROLE_APONIA = 18,
  AVATAR_ROLE_EDEN = 19,
  AVATAR_ROLE_GRISEO = 20,
  AVATAR_ROLE_VILL_V = 21,
  AVATAR_ROLE_LISUSHANG = 22,
  AVATAR_ROLE_SAKURA = 101,
  AVATAR_ROLE_KALLEN = 102,
  AVATAR_ROLE_DLC_MEI = 103,
  AVATAR_ROLE_DLC_ADAM = 104,
  AVATAR_ROLE_DLC_CAROL = 105,
  AVATAR_ROLE_DLC_BRONYA = 106,
  AVATAR_ROLE_DLC_KONG = 107,
  UNRECOGNIZED = -1,
}

export enum AvatarRollType {
  AVATAR_ROLL_AVATAR = 1,
  AVATAR_ROLL_STIGMATA = 2,
  AVATAR_ROLL_ERROR = 100,
  UNRECOGNIZED = -1,
}

export enum AvatarSuiteSelectionStatus {
  SELECTION_NONE = 0,
  SELECTION_ING = 1,
  SELECTION_FINSH = 2,
  UNRECOGNIZED = -1,
}

export enum AvatarSuiteSelectionStep {
  STEP_NONE = 0,
  STEP_AVATAR = 1,
  STEP_WEAPON = 2,
  STEP_STIGMATA_UP = 3,
  STEP_STIGMATA_MID = 4,
  STEP_STIGMATA_DOWN = 5,
  STEP_SKILL = 6,
  UNRECOGNIZED = -1,
}

export enum AvatarSuiteSelectionSystem {
  SYSTEM_SEALED_MODE = 1,
  UNRECOGNIZED = -1,
}

export enum AvatarTeamType {
  AVATAR_TEAM_NORMAL = 1,
  AVATAR_TEAM_VIRTUAL = 2,
  AVATAR_TEAM_DLC = 3,
  AVATAR_TEAM_SC_DLC = 4,
  UNRECOGNIZED = -1,
}

export enum AvatarType {
  AVATAR_TRIAL_TYPE = 1,
  AVATAR_LIMIT_TYPE = 2,
  AVATAR_FORMAL_TYPE = 3,
  UNRECOGNIZED = -1,
}

export enum BattleMode {
  BATTLE_MODE_NONE = 0,
  BATTLE_MODE_QAVATAR_BATTLE = 1,
  UNRECOGNIZED = -1,
}

export enum BattlePassTicketType {
  BATTLE_PASS_TICKET_NONE = 0,
  BATTLE_PASS_TICKET_NORMAL = 1,
  BATTLE_PASS_TICKET_ADVANCED = 2,
  BATTLE_PASS_TICKET_LUXURY = 3,
  UNRECOGNIZED = -1,
}

export enum BingoCardType {
  BINGO_CARD_WRONG = 0,
  BINGO_CARD_CORRECT = 1,
  UNRECOGNIZED = -1,
}

export enum BonusThemeType {
  BONUS_THEME_TYPE_NONE = 0,
  BONUS_THEME_TYPE_BONUS_SCORE_RATIO = 1,
  BONUS_THEME_TYPE_BONUS_SCORE_FIXED = 2,
  BONUS_THEME_TYPE_BONUS_DROP_PROB = 3,
  BONUS_THEME_TYPE_BONUS_DROP_FIXED = 4,
  UNRECOGNIZED = -1,
}

export enum BuffAcquireType {
  BUFF_ACQUIRE_GOBACK = 1,
  BUFF_ACQUIRE_ITEMUSE = 3,
  UNRECOGNIZED = -1,
}

export enum BuffAssistBuffProducerType {
  BUFF_ASSIST_BUFF_PRODUCER_PLAYER = 1,
  BUFF_ASSIST_BUFF_PRODUCER_NPC = 2,
  BUFF_ASSIST_BUFF_PRODUCER_ROBOT = 3,
  UNRECOGNIZED = -1,
}

export enum BuffAssistType {
  BUFF_ASSIST_PRODUCER = 1,
  BUFF_ASSIST_CONSUMER = 2,
  UNRECOGNIZED = -1,
}

export enum BuffEffectType {
  BUFF_EFFECT_COMMANDER_EXP = 1,
  BUFF_EFFECT_AVATAR_EXP = 2,
  BUFF_EFFECT_SCOIN = 3,
  BUFF_EFFECT_NEWBIE = 4,
  BUFF_EFFECT_GOBACK = 5,
  UNRECOGNIZED = -1,
}

export enum BuffEffectUseType {
  BUFF_EFFECT_USE_STAGE = 1,
  BUFF_EFFECT_USE_MISSION = 2,
  BUFF_EFFECT_USE_VIRTUAL_EQUIPMENT = 3,
  UNRECOGNIZED = -1,
}

export enum BulletinActivityType {
  BULLETIN_ACTIVITY_TYPE_NONE = 0,
  BULLETIN_ACTIVITY_TYPE_MOSAIC = 1,
  BULLETIN_ACTIVITY_TYPE_GACHA = 2,
  BULLETIN_ACTIVITY_TYPE_SHOP = 3,
  BULLETIN_ACTIVITY_TYPE_MISSION = 4,
  BULLETIN_ACTIVITY_TYPE_BULLETIN = 5,
  BULLETIN_ACTIVITY_TYPE_CITYACTIVITY = 6,
  BULLETIN_ACTIVITY_TYPE_NEWROLE = 7,
  BULLETIN_ACTIVITY_TYPE_GACHA_TIMELINE = 8,
  BULLETIN_ACTIVITY_TYPE_ACTIVITY_TIMELINE = 9,
  BULLETIN_ACTIVITY_TYPE_FLOP_CARD = 10,
  BULLETIN_ACTIVITY_TYPE_BINGO = 11,
  BULLETIN_ACTIVITY_TYPE_SCORE = 12,
  BULLETIN_ACTIVITY_TYPE_RELATION = 13,
  BULLETIN_ACTIVITY_TYPE_WEB = 14,
  BULLETIN_ACTIVITY_TYPE_LOTTERY_DRAW_NUMBER = 15,
  BULLETIN_ACTIVITY_TYPE_LOTTERY_TAKE_REWARD = 16,
  BULLETIN_ACTIVITY_TYPE_CONTINUOUS_RECHARGE = 17,
  BULLETIN_ACTIVITY_TYPE_SUPER_SIGN_IN = 18,
  BULLETIN_ACTIVITY_TYPE_OVERLAP = 19,
  BULLETIN_ACTIVITY_TYPE_REWARD_OVERVIEW = 20,
  BULLETIN_ACTIVITY_TYPE_SCRATCH_TICKET = 21,
  BULLETIN_ACTIVITY_TYPE_BBQ = 22,
  BULLETIN_ACTIVITY_TYPE_PICTURE = 23,
  BULLETIN_ACTIVITY_TYPE_JIGSAW = 24,
  BULLETIN_ACTIVITY_TYPE_REUNION = 25,
  BULLETIN_ACTIVITY_TYPE_GIFT = 26,
  BULLETIN_ACTIVITY_TYPE_SLOT_MACHINE = 27,
  BULLETIN_ACTIVITY_TYPE_RAFFLE = 28,
  BULLETIN_ACTIVITY_TYPE_LOGIN_REWARD = 29,
  BULLETIN_ACTIVITY_TYPE_LOGIN_WISH = 30,
  BULLETIN_ACTIVITY_TYPE_WEBVIEW = 31,
  BULLETIN_ACTIVITY_TYPE_ALLEVIATION = 32,
  BULLETIN_ACTIVITY_TYPE_SHOW_PICTURE = 33,
  BULLETIN_ACTIVITY_TYPE_SHOW_MAIN_EVENT_INFO = 34,
  BULLETIN_ACTIVITY_TYPE_REUNION_COOK = 35,
  BULLETIN_ACTIVITY_TYPE_REUNION_TIMELINE = 36,
  BULLETIN_ACTIVITY_TYPE_DREAM = 37,
  BULLETIN_ACTIVITY_TYPE_SPACESHIP_GIFT = 38,
  BULLETIN_ACTIVITY_TYPE_MISSION_THEME = 39,
  BULLETIN_ACTIVITY_TYPE_RECHARGE_ADD_UP = 41,
  BULLETIN_ACTIVITY_TYPE_NEW_GIFT = 42,
  BULLETIN_ACTIVITY_TYPE_ANNIVERSARY_GIFT = 43,
  BULLETIN_ACTIVITY_TYPE_DATA_REFACTOR = 44,
  BULLETIN_ACTIVITY_TYPE_OW_CHAPTER = 45,
  BULLETIN_ACTIVITY_TYPE_PLAYER_LEVEL_LOCK = 46,
  BULLETIN_ACTIVITY_TYPE_PV_LOGIN = 47,
  UNRECOGNIZED = -1,
}

export enum BurdenAlleviationType {
  BURDEN_ALLEVIATION_NONE = 0,
  BURDEN_ALLEVIATION_EX_BOSS = 1,
  BURDEN_ALLEVIATION_WEEKDAY = 2,
  BURDEN_ALLEVIATION_RPG_TALE = 3,
  BURDEN_ALLEVIATION_RAID = 4,
  BURDEN_ALLEVIATION_DAILY_MP = 5,
  BURDEN_ALLEVIATION_GRANT_REWARD = 6,
  BURDEN_ALLEVIATION_MISSION = 7,
  UNRECOGNIZED = -1,
}

export enum CabinTechEffectType {
  CABIN_TECH_ADD_AVATAR_ATTR = 1,
  CABIN_TECH_ADD_VENTURE_MAX_NUM = 2,
  CABIN_TECH_ADD_PROCESS_VENTURE_MAX_NUM = 3,
  CABIN_TECH_ADD_REFRESH_VENTURE_ATTR = 4,
  CABIN_TECH_ADD_FRIEND_NUM = 5,
  CABIN_TECH_DISJOIN_EQUIPMENT = 6,
  CABIN_TECH_ADD_COLLECT_SPEED = 7,
  CABIN_TECH_ADD_COLLECT_STORAGE = 8,
  CABIN_TECH_ADD_COLLECT_EXTRA_PERCENT = 9,
  CABIN_TECH_ADD_COLLECT_EXTRA_RATE = 10,
  CABIN_TECH_ADD_SKILL_POINT_LIMIT = 11,
  CABIN_TECH_ADD_COLLECT_EQUIPMENT_DROP = 12,
  CABIN_TECH_ADD_COLLECT_EQUIPMENT_PACKAGE_NUM = 13,
  CABIN_TECH_SUB_COLLECT_EQUIPMENT_TIME = 14,
  UNRECOGNIZED = -1,
}

export enum CabinType {
  CABIN_POWER = 1,
  CABIN_ENHANCE_KIANA = 2,
  CABIN_COLLECT = 3,
  CABIN_MISC = 4,
  CABIN_VENTURE = 5,
  CABIN_ENHANCE_MEI = 6,
  CABIN_ENHANCE_BRONYA = 7,
  CABIN_ENHANCE_HIMEKO = 8,
  CABIN_ENHANCE_THERESA = 9,
  CABIN_ENHANCE_FUKA = 10,
  UNRECOGNIZED = -1,
}

export enum CGType {
  CG_NONE = 0,
  CG_START = 1,
  CG_SEVEN_CHAPTER = 2,
  UNRECOGNIZED = -1,
}

export enum ChapterGroupSiteFinishWay {
  CHAPTER_GROUP_SITE_FINISH_WAY_INVALID = 0,
  CHAPTER_GROUP_SITE_FINISH_WAY_PASS_STAGE_AND = 1,
  CHAPTER_GROUP_SITE_FINISH_WAY_PASS_STAGE_OR = 2,
  CHAPTER_GROUP_SITE_FINISH_WAY_FINISH_MISSION_AND = 3,
  CHAPTER_GROUP_SITE_FINISH_WAY_FINISH_MISSION_OR = 4,
  CHAPTER_GROUP_SITE_FINISH_WAY_TIME_ARRIVED = 5,
  UNRECOGNIZED = -1,
}

export enum ChapterGroupSiteStatus {
  CHAPTER_GROUP_SITE_STATUS_INVALID = 0,
  CHAPTER_GROUP_SITE_STATUS_LOCKED = 1,
  CHAPTER_GROUP_SITE_STATUS_UNLOCKED = 2,
  CHAPTER_GROUP_SITE_STATUS_FINISHED = 3,
  UNRECOGNIZED = -1,
}

export enum ChapterGroupSiteType {
  CHAPTER_GROUP_SITE_TYPE_INVALID = 0,
  CHAPTER_GROUP_SITE_TYPE_CHAPTER = 1,
  CHAPTER_GROUP_SITE_TYPE_VIDEO = 2,
  CHAPTER_GROUP_SITE_TYPE_OPENWORLD = 3,
  UNRECOGNIZED = -1,
}

export enum ChapterType {
  CHAPTER_TYPE_MAIN_STORY = 1,
  CHAPTER_TYPE_EVENT = 2,
  CHAPTER_TYPE_SPECIAL_STORY = 3,
  CHAPTER_MP = 4,
  CHAPTER_TYPE_CHAPTER_ACTIVITY = 5,
  CHAPTER_TYPE_HYBRID_SITE_ACTIVITY = 6,
  CHAPTER_TYPE_OPENWORLD = 7,
  UNRECOGNIZED = -1,
}

export enum ChatgroupPosition {
  CHATGROUP_POSITION_NONE = 0,
  CHATGROUP_POSITION_CREATER = 1,
  CHATGROUP_POSITION_MEMBER = 2,
  UNRECOGNIZED = -1,
}

export enum ChatgroupSystemNotifyType {
  CHATGROUP_NOTIFY_NONE = 0,
  CHATGROUP_NOTIFY_NEW = 1,
  CHATGROUP_NOTIFY_JOIN = 2,
  CHATGROUP_NOTIFY_LEAVE = 3,
  CHATGROUP_NOTIFY_DISSOLVE = 4,
  CHATGROUP_NOTIFY_SETTING = 5,
  CHATGROUP_NOTIFY_INVITE = 6,
  UNRECOGNIZED = -1,
}

export enum ChatRelationType {
  CHAT_RELATION_TYPE_NONE = 0,
  CHAT_RELATION_TYPE_FRIEND = 1,
  CHAT_RELATION_TYPE_MASTER_PUPIL = 2,
  UNRECOGNIZED = -1,
}

export enum ChatSwitchChannelType {
  CHAT_SWITCH_CHANNEL_TYPE_NONE = 0,
  CHAT_SWITCH_CHANNEL_TYPE_WORLD = 1,
  CHAT_SWITCH_CHANNEL_TYPE_PRIVATE = 2,
  CHAT_SWITCH_CHANNEL_TYPE_ARMADA = 3,
  CHAT_SWITCH_CHANNEL_TYPE_TEAM = 4,
  CHAT_SWITCH_CHANNEL_TYPE_GROUP = 5,
  CHAT_SWITCH_CHANNEL_TYPE_COMMON_CHATWORLD = 6,
  CHAT_SWITCH_CHANNEL_TYPE_OTHERS = 7,
  UNRECOGNIZED = -1,
}

export enum ChatwoldBeastLevel {
  CHATWORLD_BEAST_SENIOR = 1,
  CHATWORLD_BEAST_JUNIOR = 2,
  UNRECOGNIZED = -1,
}

export enum ChatworldActivityType {
  CHATWORLD_ACTIVITY_TYPE_MAIN_PAGE_NOTICE = 1,
  CHATWORLD_ACTIVITY_TYPE_ACTIVITY_NOTICE = 2,
  CHATWORLD_ACTIVITY_TYPE_FIRE_WORKS = 3,
  CHATWORLD_ACTIVITY_TYPE_FISH = 4,
  CHATWORLD_ACTIVITY_TYPE_PRAY = 5,
  CHATWORLD_ACTIVITY_TYPE_QUESTION = 6,
  CHATWORLD_ACTIVITY_TYPE_PREPARE = 7,
  CHATWORLD_ACTIVITY_TYPE_ARMADA_REUNION = 8,
  CHATWORLD_ACTIVITY_TYPE_DISH = 9,
  CHATWORLD_ACTIVITY_TYPE_BEAST = 10,
  CHATWORLD_ACTIVITY_TYPE_BOX = 11,
  CHATWORLD_ACTIVITY_TYPE_PRAY_WITH_ORDER = 12,
  UNRECOGNIZED = -1,
}

export enum ChatworldBattleCampTag {
  CHATWORLD_BATTLE_CAMP_TAG_NONE = 0,
  CHATWORLD_BATTLE_CAMP_TAG_1 = 1,
  CHATWORLD_BATTLE_CAMP_TAG_2 = 2,
  UNRECOGNIZED = -1,
}

export enum ChatworldBattleItemEffectTarget {
  CHATWORLD_BATTLE_ITEM_EFFECT_ALL = 0,
  CHATWORLD_BATTLE_ITEM_EFFECT_ENEMY_CAMP = 1,
  CHATWORLD_BATTLE_ITEM_EFFECT_SELF_CAMP = 2,
  UNRECOGNIZED = -1,
}

export enum ChatworldBeastAwardType {
  CHATWORLD_BEAST_AWARD_HP_RATIO = 1,
  CHATWORLD_BEAST_AWARD_SCORE = 2,
  UNRECOGNIZED = -1,
}

export enum ChatworldBoxType {
  CHATWORLD_BOX_TYPE_NONE = 0,
  CHATWORLD_BOX_TYPE_REWARD = 1,
  CHATWORLD_BOX_TYPE_BATTLE = 2,
  UNRECOGNIZED = -1,
}

export enum ChatworldBuffType {
  CHATWORLD_BUFF_TYPE_NONE = 0,
  CHATWORLD_BUFF_TYPE_DAMAGE_FREE = 1,
  CHATWORLD_BUFF_TYPE_SPEED = 2,
  UNRECOGNIZED = -1,
}

export enum ChatworldComponentType {
  CHATWORLD_COMPONENT_TYPE_NONE = 0,
  CHATWORLD_COMPONENT_TYPE_MOVE = 1,
  CHATWORLD_COMPONENT_TYPE_BUFF = 2,
  CHATWORLD_COMPONENT_TYPE_SKILL = 3,
  CHATWORLD_COMPONENT_TYPE_HEALTH = 4,
  CHATWORLD_COMPONENT_TYPE_COLLISION = 5,
  UNRECOGNIZED = -1,
}

export enum ChatworldEnterType {
  CHATWORLD_ENTER_TYPE_NONE = 0,
  CHATWORLD_ENTER_TYPE_WORLD = 1,
  CHATWORLD_ENTER_TYPE_ARMADA = 2,
  UNRECOGNIZED = -1,
}

export enum ChatworldEntityType {
  CHATWORLD_ENTITY_TYPE_NONE = 0,
  CHATWORLD_ENTITY_TYPE_PLAYER = 1,
  CHATWORLD_ENTITY_TYPE_SKILL = 2,
  CHATWORLD_ENTITY_TYPE_ITEM = 3,
  CHATWORLD_ENTITY_TYPE_STANCE = 4,
  CHATWORLD_ENTITY_TYPE_FISH = 5,
  CHATWORLD_ENTITY_TYPE_QUESTION = 6,
  CHATWORLD_ENTITY_TYPE_BEAST = 7,
  CHATWORLD_ENTITY_TYPE_BOX = 8,
  UNRECOGNIZED = -1,
}

export enum ChatworldFisherStatus {
  CHATWORLD_FISHER_STATUS_NONE = 0,
  CHATWORLD_FISHER_STATUS_PREPARE = 1,
  CHATWORLD_FISHER_STATUS_START = 2,
  CHATWORLD_FISHER_STATUS_END = 3,
  CHATWORLD_FISHER_STATUS_WAIT_ASSIST = 4,
  UNRECOGNIZED = -1,
}

export enum ChatworldFishHardLevel {
  CHATWORLD_FISH_HARD_LEVEL_NONE = 0,
  CHATWORLD_FISH_HARD_LEVEL_EASY = 1,
  CHATWORLD_FISH_HARD_LEVEL_NORMAL = 2,
  CHATWORLD_FISH_HARD_LEVEL_HARD = 3,
  UNRECOGNIZED = -1,
}

export enum ChatworldInteractType {
  CHATWORLD_INTERACT_TYPE_NONE = 0,
  CHATWORLD_INTERACT_TYPE_HOLD = 1,
  CHATWORLD_INTERACT_TYPE_UNHOLD = 2,
  UNRECOGNIZED = -1,
}

export enum ChatworldQuestionStatus {
  CHATWORLD_QUESTION_NONE = 0,
  CHATWORLD_QUESTION_PREPARE = 1,
  CHATWORLD_QUESTION_ANSWER = 2,
  CHATWORLD_QUESTION_RESULT = 3,
  CHATWORLD_QUESTION_CD = 4,
  UNRECOGNIZED = -1,
}

export enum ChatworldType {
  CHATWORLD_TYPE_NONE = 0,
  CHATWORLD_TYPE_PLAIN = 1,
  CHATWORLD_TYPE_KINGDOM_WAR = 2,
  CHATWORLD_TYPE_BRAWL = 3,
  CHATWORLD_TYPE_STANCE = 4,
  UNRECOGNIZED = -1,
}

export enum CheckConditionEnum {
  CHECK_CONDITION_WEAPON = 13,
  CHECK_CONDITION_STIGMATA_SLOT_1 = 14,
  CHECK_CONDITION_STIGMATA_SLOT_2 = 15,
  CHECK_CONDITION_STIGMATA_SLOT_3 = 16,
  UNRECOGNIZED = -1,
}

export enum CityActivityDataType {
  CITY_ACTIVITY_DATA_ALL = 0,
  CITY_ACTIVITY_DATA_EVENT = 1,
  CITY_ACTIVITY_DATA_PHONE_EVENT = 2,
  CITY_ACTIVITY_DATA_PHOTO = 3,
  UNRECOGNIZED = -1,
}

export enum ClientDataType {
  CLIENT_DATA_NONE = 0,
  CLIENT_DATA_ALL = 1,
  CLIENT_DATA_RPG_TALE = 2,
  CLIENT_DATA_WORLDMAP = 3,
  CLIENT_DATA_KINGDOM_WAR = 4,
  CLIENT_DATA_AUGMENT_PERFORMANCE = 5,
  CLIENT_DATA_AVATAR = 6,
  CLIENT_DATA_OPENWORLD_CHAPTER = 7,
  CLIENT_DATA_OPENWORLD = 8,
  CLIENT_DATA_NINJA = 9,
  CLIENT_DATA_AVATAR_TUTORIAL = 10,
  CLIENT_DATA_PHONE_NOTICE = 11,
  CLIENT_DATA_NEWBIE_ACTIVITY = 12,
  UNRECOGNIZED = -1,
}

export enum ClientMailFilterType {
  CLIENT_MAIL_FILTER_TYPE_ALL = 0,
  CLIENT_MAIL_FILTER_TYPE_IMPORTANT = 1,
  UNRECOGNIZED = -1,
}

export enum ClientMailType {
  CLIENT_MAIL_NONE = 0,
  CLIENT_MAIL_MAIL = 1,
  CLIENT_MAIL_NOTICE = 2,
  UNRECOGNIZED = -1,
}

export enum ClientReportBinType {
  CLIENT_REPORT_BIN_INVALID = 0,
  CLIENT_REPORT_BIN_AVATAR_DETAIL = 1,
  CLIENT_REPORT_BIN_ATTACK_SNAPSHOT = 2,
  UNRECOGNIZED = -1,
}

export enum ClientSettingType {
  CLIENT_SETTING_NONE = 0,
  CLIENT_SETTING_ALL = 1,
  CLIENT_SETTING_WEEKLY_GUIDE_SWITCH = 2,
  CLIENT_SETTING_SNS_SHOW = 3,
  CLIENT_SETTING_AVATAR_ARTIFACT = 4,
  CLIENT_SETTING_MASTER_PUPIL_TAG_SWITCH = 5,
  UNRECOGNIZED = -1,
}

export enum CmdTypeActivity {
  CMD_GET_SCRATCH_TICKET_REQ = 4150,
  CMD_GET_SCRATCH_TICKET_RSP = 4151,
  CMD_SCRATCH_REQ = 4152,
  CMD_SCRATCH_RSP = 4153,
  CMD_RESET_SCRATCH_TICKET_PLATE_REQ = 4154,
  CMD_RESET_SCRATCH_TICKET_PLATE_RSP = 4155,
  CMD_ADD_ON_ACTIVITY_REWARD_NOTIFY = 4156,
  CMD_GET_BINGO_ACTIVITY_DATA_REQ = 4157,
  CMD_GET_BINGO_ACTIVITY_DATA_RSP = 4158,
  CMD_BINGO_ACTIVITY_FLOP_CARD_REQ = 4159,
  CMD_BINGO_ACTIVITY_FLOP_CARD_RSP = 4160,
  CMD_BINGO_ACTIVITY_RESET_BINGO_REQ = 4161,
  CMD_BINGO_ACTIVITY_RESET_BINGO_RSP = 4162,
  CMD_GET_BULLETIN_SCORE_ACTIVITY_REQ = 4163,
  CMD_GET_BULLETIN_SCORE_ACTIVITY_RSP = 4164,
  CMD_TAKE_BULLETIN_SCORE_ACTIVITY_REWARD_REQ = 4165,
  CMD_TAKE_BULLETIN_SCORE_ACTIVITY_REWARD_RSP = 4166,
  CMD_GET_CONTINUOUS_RECHARGE_ACTIVITY_REQ = 4167,
  CMD_GET_CONTINUOUS_RECHARGE_ACTIVITY_RSP = 4168,
  CMD_TAKE_CONTINUOUS_RECHARGE_REWARD_REQ = 4169,
  CMD_TAKE_CONTINUOUS_RECHARGE_REWARD_RSP = 4170,
  CMD_TAKE_FLOP_ACTIVITY_REWARD_REQ = 4171,
  CMD_TAKE_FLOP_ACTIVITY_REWARD_RSP = 4172,
  CMD_GET_FLOP_ACTIVITY_DATA_REQ = 4173,
  CMD_GET_FLOP_ACTIVITY_DATA_RSP = 4174,
  CMD_FLOP_ACTIVITY_FLOP_CARD_REQ = 4175,
  CMD_FLOP_ACTIVITY_FLOP_CARD_RSP = 4176,
  CMD_GET_LOTTERY_ACTIVITY_REQ = 4177,
  CMD_GET_LOTTERY_ACTIVITY_RSP = 4178,
  CMD_LOTTERY_USE_BOX_REQ = 4179,
  CMD_LOTTERY_USE_BOX_RSP = 4180,
  CMD_LOTTERY_DRAW_NUMBER_REQ = 4181,
  CMD_LOTTERY_DRAW_NUMBER_RSP = 4182,
  CMD_LOTTERY_TAKE_REWARD_REQ = 4183,
  CMD_LOTTERY_TAKE_REWARD_RSP = 4184,
  CMD_GET_TOWER_RAID_ACTIVITY_REQ = 4185,
  CMD_GET_TOWER_RAID_ACTIVITY_RSP = 4186,
  CMD_TAKE_TOWER_RAID_REWARD_REQ = 4187,
  CMD_TAKE_TOWER_RAID_REWARD_RSP = 4188,
  CMD_UPDATE_TOWER_RAID_BOSS_REQ = 4189,
  CMD_UPDATE_TOWER_RAID_BOSS_RSP = 4190,
  CMD_TOWER_RAID_LOCK_AVATAR_NOTIFY = 4191,
  CMD_GET_LOGIN_ACTIVITY_REQ = 4192,
  CMD_GET_LOGIN_ACTIVITY_RSP = 4193,
  CMD_TAKE_LOGIN_ACTIVITY_REWARD_REQ = 4194,
  CMD_TAKE_LOGIN_ACTIVITY_REWARD_RSP = 4195,
  CMD_GET_ONLINE_REWARD_ACTIVITY_REQ = 4196,
  CMD_GET_ONLINE_REWARD_ACTIVITY_RSP = 4197,
  CMD_TAKE_ONLINE_REWARD_REQ = 4198,
  CMD_TAKE_ONLINE_REWARD_RSP = 4199,
  CMD_GET_CHAPTER_ACTIVITY_DATA_REQ = 4200,
  CMD_GET_CHAPTER_ACTIVITY_DATA_RSP = 4201,
  CMD_TAKE_CHAPTER_ACTIVITY_LEVEL_REWARD_REQ = 4202,
  CMD_TAKE_CHAPTER_ACTIVITY_LEVEL_REWARD_RSP = 4203,
  CMD_SYNC_CHAPTER_ACTIVITY_DATA_NOTIFY = 4204,
  CMD_GET_MISSION_THEME_DATA_REQ = 4205,
  CMD_GET_MISSION_THEME_DATA_RSP = 4206,
  CMD_UPGRADE_MISSION_THEME_REQ = 4207,
  CMD_UPGRADE_MISSION_THEME_RSP = 4208,
  CMD_TAKE_MISSION_THEME_REWARD_REQ = 4209,
  CMD_TAKE_MISSION_THEME_REWARD_RSP = 4210,
  CMD_GET_OFFLINE_RESOURCE_DATA_REQ = 4211,
  CMD_GET_OFFLINE_RESOURCE_DATA_RSP = 4212,
  CMD_TAKE_OFFLINE_RESOURCE_BOX_REQ = 4213,
  CMD_TAKE_OFFLINE_RESOURCE_BOX_RSP = 4214,
  CMD_GET_OVERLAP_ACTIVITY_DATA_REQ = 4215,
  CMD_GET_OVERLAP_ACTIVITY_DATA_RSP = 4216,
  CMD_TAKE_OVERLAP_ACTIVITY_REWARD_REQ = 4217,
  CMD_TAKE_OVERLAP_ACTIVITY_REWARD_RSP = 4218,
  CMD_OVERLAP_ACTIVITY_SUMMON_REQ = 4219,
  CMD_OVERLAP_ACTIVITY_SUMMON_RSP = 4220,
  CMD_OVERLAP_ACTIVITY_MOVE_REQ = 4221,
  CMD_OVERLAP_ACTIVITY_MOVE_RSP = 4222,
  CMD_GET_VERSION_ACTIVITY_REQ = 4223,
  CMD_GET_VERSION_ACTIVITY_RSP = 4224,
  CMD_TAKE_VERSION_ACTIVITY_REWARD_REQ = 4225,
  CMD_TAKE_VERSION_ACTIVITY_REWARD_RSP = 4226,
  CMD_TAKE_VERSION_ACTIVITY_MISSION_REWARD_REQ = 4227,
  CMD_TAKE_VERSION_ACTIVITY_MISSION_REWARD_RSP = 4228,
  CMD_GET_WEEKLY_ROUTINE_ACTIVITY_REQ = 4229,
  CMD_GET_WEEKLY_ROUTINE_ACTIVITY_RSP = 4230,
  CMD_TAKE_WEEKLY_ROUTINE_REWARD_REQ = 4231,
  CMD_TAKE_WEEKLY_ROUTINE_REWARD_RSP = 4232,
  CMD_GET_RANK_SCHEDULE_DATA_REQ = 4233,
  CMD_GET_RANK_SCHEDULE_DATA_RSP = 4234,
  CMD_GET_RANK_SCHEDULE_RANK_REQ = 4235,
  CMD_GET_RANK_SCHEDULE_RANK_RSP = 4236,
  CMD_TAKE_SHARE_REWARD_REQ = 4237,
  CMD_TAKE_SHARE_REWARD_RSP = 4238,
  CMD_GET_HAVE_TAKEN_SHARE_REWARD_REQ = 4239,
  CMD_GET_HAVE_TAKEN_SHARE_REWARD_RSP = 4240,
  CMD_GET_SURVEY_DATA_REQ = 4241,
  CMD_GET_SURVEY_DATA_RSP = 4242,
  CMD_FINISH_SURVEY_NOTIFY = 4243,
  CMD_GET_THEME_DATA_REQ = 4244,
  CMD_GET_THEME_DATA_RSP = 4245,
  CMD_SYNC_THEME_DATA_NOTIFY = 4246,
  CMD_GRANT_OUTER_REWARD_NOTIFY = 4247,
  CMD_GET_NEWBIE_ACTIVITY_REQ = 4248,
  CMD_GET_NEWBIE_ACTIVITY_RSP = 4249,
  CMD_GET_BBQ_ACTIVITY_DATA_REQ = 4250,
  CMD_GET_BBQ_ACTIVITY_DATA_RSP = 4251,
  CMD_BBQ_ACTIVITY_COOK_REQ = 4252,
  CMD_BBQ_ACTIVITY_COOK_RSP = 4253,
  CMD_BBQ_ACTIVITY_TAKE_LEVEL_UP_REWARD_REQ = 4254,
  CMD_BBQ_ACTIVITY_TAKE_LEVEL_UP_REWARD_RSP = 4255,
  CMD_TAKE_NEWBIE_ACTIVITY_LEVEL_REWARD_REQ = 4256,
  CMD_TAKE_NEWBIE_ACTIVITY_LEVEL_REWARD_RSP = 4257,
  CMD_GET_QUESTION_ACTIVITY_REQ = 4258,
  CMD_GET_QUESTION_ACTIVITY_RSP = 4259,
  CMD_ANSWER_QUESTION_REQ = 4260,
  CMD_ANSWER_QUESTION_RSP = 4261,
  CMD_GET_TRADING_CARD_ACTIVITY_REQ = 4262,
  CMD_GET_TRADING_CARD_ACTIVITY_RSP = 4263,
  CMD_TAKE_TRADING_CARD_REWARD_REQ = 4264,
  CMD_TAKE_TRADING_CARD_REWARD_RSP = 4265,
  CMD_GET_PICTURE_ACTIVITY_REQ = 4266,
  CMD_GET_PICTURE_ACTIVITY_RSP = 4267,
  CMD_PICTURE_ACTIVITY_CHOOSE_REQ = 4268,
  CMD_PICTURE_ACTIVITY_CHOOSE_RSP = 4269,
  CMD_PICTURE_ACTIVITY_SHARE_REQ = 4270,
  CMD_PICTURE_ACTIVITY_SHARE_RSP = 4271,
  CMD_SYNC_PICTURE_ACTIVITY_SCORE_NOTIFY = 4272,
  CMD_GET_JIGSAW_ACTIVITY_REQ = 4273,
  CMD_GET_JIGSAW_ACTIVITY_RSP = 4274,
  CMD_JIGSAW_EXCHANGE_PIECE_REQ = 4275,
  CMD_JIGSAW_EXCHANGE_PIECE_RSP = 4276,
  CMD_JIGSAW_MOVE_WAITING_PIECE_REQ = 4277,
  CMD_JIGSAW_MOVE_WAITING_PIECE_RSP = 4278,
  CMD_JIGSAW_MOVE_PIECE_IN_JIGSAW_AREA_REQ = 4279,
  CMD_JIGSAW_MOVE_PIECE_IN_JIGSAW_AREA_RSP = 4280,
  CMD_JIGSAW_TAKE_GROUP_REWARD_REQ = 4281,
  CMD_JIGSAW_TAKE_GROUP_REWARD_RSP = 4282,
  CMD_JIGSAW_TAKE_FINISH_REWARD_REQ = 4283,
  CMD_JIGSAW_TAKE_FINISH_REWARD_RSP = 4284,
  CMD_TAKE_NEWBIE_CHALLENGE_REWARD_REQ = 4285,
  CMD_TAKE_NEWBIE_CHALLENGE_REWARD_RSP = 4286,
  CMD_GET_GARDEN_ACTIVITY_REQ = 4287,
  CMD_GET_GARDEN_ACTIVITY_RSP = 4288,
  CMD_GARDEN_HARVEST_REQ = 4289,
  CMD_GARDEN_HARVEST_RSP = 4290,
  CMD_GARDEN_SPEED_UP_WITH_MATERIAL_REQ = 4291,
  CMD_GARDEN_SPEED_UP_WITH_MATERIAL_RSP = 4292,
  CMD_GARDEN_REFRESH_SITE_REQ = 4293,
  CMD_GARDEN_REFRESH_SITE_RSP = 4294,
  CMD_GET_GARDEN_SCHEDULE_REQ = 4295,
  CMD_GET_GARDEN_SCHEDULE_RSP = 4296,
  CMD_GET_DROP_LIMIT_ACTIVITY_REQ = 4297,
  CMD_GET_DROP_LIMIT_ACTIVITY_RSP = 4298,
  CMD_GET_LOGIN_MISSION_ACTIVITY_REQ = 4299,
  CMD_GET_LOGIN_MISSION_ACTIVITY_RSP = 4300,
  CMD_TAKE_LOGIN_MISSION_REWARD_REQ = 4301,
  CMD_TAKE_LOGIN_MISSION_REWARD_RSP = 4302,
  CMD_SANCTUARY_GET_MAIN_INFO_REQ = 4305,
  CMD_SANCTUARY_GET_MAIN_INFO_RSP = 4306,
  CMD_SANCTUARY_TAKE_LEVEL_REWARD_REQ = 4307,
  CMD_SANCTUARY_TAKE_LEVEL_REWARD_RSP = 4308,
  CMD_SANCTUARY_TAKE_PRODUCT_REQ = 4309,
  CMD_SANCTUARY_TAKE_PRODUCT_RSP = 4310,
  CMD_SANCTUARY_START_NOTIFY = 4311,
  CMD_GET_ACTIVITY_REWARD_STATISTIC_DATA_REQ = 4312,
  CMD_GET_ACTIVITY_REWARD_STATISTIC_DATA_RSP = 4313,
  CMD_SANCTUARY_STAGE_END_NOTIFY = 4314,
  CMD_GET_SLOT_MACHINE_MAIN_INFO_REQ = 4315,
  CMD_GET_SLOT_MACHINE_MAIN_INFO_RSP = 4316,
  CMD_START_SLOT_MACHINE_REQ = 4317,
  CMD_START_SLOT_MACHINE_RSP = 4318,
  CMD_TAKE_SLOT_MACHINE_PROGRESS_REWARD_REQ = 4319,
  CMD_TAKE_SLOT_MACHINE_PROGRESS_REWARD_RSP = 4320,
  CMD_GET_BULLETIN_ACTIVITY_MISSION_REQ = 4321,
  CMD_GET_BULLETIN_ACTIVITY_MISSION_RSP = 4322,
  CMD_GET_EXAMINATION_ACTIVITY_REQ = 4323,
  CMD_GET_EXAMINATION_ACTIVITY_RSP = 4324,
  CMD_FINISH_EXAMINATION_REQ = 4325,
  CMD_FINISH_EXAMINATION_RSP = 4326,
  CMD_START_NEXT_ROUND_EXAMINATION_REQ = 4327,
  CMD_START_NEXT_ROUND_EXAMINATION_RSP = 4328,
  CMD_EVALUATE_EXAMINATION_REQ = 4329,
  CMD_EVALUATE_EXAMINATION_RSP = 4330,
  CMD_CHAPTER_ACTIVITY_DAILY_REWARD_NOTIFY = 4331,
  CMD_GET_SUPPORT_ACTIVITY_REQ = 4332,
  CMD_GET_SUPPORT_ACTIVITY_RSP = 4333,
  CMD_SUPPORT_ACTIVITY_SUPPORT_REQ = 4334,
  CMD_SUPPORT_ACTIVITY_SUPPORT_RSP = 4335,
  CMD_SUPPORT_ACTIVITY_TAKE_SHARE_REWARD_REQ = 4336,
  CMD_SUPPORT_ACTIVITY_TAKE_SHARE_REWARD_RSP = 4337,
  CMD_SUPPORT_ACTIVITY_TAKE_GLOBAL_REWARD_REQ = 4338,
  CMD_SUPPORT_ACTIVITY_TAKE_GLOBAL_REWARD_RSP = 4339,
  CMD_GET_MOSAIC_ACTIVITY_REQ = 4340,
  CMD_GET_MOSAIC_ACTIVITY_RSP = 4341,
  CMD_TAKE_MOSAIC_ACTIVITY_REWARD_REQ = 4342,
  CMD_TAKE_MOSAIC_ACTIVITY_REWARD_RSP = 4343,
  CMD_GET_BLOCK_ZONE_ACTIVITY_REQ = 4344,
  CMD_GET_BLOCK_ZONE_ACTIVITY_RSP = 4345,
  CMD_GET_MISSION_GROUP_MAIN_INFO_REQ = 4346,
  CMD_GET_MISSION_GROUP_MAIN_INFO_RSP = 4347,
  CMD_TAKE_MISSION_GROUP_REWARD_REQ = 4348,
  CMD_TAKE_MISSION_GROUP_REWARD_RSP = 4349,
  CMD_CHAPTER_ACTIVITY_TAKE_DAILY_REWARD_REQ = 4350,
  CMD_CHAPTER_ACTIVITY_TAKE_DAILY_REWARD_RSP = 4351,
  CMD_GET_BURDEN_ALLEVIATION_REQ = 4352,
  CMD_GET_BURDEN_ALLEVIATION_RSP = 4353,
  CMD_TRIGGER_BURDEN_ALLEVIATION_REQ = 4354,
  CMD_TRIGGER_BURDEN_ALLEVIATION_RSP = 4355,
  CMD_ROGUE_TOWER_GET_ACTIVITY_REQ = 4360,
  CMD_ROGUE_TOWER_GET_ACTIVITY_RSP = 4361,
  CMD_ROGUE_TOWER_GET_CANDIDATE_BUFF_REQ = 4362,
  CMD_ROGUE_TOWER_GET_CANDIDATE_BUFF_RSP = 4363,
  CMD_ROGUE_TOWER_SELECT_BUFF_REQ = 4364,
  CMD_ROGUE_TOWER_SELECT_BUFF_RSP = 4365,
  CMD_ROGUE_TOWER_SELECT_CHALLENGE_AVATAR_REQ = 4366,
  CMD_ROGUE_TOWER_SELECT_CHALLENGE_AVATAR_RSP = 4367,
  CMD_ROGUE_TOWER_REFRESH_BUFF_REQ = 4368,
  CMD_ROGUE_TOWER_REFRESH_BUFF_RSP = 4369,
  CMD_ROGUE_TOWER_LEVELUP_BUFF_REQ = 4370,
  CMD_ROGUE_TOWER_LEVELUP_BUFF_RSP = 4371,
  CMD_ROGUE_TOWER_SAVE_REQ = 4372,
  CMD_ROGUE_TOWER_SAVE_RSP = 4373,
  CMD_ROGUE_TOWER_LEVELUP_SUPPORT_AVATAR_REQ = 4374,
  CMD_ROGUE_TOWER_LEVELUP_SUPPORT_AVATAR_RSP = 4375,
  CMD_ROGUE_TOWER_GET_RANK_REQ = 4376,
  CMD_ROGUE_TOWER_GET_RANK_RSP = 4377,
  CMD_REUNION_COOK_GET_ACTIVITY_REQ = 4380,
  CMD_REUNION_COOK_GET_ACTIVITY_RSP = 4381,
  CMD_REUNION_COOK_MAKE_DINNER_REQ = 4382,
  CMD_REUNION_COOK_MAKE_DINNER_RSP = 4383,
  CMD_REUNION_COOK_TAKE_SCORE_REWARD_REQ = 4384,
  CMD_REUNION_COOK_TAKE_SCORE_REWARD_RSP = 4385,
  CMD_RESET_CHAPTER_ACTIVITY_EXCLUSIVE_STAGE_REQ = 4386,
  CMD_RESET_CHAPTER_ACTIVITY_EXCLUSIVE_STAGE_RSP = 4387,
  CMD_RESET_CHAPTER_ACTIVITY_TALENT_REQ = 4388,
  CMD_RESET_CHAPTER_ACTIVITY_TALENT_RSP = 4389,
  CMD_REPORT_CHAPTER_ACTIVITY_STAGE_REQ = 4390,
  CMD_REPORT_CHAPTER_ACTIVITY_STAGE_RSP = 4391,
  UNRECOGNIZED = -1,
}

export enum CmdTypeActivity2 {
  CMD_DREAM_GET_ACTIVITY_REQ = 5750,
  CMD_DREAM_GET_ACTIVITY_RSP = 5751,
  CMD_DREAM_OPEN_DREAM_REQ = 5752,
  CMD_DREAM_OPEN_DREAM_RSP = 5753,
  CMD_DREAM_GIVE_UP_DREAM_REQ = 5754,
  CMD_DREAM_GIVE_UP_DREAM_RSP = 5755,
  CMD_DREAM_EXCHANGE_SCORE_REQ = 5756,
  CMD_DREAM_EXCHANGE_SCORE_RSP = 5757,
  CMD_DREAM_TAKE_REWARD_REQ = 5758,
  CMD_DREAM_TAKE_REWARD_RSP = 5759,
  CMD_GET_THEME_WANTED_REQ = 5790,
  CMD_GET_THEME_WANTED_RSP = 5791,
  CMD_THEME_WANTED_BUY_EXTRA_DROP_REQ = 5792,
  CMD_THEME_WANTED_BUY_EXTRA_DROP_RSP = 5793,
  CMD_THEME_WANTED_REFRESH_TICKET_REQ = 5794,
  CMD_THEME_WANTED_REFRESH_TICKET_RSP = 5795,
  CMD_GLOBAL_POLLING_GET_DATA_REQ = 5811,
  CMD_GLOBAL_POLLING_GET_DATA_RSP = 5812,
  CMD_GLOBAL_POLLING_SUPPORT_REQ = 5813,
  CMD_GLOBAL_POLLING_SUPPORT_RSP = 5814,
  CMD_GLOBAL_POLLING_VOTE_REQ = 5815,
  CMD_GLOBAL_POLLING_VOTE_RSP = 5816,
  CMD_GET_COLLABORATION_SCHEDULE_REQ = 5831,
  CMD_GET_COLLABORATION_SCHEDULE_RSP = 5832,
  CMD_RANCH_GET_ACTIVITY_REQ = 5833,
  CMD_RANCH_GET_ACTIVITY_RSP = 5834,
  CMD_RANCH_SYNTHESIS_MONSTER_REQ = 5835,
  CMD_RANCH_SYNTHESIS_MONSTER_RSP = 5836,
  CMD_RANCH_FREE_MONSTER_REQ = 5837,
  CMD_RANCH_FREE_MONSTER_RSP = 5838,
  CMD_RANCH_ASSIGN_MONSTER_REQ = 5839,
  CMD_RANCH_ASSIGN_MONSTER_RSP = 5840,
  CMD_RANCH_FIRE_MONSTER_REQ = 5841,
  CMD_RANCH_FIRE_MONSTER_RSP = 5842,
  CMD_RANCH_TAKE_PRODUCT_REQ = 5843,
  CMD_RANCH_TAKE_PRODUCT_RSP = 5844,
  CMD_RANCH_GET_MONSTER_WIKI_REQ = 5845,
  CMD_RANCH_GET_MONSTER_WIKI_RSP = 5846,
  CMD_RANCH_SYNC_MONSTER_NOTIFY = 5847,
  CMD_RANCH_DEL_MONSTER_NOTIFY = 5848,
  CMD_RANCH_LOCK_MONSTER_SKILL_REQ = 5849,
  CMD_RANCH_LOCK_MONSTER_SKILL_RSP = 5850,
  CMD_RANCH_SET_BATTLE_MONSTER_REQ = 5851,
  CMD_RANCH_SET_BATTLE_MONSTER_RSP = 5852,
  CMD_GET_RESTAURANT_ACTIVITY_REQ = 5860,
  CMD_GET_RESTAURANT_ACTIVITY_RSP = 5861,
  CMD_LEVELUP_RESTAURANT_FACILITY_REQ = 5862,
  CMD_LEVELUP_RESTAURANT_FACILITY_RSP = 5863,
  CMD_ASSIGN_RESTAURANT_WORK_REQ = 5864,
  CMD_ASSIGN_RESTAURANT_WORK_RSP = 5865,
  CMD_CANCEL_RESTAURANT_WORK_REQ = 5866,
  CMD_CANCEL_RESTAURANT_WORK_RSP = 5867,
  CMD_TAKE_RESTAURANT_ORDER_REQ = 5868,
  CMD_TAKE_RESTAURANT_ORDER_RSP = 5869,
  CMD_DELIVER_RESTAURANT_QUEST_REQ = 5870,
  CMD_DELIVER_RESTAURANT_QUEST_RSP = 5871,
  CMD_ACCELERATE_RESTAURANT_WORK_REQ = 5872,
  CMD_ACCELERATE_RESTAURANT_WORK_RSP = 5873,
  CMD_NEWBIE_LEVEL_RUSH_PURCHASE_REQ = 5881,
  CMD_NEWBIE_LEVEL_RUSH_PURCHASE_RSP = 5882,
  CMD_NEWBIE_LEVEL_RUSH_TAKE_REWARD_REQ = 5883,
  CMD_NEWBIE_LEVEL_RUSH_TAKE_REWARD_RSP = 5884,
  CMD_GET_REWARD_LINE_ACTIVITY_REQ = 5890,
  CMD_GET_REWARD_LINE_ACTIVITY_RSP = 5891,
  CMD_TAKE_REWARD_LINE_ACTIVITY_REWARD_REQ = 5892,
  CMD_TAKE_REWARD_LINE_ACTIVITY_REWARD_RSP = 5893,
  CMD_MONSTER_CARD_GET_ACTIVITY_REQ = 5920,
  CMD_MONSTER_CARD_GET_ACTIVITY_RSP = 5921,
  CMD_MONSTER_CARD_LEVEL_UP_REQ = 5922,
  CMD_MONSTER_CARD_LEVEL_UP_RSP = 5923,
  CMD_MONSTER_CARD_STAR_UP_REQ = 5924,
  CMD_MONSTER_CARD_STAR_UP_RSP = 5925,
  CMD_MONSTER_CARD_LEARN_RANDOM_TALENT_REQ = 5926,
  CMD_MONSTER_CARD_LEARN_RANDOM_TALENT_RSP = 5927,
  CMD_MONSTER_CARD_SYNC_CARD_NOTIFY = 5928,
  CMD_MONSTER_CARD_GET_TOWER_RANK_REQ = 5929,
  CMD_MONSTER_CARD_GET_TOWER_RANK_RSP = 5930,
  CMD_MONSTER_CARD_GET_BOSS_RANK_REQ = 5931,
  CMD_MONSTER_CARD_GET_BOSS_RANK_RSP = 5932,
  CMD_MONSTER_CARD_CONFIRM_RANDOM_TALENT_REQ = 5933,
  CMD_MONSTER_CARD_CONFIRM_RANDOM_TALENT_RSP = 5934,
  CMD_MONSTER_CARD_FRAGMENT_OVERFLOW_NOTIFY = 5935,
  CMD_BUFF_ASSIST_GET_ACTIVITY_REQ = 5941,
  CMD_BUFF_ASSIST_GET_ACTIVITY_RSP = 5942,
  CMD_BUFF_ASSIST_REFRESH_WAIT_SELECT_BUFF_POOL_REQ = 5943,
  CMD_BUFF_ASSIST_REFRESH_WAIT_SELECT_BUFF_POOL_RSP = 5944,
  CMD_BUFF_ASSIST_SELECT_BUFF_REQ = 5945,
  CMD_BUFF_ASSIST_SELECT_BUFF_RSP = 5946,
  CMD_BUFF_ASSIST_PUBLISH_BUFF_POOL_REQ = 5947,
  CMD_BUFF_ASSIST_PUBLISH_BUFF_POOL_RSP = 5948,
  CMD_BUFF_ASSIST_STAGE_END_NOTIFY = 5949,
  CMD_BUFF_ASSIST_RECV_STAGE_ASSIST_INFO_NOTIFY = 5950,
  UNRECOGNIZED = -1,
}

export enum CmdTypeAdventure {
  GET_ADVENTURE_GROUP_REQ = 3900,
  GET_ADVENTURE_GROUP_RSP = 3901,
  SELECT_ADVENTURE_QUEST_REQ = 3902,
  SELECT_ADVENTURE_QUEST_RSP = 3903,
  TAKE_ADVENTURE_QUEST_REWARD_REQ = 3904,
  TAKE_ADVENTURE_QUEST_REWARD_RSP = 3905,
  TAKE_ADVENTURE_LEVEL_REWARD_REQ = 3908,
  TAKE_ADVENTURE_LEVEL_REWARD_RSP = 3909,
  CMD_CLAIM_SCOIN_REQ = 3910,
  CMD_CLAIM_SCOIN_RSP = 3911,
  CMD_ADVENTURE_STORY_SWEEP_REQ = 3912,
  CMD_ADVENTURE_STORY_SWEEP_RSP = 3913,
  CMD_GET_ADVENTURE_STORY_SWEEP_INFO_REQ = 3914,
  CMD_GET_ADVENTURE_STORY_SWEEP_INFO_RSP = 3915,
  CMD_TAKE_ADVENTURE_STORY_SWEEP_REWARD_REQ = 3916,
  CMD_TAKE_ADVENTURE_STORY_SWEEP_REWARD_RSP = 3917,
  CMD_TAKE_ADVENTURE_COMPENSATION_REQ = 3918,
  CMD_TAKE_ADVENTURE_COMPENSATION_RSP = 3919,
  CMD_EDIT_ADVENTURE_ROOM_REQ = 3920,
  CMD_EDIT_ADVENTURE_ROOM_RSP = 3921,
  CANCEL_ADVENTURE_QUEST_REQ = 3922,
  CANCEL_ADVENTURE_QUEST_RSP = 3923,
  RESET_ADVENTURE_QUEST_REQ = 3924,
  RESET_ADVENTURE_QUEST_RSP = 3925,
  UNRECOGNIZED = -1,
}

export enum CmdTypeArmada {
  CMD_GET_ARMADA_DATA_REQ = 2601,
  CMD_GET_ARMADA_DATA_RSP = 2602,
  CMD_CREATE_ARMADA_REQ = 2603,
  CMD_CREATE_ARMADA_RSP = 2604,
  CMD_SEARCH_ARMADA_REQ = 2605,
  CMD_SEARCH_ARMADA_RSP = 2606,
  CMD_APPLY_JOIN_ARMADA_REQ = 2607,
  CMD_APPLY_JOIN_ARMADA_RSP = 2608,
  CMD_DEAL_ARMADA_APPLY_REQ = 2609,
  CMD_DEAL_ARMADA_APPLY_RSP = 2610,
  CMD_GET_ARMADA_MANAGE_DATA_REQ = 2611,
  CMD_GET_ARMADA_MANAGE_DATA_RSP = 2612,
  CMD_SET_ARMADA_APPLY_REQ = 2613,
  CMD_SET_ARMADA_APPLY_RSP = 2614,
  CMD_SET_ARMADA_BULLETIN_REQ = 2615,
  CMD_SET_ARMADA_BULLETIN_RSP = 2616,
  CMD_GET_RECOMMEND_ARMADA_REQ = 2617,
  CMD_GET_RECOMMEND_ARMADA_RSP = 2618,
  CMD_TRANSFER_ARMADA_LEADER_REQ = 2619,
  CMD_TRANSFER_ARMADA_LEADER_RSP = 2620,
  CMD_SET_ARMADA_POSITION_REQ = 2621,
  CMD_SET_ARMADA_POSITION_RSP = 2622,
  CMD_KICK_ARMADA_MEMBER_REQ = 2623,
  CMD_KICK_ARMADA_MEMBER_RSP = 2624,
  CMD_DISSOLVE_ARMADA_REQ = 2625,
  CMD_DISSOLVE_ARMADA_RSP = 2626,
  CMD_QUIT_ARMADA_REQ = 2627,
  CMD_QUIT_ARMADA_RSP = 2628,
  CMD_CANCEL_APPLY_ARMADA_REQ = 2629,
  CMD_CANCEL_APPLY_ARMADA_RSP = 2630,
  CMD_LEVEL_UP_ARMADA_CABIN_REQ = 2631,
  CMD_LEVEL_UP_ARMADA_CABIN_RSP = 2632,
  CMD_CANCEL_LEVEL_UP_ARMADA_CABIN_REQ = 2633,
  CMD_CANCEL_LEVEL_UP_ARMADA_CABIN_RSP = 2634,
  CMD_MOVE_ARMADA_CABIN_REQ = 2635,
  CMD_MOVE_ARMADA_CABIN_RSP = 2636,
  CMD_GET_CONSIGNED_ORDER_DATA_REQ = 2639,
  CMD_GET_CONSIGNED_ORDER_DATA_RSP = 2640,
  CMD_CHOOSE_CONSIGNED_ORDER_REQ = 2641,
  CMD_CHOOSE_CONSIGNED_ORDER_RSP = 2642,
  CMD_FINISH_CONSIGNED_ORDER_REQ = 2643,
  CMD_FINISH_CONSIGNED_ORDER_RSP = 2644,
  CMD_RESET_CONSIGNED_ORDER_REQ = 2645,
  CMD_RESET_CONSIGNED_ORDER_RSP = 2646,
  CMD_GET_WAREHOUSE_DATA_REQ = 2647,
  CMD_GET_WAREHOUSE_DATA_RSP = 2648,
  CMD_POST_WAREHOUSE_DEMAND_REQ = 2649,
  CMD_POST_WAREHOUSE_DEMAND_RSP = 2650,
  CMD_CANCEL_WAREHOUSE_DEMAND_REQ = 2651,
  CMD_CANCEL_WAREHOUSE_DEMAND_RSP = 2652,
  CMD_DONATE_WAREHOUSE_ITEM_REQ = 2653,
  CMD_DONATE_WAREHOUSE_ITEM_RSP = 2654,
  CMD_GET_WAREHOUSE_ITEM_REQ = 2655,
  CMD_GET_WAREHOUSE_ITEM_RSP = 2656,
  CMD_ENTER_ARMADA_CHATROOM_REQ = 2657,
  CMD_ENTER_ARMADA_CHATROOM_RSP = 2658,
  CMD_SEND_ARMADA_SYSTEM_CHAT_MSG_NOTIFY = 2661,
  CMD_RECV_ARMADA_SYSTEM_CHAT_MSG_NOTIFY = 2662,
  CMD_GET_ARMADA_DISCOVERY_REQ = 2663,
  CMD_GET_ARMADA_DISCOVERY_RSP = 2664,
  CMD_GET_ARMADA_MEMBER_DISCOVERY_LIST_REQ = 2665,
  CMD_GET_ARMADA_MEMBER_DISCOVERY_LIST_RSP = 2666,
  CMD_GET_ARMADA_STAGE_REQ = 2667,
  CMD_GET_ARMADA_STAGE_RSP = 2668,
  CMD_ARMADA_STAGE_BEGIN_REQ = 2669,
  CMD_ARMADA_STAGE_BEGIN_RSP = 2670,
  CMD_ARMADA_STAGE_END_REQ = 2671,
  CMD_ARMADA_STAGE_END_RSP = 2672,
  CMD_GET_ARMADA_STAGE_REWARD_REQ = 2673,
  CMD_GET_ARMADA_STAGE_REWARD_RSP = 2674,
  CMD_TAKE_ARMADA_STAGE_REWARD_REQ = 2675,
  CMD_TAKE_ARMADA_STAGE_REWARD_RSP = 2676,
  CMD_DONATE_WAREHOSUE_NOTIFY = 2677,
  CMD_ARMADA_BUILD_NOTIFY = 2678,
  CMD_ARMADA_BULLETIN_NOTIFY = 2679,
  CMD_ARMADA_MANAGE_NOTIFY = 2680,
  CMD_ARMADA_PLAYER_NOTIFY = 2681,
  CMD_ARMADA_APPLY_NOTIFY = 2682,
  CMD_CANCEL_DISSOLVE_ARMADA_REQ = 2683,
  CMD_CANCEL_DISSOLVE_ARMADA_RSP = 2684,
  CMD_GET_ARMADA_BUILD_OWNERSHIP_REQ = 2685,
  CMD_GET_ARMADA_BUILD_OWNERSHIP_RSP = 2686,
  CMD_RELEASE_ARMADA_BUILD_OWNERSHIP_REQ = 2687,
  CMD_RELEASE_ARMADA_BUILD_OWNERSHIP_RSP = 2688,
  CMD_ARMADA_SEND_MAIL_REQ = 2689,
  CMD_ARMADA_SEND_MAIL_RSP = 2690,
  CMD_CHANGE_ARMADA_NAME_REQ = 2691,
  CMD_CHANGE_ARMADA_NAME_RSP = 2692,
  CMD_JOIN_ARMADA_ELECTION_REQ = 2693,
  CMD_JOIN_ARMADA_ELECTION_RSP = 2694,
  CMD_ARMADA_LOGOUT_NOTIFY = 2731,
  CMD_QUICK_APPLY_JOIN_ARMADA_REQ = 2732,
  CMD_QUICK_APPLY_JOIN_ARMADA_RSP = 2733,
  CMD_ARMADA_MATRIX_GET_SCHEDULE_REQ = 2734,
  CMD_ARMADA_MATRIX_GET_SCHEDULE_RSP = 2735,
  CMD_ARMADA_MATRIX_GET_MAIN_INFO_REQ = 2736,
  CMD_ARMADA_MATRIX_GET_MAIN_INFO_RSP = 2737,
  CMD_ARMADA_MATRIX_ADVANCE_REQ = 2738,
  CMD_ARMADA_MATRIX_ADVANCE_RSP = 2739,
  CMD_ARMADA_MATRIX_STAGE_BEGIN_REQ = 2740,
  CMD_ARMADA_MATRIX_STAGE_BEGIN_RSP = 2741,
  CMD_ARMADA_MATRIX_STAGE_END_REQ = 2742,
  CMD_ARMADA_MATRIX_STAGE_END_RSP = 2743,
  CMD_ARMADA_MATRIX_SYNC_NOTIFY = 2744,
  CMD_ARMADA_MATRIX_STAGE_BATTLE_NOTIFY = 2745,
  CMD_ARMADA_MATRIX_SET_AVATAR_TEAM_REQ = 2746,
  CMD_ARMADA_MATRIX_SET_AVATAR_TEAM_RSP = 2747,
  CMD_ARMADA_MATRIX_GET_AVATAR_TEAM_REQ = 2748,
  CMD_ARMADA_MATRIX_GET_AVATAR_TEAM_RSP = 2749,
  CMD_ARMADA_MATRIX_PLAYER_AVATAR_SYNC_NOTIFY = 2750,
  CMD_ARMADA_MATRIX_SET_CUR_AVATAR_TEAM_REQ = 2751,
  CMD_ARMADA_MATRIX_SET_CUR_AVATAR_TEAM_RSP = 2752,
  CMD_ARMADA_MATRIX_ACTIVATE_BUFF_REQ = 2753,
  CMD_ARMADA_MATRIX_ACTIVATE_BUFF_RSP = 2754,
  CMD_ARMADA_MATRIX_GET_GENERIC_ITEM_REQ = 2755,
  CMD_ARMADA_MATRIX_GET_GENERIC_ITEM_RSP = 2756,
  CMD_ARMADA_MATRIX_PLAYER_MAIN_INFO_SYNC_NOTIFY = 2757,
  CMD_ARMADA_MATRIX_EXCHANGE_EXPLORE_POWER_REQ = 2758,
  CMD_ARMADA_MATRIX_EXCHANGE_EXPLORE_POWER_RSP = 2759,
  CMD_ARMADA_MATRIX_GET_EXCHANGE_EXPLORE_POWER_INFO_REQ = 2760,
  CMD_ARMADA_MATRIX_GET_EXCHANGE_EXPLORE_POWER_INFO_RSP = 2761,
  CMD_ARMADA_MATRIX_USE_ITEM_REQ = 2762,
  CMD_ARMADA_MATRIX_USE_ITEM_RSP = 2763,
  CMD_ARMADA_MATRIX_USE_ITEM_NOTIFY = 2764,
  CMD_ARMADA_MATRIX_LEAVE_MSG_SYNC_NOTIFY = 2765,
  CMD_ARMADA_MATRIX_TEMPORARY_BUFF_SYNC_NOTIFY = 2766,
  CMD_ARMADA_MATRIX_SHOP_SYNC_NOTIFY = 2767,
  CMD_ARMADA_MATRIX_SHOP_BUY_REQ = 2768,
  CMD_ARMADA_MATRIX_SHOP_BUY_RSP = 2769,
  CMD_ARMADA_MATRIX_RANDOM_EVENT_NOTIFY = 2770,
  CMD_ARMADA_MATRIX_TREASURE_NOTIFY = 2771,
  CMD_ARMADA_MATRIX_CHANGE_LEVEL_REQ = 2772,
  CMD_ARMADA_MATRIX_CHANGE_LEVEL_RSP = 2773,
  CMD_ARMADA_MATRIX_GET_LEVEL_BRIEF_DATA_REQ = 2774,
  CMD_ARMADA_MATRIX_GET_LEVEL_BRIEF_DATA_RSP = 2775,
  CMD_ARMADA_MATRIX_LEVEL_BRIEF_DATA_NOTIFY = 2776,
  CMD_ARMADA_MATRIX_GRANT_SCORE_REWARD_NOTIFY = 2777,
  CMD_ARMADA_MATRIX_GET_SCORE_REWARD_INFO_REQ = 2778,
  CMD_ARMADA_MATRIX_GET_SCORE_REWARD_INFO_RSP = 2779,
  CMD_ARMADA_MATRIX_GET_RANK_LIST_REQ = 2780,
  CMD_ARMADA_MATRIX_GET_RANK_LIST_RSP = 2781,
  CMD_ARMADA_MATRIX_GET_OVERVIEW_REQ = 2782,
  CMD_ARMADA_MATRIX_GET_OVERVIEW_RSP = 2783,
  CMD_ARMADA_MATRIX_GET_LOCKED_GRID_INFO_REQ = 2784,
  CMD_ARMADA_MATRIX_GET_LOCKED_GRID_INFO_RSP = 2785,
  CMD_ARMADA_MATRIX_GET_TEMPORARY_DEPOSIT_REQ = 2786,
  CMD_ARMADA_MATRIX_GET_TEMPORARY_DEPOSIT_RSP = 2787,
  CMD_ARMADA_MATRIX_CHOOSE_TEMPORARY_DEPOSIT_REQ = 2788,
  CMD_ARMADA_MATRIX_CHOOSE_TEMPORARY_DEPOSIT_RSP = 2789,
  CMD_ARMADA_MATRIX_EXIT_CONDITION_SYNC_NOTIFY = 2790,
  CMD_ARMADA_MATRIX_USE_TEMP_BUFF_REQ = 2791,
  CMD_ARMADA_MATRIX_USE_TEMP_BUFF_RSP = 2792,
  CMD_ARMADA_MATRIX_TAKE_FATIGUE_REWARD_REQ = 2793,
  CMD_ARMADA_MATRIX_TAKE_FATIGUE_REWARD_RSP = 2794,
  CMD_ARMADA_MATRIX_DIALOG_EVENT_NOTIFY = 2795,
  CMD_ARMADA_MATRIX_TRANSPORT_NOTIFY = 2796,
  CMD_ARMADA_MATRIX_DIALOG_CHOOSE_EVENT_REQ = 2797,
  CMD_ARMADA_MATRIX_DIALOG_CHOOSE_EVENT_RSP = 2798,
  CMD_OPEN_ARMADA_STAGE_REQ = 2799,
  CMD_OPEN_ARMADA_STAGE_RSP = 2800,
  CMD_TAKE_ARMADA_ACHIEVEMENT_REQ = 2801,
  CMD_TAKE_ARMADA_ACHIEVEMENT_RSP = 2802,
  CMD_GET_RECOMMEND_ARMADA_MEMBER_LIST_REQ = 2803,
  CMD_GET_RECOMMEND_ARMADA_MEMBER_LIST_RSP = 2804,
  CMD_JOIN_QUIT_ARMADA_NOTIFY = 2805,
  CMD_ARMADA_PLAYER_CONTRIBUTION_SYNC_NOTIFY = 2806,
  CMD_ARMADA_MATRIX_ACTIVE_REQ = 2808,
  CMD_ARMADA_MATRIX_ACTIVE_RSP = 2809,
  CMD_ARMADA_MATRIX_ASK_SUPPLY_REQ = 2810,
  CMD_ARMADA_MATRIX_ASK_SUPPLY_RSP = 2811,
  CMD_ARMADA_MATRIX_SYNC_MEMBER_NOTIFY = 2812,
  CMD_ARMADA_MATRIX_INTERACT_NOTIFY = 2813,
  CMD_ARMADA_MATRIX_FIRE_BOSS_ITEM_REQ = 2814,
  CMD_ARMADA_MATRIX_FIRE_BOSS_ITEM_RSP = 2815,
  CMD_ARMADA_MATRIX_SYNC_ARMADA_INFO_NOTIFY = 2816,
  CMD_ARMADA_MATRIX_GET_RANDOM_INFO_REQ = 2817,
  CMD_ARMADA_MATRIX_GET_RANDOM_INFO_RSP = 2818,
  CMD_ARMADA_MATRIX_GET_LOCATION_REQ = 2819,
  CMD_ARMADA_MATRIX_GET_LOCATION_RSP = 2820,
  CMD_GET_ARMADA_STAGE_SCORE_ACTIVITY_REQ = 2821,
  CMD_GET_ARMADA_STAGE_SCORE_ACTIVITY_RSP = 2822,
  CMD_TAKE_ARMADA_STAGE_SCORE_ACTIVITY_REWARD_REQ = 2823,
  CMD_TAKE_ARMADA_STAGE_SCORE_ACTIVITY_REWARD_RSP = 2824,
  CMD_GET_ARMADA_ACTIVITY_LIST_REQ = 2825,
  CMD_GET_ARMADA_ACTIVITY_LIST_RSP = 2826,
  CMD_ARMADA_MATRIX_CHOOSE_PATH_REQ = 2827,
  CMD_ARMADA_MATRIX_CHOOSE_PATH_RSP = 2828,
  CMD_ARMADA_MATRIX_CONFIRM_POS_REQ = 2829,
  CMD_ARMADA_MATRIX_CONFIRM_POS_RSP = 2830,
  CMD_ARMADA_MATRIX_QUESTION_NOTIFY = 2831,
  CMD_ARMADA_MATRIX_ANSWER_QUESTION_REQ = 2832,
  CMD_ARMADA_MATRIX_ANSWER_QUESTION_RSP = 2833,
  CMD_GET_ARMADA_REUNION_ACTIVITY_REQ = 2834,
  CMD_GET_ARMADA_REUNION_ACTIVITY_RSP = 2835,
  CMD_ARMADA_REUNION_REWARD_NOTIFY = 2836,
  CMD_TAKE_ARMADA_REUNION_REWARD_REQ = 2837,
  CMD_TAKE_ARMADA_REUNION_REWARD_RSP = 2838,
  CMD_SET_ARMADA_LABEL_REQ = 2840,
  CMD_SET_ARMADA_LABEL_RSP = 2841,
  CMD_GET_ARMADA_STAGE_SCORE_RANK_REQ = 2842,
  CMD_GET_ARMADA_STAGE_SCORE_RANK_RSP = 2843,
  UNRECOGNIZED = -1,
}

export enum CmdTypeAvatarmission {
  CMD_GET_AVATAR_MISSION_ACTIVITY_REQ = 3000,
  CMD_GET_AVATAR_MISSION_ACTIVITY_RSP = 3001,
  CMD_CHOOSE_AVATAR_MISSION_AVATAR_REQ = 3002,
  CMD_CHOOSE_AVATAR_MISSION_AVATAR_RSP = 3003,
  CMD_TAKE_AVATAR_MISSION_DAILY_REWARD_REQ = 3004,
  CMD_TAKE_AVATAR_MISSION_DAILY_REWARD_RSP = 3005,
  CMD_TAKE_AVATAR_MISSION_PHASE_REWARD_REQ = 3006,
  CMD_TAKE_AVATAR_MISSION_PHASE_REWARD_RSP = 3007,
  CMD_RESET_AVATAR_MISSION_AVATAR_REQ = 3008,
  CMD_RESET_AVATAR_MISSION_AVATAR_RSP = 3009,
  UNRECOGNIZED = -1,
}

export enum CmdTypeBattlepass {
  CMD_GET_BATTLE_PASS_REQ = 3750,
  CMD_GET_BATTLE_PASS_RSP = 3751,
  CMD_BUY_BATTLE_PASS_TICKET_REQ = 3752,
  CMD_BUY_BATTLE_PASS_TICKET_RSP = 3753,
  CMD_TAKE_BATTLE_PASS_LEVEL_REWARD_REQ = 3754,
  CMD_TAKE_BATTLE_PASS_LEVEL_REWARD_RSP = 3755,
  CMD_BUY_BATTLE_PASS_LEVEL_REQ = 3756,
  CMD_BUY_BATTLE_PASS_LEVEL_RSP = 3757,
  CMD_TAKE_BATTLE_PASS_PHASE_EXP_REQ = 3758,
  CMD_TAKE_BATTLE_PASS_PHASE_EXP_RSP = 3759,
  CMD_GET_BATTLE_PASS_THEME_REQ = 3760,
  CMD_GET_BATTLE_PASS_THEME_RSP = 3761,
  CMD_TAKE_BATTLE_PASS_THEME_LEVEL_REWARD_REQ = 3762,
  CMD_TAKE_BATTLE_PASS_THEME_LEVEL_REWARD_RSP = 3763,
  CMD_BUY_BATTLE_PASS_THEME_LEVEL_REQ = 3764,
  CMD_BUY_BATTLE_PASS_THEME_LEVEL_RSP = 3765,
  CMD_BATTLE_PASS_THEME_EXP_TRANSFORM_NOTIFY = 3766,
  UNRECOGNIZED = -1,
}

export enum CmdTypeChat {
  CMD_CREATE_CHATGROUP_REQ = 2200,
  CMD_CREATE_CHATGROUP_RSP = 2201,
  CMD_INVITE_CHATGROUP_REQ = 2202,
  CMD_INVITE_CHATGROUP_RSP = 2203,
  CMD_GET_CHATGROUP_LIST_REQ = 2204,
  CMD_GET_CHATGROUP_LIST_RSP = 2205,
  CMD_SET_CHATGROUP_REQ = 2206,
  CMD_SET_CHATGROUP_RSP = 2207,
  CMD_LEAVE_CHATGROUP_REQ = 2208,
  CMD_LEAVE_CHATGROUP_RSP = 2209,
  CMD_CHATGROUP_SYSTEM_NOTIFY = 2211,
  CMD_KICK_CHATGROUP_MEMBER_REQ = 2212,
  CMD_KICK_CHATGROUP_MEMBER_RSP = 2213,
  CMD_DEAL_CHATGROUP_INVITE_REQ = 2214,
  CMD_DEAL_CHATGROUP_INVITE_RSP = 2215,
  CMD_INVITE_TO_MULTI_CHATGROUP_REQ = 2216,
  CMD_INVITE_TO_MULTI_CHATGROUP_RSP = 2217,
  CMD_GET_CHATGROUP_HISTORY_CHAT_MSG_REQ = 2218,
  CMD_GET_CHATGROUP_HISTORY_CHAT_MSG_RSP = 2219,
  CMD_ENTER_WORLD_CHATROOM_REQ = 2231,
  CMD_ENTER_WORLD_CHATROOM_RSP = 2232,
  CMD_LEAVE_CHATROOM_NOTIFY = 2233,
  CMD_SEND_CHAT_MSG_NOTIFY = 2234,
  CMD_RECV_CHAT_MSG_NOTIFY = 2235,
  CMD_RECV_OFFLINE_PRIVATE_CHAT_MSG_NOTIFY = 2236,
  CMD_GET_HISTORY_PRIVATE_CHAT_MSG_REQ = 2237,
  CMD_GET_HISTORY_PRIVATE_CHAT_MSG_RSP = 2238,
  CMD_CHAT_CLOSED_NOTIFY = 2239,
  UNRECOGNIZED = -1,
}

export enum CmdTypeChatworld {
  CMD_ENTER_COMMON_CHATWORLD_REQ = 2400,
  CMD_ENTER_COMMON_CHATWORLD_RSP = 2401,
  CMD_LEAVE_COMMON_CHATWORLD_REQ = 2402,
  CMD_LEAVE_COMMON_CHATWORLD_RSP = 2403,
  CMD_SEND_COMMON_CHATWORLD_MSG_NOTIFY = 2404,
  CMD_RECV_COMMON_CHATWORLD_MSG_NOTIFY = 2405,
  CMD_CHATWORLD_USE_ITEM_REQ = 2407,
  CMD_CHATWORLD_USE_ITEM_RSP = 2408,
  CMD_CHATWORLD_CHANGE_AVATAR_REQ = 2409,
  CMD_CHATWORLD_CHANGE_AVATAR_RSP = 2410,
  CMD_GET_CHATWORLD_LIST_REQ = 2411,
  CMD_GET_CHATWORLD_LIST_RSP = 2412,
  CMD_CHATWORLD_INTERACT_REQ = 2413,
  CMD_CHATWORLD_INTERACT_RSP = 2414,
  CMD_GET_CHATWORLD_TREASURE_DATA_REQ = 2415,
  CMD_GET_CHATWORLD_TREASURE_DATA_RSP = 2416,
  CMD_OPEN_CHATWORLD_TREASURE_REQ = 2417,
  CMD_OPEN_CHATWORLD_TREASURE_RSP = 2418,
  CMD_CHATWORLD_TREASURE_REWARD_NOTIFY = 2419,
  CMD_CHATWORLD_SKILL_DAMAGE_JUDGE_REQ = 2420,
  CMD_CHATWORLD_SKILL_DAMAGE_JUDGE_RSP = 2421,
  CMD_CHATWORLD_BATTLE_USE_ITEM_REQ = 2422,
  CMD_CHATWORLD_BATTLE_USE_ITEM_RSP = 2423,
  CMD_CHATWORLD_POS_RESET_NOTIFY = 2424,
  CMD_CHATWORLD_BATTLE_COLLECT_ITEM_REQ = 2425,
  CMD_CHATWORLD_BATTLE_COLLECT_ITEM_RSP = 2426,
  CMD_CHATWORLD_GET_ACTIVITY_SCHEDULE_REQ = 2427,
  CMD_CHATWORLD_GET_ACTIVITY_SCHEDULE_RSP = 2428,
  CMD_CHATWORLD_FISH_JOIN_SPOT_REQ = 2429,
  CMD_CHATWORLD_FISH_JOIN_SPOT_RSP = 2430,
  CMD_CHATWORLD_FISH_LEAVE_SPOT_REQ = 2431,
  CMD_CHATWORLD_FISH_LEAVE_SPOT_RSP = 2432,
  CMD_CHATWORLD_FISH_START_REQ = 2433,
  CMD_CHATWORLD_FISH_START_RSP = 2434,
  CMD_CHATWORLD_FISH_END_REQ = 2435,
  CMD_CHATWORLD_FISH_END_RSP = 2436,
  CMD_CHATWORLD_FISH_ASSIST_REQ = 2437,
  CMD_CHATWORLD_FISH_ASSIST_RSP = 2438,
  CMD_CHATWORLD_FISH_LIKE_REQ = 2439,
  CMD_CHATWORLD_FISH_LIKE_RSP = 2440,
  CMD_CHATWORLD_FISH_REWARD_NOTIFY = 2441,
  CMD_CHATWORLD_FISH_CANCEL_WAIT_ASSIST_REQ = 2442,
  CMD_CHATWORLD_FISH_CANCEL_WAIT_ASSIST_RSP = 2443,
  CMD_CHATWORLD_FISH_KICK_PLAYER_NOTIFY = 2444,
  CMD_CHATWORLD_FISH_GET_ACTIVITY_INFO_REQ = 2445,
  CMD_CHATWORLD_FISH_GET_ACTIVITY_INFO_RSP = 2446,
  CMD_CHATWORLD_GET_PRAY_INFO_REQ = 2451,
  CMD_CHATWORLD_GET_PRAY_INFO_RSP = 2452,
  CMD_CHATWORLD_PRAY_REQ = 2453,
  CMD_CHATWORLD_PRAY_RSP = 2454,
  CMD_CHATWORLD_GRANT_REWARD_NOTIFY = 2455,
  CMD_CHATWORLD_GET_DISH_INFO_REQ = 2456,
  CMD_CHATWORLD_GET_DISH_INFO_RSP = 2457,
  CMD_CHATWORLD_TAKE_DISH_REWARD_REQ = 2458,
  CMD_CHATWORLD_TAKE_DISH_REWARD_RSP = 2459,
  CMD_CHATWORLD_BEAST_ADD_RESULT_NOTIFY = 2460,
  CMD_CHATWORLD_BEAST_CHALLENGE_REQ = 2461,
  CMD_CHATWORLD_BEAST_CHALLENGE_RSP = 2462,
  CMD_CHATWORLD_BEAST_SYNC_REQ = 2463,
  CMD_CHATWORLD_BEAST_SYNC_RSP = 2464,
  CMD_CHATWORLD_BEAST_GET_ACTIVITY_REQ = 2465,
  CMD_CHATWORLD_BEAST_GET_ACTIVITY_RSP = 2466,
  CMD_CHATWORLD_BOX_GET_DATA_REQ = 2467,
  CMD_CHATWORLD_BOX_GET_DATA_RSP = 2468,
  CMD_CHATWORLD_BOX_TAKE_REWARD_REQ = 2469,
  CMD_CHATWORLD_BOX_TAKE_REWARD_RSP = 2470,
  CMD_CHATWORLD_BEAST_TAKE_TREASURE_REQ = 2471,
  CMD_CHATWORLD_BEAST_TAKE_TREASURE_RSP = 2472,
  CMD_CHATWORLD_BEAST_ABANDON_CHALLENGE_REQ = 2473,
  CMD_CHATWORLD_BEAST_ABANDON_CHALLENGE_RSP = 2474,
  CMD_CHATWORLD_DUMMY = 2599,
  UNRECOGNIZED = -1,
}

export enum CmdTypeCredit {
  CMD_CREDIT_REPORT_DATA_REQ = 6000,
  CMD_CREDIT_REPORT_DATA_RSP = 6001,
  CMD_CREDIT_ACCOUNT_GET_REQ = 6002,
  CMD_CREDIT_ACCOUNT_GET_RSP = 6003,
  UNRECOGNIZED = -1,
}

export enum CmdTypeDiceydungeon {
  CMD_DICEY_DUNGEON_ACTIVITY_GET_DATA_REQ = 6500,
  CMD_DICEY_DUNGEON_ACTIVITY_GET_DATA_RSP = 6501,
  CMD_DICEY_DUNGEON_ACTIVITY_ROLE_LEVEL_UP_REQ = 6502,
  CMD_DICEY_DUNGEON_ACTIVITY_ROLE_LEVEL_UP_RSP = 6503,
  CMD_DICEY_DUNGEON_ACTIVITY_DUNGEON_BEGIN_REQ = 6504,
  CMD_DICEY_DUNGEON_ACTIVITY_DUNGEON_BEGIN_RSP = 6505,
  CMD_DICEY_DUNGEON_ACTIVITY_DUNGEON_END_REQ = 6506,
  CMD_DICEY_DUNGEON_ACTIVITY_DUNGEON_END_RSP = 6507,
  CMD_DICEY_DUNGEON_ACTIVITY_ROOM_BEGIN_REQ = 6508,
  CMD_DICEY_DUNGEON_ACTIVITY_ROOM_BEGIN_RSP = 6509,
  CMD_DICEY_DUNGEON_ACTIVITY_ROOM_END_REQ = 6510,
  CMD_DICEY_DUNGEON_ACTIVITY_ROOM_END_RSP = 6511,
  CMD_DICEY_DUNGEON_ACTIVITY_GET_WEAPON_GACHA_DISPLAY_REQ = 6512,
  CMD_DICEY_DUNGEON_ACTIVITY_GET_WEAPON_GACHA_DISPLAY_RSP = 6513,
  CMD_DICEY_DUNGEON_ACTIVITY_WEAPON_GACHA_REQ = 6514,
  CMD_DICEY_DUNGEON_ACTIVITY_WEAPON_GACHA_RSP = 6515,
  CMD_DICEY_DUNGEON_ACTIVITY_SELECT_ORNAMENT_REQ = 6516,
  CMD_DICEY_DUNGEON_ACTIVITY_SELECT_ORNAMENT_RSP = 6517,
  CMD_DICEY_DUNGEON_ACTIVITY_REFRESH_ORNAMENT_REQ = 6518,
  CMD_DICEY_DUNGEON_ACTIVITY_REFRESH_ORNAMENT_RSP = 6519,
  CMD_DICEY_DUNGEON_ACTIVITY_GET_DAILY_SCORE_RANK_REQ = 6520,
  CMD_DICEY_DUNGEON_ACTIVITY_GET_DAILY_SCORE_RANK_RSP = 6521,
  UNRECOGNIZED = -1,
}

export enum CmdTypeDlc {
  CMD_GET_DLC_REQ = 3550,
  CMD_GET_DLC_RSP = 3551,
  CMD_LEVEL_UP_DLC_AVATAR_TALENT_REQ = 3552,
  CMD_LEVEL_UP_DLC_AVATAR_TALENT_RSP = 3553,
  CMD_EQUIP_DLC_AVATAR_TALENT_REQ = 3554,
  CMD_EQUIP_DLC_AVATAR_TALENT_RSP = 3555,
  CMD_SYNC_DLC_AVATAR_NOTIFY = 3556,
  CMD_MODIFY_DLC_NAME_REQ = 3557,
  CMD_MODIFY_DLC_NAME_RSP = 3558,
  CMD_GET_DLC_AVATAR_REQ = 3559,
  CMD_GET_DLC_AVATAR_RSP = 3560,
  CMD_TAKE_DLC_LEVEL_REWARD_REQ = 3561,
  CMD_TAKE_DLC_LEVEL_REWARD_RSP = 3562,
  CMD_DLC_TOWER_STAGE_BEGIN_REQ = 3563,
  CMD_DLC_TOWER_STAGE_BEGIN_RSP = 3564,
  CMD_DLC_TOWER_STAGE_END_REQ = 3565,
  CMD_DLC_TOWER_STAGE_END_RSP = 3566,
  CMD_DLC_AVATAR_REVIVE_REQ = 3569,
  CMD_DLC_AVATAR_REVIVE_RSP = 3570,
  CMD_GET_DLC_TOWER_RANK_REQ = 3571,
  CMD_GET_DLC_TOWER_RANK_RSP = 3572,
  CMD_TAKE_DLC_RANK_REWARD_NOTIFY = 3573,
  CMD_GET_DLC_TOWER_REQ = 3574,
  CMD_GET_DLC_TOWER_RSP = 3575,
  CMD_RESET_DLC_TOWER_PROGRESS_REQ = 3576,
  CMD_RESET_DLC_TOWER_PROGRESS_RSP = 3577,
  CMD_FINISH_DLC_DIALOG_REQ = 3578,
  CMD_FINISH_DLC_DIALOG_RSP = 3579,
  CMD_REFRESH_DLC_TALENT_AFFIX_REQ = 3580,
  CMD_REFRESH_DLC_TALENT_AFFIX_RSP = 3581,
  CMD_SELECT_DLC_TALENT_AFFIX_REQ = 3584,
  CMD_SELECT_DLC_TALENT_AFFIX_RSP = 3585,
  CMD_UNLOCK_DLC_PHOTO_REQ = 3586,
  CMD_UNLOCK_DLC_PHOTO_RSP = 3587,
  CMD_SWITCH_DLC_AVATAR_TALENT_REQ = 3588,
  CMD_SWITCH_DLC_AVATAR_TALENT_RSP = 3589,
  CMD_REPORT_DLC_DROP_ITEM_REQ = 3590,
  CMD_REPORT_DLC_DROP_ITEM_RSP = 3591,
  UNRECOGNIZED = -1,
}

export enum CmdTypeElf {
  CMD_GET_ELF_DATA_REQ = 2100,
  CMD_GET_ELF_DATA_RSP = 2101,
  CMD_SYNC_ELF_DATA_NOTIFY = 2102,
  CMD_SYNC_ELF_FRAGMENT_NOTIFY = 2103,
  CMD_SYNC_ELF_TALENT_NOTIFY = 2104,
  CMD_ELF_STAR_UP_REQ = 2105,
  CMD_ELF_STAR_UP_RSP = 2106,
  CMD_ADD_ELF_EXP_BY_MATERIAL_REQ = 2107,
  CMD_ADD_ELF_EXP_BY_MATERIAL_RSP = 2108,
  CMD_ELF_UPGRADE_LEVEL_PERIOD_REQ = 2109,
  CMD_ELF_UPGRADE_LEVEL_PERIOD_RSP = 2110,
  CMD_ELF_FRAGMENT_TRANSFORM_REQ = 2121,
  CMD_ELF_FRAGMENT_TRANSFORM_RSP = 2122,
  CMD_ELF_SKILL_LEVEL_UP_REQ = 2123,
  CMD_ELF_SKILL_LEVEL_UP_RSP = 2124,
  CMD_ELF_TAKE_COMPENSATION_REQ = 2125,
  CMD_ELF_TAKE_COMPENSATION_RSP = 2126,
  UNRECOGNIZED = -1,
}

export enum CmdTypeEndless {
  CMD_GET_LAST_ENDLESS_REWARD_DATA_REQ = 3406,
  CMD_GET_LAST_ENDLESS_REWARD_DATA_RSP = 3407,
  CMD_TAKE_ENDLESS_BASE_REWARD_REQ = 3417,
  CMD_TAKE_ENDLESS_BASE_REWARD_RSP = 3418,
  CMD_GET_OPENWORLD_ENDLESS_DATA_REQ = 3419,
  CMD_GET_OPENWORLD_ENDLESS_DATA_RSP = 3420,
  CMD_OPENWORLD_ENDLESS_ITEM_UPDATE_NOTIFY = 3421,
  CMD_USE_OPENWORLD_ENDLESS_ITEM_REQ = 3422,
  CMD_USE_OPENWORLD_ENDLESS_ITEM_RSP = 3423,
  CMD_FINISH_OPENWORLD_ENDLESS_MONSTER_GROUP_REQ = 3424,
  CMD_FINISH_OPENWORLD_ENDLESS_MONSTER_GROUP_RSP = 3425,
  CMD_GET_OPENWORLD_ENDLESS_STAGE_INNER_DATA_REQ = 3426,
  CMD_GET_OPENWORLD_ENDLESS_STAGE_INNER_DATA_RSP = 3427,
  CMD_TRIGGER_OPENWORLD_ENDLESS_TRAP_REQ = 3428,
  CMD_TRIGGER_OPENWORLD_ENDLESS_TRAP_RSP = 3429,
  CMD_FINISH_OPENWORLD_ENDLESS_INVASION_MONSTER_REQ = 3430,
  CMD_FINISH_OPENWORLD_ENDLESS_INVASION_MONSTER_RSP = 3431,
  CMD_GET_ENDLESS_STATUS_REQ = 3432,
  CMD_GET_ENDLESS_STATUS_RSP = 3433,
  CMD_REPORT_OPENWORLD_ENDLESS_DATA_REQ = 3434,
  CMD_REPORT_OPENWORLD_ENDLESS_DATA_RSP = 3435,
  CMD_OPENWORLD_ENDLESS_BATTLE_BEGIN_REQ = 3438,
  CMD_OPENWORLD_ENDLESS_BATTLE_BEGIN_RSP = 3439,
  CMD_OPENWORLD_ENDLESS_BATTLE_END_REQ = 3440,
  CMD_OPENWORLD_ENDLESS_BATTLE_END_RSP = 3441,
  CMD_OPENWORLD_ENDLESS_WAR_INFO_NOTIFY = 3442,
  CMD_GET_OPENWORLD_ENDLESS_PLAYER_WAR_INFO_REQ = 3443,
  CMD_GET_OPENWORLD_ENDLESS_PLAYER_WAR_INFO_RSP = 3444,
  CMD_OPENWORLD_ENDLESS_PLAYER_UPDATE_NOTIFY = 3445,
  CMD_GET_OPENWORLD_ENDLESS_TOP_GROUP_REQ = 3446,
  CMD_GET_OPENWORLD_ENDLESS_TOP_GROUP_RSP = 3447,
  CMD_SET_OPENWORLD_ENDLESS_MONSTER_GROUP_PROGRESS_REQ = 3448,
  CMD_SET_OPENWORLD_ENDLESS_MONSTER_GROUP_PROGRESS_RSP = 3449,
  CMD_OPENWORLD_ENDLESS_CHANGE_AVATAR_REQ = 3450,
  CMD_OPENWORLD_ENDLESS_CHANGE_AVATAR_RSP = 3451,
  CMD_ENDLESS_IN_SETTLE_NOTIFY = 3452,
  CMD_GREEDY_ENDLESS_ENROLL_REQ = 3453,
  CMD_GREEDY_ENDLESS_ENROLL_RSP = 3454,
  CMD_GREEDY_ENDLESS_REPORT_FLOOR_END_REQ = 3455,
  CMD_GREEDY_ENDLESS_REPORT_FLOOR_END_RSP = 3456,
  CMD_GREEDY_ENDLESS_FLOOR_REWARD_NOTIFY = 3457,
  CMD_GREEDY_ENDLESS_GET_RANK_REQ = 3458,
  CMD_GREEDY_ENDLESS_GET_RANK_RSP = 3459,
  CMD_GREEDY_ENDLESS_TAKE_RANK_REWARD_REQ = 3460,
  CMD_GREEDY_ENDLESS_TAKE_RANK_REWARD_RSP = 3461,
  CMD_ENDLESS_SELECT_TYPE_REQ = 3462,
  CMD_ENDLESS_SELECT_TYPE_RSP = 3463,
  CMD_GREEDY_ENDLESS_REPORT_FLOOR_BEGIN_REQ = 3464,
  CMD_GREEDY_ENDLESS_REPORT_FLOOR_BEGIN_RSP = 3465,
  UNRECOGNIZED = -1,
}

export enum CmdTypeEquipforge {
  CMD_GET_EQUIPMENT_FORGE_DATA_REQ = 3650,
  CMD_GET_EQUIPMENT_FORGE_DATA_RSP = 3651,
  CMD_FORGE_EQUIPMENT_REQ = 3652,
  CMD_FORGE_EQUIPMENT_RSP = 3653,
  CMD_EXTRACT_EQUIPMENT_REQ = 3654,
  CMD_EXTRACT_EQUIPMENT_RSP = 3655,
  CMD_REFORGE_EQUIPMENT_REQ = 3657,
  CMD_REFORGE_EQUIPMENT_RSP = 3658,
  CMD_GET_EXTRACT_REFORGE_ACTIVITY_REQ = 3659,
  CMD_GET_EXTRACT_REFORGE_ACTIVITY_RSP = 3660,
  CMD_GET_EQUIPMENT_BACK_REQ = 3661,
  CMD_GET_EQUIPMENT_BACK_RSP = 3662,
  CMD_BACK_EQUIPMENT_REQ = 3663,
  CMD_BACK_EQUIPMENT_RSP = 3664,
  UNRECOGNIZED = -1,
}

export enum CmdTypeGeneralactivity {
  CMD_GENERAL_ACTIVITY_SCORE_REWARD_NOTIFY = 4000,
  CMD_GENERAL_ACTIVITY_GET_SCORE_REWARD_INFO_REQ = 4001,
  CMD_GENERAL_ACTIVITY_GET_SCORE_REWARD_INFO_RSP = 4002,
  CMD_GENERAL_ACTIVITY_GET_SCHEDULE_REQ = 4003,
  CMD_GENERAL_ACTIVITY_GET_SCHEDULE_RSP = 4004,
  CMD_GENERAL_ACTIVITY_GET_MAIN_INFO_REQ = 4005,
  CMD_GENERAL_ACTIVITY_GET_MAIN_INFO_RSP = 4006,
  CMD_GENERAL_ACTIVITY_GET_RANK_REQ = 4007,
  CMD_GENERAL_ACTIVITY_GET_RANK_RSP = 4008,
  CMD_PUSH_TOWER_ACTIVTIY_TAKE_STAGE_REWARD_REQ = 4009,
  CMD_PUSH_TOWER_ACTIVTIY_TAKE_STAGE_REWARD_RSP = 4010,
  CMD_PUSH_TOWER_ACTIVTIY_TAKE_CLEAR_REWARD_REQ = 4011,
  CMD_PUSH_TOWER_ACTIVTIY_TAKE_CLEAR_REWARD_RSP = 4012,
  CMD_TEAM_ASSAULT_ACTIVITY_BEGIN_REQ = 4020,
  CMD_TEAM_ASSAULT_ACTIVITY_BEGIN_RSP = 4021,
  CMD_TEAM_ASSAULT_ACTIVITY_END_REQ = 4022,
  CMD_TEAM_ASSAULT_ACTIVITY_END_RSP = 4023,
  CMD_TEAM_ASSAULT_ACTIVITY_BOSS_BEGIN_REQ = 4024,
  CMD_TEAM_ASSAULT_ACTIVITY_BOSS_BEGIN_RSP = 4025,
  CMD_TEAM_ASSAULT_ACTIVITY_BOSS_END_REQ = 4026,
  CMD_TEAM_ASSAULT_ACTIVITY_BOSS_END_RSP = 4027,
  CMD_TEAM_ASSAULT_ACTIVITY_RESET_REQ = 4028,
  CMD_TEAM_ASSAULT_ACTIVITY_RESET_RSP = 4029,
  CMD_GENERAL_ACTIVITY_STAGE_EXCHANGE_ENTER_TIMES_REQ = 4030,
  CMD_GENERAL_ACTIVITY_STAGE_EXCHANGE_ENTER_TIMES_RSP = 4031,
  CMD_GENERAL_ACTIVITY_STAGE_TAKE_STAGE_REWARD_REQ = 4032,
  CMD_GENERAL_ACTIVITY_STAGE_TAKE_STAGE_REWARD_RSP = 4033,
  CMD_TAKE_GENERAL_ACTIVITY_SCORE_REWARD_REQ = 4034,
  CMD_TAKE_GENERAL_ACTIVITY_SCORE_REWARD_RSP = 4035,
  CMD_GENERAL_ACTIVITY_STAGE_TAKE_STAGE_GROUP_REWARD_REQ = 4036,
  CMD_GENERAL_ACTIVITY_STAGE_TAKE_STAGE_GROUP_REWARD_RSP = 4037,
  CMD_ENDLESS_SINGLE_MODE_ACTIVITY_FINISH_FLOOR_REQ = 4038,
  CMD_ENDLESS_SINGLE_MODE_ACTIVITY_FINISH_FLOOR_RSP = 4039,
  CMD_ENDLESS_SINGLE_MODE_ACTIVITY_RESET_REQ = 4040,
  CMD_ENDLESS_SINGLE_MODE_ACTIVITY_RESET_RSP = 4041,
  CMD_ENDLESS_SINGLE_MODE_ACTIVITY_BATTLE_BEGIN_REQ = 4042,
  CMD_ENDLESS_SINGLE_MODE_ACTIVITY_BATTLE_BEGIN_RSP = 4043,
  CMD_ENDLESS_SINGLE_MODE_ACTIVITY_BATTLE_END_REQ = 4044,
  CMD_ENDLESS_SINGLE_MODE_ACTIVITY_BATTLE_END_RSP = 4045,
  CMD_ENDLESS_SINGLE_MODE_ACTIVITY_TAKE_ITEM_REQ = 4046,
  CMD_ENDLESS_SINGLE_MODE_ACTIVITY_TAKE_ITEM_RSP = 4047,
  CMD_ENDLESS_SINGLE_MODE_ACTIVITY_USE_ITEM_REQ = 4048,
  CMD_ENDLESS_SINGLE_MODE_ACTIVITY_USE_ITEM_RSP = 4049,
  CMD_OPTIONAL_BUFF_ACTIVITY_CHOOSE_BUFF_REQ = 4050,
  CMD_OPTIONAL_BUFF_ACTIVITY_CHOOSE_BUFF_RSP = 4051,
  CMD_GENERAL_ACTIVITY_GET_STAGE_RANK_REQ = 4052,
  CMD_GENERAL_ACTIVITY_GET_STAGE_RANK_RSP = 4053,
  CMD_CHALLENGE_WAR_UPDATE_TEAM_REQ = 4054,
  CMD_CHALLENGE_WAR_UPDATE_TEAM_RSP = 4055,
  CMD_CRISIS_MODE_ACTIVITY_TAKE_STAGE_REWARD_REQ = 4056,
  CMD_CRISIS_MODE_ACTIVITY_TAKE_STAGE_REWARD_RSP = 4057,
  CMD_CHALLENGE_WAR_ACTIVITY_FINISH_FLOOR_REQ = 4058,
  CMD_CHALLENGE_WAR_ACTIVITY_FINISH_FLOOR_RSP = 4059,
  CMD_GENERAL_ACTIVITY_TAKE_TICKET_REQ = 4060,
  CMD_GENERAL_ACTIVITY_TAKE_TICKET_RSP = 4061,
  CMD_BOSS_CHALLENGE_ACTIVITY_GET_STAGE_RANK_REQ = 4062,
  CMD_BOSS_CHALLENGE_ACTIVITY_GET_STAGE_RANK_RSP = 4063,
  CMD_FRONT_ENDLESS_ACTIVITY_BATTLE_BEGIN_REQ = 4064,
  CMD_FRONT_ENDLESS_ACTIVITY_BATTLE_BEGIN_RSP = 4065,
  CMD_FRONT_ENDLESS_ACTIVITY_BATTLE_END_REQ = 4066,
  CMD_FRONT_ENDLESS_ACTIVITY_BATTLE_END_RSP = 4067,
  CMD_GENERAL_ACTIVITY_DUMMY = 4099,
  UNRECOGNIZED = -1,
}

export enum CmdTypeGlobalwar {
  CMD_GET_GLOBAL_WAR_ACTIVITY_REQ = 3950,
  CMD_GET_GLOBAL_WAR_ACTIVITY_RSP = 3951,
  CMD_GLOBAL_WAR_TAKE_POINT_REWARD_REQ = 3952,
  CMD_GLOBAL_WAR_TAKE_POINT_REWARD_RSP = 3953,
  CMD_GLOBAL_WAR_ADD_CURRENCY_NOTIFY = 3954,
  CMD_GLOBAL_WAR_EXCHANGE_CURRENCY_REQ = 3955,
  CMD_GLOBAL_WAR_EXCHANGE_CURRENCY_RSP = 3956,
  CMD_GLOBAL_WAR_GET_RANK_REQ = 3957,
  CMD_GLOBAL_WAR_GET_RANK_RSP = 3958,
  CMD_GLOBAL_WAR_TAKE_SWEEP_REWARD_REQ = 3959,
  CMD_GLOBAL_WAR_TAKE_SWEEP_REWARD_RSP = 3960,
  CMD_GLOBAL_WAR_DUMMY = 3999,
  UNRECOGNIZED = -1,
}

export enum CmdTypeGratuity {
  CMD_GET_GRATUITY_ACTIVITY_REQ = 4100,
  CMD_GET_GRATUITY_ACTIVITY_RSP = 4101,
  CMD_ACCEPT_GRATUITY_STAGE_REQ = 4102,
  CMD_ACCEPT_GRATUITY_STAGE_RSP = 4103,
  CMD_ASSIST_GRATUITY_STAGE_REQ = 4104,
  CMD_ASSIST_GRATUITY_STAGE_RSP = 4105,
  CMD_CANCEL_GRATUITY_STAGE_REQ = 4106,
  CMD_CANCEL_GRATUITY_STAGE_RSP = 4107,
  CMD_GET_GRATUITY_BATTLE_HISTORY_REQ = 4108,
  CMD_GET_GRATUITY_BATTLE_HISTORY_RSP = 4109,
  CMD_SYNC_GRATUITY_STAGE_REQ = 4112,
  CMD_SYNC_GRATUITY_STAGE_RSP = 4113,
  CMD_PUBLISH_GRATUITY_STAGE_REQ = 4114,
  CMD_PUBLISH_GRATUITY_STAGE_RSP = 4115,
  CMD_GET_GRATUITY_STAGE_LIST_REQ = 4116,
  CMD_GET_GRATUITY_STAGE_LIST_RSP = 4117,
  CMD_REJECT_GRATUITY_STAGE_REQ = 4118,
  CMD_REJECT_GRATUITY_STAGE_RSP = 4119,
  CMD_GRATUITY_STAGE_INVITE_NOTIFY = 4120,
  CMD_GRATUITY_STAGE_FINISH_NOTIFY = 4121,
  UNRECOGNIZED = -1,
}

export enum CmdTypeKingdom {
  CMD_GET_KINGDOM_WAR_REQ = 3050,
  CMD_GET_KINGDOM_WAR_RSP = 3051,
  CMD_KINGDOM_WAR_MOVE_REQ = 3052,
  CMD_KINGDOM_WAR_MOVE_RSP = 3053,
  CMD_KINGDOM_WAR_VOTE_REQ = 3054,
  CMD_KINGDOM_WAR_VOTE_RSP = 3055,
  CMD_KINGDOM_WAR_GET_RANK_REQ = 3058,
  CMD_KINGDOM_WAR_GET_RANK_RSP = 3059,
  CMD_KINGDOM_WAR_TAKE_DAILY_REWARD_REQ = 3060,
  CMD_KINGDOM_WAR_TAKE_DAILY_REWARD_RSP = 3061,
  CMD_KINGDOM_WAR_EXCHANGE_CURRENCY_REQ = 3062,
  CMD_KIGNDOM_WAR_EXCHANGE_CURRENCY_RSP = 3063,
  CMD_KINGDOM_WAR_GET_POINT_RANK_REQ = 3064,
  CMD_KINGDOM_WAR_GET_POINT_RANK_RSP = 3065,
  UNRECOGNIZED = -1,
}

export enum CmdTypeMail {
  CMD_GET_CLIENT_MAIL_DATA_REQ = 3800,
  CMD_GET_CLIENT_MAIL_DATA_RSP = 3801,
  CMD_TAKE_CLIENT_MAIL_ATTACHMENT_REQ = 3802,
  CMD_TAKE_CLIENT_MAIL_ATTACHMENT_RSP = 3803,
  CMD_MARK_CLIENT_MAIL_READ_REQ = 3804,
  CMD_MARK_CLIENT_MAIL_READ_RSP = 3805,
  CMD_DEL_CLIENT_MAIL_REQ = 3806,
  CMD_DEL_CLIENT_MAIL_RSP = 3807,
  CMD_NEW_CLIENT_MAIL_NOTIFY = 3808,
  UNRECOGNIZED = -1,
}

export enum CmdTypeMassivewar {
  CMD_MASSIVE_WAR_GET_ACTIVITY_REQ = 4800,
  CMD_MASSIVE_WAR_GET_ACTIVITY_RSP = 4801,
  CMD_MASSIVE_WAR_GET_BATTLE_INFO_REQ = 4802,
  CMD_MASSIVE_WAR_GET_BATTLE_INFO_RSP = 4803,
  CMD_MASSIVE_WAR_GET_RANK_REQ = 4804,
  CMD_MASSIVE_WAR_GET_RANK_RSP = 4805,
  CMD_MASSIVE_WAR_BATTLE_BEGIN_NOTIFY = 4806,
  CMD_MASSIVE_WAR_REPORT_BATTLE_MESSAGE_NOTIFY = 4807,
  CMD_MASSIVE_WAR_EXIT_BATTLE_REQ = 4808,
  CMD_MASSIVE_WAR_EXIT_BATTLE_RSP = 4809,
  CMD_MASSIVE_WAR_BATTLE_END_NOTIFY = 4810,
  CMD_MASSIVE_WAR_LINEUP_INFO_NOTIFY = 4811,
  CMD_MASSIVE_WAR_TAKE_SCORE_REWARD_REQ = 4812,
  CMD_MASSIVE_WAR_TAKE_SCORE_REWARD_RSP = 4813,
  CMD_MASSIVE_WAR_DUMMY = 4899,
  UNRECOGNIZED = -1,
}

export enum CmdTypeMonopoly {
  CMD_GET_MONOPOLY_ACTIVITY_REQ = 3850,
  CMD_GET_MONOPOLY_ACTIVITY_RSP = 3851,
  CMD_MONOPOLY_THROW_DICE_REQ = 3852,
  CMD_MONOPOLY_THROW_DICE_RSP = 3853,
  CMD_MONOPOLY_BUILDING_CONSTRUCT_REQ = 3854,
  CMD_MONOPOLY_BUILDING_CONSTRUCT_RSP = 3855,
  CMD_MONOPOLY_END_ROUND_REQ = 3856,
  CMD_MONOPOLY_END_ROUND_RSP = 3857,
  CMD_MONOPOLY_USE_ITEM_REQ = 3858,
  CMD_MONOPOLY_USE_ITEM_RSP = 3859,
  CMD_MONOPOLY_REWARD_NOTIFY = 3860,
  CMD_MONOPOLY_BUY_GOODS_REQ = 3861,
  CMD_MONOPOLY_BUY_GOODS_RSP = 3862,
  CMD_MONOPOLY_SKIP_BATTLE_REQ = 3863,
  CMD_MONOPOLY_SKIP_BATTLE_RSP = 3864,
  CMD_MONOPOLY_RESET_FLOOR_REQ = 3865,
  CMD_MONOPOLY_RESET_FLOOR_RSP = 3866,
  CMD_MONOPOLY_ADD_MONSTER_REQ = 3867,
  CMD_MONOPOLY_ADD_MONSTER_RSP = 3868,
  CMD_EXCHANGE_RAFFLE_MATERIAL_REQ = 3890,
  CMD_EXCHANGE_RAFFLE_MATERIAL_RSP = 3891,
  CMD_TAKE_RAFFLE_REWARD_REQ = 3894,
  CMD_TAKE_RAFFLE_REWARD_RSP = 3895,
  CMD_DRAW_RAFFLE_TICKET_REQ = 3896,
  CMD_DRAW_RAFFLE_TICKET_RSP = 3897,
  CMD_GET_RAFFLE_ACTIVITY_REQ = 3898,
  CMD_GET_RAFFLE_ACTIVITY_RSP = 3899,
  UNRECOGNIZED = -1,
}

export enum CmdTypeNinja {
  CMD_GET_NINJA_ACTIVITY_REQ = 4400,
  CMD_GET_NINJA_ACTIVITY_RSP = 4401,
  CMD_NINJA_SLOT_STRENGTHEN_REQ = 4402,
  CMD_NINJA_SLOT_STRENGTHEN_RSP = 4403,
  CMD_NINJA_ACTIVITY_NOTIFY = 4404,
  CMD_NINJA_SLOT_CHOOSE_EFFECT_REQ = 4405,
  CMD_NINJA_SLOT_CHOOSE_EFFECT_RSP = 4406,
  CMD_NINJA_DUMMY = 4449,
  UNRECOGNIZED = -1,
}

export enum CmdTypeOne {
  CMD_KEEP_ALIVE_NOTIFY = 1,
  CMD_GET_GAMESERVER_REQ = 2,
  CMD_GET_GAMESERVER_RSP = 3,
  CMD_GET_PLAYER_TOKEN_REQ = 4,
  CMD_GET_PLAYER_TOKEN_RSP = 5,
  CMD_PLAYER_LOGIN_REQ = 6,
  CMD_PLAYER_LOGIN_RSP = 7,
  CMD_PLAYER_LOGOUT_REQ = 8,
  CMD_PLAYER_LOGOUT_RSP = 9,
  CMD_GET_MAIN_DATA_REQ = 10,
  CMD_GET_MAIN_DATA_RSP = 11,
  CMD_GET_SCOIN_EXCHANGE_INFO_REQ = 12,
  CMD_GET_SCOIN_EXCHANGE_INFO_RSP = 13,
  CMD_SCOIN_EXCHANGE_REQ = 14,
  CMD_SCOIN_EXCHANGE_RSP = 15,
  CMD_GET_STAMINA_EXCHANGE_INFO_REQ = 16,
  CMD_GET_STAMINA_EXCHANGE_INFO_RSP = 17,
  CMD_STAMINA_EXCHANGE_REQ = 18,
  CMD_STAMINA_EXCHANGE_RSP = 19,
  CMD_NICKNAME_MODIFY_REQ = 20,
  CMD_NICKNAME_MODIFY_RSP = 21,
  CMD_GM_TALK_REQ = 22,
  CMD_GM_TALK_RSP = 23,
  CMD_GET_AVATAR_DATA_REQ = 24,
  CMD_GET_AVATAR_DATA_RSP = 25,
  CMD_GET_EQUIPMENT_DATA_REQ = 26,
  CMD_GET_EQUIPMENT_DATA_RSP = 27,
  CMD_DEL_EQUIPMENT_NOTIFY = 28,
  CMD_AVATAR_STAR_UP_REQ = 29,
  CMD_AVATAR_STAR_UP_RSP = 30,
  CMD_EQUIPMENT_POWER_UP_REQ = 31,
  CMD_EQUIPMENT_POWER_UP_RSP = 32,
  CMD_EQUIPMENT_SELL_REQ = 33,
  CMD_EQUIPMENT_SELL_RSP = 34,
  CMD_ADD_AVATAR_EXP_BY_MATERIAL_REQ = 35,
  CMD_ADD_AVATAR_EXP_BY_MATERIAL_RSP = 36,
  CMD_EQUIPMENT_EVO_REQ = 37,
  CMD_EQUIPMENT_EVO_RSP = 38,
  CMD_DRESS_EQUIPMENT_REQ = 39,
  CMD_DRESS_EQUIPMENT_RSP = 40,
  CMD_GET_STAGE_DATA_REQ = 41,
  CMD_GET_STAGE_DATA_RSP = 42,
  CMD_STAGE_BEGIN_REQ = 43,
  CMD_STAGE_BEGIN_RSP = 44,
  CMD_STAGE_END_REQ = 45,
  CMD_STAGE_END_RSP = 46,
  CMD_GET_AVATAR_TEAM_DATA_REQ = 47,
  CMD_GET_AVATAR_TEAM_DATA_RSP = 48,
  CMD_UPDATE_AVATAR_TEAM_NOTIFY = 49,
  CMD_AVATAR_SUB_SKILL_LEVEL_UP_REQ = 50,
  CMD_AVATAR_SUB_SKILL_LEVEL_UP_RSP = 51,
  CMD_MATERIAL_EVO_REQ = 56,
  CMD_MATERIAL_EVO_RSP = 57,
  CMD_GET_STAGE_DROP_DISPLAY_REQ = 60,
  CMD_GET_STAGE_DROP_DISPLAY_RSP = 61,
  CMD_GET_FRIEND_LIST_REQ = 64,
  CMD_GET_FRIEND_LIST_RSP = 65,
  CMD_ADD_FRIEND_REQ = 66,
  CMD_ADD_FRIEND_RSP = 67,
  CMD_DEL_FRIEND_REQ = 68,
  CMD_DEL_FRIEND_RSP = 69,
  CMD_GET_ASK_ADD_FRIEND_LIST_REQ = 70,
  CMD_GET_ASK_ADD_FRIEND_LIST_RSP = 71,
  CMD_GET_PLAYER_DETAIL_DATA_REQ = 72,
  CMD_GET_PLAYER_DETAIL_DATA_RSP = 73,
  CMD_UPDATE_EQUIPMENT_PROTECTED_STATUS_REQ = 74,
  CMD_UPDATE_EQUIPMENT_PROTECTED_STATUS_RSP = 75,
  CMD_GET_RECOMMEND_FRIEND_LIST_REQ = 76,
  CMD_GET_RECOMMEND_FRIEND_LIST_RSP = 77,
  CMD_SET_SELF_DESC_REQ = 78,
  CMD_SET_SELF_DESC_RSP = 79,
  CMD_DEL_FRIEND_NOTIFY = 80,
  CMD_GET_OFFLINE_FRIENDS_POINT_NOTIFY = 81,
  CMD_VERIFY_ITUNES_ORDER_NOTIFY = 82,
  CMD_RECHARGE_FINISH_NOTIFY = 83,
  CMD_GET_MAIL_DATA_REQ = 84,
  CMD_GET_MAIL_DATA_RSP = 85,
  CMD_GET_MAIL_ATTACHMENT_REQ = 86,
  CMD_GET_MAIL_ATTACHMENT_RSP = 87,
  CMD_UNLOCK_AVATAR_SKILL_REQ = 88,
  CMD_UNLOCK_AVATAR_SKILL_RSP = 89,
  CMD_GET_PRODUCT_LIST_REQ = 98,
  CMD_GET_PRODUCT_LIST_RSP = 99,
  CMD_GET_ASSISTANT_FROZEN_LIST_REQ = 100,
  CMD_GET_ASSISTANT_FROZEN_LIST_RSP = 101,
  CMD_SELL_AVATAR_FRAGMENT_REQ = 102,
  CMD_SELL_AVATAR_FRAGMENT_RSP = 103,
  CMD_GET_HAS_GOT_ITEM_ID_LIST_REQ = 104,
  CMD_GET_HAS_GOT_ITEM_ID_LIST_RSP = 105,
  CMD_AVATAR_REVIVE_REQ = 106,
  CMD_AVATAR_REVIVE_RSP = 107,
  CMD_RESET_STAGE_ENTER_TIMES_REQ = 108,
  CMD_RESET_STAGE_ENTER_TIMES_RSP = 109,
  CMD_GET_CONFIG_REQ = 110,
  CMD_GET_CONFIG_RSP = 111,
  CMD_GET_MISSION_DATA_REQ = 112,
  CMD_GET_MISSION_DATA_RSP = 113,
  CMD_GET_MISSION_REWARD_REQ = 114,
  CMD_GET_MISSION_REWARD_RSP = 115,
  CMD_DEL_MISSION_NOTIFY = 116,
  CMD_UPDATE_MISSION_PROGRESS_REQ = 117,
  CMD_UPDATE_MISSION_PROGRESS_RSP = 118,
  CMD_BIND_ACCOUNT_REQ = 119,
  CMD_BIND_ACCOUNT_RSP = 120,
  CMD_GET_SIGN_IN_REWARD_STATUS_REQ = 121,
  CMD_GET_SIGN_IN_REWARD_STATUS_RSP = 122,
  CMD_GET_SIGN_IN_REWARD_REQ = 123,
  CMD_GET_SIGN_IN_REWARD_RSP = 124,
  CMD_GET_WEEK_DAY_ACTIVITY_DATA_REQ = 125,
  CMD_GET_WEEK_DAY_ACTIVITY_DATA_RSP = 126,
  CMD_GET_FINISH_GUIDE_DATA_REQ = 127,
  CMD_GET_FINISH_GUIDE_DATA_RSP = 128,
  CMD_FINISH_GUIDE_REPORT_REQ = 129,
  CMD_FINISH_GUIDE_REPORT_RSP = 130,
  CMD_STAGE_INNER_DATA_REPORT_REQ = 131,
  CMD_STAGE_INNER_DATA_REPORT_RSP = 132,
  CMD_GET_DISPATCH_REQ = 133,
  CMD_GET_DISPATCH_RSP = 134,
  CMD_EXCHANGE_AVATAR_WEAPON_REQ = 135,
  CMD_EXCHANGE_AVATAR_WEAPON_RSP = 136,
  CMD_GET_BULLETIN_REQ = 137,
  CMD_GET_BULLETIN_RSP = 138,
  CMD_ADD_GOODFEEL_REQ = 154,
  CMD_ADD_GOODFEEL_RSP = 155,
  CMD_ISLAND_DISJOIN_EQUIPMENT_REQ = 179,
  CMD_ISLAND_DISJOIN_EQUIPMENT_RSP = 180,
  CMD_GET_GUIDE_REWARD_REQ = 185,
  CMD_GET_GUIDE_REWARD_RSP = 186,
  CMD_URGENCY_MSG_NOTIFY = 187,
  CMD_REFINE_STIGMATA_RUNE_REQ = 193,
  CMD_REFINE_STIGMATA_RUNE_RSP = 194,
  CMD_SELECT_NEW_STIGMATA_RUNE_REQ = 195,
  CMD_SELECT_NEW_STIGMATA_RUNE_RSP = 196,
  CMD_GET_VIP_REWARD_DATA_REQ = 197,
  CMD_GET_VIP_REWARD_DATA_RSP = 198,
  CMD_GET_VIP_REWARD_REQ = 199,
  CMD_GET_VIP_REWARD_RSP = 200,
  CMD_GET_SHOP_LIST_REQ = 201,
  CMD_GET_SHOP_LIST_RSP = 202,
  CMD_BUY_GOODS_REQ = 203,
  CMD_BUY_GOODS_RSP = 204,
  CMD_MANUAL_REFRESH_SHOP_REQ = 205,
  CMD_MANUAL_REFRESH_SHOP_RSP = 206,
  CMD_CREATE_WEIXIN_ORDER_REQ = 207,
  CMD_CREATE_WEIXIN_ORDER_RSP = 208,
  CMD_GET_REDEEM_CODE_INFO_REQ = 211,
  CMD_GET_REDEEM_CODE_INFO_RSP = 212,
  CMD_EXCHANGE_REDEEM_CODE_REQ = 213,
  CMD_EXCHANGE_REDEEM_CODE_RSP = 214,
  CMD_ANTI_CHEAT_REPORT_REQ = 217,
  CMD_ANTI_CHEAT_REPORT_RSP = 218,
  CMD_GET_INVITE_FRIEND_REQ = 223,
  CMD_GET_INVITE_FRIEND_RSP = 224,
  CMD_GET_INVITEE_FRIEND_REQ = 225,
  CMD_GET_INVITEE_FRIEND_RSP = 226,
  CMD_ACCEPT_FRIEND_INVITE_REQ = 227,
  CMD_ACCEPT_FRIEND_INVITE_RSP = 228,
  CMD_COMMENT_REPORT_REQ = 229,
  CMD_COMMENT_REPORT_RSP = 230,
  CMD_GET_EXTRA_STORY_DATA_REQ = 231,
  CMD_GET_EXTRA_STORY_DATA_RSP = 232,
  CMD_GET_EXTRA_STORY_ACTIVITY_ACT_REQ = 233,
  CMD_GET_EXTRA_STORY_ACTIVITY_ACT_RSP = 234,
  CMD_GET_EXTRA_STORY_ACHIEVE_DATA_REQ = 235,
  CMD_GET_EXTRA_STORY_ACHIEVE_DATA_RSP = 236,
  CMD_GET_EXTRA_STORY_ACHIEVE_REWARD_REQ = 237,
  CMD_GET_EXTRA_STORY_ACHIEVE_REWARD_RSP = 238,
  CMD_SWITCH_DYNAMIC_HARD_LV_REQ = 239,
  CMD_SWITCH_DYNAMIC_HARD_LV_RSP = 240,
  CMD_GET_ISLAND_EVENT_REQ = 241,
  CMD_GET_ISLAND_EVENT_RSP = 242,
  CMD_FINISH_ISLAND_EVENT_REQ = 243,
  CMD_FINISH_ISLAND_EVENT_RSP = 244,
  CMD_SET_TRANSFER_PWD_REQ = 245,
  CMD_SET_TRANSFER_PWD_RSP = 246,
  CMD_VERIFY_GOOGLE_ORDER_NOTIFY = 247,
  CMD_SET_DRESS_REQ = 248,
  CMD_SET_DRESS_RSP = 249,
  CMD_DRESS_TO_RETURN_MATERIAL_NOTIFY = 250,
  CMD_USE_MATERIAL_REQ = 251,
  CMD_USE_MATERIAL_RSP = 252,
  CMD_SWITCH_AVATAR_SUB_SKILL_REQ = 253,
  CMD_SWITCH_AVATAR_SUB_SKILL_RSP = 254,
  CMD_GET_TIME_LIMIT_ADD_UP_DATA_REQ = 255,
  CMD_GET_TIME_LIMIT_ADD_UP_DATA_RSP = 256,
  CMD_TIME_LIMIT_ADD_UP_REWARD_GRANT_NOTIFY = 257,
  CMD_TIME_LIMIT_ADD_UP_UPDATE_NOTIFY = 258,
  CMD_EXCHANGE_WEEK_DAY_ACTIVITY_TIMES_REQ = 259,
  CMD_EXCHANGE_WEEK_DAY_ACTIVITY_TIMES_RSP = 260,
  CMD_UPDATE_CUSTOM_AVATAR_TEAM_REQ = 269,
  CMD_UPDATE_CUSTOM_AVATAR_TEAM_RSP = 270,
  CMD_UPDATE_ASSISTANT_AVATAR_ID_REQ = 271,
  CMD_UPDATE_ASSISTANT_AVATAR_ID_RSP = 272,
  CMD_GET_ROGUE_STAGE_DATA_REQ = 275,
  CMD_GET_ROGUE_STAGE_DATA_RSP = 276,
  CMD_INIT_ROGUE_STAGE_REQ = 277,
  CMD_INIT_ROGUE_STAGE_RSP = 278,
  CMD_RESET_ROGUE_STAGE_REQ = 279,
  CMD_RESET_ROGUE_STAGE_RSP = 280,
  CMD_ROGUE_STAGE_BEGIN_REQ = 281,
  CMD_ROGUE_STAGE_BEGIN_RSP = 282,
  CMD_ROGUE_STAGE_END_REQ = 283,
  CMD_ROGUE_STAGE_END_RSP = 284,
  CMD_UPDATE_ROGUE_STAGE_AVATAR_POSITION_REQ = 286,
  CMD_UPDATE_ROGUE_STAGE_AVATAR_POSITION_RSP = 287,
  CMD_TAKE_DUTY_REWARD_REQ = 288,
  CMD_TAKE_DUTY_REWARD_RSP = 289,
  CMD_REPORT_BIRTHDAY_REQ = 299,
  CMD_REPORT_BIRTHDAY_RSP = 300,
  CMD_CREATE_LOBBY_REQ = 301,
  CMD_CREATE_LOBBY_RSP = 302,
  CMD_ENTER_LOBBY_REQ = 303,
  CMD_ENTER_LOBBY_RSP = 304,
  CMD_LEAVE_TEAM_REQ = 305,
  CMD_LEAVE_TEAM_RSP = 306,
  CMD_UPDATE_LOBBY_LINEUP_REQ = 307,
  CMD_UPDATE_LOBBY_LINEUP_RSP = 308,
  CMD_SWITCH_MEMBER_STATUS_REQ = 309,
  CMD_SWITCH_MEMBER_STATUS_RSP = 310,
  CMD_LOBBY_STAGE_BEGIN_REQ = 311,
  CMD_LOBBY_STAGE_BEGIN_RSP = 312,
  CMD_LOBBY_STAGE_END_REQ = 313,
  CMD_LOBBY_STAGE_END_RSP = 314,
  CMD_KICK_LOBBY_MEMBER_REQ = 317,
  CMD_KICK_LOBBY_MEMBER_RSP = 318,
  CMD_SET_LOBBY_FAST_ENTRANCE_REQ = 319,
  CMD_SET_LOBBY_FAST_ENTRANCE_RSP = 320,
  CMD_LOBBY_ENTER_FIGHT_ERROR_NOTIFY = 321,
  CMD_LEVEL_UP_STIGMATA_TITLE_REQ = 324,
  CMD_LEVEL_UP_STIGMATA_TITLE_RSP = 325,
  CMD_EVO_STIGMATA_TITLE_REQ = 326,
  CMD_EVO_STIGMATA_TITLE_RSP = 327,
  CMD_INHERIT_STIGMATA_TITLE_REQ = 328,
  CMD_INHERIT_STIGMATA_TITLE_RSP = 329,
  CMD_RESET_STIGMATA_TITLE_REQ = 330,
  CMD_RESET_STIGMATA_TITLE_RSP = 331,
  CMD_PROMOTE_STIGMATA_RUNE_REQ = 332,
  CMD_PROMOTE_STIGMATA_RUNE_RSP = 333,
  CMD_GET_MP_DATA_REQ = 340,
  CMD_GET_MP_DATA_RSP = 341,
  CMD_MP_UPGRADE_SKILL_REQ = 342,
  CMD_MP_UPGRADE_SKILL_RSP = 343,
  CMD_MP_RESET_SKILL_POINT_REQ = 344,
  CMD_MP_RESET_SKILL_POINT_RSP = 345,
  CMD_MP_GET_TEAM_REQ = 346,
  CMD_MP_GET_TEAM_RSP = 347,
  CMD_MP_CREATE_TEAM_REQ = 348,
  CMD_MP_CREATE_TEAM_RSP = 349,
  CMD_MP_ENTER_TEAM_REQ = 350,
  CMD_MP_ENTER_TEAM_RSP = 351,
  CMD_GET_TEAM_BRIEF_INFO_REQ = 352,
  CMD_GET_TEAM_BRIEF_INFO_RSP = 353,
  CMD_MP_KICK_FROM_TEAM_REQ = 354,
  CMD_MP_KICK_FROM_TEAM_RSP = 355,
  CMD_MP_TEAM_ENTER_LOBBY_REQ = 356,
  CMD_MP_TEAM_ENTER_LOBBY_RSP = 357,
  CMD_MP_RAID_RESET_CYCLE_REQ = 360,
  CMD_MP_RAID_RESET_CYCLE_RSP = 361,
  CMD_MP_TEAM_CHANGE_LEADER_REQ = 362,
  CMD_MP_TEAM_CHANGE_LEADER_RSP = 363,
  CMD_GET_GOBACK_REQ = 364,
  CMD_GET_GOBACK_RSP = 365,
  CMD_TAKE_GOBACK_LOGIN_REWARD_REQ = 366,
  CMD_TAKE_GOBACK_LOGIN_REWARD_RSP = 367,
  CMD_GET_MYCARD_AUTH_CODE_REQ = 368,
  CMD_GET_MYCARD_AUTH_CODE_RSP = 369,
  CMD_VERIFY_MYCARD_ORDER_NOTIFY = 370,
  CMD_TEAM_LEADER_CHANGE_NOTIFY = 371,
  CMD_MP_TEAM_LEAVE_LOBBY_REQ = 373,
  CMD_MP_TEAM_LEAVE_LOBBY_RSP = 374,
  CMD_MP_MEMBER_SET_CLIENT_STATUS_REQ = 375,
  CMD_MP_MEMBER_SET_CLIENT_STATUS_RSP = 376,
  CMD_MP_STAGE_END_REQ = 379,
  CMD_MP_STAGE_END_RSP = 380,
  CMD_MP_REPORT_PLAYER_REQ = 381,
  CMD_MP_REPORT_PLAYER_RSP = 382,
  CMD_MP_STAGE_SETTLE_NOTIFY = 391,
  CMD_MP_LIKE_PLAYER_REQ = 392,
  CMD_MP_LIKE_PLAYER_RSP = 393,
  CMD_FRIEND_BOND_NOTIFY = 394,
  CMD_MP_TEAM_SYNC_NOTIFY = 395,
  CMD_MP_TEAM_MEMBER_SET_VOICE_ID_REQ = 396,
  CMD_MP_TEAM_MEMBER_SET_VOICE_ID_RSP = 397,
  CMD_REPORT_CLIENT_DATA_VERSION_REQ = 398,
  CMD_REPORT_CLIENT_DATA_VERSION_RSP = 399,
  UNRECOGNIZED = -1,
}

export enum CmdTypePvz {
  CMD_PVZ_GET_ACTIVITY_REQ = 6550,
  CMD_PVZ_GET_ACTIVITY_RSP = 6551,
  CMD_PVZ_BATTLE_BEGIN_REQ = 6552,
  CMD_PVZ_BATTLE_BEGIN_RSP = 6553,
  CMD_PVZ_BATTLE_END_REQ = 6554,
  CMD_PVZ_BATTLE_END_RSP = 6555,
  CMD_PVZ_QAVATAR_LEVEL_UP_REQ = 6556,
  CMD_PVZ_QAVATAR_LEVEL_UP_RSP = 6557,
  UNRECOGNIZED = -1,
}

export enum CmdTypeQavatarbattle {
  CMD_QAVATAR_BATTLE_BEGIN_NOTIFY = 5550,
  CMD_QAVATAR_BATTLE_SETTLE_NOTIFY = 5551,
  CMD_QAVATAR_BATTLE_GET_LOBBY_INFO_REQ = 5552,
  CMD_QAVATAR_BATTLE_GET_LOBBY_INFO_RSP = 5553,
  CMD_QAVATAR_BATTLE_DATA_NOTIFY = 5600,
  CMD_QAVATAR_BATTLE_ENTER_BATTLE_REQ = 5601,
  CMD_QAVATAR_BATTLE_ENTER_BATTLE_RSP = 5602,
  CMD_QAVATAR_BATTLE_MOVE_NOTIFY = 5603,
  CMD_QAVATAR_BATTLE_START_SKILL_REQ = 5604,
  CMD_QAVATAR_BATTLE_START_SKILL_RSP = 5605,
  CMD_QAVATAR_BATTLE_START_SKILL_NOTIFY = 5606,
  CMD_QAVATAR_BATTLE_END_SKILL_REQ = 5607,
  CMD_QAVATAR_BATTLE_END_SKILL_RSP = 5608,
  CMD_QAVATAR_BATTLE_END_SKILL_NOTIFY = 5609,
  CMD_QAVATAR_BATTLE_SKILL_TRIGGER_NOTIFY = 5610,
  CMD_QAVATAR_BATTLE_COMPONENT_OP_NOTIFY = 5611,
  CMD_QAVATAR_BATTLE_DISCARD_STIGMATA_REQ = 5612,
  CMD_QAVATAR_BATTLE_DISCARD_STIGMATA_RSP = 5613,
  CMD_QAVATAR_BATTLE_GET_DATA_NOTIFY = 5614,
  CMD_QAVATAR_BATTLE_KILL_NOTIFY = 5621,
  CMD_QAVATAR_BATTLE_REFRESH_GADGET_FORECAST_NOTIFY = 5622,
  CMD_QAVATAR_BATTLE_REFRESH_GADGET_GENERATE_NOTIFY = 5623,
  CMD_QAVATAR_BATTLE_END_BATTLE_NOTIFY = 5630,
  CMD_QAVATAR_BATTLE_DUMMY = 5649,
  UNRECOGNIZED = -1,
}

export enum CmdTypeQcandybattle {
  CMD_QCANDY_BATTLE_ENTER_BATTLE_REQ = 6570,
  CMD_QCANDY_BATTLE_ENTER_BATTLE_RSP = 6571,
  CMD_QCANDY_BATTLE_DATA_NOTIFY = 6572,
  CMD_QCANDY_BATTLE_END_NOTIFY = 6573,
  CMD_QCANDY_BATTLE_MOVE_NOTIFY = 6574,
  CMD_QCANDY_BATTLE_CREATE_ENTITY_REQ = 6576,
  CMD_QCANDY_BATTLE_CREATE_ENTITY_RSP = 6577,
  CMD_QCANDY_BATTLE_DELETE_ENTITY_REQ = 6578,
  CMD_QCANDY_BATTLE_DELETE_ENTITY_RSP = 6579,
  CMD_QCANDY_BATTLE_TRIGGER_ENTITY_REQ = 6580,
  CMD_QCANDY_BATTLE_TRIGGER_ENTITY_RSP = 6581,
  CMD_QCANDY_BATTLE_LIFE_TIMES_CHANGE_NOTIFY = 6582,
  CMD_QCANDY_BATTLE_ARRIVE_REQ = 6583,
  CMD_QCANDY_BATTLE_ARRIVE_RSP = 6584,
  CMD_QCANDY_BATTLE_USE_SKILL_REQ = 6585,
  CMD_QCANDY_BATTLE_USE_SKILL_RSP = 6586,
  CMD_QCANDY_BATTLE_PLAYER_USE_SKILL_NOTIFY = 6587,
  CMD_QCANDY_BATTLE_AVATAR_STATE_CLIENT_NOTIFY = 6588,
  CMD_QCANDY_BATTLE_AVATAR_STATE_SERVER_NOTIFY = 6589,
  CMD_QCANDY_BATTLE_SKILL_EFFECT_NOTIFY = 6590,
  CMD_QCANDY_BATTLE_FINISH_BATTLE_NOTIFY = 6591,
  CMD_QCANDY_BATTLE_LEAVE_BATTLE_REQ = 6592,
  CMD_QCANDY_BATTLE_LEAVE_BATTLE_RSP = 6593,
  CMD_QCANDY_BATTLE_LEAVE_BATTLE_NOTIFY = 6594,
  CMD_QCANDY_BATTLE_GET_ACTIVITY_REQ = 6601,
  CMD_QCANDY_BATTLE_GET_ACTIVITY_RSP = 6602,
  CMD_QCANDY_BATTLE_BEGIN_NOTIFY = 6603,
  CMD_QCANDY_BATTLE_CHOOSE_AVATAR_REQ = 6604,
  CMD_QCANDY_BATTLE_CHOOSE_AVATAR_RSP = 6605,
  CMD_QCANDY_BATTLE_UNLOCK_AVATAR_REQ = 6606,
  CMD_QCANDY_BATTLE_UNLOCK_AVATAR_RSP = 6607,
  CMD_QCANDY_BATTLE_SETTLE_BATTLE_NOTIFY = 6608,
  CMD_QCANDY_BATTLE_DUMMY = 6649,
  UNRECOGNIZED = -1,
}

export enum CmdTypeReplay {
  CMD_REPLAY_BEGIN_REQ = 5400,
  CMD_REPLAY_BEGIN_RSP = 5401,
  CMD_REPLAY_END_REQ = 5402,
  CMD_REPLAY_END_RSP = 5403,
  CMD_REPORT_REPLAY_FRAME_REQ = 5404,
  CMD_REPORT_REPLAY_FRAME_RSP = 5405,
  CMD_WATCH_REPLAY_REQ = 5406,
  CMD_WATCH_REPLAY_RSP = 5407,
  CMD_REPLAY_FRAME_NOTIFY = 5408,
  CMD_REPLAY_FRAME_END_NOTIFY = 5409,
  CMD_REPLAY_GET_FILE_TOKEN_REQ = 5410,
  CMD_REPLAY_GET_FILE_TOKEN_RSP = 5411,
  CMD_REPLAY_REPORT_FILE_RESULT_REQ = 5412,
  CMD_REPLAY_REPORT_FILE_RESULT_RSP = 5413,
  CMD_REPLAY_GET_UPLOAD_LIST_REQ = 5414,
  CMD_REPLAY_GET_UPLOAD_LIST_RSP = 5415,
  CMD_REPLAY_GET_RECOMMEND_LIST_REQ = 5416,
  CMD_REPLAY_GET_RECOMMEND_LIST_RSP = 5417,
  CMD_REPLAY_GET_RECOMMEND_BRIEF_REQ = 5418,
  CMD_REPLAY_GET_RECOMMEND_BRIEF_RSP = 5419,
  UNRECOGNIZED = -1,
}

export enum CmdTypeReport {
  CMD_DUMMY = 0,
  UNRECOGNIZED = -1,
}

export enum CmdTypeRoom {
  CMD_GET_ROOM_DATA_REQ = 3150,
  CMD_GET_ROOM_DATA_RSP = 3151,
  CMD_SYNC_ROOM_DATA_NOTIFY = 3152,
  CMD_CREATE_ROOM_REQ = 3153,
  CMD_CREATE_ROOM_RSP = 3154,
  CMD_ENTER_ROOM_REQ = 3155,
  CMD_ENTER_ROOM_RSP = 3156,
  CMD_EXIT_ROOM_REQ = 3157,
  CMD_EXIT_ROOM_RSP = 3158,
  CMD_EXIT_ROOM_NOTIFY = 3159,
  CMD_INVITE_ROOM_REQ = 3160,
  CMD_INVITE_ROOM_RSP = 3161,
  CMD_ROOM_INVITATION_NOTIFY = 3162,
  CMD_SEND_ROOM_CHAT_MSG_NOTIFY = 3163,
  CMD_RECV_ROOM_CHAT_MSG_NOTIFY = 3164,
  CMD_START_ROOM_MATCH_REQ = 3165,
  CMD_START_ROOM_MATCH_RSP = 3166,
  CMD_CANCEL_ROOM_MATCH_REQ = 3167,
  CMD_CANCEL_ROOM_MATCH_RSP = 3168,
  CMD_SYNC_ROOM_MATCH_DATA_NOTIFY = 3169,
  CMD_ROOM_MATCH_TIMEOUT_NOTIFY = 3170,
  CMD_UPDATE_ROOM_INFO_REQ = 3171,
  CMD_UPDATE_ROOM_INFO_RSP = 3172,
  CMD_ROOM_SWITCH_MEMBER_STATUS_REQ = 3173,
  CMD_ROOM_SWITCH_MEMBER_STATUS_RSP = 3174,
  CMD_ROOM_KICK_MEMBER_REQ = 3175,
  CMD_ROOM_KICK_MEMBER_RSP = 3176,
  CMD_ROOM_TRANSFER_LEADER_REQ = 3177,
  CMD_ROOM_TRANSFER_LEADER_RSP = 3178,
  CMD_ROOM_MEMBER_SET_VOICE_ID_REQ = 3179,
  CMD_ROOM_MEMBER_SET_VOICE_ID_RSP = 3180,
  CMD_ROOM_GET_STATUS_REQ = 3181,
  CMD_ROOM_GET_STATUS_RSP = 3182,
  UNRECOGNIZED = -1,
}

export enum CmdTypeRpgdungeon {
  CMD_RPG_DUNGEON_GET_ACTIVITY_REQ = 5500,
  CMD_RPG_DUNGEON_GET_ACTIVITY_RSP = 5501,
  CMD_RPG_DUNGEON_SELECT_QUEST_REQ = 5502,
  CMD_RPG_DUNGEON_SELECT_QUEST_RSP = 5503,
  CMD_RPG_DUNGEON_GET_CANDIDATE_BUFF_REQ = 5504,
  CMD_RPG_DUNGEON_GET_CANDIDATE_BUFF_RSP = 5505,
  CMD_RPG_DUNGEON_SELECT_BUFF_REQ = 5506,
  CMD_RPG_DUNGEON_SELECT_BUFF_RSP = 5507,
  UNRECOGNIZED = -1,
}

export enum CmdTypeRpgtale {
  CMD_GET_RPG_TALE_REQ = 2300,
  CMD_GET_RPG_TALE_RSP = 2301,
  CMD_SYNC_RPG_TALE_SITE_NOTIFY = 2302,
  CMD_ENTER_RPG_TALE_SITE_REQ = 2303,
  CMD_ENTER_RPG_TALE_SITE_RSP = 2304,
  CMD_FINISH_RPG_TALE_PLOT_REQ = 2305,
  CMD_FINISH_RPG_TALE_PLOT_RSP = 2306,
  CMD_UNLOCK_RPG_TALE_SITE_REQ = 2307,
  CMD_UNLOCK_RPG_TALE_SITE_RSP = 2308,
  CMD_TAKE_RPG_TALE_COLLECTION_REWARD_REQ = 2309,
  CMD_TAKE_RPG_TALE_COLLECTION_REWARD_RSP = 2310,
  CMD_RPG_TALE_EVENT_NOTIFY = 2312,
  CMD_TRIGGER_RPG_TALE_EVENT_REQ = 2313,
  CMD_TRIGGER_RPG_TALE_EVENT_RSP = 2314,
  CMD_CHECK_RPG_TALE_STAGE_TRIGGER_REQ = 2315,
  CMD_CHECK_RPG_TALE_STAGE_TRIGGER_RSP = 2316,
  CMD_TRIGGER_RPG_TALE_STAGE_EVENT_REQ = 2317,
  CMD_TRIGGER_RPG_TALE_STAGE_EVENT_RSP = 2318,
  CMD_GET_MATRIX_REQ = 2320,
  CMD_GET_MATRIX_RSP = 2321,
  CMD_GET_MATRIX_FLOOR_REQ = 2322,
  CMD_GET_MATRIX_FLOOR_RSP = 2323,
  CMD_MATRIX_ENTER_REQ = 2324,
  CMD_MATRIX_ENTER_RSP = 2325,
  CMD_MATRIX_ADVANCE_REQ = 2326,
  CMD_MATRIX_ADVANCE_RSP = 2327,
  CMD_SYNC_MATRIX_FLOOR_NOTIFY = 2328,
  CMD_SYNC_MATRIX_NOTIFY = 2329,
  CMD_MATRIX_TRIGGER_EVENT_REQ = 2330,
  CMD_MATRIX_TRIGGER_EVENT_RSP = 2331,
  CMD_MATRIX_CANCEL_EVENT_REQ = 2332,
  CMD_MATRIX_CANCEL_EVENT_RSP = 2333,
  CMD_SYNC_MATRIX_CUR_EVENT_NOTIFY = 2334,
  CMD_MATRIX_EVENT_FINISH_NOTIFY = 2335,
  CMD_FINISH_MATRIX_EVENT_PLOT_REQ = 2336,
  CMD_FINISH_MATRIX_EVENT_PLOT_RSP = 2337,
  CMD_MATRIX_TELEPORT_NOTIFY = 2338,
  CMD_MATRIX_MOVE_OBJECT_REQ = 2339,
  CMD_MATRIX_MOVE_OBJECT_RSP = 2340,
  CMD_MATRIX_RESET_FLOOR_REQ = 2341,
  CMD_MATRIX_RESET_FLOOR_RSP = 2342,
  CMD_MATRIX_SETTLE_FLOOR_EVENT_REQ = 2343,
  CMD_MATRIX_SETTLE_FLOOR_EVENT_RSP = 2344,
  CMD_MATRIX_THROW_DICE_REQ = 2345,
  CMD_MATRIX_THROW_DICE_RSP = 2346,
  CMD_MATRIX_SET_DICE_DESTINATION_REQ = 2347,
  CMD_MATRIX_SET_DICE_DESTINATION_RSP = 2348,
  CMD_MATRIX_GUESS_FINGER_REQ = 2349,
  CMD_MATRIX_GUESS_FINGER_RSP = 2350,
  CMD_MATRIX_SET_LOTTERY_NUM_REQ = 2351,
  CMD_MATRIX_SET_LOTTERY_NUM_RSP = 2352,
  CMD_MATRIX_LOTTERY_DRAW_NOTIFY = 2353,
  CMD_FINISH_RPG_TALE_STAGE_PLOT_REQ = 2370,
  CMD_FINISH_RPG_TALE_STAGE_PLOT_RSP = 2371,
  CMD_REPORT_RPG_TALE_STAGE_REQ = 2374,
  CMD_REPORT_RPG_TALE_STAGE_RSP = 2375,
  CMD_RPG_TALE_SWEEP_REQ = 2376,
  CMD_RPG_TALE_SWEEP_RSP = 2377,
  CMD_GET_RPG_TALE_FILE_REQ = 2378,
  CMD_GET_RPG_TALE_FILE_RSP = 2379,
  CMD_RPG_TALE_REFRESH_TICKET_REQ = 2380,
  CMD_RPG_TALE_REFRESH_TICKET_RSP = 2381,
  CMD_RPG_TALE_LEVEL_UP_ABILITY_REQ = 2382,
  CMD_RPG_TALE_LEVEL_UP_ABILITY_RSP = 2383,
  CMD_RPG_TALE_RESET_TOWER_REQ = 2384,
  CMD_RPG_TALE_RESET_TOWER_RSP = 2385,
  CMD_RPG_TALE_SET_OVERALL_REQ = 2386,
  CMD_RPG_TALE_SET_OVERALL_RSP = 2387,
  CMD_RPG_TALE_REFRESH_SITE_REQ = 2388,
  CMD_RPG_TALE_REFRESH_SITE_RSP = 2389,
  CMD_RPG_TALE_SET_PVP_VIRTUAL_AVATAR_REQ = 2390,
  CMD_RPG_TALE_SET_PVP_VIRTUAL_AVATAR_RSP = 2391,
  CMD_RPG_TALE_GET_PVP_DIVISION_REWARD_REQ = 2392,
  CMD_RPG_TALE_GET_PVP_DIVISION_REWARD_RSP = 2393,
  UNRECOGNIZED = -1,
}

export enum CmdTypeScdlc {
  CMD_GET_SC_DLC_REQ = 6300,
  CMD_GET_SC_DLC_RSP = 6301,
  CMD_UPDATE_SC_DLC_FEVER_SUITE_REQ = 6304,
  CMD_UPDATE_SC_DLC_FEVER_SUITE_RSP = 6305,
  CMD_ACTIVE_SC_DLC_FEVER_SUITE_REQ = 6306,
  CMD_ACTIVE_SC_DLC_FEVER_SUITE_RSP = 6307,
  CMD_ADD_SC_DLC_SUUPORT_NPC_EXP_REQ = 6308,
  CMD_ADD_SC_DLC_SUUPORT_NPC_EXP_RSP = 6309,
  CMD_LEVEL_UP_SC_DLC_AVATAR_REQ = 6310,
  CMD_LEVEL_UP_SC_DLC_AVATAR_RSP = 6311,
  CMD_LEVEL_UP_SC_DLC_TALENT_REQ = 6312,
  CMD_LEVEL_UP_SC_DLC_TALENT_RSP = 6313,
  CMD_EQUIP_SC_DLC_AVATAR_TALENT_REQ = 6314,
  CMD_EQUIP_SC_DLC_AVATAR_TALENT_RSP = 6315,
  CMD_GET_SC_DLC_SELECT_DAILY_QUEST_REQ = 6316,
  CMD_GET_SC_DLC_SELECT_DAILY_QUEST_RSP = 6317,
  CMD_REFRESH_SC_DLC_DAILY_QUEST_REQ = 6318,
  CMD_REFRESH_SC_DLC_DAILY_QUEST_RSP = 6319,
  CMD_ACCEPT_SC_DLC_DAILY_QUEST_REQ = 6320,
  CMD_ACCEPT_SC_DLC_DAILY_QUEST_RSP = 6321,
  CMD_FINISH_SC_DLC_DAILY_QUEST_REQ = 6322,
  CMD_FINISH_SC_DLC_DAILY_QUEST_RSP = 6323,
  CMD_TAKE_SC_DLC_DAILY_QUEST_REWARD_REQ = 6324,
  CMD_TAKE_SC_DLC_DAILY_QUEST_REWARD_RSP = 6325,
  CMD_MODIFY_SC_DLC_NAME_REQ = 6326,
  CMD_MODIFY_SC_DLC_NAME_RSP = 6327,
  CMD_TAKE_SC_DLC_CHALLENGE_REWARD_REQ = 6328,
  CMD_TAKE_SC_DLC_CHALLENGE_REWARD_RSP = 6329,
  CMD_FINISH_SC_DLC_PLOT_REQ = 6330,
  CMD_FINISH_SC_DLC_PLOT_RSP = 6331,
  CMD_GET_SC_DLC_TOWER_REQ = 6332,
  CMD_GET_SC_DLC_TOWER_RSP = 6333,
  CMD_SC_DLC_TOWER_STAGE_BEGIN_REQ = 6334,
  CMD_SC_DLC_TOWER_STAGE_BEGIN_RSP = 6335,
  CMD_SC_DLC_TOWER_STAGE_END_REQ = 6336,
  CMD_SC_DLC_TOWER_STAGE_END_RSP = 6337,
  CMD_GET_SC_DLC_TOWER_RANK_REQ = 6338,
  CMD_GET_SC_DLC_TOWER_RANK_RSP = 6339,
  CMD_SC_DLC_TOWER_SCHEDULE_REWARD_NOTIFY = 6340,
  CMD_SC_DLC_REVIVE_AVATAR_REQ = 6341,
  CMD_SC_DLC_REVIVE_AVATAR_RSP = 6342,
  CMD_SC_DLC_TOWER_REVIVE_AVATAR_REQ = 6343,
  CMD_SC_DLC_TOWER_REVIVE_AVATAR_RSP = 6344,
  CMD_SC_DLC_ACTIVE_FEVER_ABILITY_REQ = 6345,
  CMD_SC_DLC_ACTIVE_FEVER_ABILITY_RSP = 6346,
  CMD_SC_DLC_SWEEP_TOWER_REQ = 6347,
  CMD_SC_DLC_SWEEP_TOWER_RSP = 6348,
  CMD_SCDLC_DUMMY = 6449,
  UNRECOGNIZED = -1,
}

export enum CmdTypeSecurity {
  CMD_UPDATE_CLIENT_SETTING_NOTIFY = 5002,
  CMD_COMMON_CD_CHECK_NOTIFY = 5003,
  CMD_ANTI_ADDICT_NOTIFY = 5004,
  CMD_SENSITIVE_WORD_CHECK_REQ = 5005,
  CMD_SENSITIVE_WORD_CHECK_RSP = 5006,
  CMD_KICK_OUT_PLAYER_NOTIFY = 5007,
  CMD_CLIENT_REPORT_REQ = 5008,
  CMD_CLIENT_REPORT_RSP = 5009,
  CMD_GET_AUTHKEY_REQ = 5010,
  CMD_GET_AUTHKEY_RSP = 5011,
  CMD_CLIENT_REPORT_BIN_REQ = 5012,
  CMD_CLIENT_REPORT_BIN_RSP = 5013,
  CMD_GET_SECURITY_PASSWORD_REQ = 5021,
  CMD_GET_SECURITY_PASSWORD_RSP = 5022,
  CMD_SET_SECURITY_PASSWORD_REQ = 5023,
  CMD_SET_SECURITY_PASSWORD_RSP = 5024,
  CMD_CHANGE_SECURITY_PASSWORD_REQ = 5025,
  CMD_CHANGE_SECURITY_PASSWORD_RSP = 5026,
  CMD_UNLOCK_DEVICE_SECURITY_PASSWORD_REQ = 5027,
  CMD_UNLOCK_DEVICE_SECURITY_PASSWORD_RSP = 5028,
  CMD_SECURITY_PASSWORD_OP_REQ = 5029,
  CMD_SECURITY_PASSWORD_OP_RSP = 5030,
  CMD_RESET_SECURITY_PASSWORD_REQ = 5031,
  CMD_RESET_SECURITY_PASSWORD_RSP = 5032,
  CMD_SECURITY_PASSWORD_REJECTION_NOTIFY = 5033,
  UNRECOGNIZED = -1,
}

export enum CmdTypeSlg {
  CMD_SLG_GET_DATA_REQ = 6050,
  CMD_SLG_GET_DATA_RSP = 6051,
  CMD_SLG_POINT_SWEEP_REQ = 6052,
  CMD_SLG_POINT_SWEEP_RSP = 6053,
  CMD_SLG_BATTLE_MATCH_RSP = 6054,
  CMD_SLG_ENROLL_REQ = 6055,
  CMD_SLG_ENROLL_RSP = 6056,
  CMD_SLG_GET_ACTIVITY_STAMINA_REQ = 6057,
  CMD_SLG_GET_ACTIVITY_STAMINA_RSP = 6058,
  CMD_SLG_TAKE_SCORE_REWARD_REQ = 6059,
  CMD_SLG_TAKE_SCORE_REWARD_RSP = 6060,
  CMD_SLG_BATTLE_ADD_SCORE_FAIL_NOTIFY = 6061,
  CMD_SLG_GET_BATTLE_RANK_REQ = 6062,
  CMD_SLG_GET_BATTLE_RANK_RSP = 6063,
  CMD_SLG_GET_POINT_RANK_REQ = 6064,
  CMD_SLG_GET_POINT_RANK_RSP = 6065,
  CMD_SLG_BATTLE_SETTLE_NOTIFY = 6066,
  CMD_SLG_BROADCAST_NOTIFY = 6068,
  CMD_SLG_MAIN_PAGE_REQ = 6069,
  CMD_SLG_BATTLE_IN_SETTLE_NOTIFY = 6070,
  CMD_SLG_GET_BRIEF_RANK_REQ = 6071,
  CMD_SLG_GET_BRIEF_RANK_RSP = 6072,
  CMD_SLG_DUMMY = 6149,
  UNRECOGNIZED = -1,
}

export enum CmdTypeSwitch {
  CMD_SWITCH_DATA_NOTIFY = 3700,
  CMD_SWITCH_CHANGE_DATA_NOTIFY = 3701,
  UNRECOGNIZED = -1,
}

export enum CmdTypeThree {
  CMD_CHECK_EXTRA_STORY_LOCKED_AVATAR_BIND_EQUIP_REQ = 1000,
  CMD_CHECK_EXTRA_STORY_LOCKED_AVATAR_BIND_EQUIP_RSP = 1001,
  CMD_SWITCH_EXTRA_STORY_LOCKED_AVATAR_BIND_EQUIP_REQ = 1002,
  CMD_SWITCH_EXTRA_STORY_LOCKED_AVATAR_BIND_EQUIP_RSP = 1003,
  CMD_TAKE_DORM_LIKES_DROP_REQ = 1008,
  CMD_TAKE_DORM_LIKES_DROP_RSP = 1009,
  CMD_CHECK_DORM_LIKES_DROP_REQ = 1010,
  CMD_CHECK_DORM_LIKES_DROP_RSP = 1011,
  CMD_GET_WORLD_MAP_DATA_REQ = 1012,
  CMD_GET_WORLD_MAP_DATA_RSP = 1013,
  CMD_GET_MP_STAGE_RECORD_REQ = 1018,
  CMD_GET_MP_STAGE_RECORD_RSP = 1019,
  CMD_LOBBY_SET_CLIENT_STATUS_REQ = 1026,
  CMD_LOBBY_SET_CLIENT_STATUS_RSP = 1027,
  CMD_LOBBY_PREPARE_COUNT_DOWN_NOTIFY = 1028,
  CMD_MP_STAGE_VOTE_COUNT_DOWN_NOTIFY = 1029,
  CMD_MP_STAGE_VOTE_REQ = 1030,
  CMD_MP_STAGE_VOTE_RSP = 1031,
  CMD_MP_STAGE_VOTE_RESULT_NOTIFY = 1032,
  CMD_LOBBY_TIMEOUT_NO_LEADER_NOTIFY = 1033,
  CMD_TAKE_WEEK_DAY_ACTIVITY_RETURN_COIN_REQ = 1034,
  CMD_TAKE_WEEK_DAY_ACTIVITY_RETURN_COIN_RSP = 1035,
  CMD_MP_STAGE_GET_VOTE_INFO_REQ = 1036,
  CMD_MP_STAGE_GET_VOTE_INFO_RSP = 1037,
  CMD_MP_STAGE_MEMBER_VOTE_NOTIFY = 1038,
  CMD_SWITCH_EXTRA_STORY_LINE_ENHANCE_REQ = 1039,
  CMD_SWITCH_EXTRA_STORY_LINE_ENHANCE_RSP = 1040,
  CMD_GET_CHALLENGE_STEP_BONUS_REQ = 1043,
  CMD_GET_CHALLENGE_STEP_BONUS_RSP = 1044,
  CMD_LEAVE_TEAM_NOTIFY = 1101,
  CMD_GET_LOBBY_STAT_REQ = 1102,
  CMD_GET_LOBBY_STAT_RSP = 1103,
  CMD_DISJOIN_FURNITURE_REQ = 1134,
  CMD_DISJOIN_FURNITURE_RSP = 1135,
  CMD_GET_DORM_VOTE_DATA_REQ = 1138,
  CMD_GET_DORM_VOTE_DATA_RSP = 1139,
  CMD_GET_CARD_PRODUCT_INFO_REQ = 1142,
  CMD_GET_CARD_PRODUCT_INFO_RSP = 1143,
  CMD_TAKE_CARD_PRODUCT_DAILY_REWARD_REQ = 1144,
  CMD_TAKE_CARD_PRODUCT_DAILY_REWARD_RSP = 1145,
  CMD_TAKE_CARD_PRODUCT_BONUS_REWARD_REQ = 1146,
  CMD_TAKE_CARD_PRODUCT_BONUS_REWARD_RSP = 1147,
  CMD_CHAT_REPORT_REQ = 1150,
  CMD_CHAT_REPORT_RSP = 1151,
  CMD_CHAT_REPORT_NOTIFY = 1152,
  CMD_CHAT_UNFORBID_NOTIFY = 1153,
  CMD_CHAT_FORBID_NOTIFY = 1154,
  CMD_GET_SHOPPING_MALL_LIST_REQ = 1157,
  CMD_GET_SHOPPING_MALL_LIST_RSP = 1158,
  CMD_GET_CHAT_REPORT_INFO_REQ = 1159,
  CMD_GET_CHAT_REPORT_INFO_RSP = 1160,
  CMD_CHAT_FORBID_SNS_NOTIFY = 1161,
  CMD_RECOVER_CHAT_CREDIT_NOTIFY = 1162,
  CMD_SEND_CHAT_RED_ENVELOPE_REQ = 1163,
  CMD_SEND_CHAT_RED_ENVELOPE_RSP = 1164,
  CMD_TAKE_CHAT_RED_ENVELOPE_REQ = 1165,
  CMD_TAKE_CHAT_RED_ENVELOPE_RSP = 1166,
  CMD_GET_RECLAIM_ACTIVITY_DATA_REQ = 1167,
  CMD_GET_RECLAIM_ACTIVITY_DATA_RSP = 1168,
  CMD_TAKE_RECLAIM_LEVEL_REWARD_REQ = 1169,
  CMD_TAKE_RECLAIM_LEVEL_REWARD_RSP = 1170,
  CMD_SET_RECLAIM_AVATAR_TEAM_REQ = 1171,
  CMD_SET_RECLAIM_AVATAR_TEAM_RSP = 1172,
  CMD_DRESS_RECLAIM_EQUIPMENT_REQ = 1173,
  CMD_DRESS_RECLAIM_EQUIPMENT_RSP = 1174,
  CMD_GET_RECLAIM_RANK_REQ = 1175,
  CMD_GET_RECLAIM_RANK_RSP = 1176,
  CMD_RECLAIM_GACHA_REQ = 1177,
  CMD_RECLAIM_GACHA_RSP = 1178,
  CMD_CHOOSE_RECLAIM_GACHA_REQ = 1179,
  CMD_CHOOSE_RECLAIM_GACHA_RSP = 1180,
  CMD_USE_RECLAIM_ITEM_REQ = 1181,
  CMD_USE_RECLAIM_ITEM_RSP = 1182,
  CMD_GET_PHOTO_DATA_REQ = 1191,
  CMD_GET_PHOTO_DATA_RSP = 1192,
  CMD_GET_WIKI_DATA_REQ = 1193,
  CMD_GET_WIKI_DATA_RSP = 1194,
  CMD_TAKE_WIKI_RATING_REWARD_REQ = 1195,
  CMD_TAKE_WIKI_RATING_REWARD_RSP = 1196,
  CMD_GET_PHONE_PENDANT_DATA_REQ = 1197,
  CMD_GET_PHONE_PENDANT_DATA_RSP = 1198,
  CMD_PHONE_PENDANT_OP_REQ = 1199,
  CMD_PHONE_PENDANT_OP_RSP = 1200,
  CMD_GET_TEAM_LIST_REQ = 1215,
  CMD_GET_TEAM_LIST_RSP = 1216,
  CMD_GET_EMOJI_DATA_REQ = 1245,
  CMD_GET_EMOJI_DATA_RSP = 1246,
  CMD_MP_FAST_MATCH_REQ = 1247,
  CMD_MP_FAST_MATCH_RSP = 1248,
  CMD_GET_SNS_SHOW_DATA_REQ = 1266,
  CMD_GET_SNS_SHOW_DATA_RSP = 1267,
  CMD_GET_CLIENT_SETTING_REQ = 1270,
  CMD_UPDATE_CLIENT_SETTING_REQ = 1271,
  CMD_GET_CLIENT_SETTING_RSP = 1272,
  CMD_GET_OTHER_PLAYER_CLIENT_SETTING_REQ = 1273,
  CMD_GET_OTHER_PLAYER_CLIENT_SETTING_RSP = 1274,
  CMD_GET_RECOMMEND_GOODS_REQ = 1275,
  CMD_GET_RECOMMEND_GOODS_RSP = 1276,
  CMD_GET_SPECIFIC_RECOMMEND_GOODS_REQ = 1277,
  CMD_GET_SPECIFIC_RECOMMEND_GOODS_RSP = 1278,
  CMD_UPDATE_LOBBY_SETTING_REQ = 1365,
  CMD_UPDATE_LOBBY_SETTING_RSP = 1366,
  CMD_EXCHANGE_PURPLE_JADE_REQ = 1367,
  CMD_EXCHANGE_PURPLE_JADE_RSP = 1368,
  CMD_COUPLE_TOWER_ACTIVITY_FINISH_FLOOR_REQ = 1371,
  CMD_COUPLE_TOWER_ACTIVITY_FINISH_FLOOR_RSP = 1372,
  CMD_RELATION_ACTIVITY_DATA_NOTIFY = 1373,
  CMD_GET_BRIEF_DATA_LIST_REQ = 1374,
  CMD_GET_BRIEF_DATA_LIST_RSP = 1375,
  CMD_FINISH_PLOT_REQ = 1378,
  CMD_FINISH_PLOT_RSP = 1379,
  CMD_GET_REGION_UID_RANGE_REQ = 1380,
  CMD_GET_REGION_UID_RANGE_RSP = 1381,
  CMD_GET_PLOT_LIST_REQ = 1382,
  CMD_GET_PLOT_LIST_RSP = 1383,
  CMD_GET_FARM_ACTIVITY_DATA_REQ = 1385,
  CMD_GET_FARM_ACTIVITY_DATA_RSP = 1386,
  CMD_UNLOCK_FARM_SLOT_REQ = 1387,
  CMD_UNLOCK_FARM_SLOT_RSP = 1388,
  CMD_START_FARM_PRODUCE_REQ = 1389,
  CMD_START_FARM_PRODUCE_RSP = 1390,
  CMD_FINISH_FARM_PRODUCE_REQ = 1391,
  CMD_FINISH_FARM_PRODUCE_RSP = 1392,
  CMD_SPEED_UP_FARM_PRODUCE_REQ = 1393,
  CMD_SPEED_UP_FARM_PRODUCE_RSP = 1394,
  CMD_SYNC_FARM_ACTIVITY_DATA_NOTIFY = 1395,
  CMD_AVATAR_ARTIFACT_UNLOCK_REQ = 1444,
  CMD_AVATAR_ARTIFACT_UNLOCK_RSP = 1445,
  CMD_AVATAR_ARTIFACT_LEVEL_UP_REQ = 1446,
  CMD_AVATAR_ARTIFACT_LEVEL_UP_RSP = 1447,
  CMD_TAKE_GOBACK_SCORE_REWARD_REQ = 1448,
  CMD_TAKE_GOBACK_SCORE_REWARD_RSP = 1449,
  CMD_GET_AVATAR_EQUIP_SUITE_REQ = 1454,
  CMD_GET_AVATAR_EQUIP_SUITE_RSP = 1455,
  CMD_SET_AVATAR_EQUIP_SUITE_REQ = 1456,
  CMD_SET_AVATAR_EQUIP_SUITE_RSP = 1457,
  CMD_SELECT_AVATAR_EQUIP_SUITE_REQ = 1458,
  CMD_SELECT_AVATAR_EQUIP_SUITE_RSP = 1459,
  CMD_REFRESH_AND_SYNC_MISSION_NOTIFY = 1473,
  CMD_GET_PRODUCT_RECOMMEND_LIST_REQ = 1478,
  CMD_GET_PRODUCT_RECOMMEND_LIST_RSP = 1479,
  CMD_GET_CURRENCY_EXCHANGE_INFO_REQ = 1480,
  CMD_GET_CURRENCY_EXCHANGE_INFO_RSP = 1481,
  CMD_SET_LEVEL_LOCK_REQ = 1488,
  CMD_SET_LEVEL_LOCK_RSP = 1489,
  CMD_FINISH_FAST_PASS_REQ = 1490,
  CMD_FINISH_FAST_PASS_RSP = 1491,
  CMD_SET_WARSHIP_AVATAR_REQ = 1492,
  CMD_SET_WARSHIP_AVATAR_RSP = 1493,
  CMD_CREATE_ALIPAY_ORDER_REQ = 1494,
  CMD_CREATE_ALIPAY_ORDER_RSP = 1495,
  CMD_SUBSCRIPTION_STATUS_NOTIFY = 1496,
  CMD_GET_CHAT_RED_ENVELOPE_INFO_REQ = 1502,
  CMD_GET_CHAT_RED_ENVELOPE_INFO_RSP = 1503,
  CMD_WANTED_MIRROR_RECOVERY_REQ = 1517,
  CMD_WANTED_MIRROR_RECOVERY_RSP = 1518,
  CMD_GET_RECOMMEND_MISSION_PANEL_LIST_REQ = 1519,
  CMD_GET_RECOMMEND_MISSION_PANEL_LIST_RSP = 1520,
  CMD_GET_CUSTOM_HEAD_DATA_REQ = 1523,
  CMD_GET_CUSTOM_HEAD_DATA_RSP = 1524,
  CMD_SET_CUSTOM_HEAD_REQ = 1525,
  CMD_SET_CUSTOM_HEAD_RSP = 1526,
  CMD_GET_STAGE_BUFF_REQ = 1528,
  CMD_GET_STAGE_BUFF_RSP = 1529,
  CMD_CHOOSE_STAGE_BUFF_REQ = 1530,
  CMD_CHOOSE_STAGE_BUFF_RSP = 1531,
  CMD_TRIGGER_RECOMMEND_GOODS_NOTIFY = 1538,
  CMD_CONFIRM_RECOMMEND_GOODS_REQ = 1539,
  CMD_CONFIRM_RECOMMEND_GOODS_RSP = 1540,
  CMD_GET_STAGE_RECOMMEND_AVATAR_REQ = 1541,
  CMD_GET_STAGE_RECOMMEND_AVATAR_RSP = 1542,
  CMD_SEND_DANMAKU_REQ = 1543,
  CMD_SEND_DANMAKU_RSP = 1544,
  CMD_GET_DANMAKU_LIST_REQ = 1545,
  CMD_GET_DANMAKU_LIST_RSP = 1546,
  CMD_GET_DANMAKU_BRIEF_INFO_REQ = 1547,
  CMD_GET_DANMAKU_BRIEF_INFO_RSP = 1548,
  CMD_IMPEACH_DANMAKU_REQ = 1549,
  CMD_IMPEACH_DANMAKU_RSP = 1550,
  CMD_DANMAKU_BLACKLIST_NOTIFY = 1551,
  CMD_GET_TEAM_STATUS_REQ = 1553,
  CMD_GET_TEAM_STATUS_RSP = 1554,
  CMD_GET_FAST_PASS_DATA_REQ = 1555,
  CMD_GET_FAST_PASS_DATA_RSP = 1556,
  CMD_GET_PLAYER_ONLINE_STATUS_REQ = 1576,
  CMD_GET_PLAYER_ONLINE_STATUS_RSP = 1577,
  CMD_MP_SYNC_ACTION_FROM_PLAYER_NOTIFY = 1579,
  CMD_MP_SYNC_ACTION_FROM_SERVER_NOTIFY = 1580,
  CMD_VERIFY_SAMSUNG_ORDER_NOTIFY = 1581,
  CMD_GLOBAL_SHOP_GOODS_INFO_NOTIFY = 1583,
  CMD_GET_CLIENT_DATA_REQ = 1586,
  CMD_GET_CLIENT_DATA_RSP = 1587,
  CMD_SET_CLIENT_DATA_REQ = 1588,
  CMD_SET_CLIENT_DATA_RSP = 1589,
  CMD_JIGUANG_UPDATE_TAG_REQ = 1590,
  CMD_JIGUANG_UPDATE_TAG_RSP = 1591,
  CMD_WIKI_TAKE_ACTIVITY_SUIT_REWARD_REQ = 1592,
  CMD_WIKI_TAKE_ACTIVITY_SUIT_REWARD_RSP = 1593,
  CMD_GET_BLACK_LIST_REQ = 1594,
  CMD_GET_BLACK_LIST_RSP = 1595,
  CMD_ADD_TO_BLACK_LIST_REQ = 1596,
  CMD_ADD_TO_BLACK_LIST_RSP = 1597,
  CMD_DEL_FROM_BLACK_LIST_REQ = 1598,
  CMD_DEL_FROM_BLACK_LIST_RSP = 1599,
  CMD_DEBUG_HOT_PATCH_FILE_NOTIFY = 1600,
  CMD_GET_WEB_ACTIVITY_INFO_REQ = 1601,
  CMD_GET_WEB_ACTIVITY_INFO_RSP = 1602,
  CMD_GET_MINI_RANK_REQ = 1603,
  CMD_GET_MINI_RANK_RSP = 1604,
  CMD_CHARGE_ACTIVITY_BUFF_REQ = 1605,
  CMD_CHARGE_ACTIVITY_BUFF_RSP = 1606,
  CMD_LOGIN_WISH_GET_MAIN_DATA_REQ = 1607,
  CMD_LOGIN_WISH_GET_MAIN_DATA_RSP = 1608,
  CMD_LOGIN_WISH_TAKE_LOGIN_REWARD_REQ = 1609,
  CMD_LOGIN_WISH_TAKE_LOGIN_REWARD_RSP = 1610,
  CMD_LOGIN_WISH_TAKE_SPECIAL_REWARD_REQ = 1611,
  CMD_LOGIN_WISH_TAKE_SPECIAL_REWARD_RSP = 1612,
  CMD_LOGIN_WISH_MAKE_WISH_REQ = 1613,
  CMD_LOGIN_WISH_MAKE_WISH_RSP = 1614,
  CMD_LOGIN_WISH_TAKE_WISH_REWARD_REQ = 1615,
  CMD_LOGIN_WISH_TAKE_WISH_REWARD_RSP = 1616,
  CMD_GET_SINGLE_SHOP_WITHOUT_REFRESH_REQ = 1617,
  CMD_GET_SINGLE_SHOP_WITHOUT_REFRESH_RSP = 1618,
  CMD_DEV_LEVEL_CHANGE_NOTIFY = 1619,
  CMD_DEL_AVATAR_EQUIP_SUITE_REQ = 1620,
  CMD_DEL_AVATAR_EQUIP_SUITE_RSP = 1621,
  CMD_GET_RAID_ACTIVE_INFO_REQ = 1622,
  CMD_GET_RAID_ACTIVE_INFO_RSP = 1623,
  CMD_ACTIVE_RAID_REQ = 1624,
  CMD_ACTIVE_RAID_RSP = 1625,
  CMD_CLIENT_CHECK_NETWORK_ENV_REQ = 1626,
  CMD_CLIENT_CHECK_NETWORK_ENV_RSP = 1627,
  CMD_GET_STAGE_RECOMMEND_AVATAR_COURSE_INFO_REQ = 1630,
  CMD_GET_STAGE_RECOMMEND_AVATAR_COURSE_INFO_RSP = 1631,
  CMD_GET_MISSION_STEP_COMPENSATION_INFO_REQ = 1632,
  CMD_GET_MISSION_STEP_COMPENSATION_INFO_RSP = 1633,
  CMD_TAKE_MISSION_STEP_COMPENSATION_REQ = 1634,
  CMD_TAKE_MISSION_STEP_COMPENSATION_RSP = 1635,
  CMD_GET_ELITE_CHAPTER_COMPENSATION_INFO_REQ = 1636,
  CMD_GET_ELITE_CHAPTER_COMPENSATION_INFO_RSP = 1637,
  CMD_TAKE_ELITE_CHAPTER_COMPENSATION_REQ = 1638,
  CMD_TAKE_ELITE_CHAPTER_COMPENSATION_RSP = 1639,
  CMD_TAKE_NEWBIE_PRIVILEGE_REWARD_REQ = 1640,
  CMD_TAKE_NEWBIE_PRIVILEGE_REWARD_RSP = 1641,
  CMD_UNLOCK_PRIVILEGE_REQ = 1642,
  CMD_UNLOCK_PRIVILEGE_RSP = 1643,
  CMD_MP_SET_EXTRA_SKILL_REQ = 1644,
  CMD_MP_SET_EXTRA_SKILL_RSP = 1645,
  CMD_GET_PRIVILEGE_INFO_REQ = 1646,
  CMD_GET_PRIVILEGE_INFO_RSP = 1647,
  CMD_CREATE_STEAM_ORDER_REQ = 1648,
  CMD_CREATE_STEAM_ORDER_RSP = 1649,
  CMD_VERIFY_STEAM_ORDER_NOTIFY = 1650,
  CMD_UNLOCK_GOBACK_FUND_REQ = 1651,
  CMD_UNLOCK_GOBACK_FUND_RSP = 1652,
  CMD_TAKE_GOBACK_FUND_REWARD_REQ = 1653,
  CMD_TAKE_GOBACK_FUND_REWARD_RSP = 1654,
  CMD_EX_BOSS_SWEEP_REQ = 1655,
  CMD_EX_BOSS_SWEEP_RSP = 1656,
  CMD_EX_BOSS_TAKE_BOSS_SCORE_REWARD_NOTIFY = 1657,
  CMD_BIND_HOYOLAB_ACCOUNT_REQ = 1658,
  CMD_BIND_HOYOLAB_ACCOUNT_RSP = 1659,
  CMD_CHAPTER_GROUP_GET_DATA_REQ = 1660,
  CMD_CHAPTER_GROUP_GET_DATA_RSP = 1661,
  CMD_WEEK_DAY_ACTIVITY_SWEEP_REQ = 1664,
  CMD_WEEK_DAY_ACTIVITY_SWEEP_RSP = 1665,
  CMD_GET_WEEK_DAY_ACTIVITY_COMPENSATION_INFO_REQ = 1666,
  CMD_GET_WEEK_DAY_ACTIVITY_COMPENSATION_INFO_RSP = 1667,
  CMD_TAKE_WEEK_DAY_ACTIVITY_COMPENSATION_REQ = 1668,
  CMD_TAKE_WEEK_DAY_ACTIVITY_COMPENSATION_RSP = 1669,
  CMD_REQUEST_LOGOFF_REQ = 1670,
  CMD_REQUEST_LOGOFF_RSP = 1671,
  CMD_GET_CHAPTER_COMPENSATION_INFO_REQ = 1672,
  CMD_GET_CHAPTER_COMPENSATION_INFO_RSP = 1673,
  CMD_TAKE_CHAPTER_COMPENSATION_REQ = 1674,
  CMD_TAKE_CHAPTER_COMPENSATION_RSP = 1675,
  CMD_GET_CHALLENGE_STEP_COMPENSATION_INFO_REQ = 1676,
  CMD_GET_CHALLENGE_STEP_COMPENSATION_INFO_RSP = 1677,
  CMD_TAKE_CHALLENGE_STEP_COMPENSATION_REQ = 1678,
  CMD_TAKE_CHALLENGE_STEP_COMPENSATION_RSP = 1679,
  CMD_GET_SPECIFIC_RANK_REQ = 1684,
  CMD_GET_SPECIFIC_RANK_RSP = 1685,
  CMD_GET_INVITE_ACTIVITY_INVITER_DATA_REQ = 1690,
  CMD_GET_INVITE_ACTIVITY_INVITER_DATA_RSP = 1691,
  CMD_TAKE_INVITE_ACTIVITY_INVITER_PROGRESS_REWARD_REQ = 1692,
  CMD_TAKE_INVITE_ACTIVITY_INVITER_PROGRESS_REWARD_RSP = 1693,
  CMD_GET_INVITE_ACTIVITY_INVITEE_DATA_REQ = 1694,
  CMD_GET_INVITE_ACTIVITY_INVITEE_DATA_RSP = 1695,
  CMD_INVITE_ACTIVITY_ACCEPT_INVITE_REQ = 1696,
  CMD_INVITE_ACTIVITY_ACCEPT_INVITE_RSP = 1697,
  CMD_THREE_DEAD_LINE = 1999,
  UNRECOGNIZED = -1,
}

export enum CmdTypeTile {
  CMD_GET_TILE_MAP_REQ = 4900,
  CMD_GET_TILE_MAP_RSP = 4901,
  CMD_TILE_UPDATE_MAP_REQ = 4902,
  CMD_TILE_UPDATE_MAP_RSP = 4903,
  CMD_TILE_GET_TOWER_REQ = 4904,
  CMD_TILE_GET_TOWER_RSP = 4905,
  CMD_TILE_ENTER_REQ = 4906,
  CMD_TILE_ENTER_RSP = 4907,
  CMD_TILE_SAVE_PROGRESS_REQ = 4908,
  CMD_TILE_SAVE_PROGRESS_RSP = 4909,
  CMD_TILE_SETTLE_EVENT_REQ = 4910,
  CMD_TILE_SETTLE_EVENT_RSP = 4911,
  CMD_TILE_RESET_FLOOR_REQ = 4912,
  CMD_TILE_RESET_FLOOR_RSP = 4913,
  CMD_TILE_ENTITY_OP_NOTIFY = 4914,
  CMD_TILE_SELECT_PATH_REQ = 4915,
  CMD_TILE_SELECT_PATH_RSP = 4916,
  CMD_TILE_RESET_REGION_REQ = 4917,
  CMD_TILE_RESET_REGION_RSP = 4918,
  CMD_TILE_REPORT_SAVED_POSITION_REQ = 4919,
  CMD_TILE_REPORT_SAVED_POSITION_RSP = 4920,
  CMD_TILE_LOAD_SAVED_POSITION_REQ = 4921,
  CMD_TILE_LOAD_SAVED_POSITION_RSP = 4922,
  CMD_TILE_MAP_UPDATE_NOTIFY = 4923,
  UNRECOGNIZED = -1,
}

export enum CmdTypeTown {
  CMD_TOWN_ACTIVITY_GET_DATA_REQ = 6450,
  CMD_TOWN_ACTIVITY_GET_DATA_RSP = 6451,
  CMD_TOWN_ACTIVITY_SAVE_REQ = 6452,
  CMD_TOWN_ACTIVITY_SAVE_RSP = 6453,
  CMD_TOWN_ACTIVITY_BUILD_REQ = 6454,
  CMD_TOWN_ACTIVITY_BUILD_RSP = 6455,
  CMD_TOWN_ACTIVITY_BATTLE_REQ = 6456,
  CMD_TOWN_ACTIVITY_BATTLE_RSP = 6457,
  CMD_TOWN_ACTIVITY_SELL_BUILDING_REQ = 6458,
  CMD_TOWN_ACTIVITY_SELL_BUILDING_RSP = 6459,
  CMD_TOWN_ACTIVITY_HEAL_AVATAR_REQ = 6460,
  CMD_TOWN_ACTIVITY_HEAL_AVATAR_RSP = 6461,
  CMD_TOWN_ACTIVITY_SELL_BRICK_REQ = 6462,
  CMD_TOWN_ACTIVITY_SELL_BRICK_RSP = 6463,
  CMD_TOWN_ACTIVITY_END_NOTIFY = 6464,
  CMD_TOWN_ACTIVITY_BOSS_ATTACK_NOTIFY = 6465,
  CMD_TOWN_ACTIVITY_GET_SHOP_REQ = 6466,
  CMD_TOWN_ACTIVITY_GET_SHOP_RSP = 6467,
  CMD_TOWN_ACTIVITY_SHOP_BUY_REQ = 6468,
  CMD_TOWN_ACTIVITY_SHOP_BUY_RSP = 6469,
  CMD_TOWN_ACTIVITY_MATERIAL_USE_REQ = 6470,
  CMD_TOWN_ACTIVITY_MATERIAL_USE_RSP = 6471,
  CMD_TOWN_ACTIVITY_SPEED_UP_HEAL_REQ = 6472,
  CMD_TOWN_ACTIVITY_SPEED_UP_HEAL_RSP = 6473,
  CMD_TOWN_ACTIVITY_CHECK_IN_OPTIONAL_REQ = 6474,
  CMD_TOWN_ACTIVITY_CHECK_IN_OPTIONAL_RSP = 6475,
  CMD_TOWN_ACTIVITY_RESET_REQ = 6476,
  CMD_TOWN_ACTIVITY_RESET_RSP = 6477,
  CMD_TOWN_ACTIVITY_ALTER_PATH_REQ = 6478,
  CMD_TOWN_ACTIVITY_ALTER_PATH_RSP = 6479,
  CMD_TOWN_ACTIVITY_ATTACK_ENEMY_BUFF_NOTIFY = 6480,
  CMD_TOWN_ACTIVITY_REFRESH_BRICK_REQ = 6481,
  CMD_TOWN_ACTIVITY_REFRESH_BRICK_RSP = 6482,
  UNRECOGNIZED = -1,
}

export enum CmdTypeTvt {
  CMD_GET_TVT_ACTIVITY_REQ = 3300,
  CMD_GET_TVT_ACTIVITY_RSP = 3301,
  CMD_GET_TVT_BATTLE_HISTORY_REQ = 3302,
  CMD_GET_TVT_BATTLE_HISTORY_RSP = 3303,
  CMD_SYNC_TVT_MEMBER_IN_ROOM_NOTIFY = 3304,
  CMD_TVT_TAKE_MISSION_GROUP_REWARD_REQ = 3305,
  CMD_TVT_TAKE_MISSION_GROUP_REWARD_RSP = 3306,
  CMD_TVT_GET_STAGE_SCHEDULE_REQ = 3307,
  CMD_TVT_GET_STAGE_SCHEDULE_RSP = 3308,
  CMD_TVT_CARD_GET_DATA_REQ = 3309,
  CMD_TVT_CARD_GET_DATA_RSP = 3310,
  CMD_TVT_CARD_LEVELUP_REQ = 3311,
  CMD_TVT_CARD_LEVELUP_RSP = 3312,
  CMD_TVT_CARD_UPDATE_SUITE_REQ = 3313,
  CMD_TVT_CARD_UPDATE_SUITE_RSP = 3314,
  CMD_TVT_CARD_TAKE_SEASON_RETURN_REQ = 3315,
  CMD_TVT_CARD_TAKE_SEASON_RETURN_RSP = 3316,
  CMD_TVT_CARD_TRANSFORM_MATERIAL_REQ = 3317,
  CMD_TVT_CARD_TRANSFORM_MATERIAL_RSP = 3318,
  CMD_SYNC_TVT_BATTLE_INFO_NOTIFY = 3350,
  CMD_TVT_BATTLE_MEMBER_PREPARE_NOTIFY = 3351,
  CMD_TVT_BATTLE_BEGIN_NOTIFY = 3352,
  CMD_TVT_BATTLE_END_NOTIFY = 3353,
  CMD_TVT_BATTLE_SETTLE_NOTIFY = 3354,
  CMD_REPORT_TVT_BATTLE_STAGE_MESSAGE_NOTIFY = 3355,
  CMD_SYNC_TVT_BATTLE_STAGE_MESSAGE_NOTIFY = 3356,
  CMD_EXIT_TVT_BATTLE_NOTIFY = 3357,
  CMD_TVT_BATTLE_CLIENT_REPORT_NOTIFY = 3358,
  CMD_TVT_ENTER_SHOP_REQ = 3359,
  CMD_TVT_ENTER_SHOP_RSP = 3360,
  CMD_TVT_BATTLE_CONFIRM_NOTIFY = 3361,
  CMD_TVT_UPDATE_LINEUP_INFO_NOTIFY = 3362,
  CMD_TVT_BATTLE_ROBOT_SETTLE_NOTIFY = 3363,
  CMD_TVT_DUMMY = 3399,
  UNRECOGNIZED = -1,
}

export enum CmdTypeTwo {
  CMD_GET_MEDAL_DATA_REQ = 449,
  CMD_GET_MEDAL_DATA_RSP = 450,
  CMD_MEDAL_OP_REQ = 451,
  CMD_MEDAL_OP_RSP = 452,
  CMD_GET_CLEAR_STAGE_ACTIVITY_REQ = 453,
  CMD_GET_CLEAR_STAGE_ACTIVITY_RSP = 454,
  CMD_FINISH_CLEAR_STAGE_ACTIVITY_NOTIFY = 455,
  CMD_GET_STAGE_ACT_DIFFICULTY_REQ = 456,
  CMD_GET_STAGE_ACT_DIFFICULTY_RSP = 457,
  CMD_TAKE_STAGE_ACT_CHALLENGE_REWARD_REQ = 458,
  CMD_TAKE_STAGE_ACT_CHALLENGE_REWARD_RSP = 459,
  CMD_TAKE_ACTIVITY_CHALLENGE_REWARD_REQ = 460,
  CMD_TAKE_ACTIVITY_CHALLENGE_REWARD_RSP = 461,
  CMD_GET_PEDIA_REQ = 464,
  CMD_GET_PEDIA_RSP = 465,
  CMD_MP_GET_MATCH_INFO_REQ = 466,
  CMD_MP_GET_MATCH_INFO_RSP = 467,
  CMD_MP_CANCEL_MATCH_REQ = 468,
  CMD_MP_CANCEL_MATCH_RSP = 469,
  CMD_MP_GET_LOBBY_RECOMMEND_REQ = 470,
  CMD_MP_GET_LOBBY_RECOMMEND_RSP = 471,
  CMD_GET_BUFF_EFFECT_REQ = 476,
  CMD_GET_BUFF_EFFECT_RSP = 477,
  CMD_EQUIP_SYNTHESIS_REQ = 478,
  CMD_EQUIP_SYNTHESIS_RSP = 479,
  CMD_GET_PLAYER_CARD_REQ = 480,
  CMD_GET_PLAYER_CARD_RSP = 481,
  CMD_CHANGE_PLAYER_CARD_REQ = 482,
  CMD_CHANGE_PLAYER_CARD_RSP = 483,
  CMD_GET_SIMULATE_ACTIVITY_REQ = 484,
  CMD_GET_SIMULATE_ACTIVITY_RSP = 485,
  CMD_SEND_PLAYER_CARD_MSG = 486,
  CMD_RECV_PLAYER_CARD_MSG = 487,
  CMD_DEL_PLAYER_CARD_MSG_REQ = 489,
  CMD_GET_OTHER_PLAYER_CARD_DATA_REQ = 490,
  CMD_GET_OTHER_PLAYER_CARD_DATA_RSP = 491,
  CMD_CHANGE_PLAYER_CARD_DATA_NOTIFY = 492,
  CMD_SEND_PLAYER_CARD_MSG_RSP = 493,
  CMD_GET_BOSS_RUSH_ACTIVITY_REQ = 496,
  CMD_GET_BOSS_RUSH_ACTIVITY_RSP = 497,
  CMD_CHOOSE_BOSS_RUSH_BUFF_REQ = 498,
  CMD_CHOOSE_BOSS_RUSH_BUFF_RSP = 499,
  CMD_GET_DELETE_MATERIAL_REQ = 500,
  CMD_GET_DELETE_MATERIAL_RSP = 501,
  CMD_GET_EXTRA_STORY_CHALLENGE_MODE_DATA_REQ = 502,
  CMD_GET_EXTRA_STORY_CHALLENGE_MODE_DATA_RSP = 503,
  CMD_RESET_EXTRA_STORY_CHALLENGE_MODE_REQ = 504,
  CMD_RESET_EXTRA_STORY_CHALLENGE_MODE_RSP = 505,
  CMD_GET_GRAND_KEY_REQ = 506,
  CMD_GET_GRAND_KEY_RSP = 507,
  CMD_GET_EX_BOSS_SCHEDULE_REQ = 508,
  CMD_GET_EX_BOSS_SCHEDULE_RSP = 509,
  CMD_GET_EX_BOSS_INFO_REQ = 510,
  CMD_GET_EX_BOSS_INFO_RSP = 511,
  CMD_TAKE_EX_BOSS_RANK_REWARD_NOTIFY = 516,
  CMD_GET_NEW_CONSIGNED_ORDER_DATA_REQ = 517,
  CMD_GET_NEW_CONSIGNED_ORDER_DATA_RSP = 518,
  CMD_GET_CONSIGNED_REWARD_REQ = 519,
  CMD_GET_CONSIGNED_REWARD_RSP = 520,
  CMD_CHOOSE_CONSIGNED_REWARD_REQ = 521,
  CMD_CHOOSE_CONSIGNED_REWARD_RSP = 522,
  CMD_TAKE_CONSIGNED_REWARD_REQ = 523,
  CMD_TAKE_CONSIGNED_REWARD_RSP = 524,
  CMD_GET_CONSIGNED_REWARD_LOG_REQ = 525,
  CMD_GET_CONSIGNED_REWARD_LOG_RSP = 526,
  CMD_GET_EX_BOSS_RANK_REQ = 527,
  CMD_GET_EX_BOSS_RANK_RSP = 528,
  CMD_EX_BOSS_STAGE_BEGIN_REQ = 529,
  CMD_EX_BOSS_STAGE_BEGIN_RSP = 530,
  CMD_EX_BOSS_STAGE_END_REQ = 531,
  CMD_EX_BOSS_STAGE_END_RSP = 532,
  CMD_TAKE_EX_BOSS_SCORE_REWARD_NOTIFY = 533,
  CMD_OPEN_WEEK_DAY_ACTIVITY_REQ = 534,
  CMD_OPEN_WEEK_DAY_ACTIVITY_RSP = 535,
  CMD_GET_CHALLENGE_STEP_REWARD_REQ = 536,
  CMD_GET_CHALLENGE_STEP_REWARD_RSP = 537,
  CMD_ADD_TECH_EXP_REQ = 538,
  CMD_ADD_TECH_EXP_RSP = 539,
  CMD_TAKE_TECH_COLLECT_REWARD_REQ = 540,
  CMD_TAKE_TECH_COLLECT_REWARD_RSP = 541,
  CMD_GET_MINUTE_STAGE_REQ = 542,
  CMD_GET_MINUTE_STAGE_RSP = 543,
  CMD_GET_MINUTE_TIMES_REQ = 544,
  CMD_GET_MINUTE_TIMES_RSP = 545,
  CMD_GET_RAID_RANK_REQ = 549,
  CMD_GET_RAID_RANK_RSP = 550,
  CMD_GET_RAID_SPECIAL_REWARD_REQ = 551,
  CMD_GET_RAID_SPECIAL_REWARD_RSP = 552,
  CMD_MATERIAL_DELETE_RETURN_REQ = 553,
  CMD_ARMADA_BOSS_GET_MP_STATUS_REQ = 554,
  CMD_ARMADA_BOSS_GET_MP_STATUS_RSP = 555,
  CMD_TAKE_DAILY_COMPENSATION_REWARD_REQ = 564,
  CMD_TAKE_DAILY_COMPENSATION_REWARD_RSP = 565,
  CMD_AS_MASTER_PUPIL_CARD_REQ = 566,
  CMD_AS_MASTER_PUPIL_CARD_RSP = 567,
  CMD_GET_MASTER_PUPIL_DATA_REQ = 568,
  CMD_GET_MASTER_PUPIL_DATA_RSP = 569,
  CMD_ASK_FOR_MASTER_PUPIL_REQ = 570,
  CMD_ASK_FOR_MASTER_PUPIL_RSP = 571,
  CMD_DEAL_MASTER_PUPIL_REQ = 572,
  CMD_DEAL_MASTER_PUPIL_RSP = 573,
  CMD_MASTER_PUPIL_EVA_REQ = 574,
  CMD_MASTER_PUPIL_EVA_RSP = 575,
  CMD_GET_MASTER_FAME_REWARD_REQ = 576,
  CMD_GET_MASTER_FAME_REWARD_RSP = 577,
  CMD_MASTER_PUPIL_CARD_REPORT_REQ = 578,
  CMD_SELECT_AVATAR_SUITE_REQ = 580,
  CMD_SELECT_AVATAR_SUITE_RSP = 581,
  CMD_AVATAR_SUITE_SELECTION_NOTIFY = 582,
  CMD_ACTIVATE_TRIAL_AVATAR_REQ = 583,
  CMD_ACTIVATE_TRIAL_AVATAR_RSP = 584,
  CMD_GET_TRIAL_AVATAR_REQ = 585,
  CMD_GET_TRIAL_AVATAR_RSP = 586,
  CMD_GET_MASTER_PUPIL_CARD_REQ = 587,
  CMD_GET_MASTER_PUPIL_CARD_RSP = 588,
  CMD_MASTER_PUPIL_NOTIFY = 589,
  CMD_GET_FRAME_DATA_REQ = 590,
  CMD_GET_FRAME_DATA_RSP = 591,
  CMD_SET_USE_FRAME_REQ = 592,
  CMD_SET_USE_FRAME_RSP = 593,
  CMD_GET_SEALED_MODE_SCHEDULE_REQ = 594,
  CMD_GET_SEALED_MODE_SCHEDULE_RSP = 595,
  CMD_GET_SEALED_MODE_INFO_REQ = 596,
  CMD_GET_SEALED_MODE_INFO_RSP = 597,
  CMD_SEALED_MODE_START_SELECTION_REQ = 598,
  CMD_SEALED_MODE_START_SELECTION_RSP = 599,
  CMD_GET_DORM_DATA_REQ = 601,
  CMD_GET_DORM_DATA_RSP = 602,
  CMD_GET_DORM_HOUSE_REQ = 603,
  CMD_GET_DORM_HOUSE_RSP = 604,
  CMD_EDIT_DORM_ROOM_REQ = 605,
  CMD_EDIT_DORM_ROOM_RSP = 606,
  CMD_GET_DEPOT_FURNITURE_REQ = 607,
  CMD_GET_DEPOT_FURNITURE_RSP = 608,
  CMD_UNLOCK_DORM_HOUSE_REQ = 609,
  CMD_UNLOCK_DORM_HOUSE_RSP = 610,
  CMD_SET_DORM_AVATAR_REQ = 611,
  CMD_SET_DORM_AVATAR_RSP = 612,
  CMD_LEVEL_UP_DORM_REQ = 613,
  CMD_LEVEL_UP_DORM_RSP = 614,
  CMD_SET_DORM_NAME_REQ = 615,
  CMD_SET_DORM_NAME_RSP = 616,
  CMD_FINISH_DORM_EVENT_REQ = 617,
  CMD_FINISH_DORM_EVENT_RSP = 618,
  CMD_GET_HAS_GOT_FURNITURE_ID_LIST_REQ = 619,
  CMD_GET_HAS_GOT_FURNITURE_ID_LIST_RSP = 620,
  CMD_BUY_FURNITURE_REQ = 621,
  CMD_BUY_FURNITURE_RSP = 622,
  CMD_GET_OTHER_DORM_DATA_REQ = 633,
  CMD_GET_OTHER_DORM_DATA_RSP = 634,
  CMD_SET_DORM_SNS_INFO_REQ = 635,
  CMD_SET_DORM_SNS_INFO_RSP = 636,
  CMD_GET_DORM_SNS_DATA_REQ = 637,
  CMD_GET_DORM_SNS_DATA_RSP = 638,
  CMD_LIKE_DORM_REQ = 639,
  CMD_LIKE_DORM_RSP = 640,
  CMD_FINISH_DORM_TALK_REQ = 641,
  CMD_FINISH_DORM_TALK_RSP = 642,
  CMD_GET_AVATAR_ROLL_DATA_REQ = 643,
  CMD_GET_AVATAR_ROLL_DATA_RSP = 644,
  CMD_TAKE_ROLL_REWARD_REQ = 645,
  CMD_TAKE_ROLL_REWARD_RSP = 646,
  CMD_CLAIM_STAMINA_REQ = 649,
  CMD_CLAIM_STAMINA_RSP = 650,
  CMD_GET_PUPIL_MISSION_REQ = 651,
  CMD_GET_PUPIL_MISSION_RSP = 652,
  CMD_GET_MASTER_PUPIL_APPLY_REQ = 653,
  CMD_GET_MASTER_PUPIL_APPLY_RSP = 654,
  CMD_GET_RECOMMEND_MASTER_PUPIL_REQ = 655,
  CMD_GET_RECOMMEND_MASTER_PUPIL_RSP = 656,
  CMD_GET_MASTER_PUPIL_MAIN_DATA_REQ = 657,
  CMD_GET_MASTER_PUPIL_MAIN_DATA_RSP = 658,
  CMD_GET_PUPIL_EVAL_DATA_REQ = 659,
  CMD_GET_PUPIL_EVAL_DATA_RSP = 660,
  CMD_REPORT_CLICK_RECHARGE_BUTTON_NOTIFY = 661,
  CMD_GET_MASTER_RANK_REQ = 662,
  CMD_GET_MASTER_RANK_RSP = 663,
  CMD_GET_OTHER_MASTER_PUPIL_REQ = 664,
  CMD_GET_OTHER_MASTER_PUPIL_RSP = 665,
  CMD_UNLOCK_FURNITURE_REQ = 680,
  CMD_UNLOCK_FURNITURE_RSP = 681,
  CMD_SEALED_MODE_START_MATCH_REQ = 701,
  CMD_SEALED_MODE_START_MATCH_RSP = 702,
  CMD_SEALED_MODE_GET_MATCH_INFO_REQ = 703,
  CMD_SEALED_MODE_GET_MATCH_INFO_RSP = 704,
  CMD_SEALED_MODE_CANCEL_MATCH_REQ = 705,
  CMD_SEALED_MODE_CANCEL_MATCH_RSP = 706,
  CMD_SEALED_MODE_EXCHANGE_AVATAR_REQ = 707,
  CMD_SEALED_MODE_EXCHANGE_AVATAR_RSP = 708,
  CMD_SEALED_MODE_UPDATE_SCORE_REQ = 709,
  CMD_SEALED_MODE_UPDATE_SCORE_RSP = 710,
  CMD_SEALED_MODE_PLAYER_SCORE_NOTIFY = 711,
  CMD_SEALED_MODE_RECEIVE_ITEM_NOTIFY = 712,
  CMD_SEALED_MODE_USE_ITEM_REQ = 713,
  CMD_SEALED_MODE_USE_ITEM_RSP = 714,
  CMD_SEALED_MODE_SYNC_LEVEL_INFO_REQ = 715,
  CMD_SEALED_MODE_SYNC_LEVEL_INFO_RSP = 716,
  CMD_SEALED_MODE_SETTLE_NOTIFY = 717,
  CMD_SEALED_MODE_WINNER_NOTIFY = 718,
  CMD_SEALED_MODE_BATTLE_BEGIN_NOTIFY = 719,
  CMD_SEALED_MODE_GET_PLAYER_STATUS_REQ = 720,
  CMD_SEALED_MODE_GET_PLAYER_STATUS_RSP = 721,
  CMD_SEALED_MODE_USE_TICKET_REQ = 722,
  CMD_SEALED_MODE_USE_TICKET_RSP = 723,
  CMD_SEALED_MODE_GET_RANK_INFO_REQ = 724,
  CMD_SEALED_MODE_GET_RANK_INFO_RSP = 725,
  CMD_SEALED_MODE_RANK_LEVEL_REWARD_NOTIFY = 726,
  CMD_SEALED_MODE_START_NEW_SELECTION_REQ = 727,
  CMD_SEALED_MODE_START_NEW_SELECTION_RSP = 728,
  CMD_SEALED_MODE_SELECTION_NOTIFY = 729,
  CMD_SEALED_MODE_SELECT_REQ = 730,
  CMD_SEALED_MODE_SELECT_RSP = 731,
  CMD_SEALED_MODE_EXCHANGE_EQUIP_REQ = 732,
  CMD_SEALED_MODE_EXCHANGE_EQUIP_RSP = 733,
  CMD_SEALED_MODE_UPDATE_CHEAT_DATA_REQ = 734,
  CMD_SEALED_MODE_UPDATE_CHEAT_DATA_RSP = 735,
  CMD_SEALED_MODE_WIN_BATTLE_REQ = 736,
  CMD_SEALED_MODE_WIN_BATTLE_RSP = 737,
  CMD_SEALED_MODE_GET_TOTAL_REWARD_SCORE_INFO_REQ = 738,
  CMD_SEALED_MODE_GET_TOTAL_REWARD_SCORE_INFO_RSP = 739,
  CMD_SEALED_MODE_TAKE_TOTAL_SCORE_REWARD_REQ = 740,
  CMD_SEALED_MODE_TAKE_TOTAL_SCORE_REWARD_RSP = 741,
  CMD_SEALED_MODE_ABANDON_TICKET_REQ = 742,
  CMD_SEALED_MODE_ABANDON_TICKET_RSP = 743,
  CMD_GRAND_KEY_LEVEL_UP_REQ = 753,
  CMD_GRAND_KEY_LEVEL_UP_RSP = 754,
  CMD_GRAND_KEY_RESET_REQ = 755,
  CMD_GRAND_KEY_RESET_RSP = 756,
  CMD_GRAND_KEY_BREACH_REQ = 757,
  CMD_GRAND_KEY_BREACH_RSP = 758,
  CMD_GRAND_KEY_ACTIVATE_SKILL_REQ = 759,
  CMD_GRAND_KEY_ACTIVATE_SKILL_RSP = 760,
  CMD_GRAND_KEY_CONTRAST_REQ = 761,
  CMD_GRAND_KEY_CONTRAST_RSP = 762,
  CMD_GRAND_KEY_SET_SKILL_REQ = 763,
  CMD_GRAND_KEY_SET_SKILL_RSP = 764,
  CMD_GET_STAGE_DROP_LIMIT_ACTIVITY_REQ = 776,
  CMD_GET_STAGE_DROP_LIMIT_ACTIVITY_RSP = 777,
  CMD_PUSH_CLIENT_MSG_NOTIFY = 801,
  CMD_SET_PLAYER_TAG_NOTIFY = 802,
  CMD_SYNC_TIME_REQ = 803,
  CMD_SYNC_TIME_RSP = 804,
  CMD_BUY_PRODUCT_REQ = 805,
  CMD_BUY_PRODUCT_RSP = 806,
  CMD_TAKE_EXTRA_STORY_CHALLENGE_MODE_CHAPTER_REWARD_REQ = 807,
  CMD_TAKE_EXTRA_STORY_CHALLENGE_MODE_CHAPTER_REWARD_RSP = 808,
  CMD_GET_AVATAR_BIND_EQUIP_IN_CHALLENGE_MODE_REQ = 809,
  CMD_GET_AVATAR_BIND_EQUIP_IN_CHALLENGE_MODE_RSP = 810,
  CMD_GET_GALINTERACT_TRIGGER_EVENT_REQ = 813,
  CMD_GET_GALINTERACT_TRIGGER_EVENT_RSP = 814,
  CMD_TAKE_GALINTERACT_TRIGGER_EVENT_REQ = 815,
  CMD_TAKE_GALINTERACT_TRIGGER_EVENT_RSP = 816,
  CMD_AVATAE_FRAGMENT_TRANSFORM_REQ = 827,
  CMD_AVATAE_FRAGMENT_TRANSFORM_RSP = 828,
  CMD_STAGE_BATTLE_SAVE_CLIENT_DATA_REQ = 829,
  CMD_STAGE_BATTLE_SAVE_CLIENT_DATA_RSP = 830,
  CMD_EXCHANGE_HCOIN_BY_MCOIN_REQ = 834,
  CMD_EXCHANGE_HCOIN_BY_MCOIN_RSP = 835,
  CMD_TAKE_EXTRA_STORY_LINE_STORY_FINISH_REWARD_REQ = 836,
  CMD_TAKE_EXTRA_STORY_LINE_STORY_FINISH_REWARD_RSP = 837,
  CMD_UNBIND_ACCOUNT_REQ = 961,
  CMD_UNBIND_ACCOUNT_RSP = 962,
  CMD_TAKE_FOUNDATION_REWARD_REQ = 963,
  CMD_TAKE_FOUNDATION_REWARD_RSP = 964,
  CMD_GET_STAGE_CHAPTER_REQ = 965,
  CMD_GET_STAGE_CHAPTER_RSP = 966,
  CMD_TAKE_CHAPTER_CHALLENGE_REWARD_REQ = 967,
  CMD_TAKE_CHAPTER_CHALLENGE_REWARD_RSP = 968,
  CMD_SYNC_DUTY_NOTIFY = 969,
  CMD_RECALL_MASTER_PUPIL_APPLICATION_REQ = 970,
  CMD_RECALL_MASTER_PUPIL_APPLICATION_RSP = 971,
  CMD_SET_FRIEND_REMARK_REQ = 972,
  CMD_SET_FRIEND_REMARK_RSP = 973,
  CMD_GET_FRIEND_REMARK_LIST_REQ = 974,
  CMD_GET_FRIEND_REMARK_LIST_RSP = 975,
  CMD_PLAYER_LEVEL_UP_NOTIFY = 976,
  UNRECOGNIZED = -1,
}

export enum CmdTypeUltraendless {
  CMD_ULTRA_ENDLESS_GET_TOP_RANK_REQ = 5200,
  CMD_ULTRA_ENDLESS_GET_TOP_RANK_RSP = 5201,
  CMD_ULTRA_ENDLESS_GET_MAIN_DATA_REQ = 5202,
  CMD_ULTRA_ENDLESS_GET_MAIN_DATA_RSP = 5203,
  CMD_ULTRA_ENDLESS_LAST_SETTLE_REWARD_NOTIFY = 5205,
  CMD_ULTRA_ENDLESS_REPORT_SITE_FLOOR_REQ = 5206,
  CMD_ULTRA_ENDLESS_REPORT_SITE_FLOOR_RSP = 5207,
  CMD_ULTRA_ENDLESS_BRIEF_DATA_NOTIFY = 5210,
  CMD_ULTRA_ENDLESS_ENTER_SITE_REQ = 5211,
  CMD_ULTRA_ENDLESS_ENTER_SITE_RSP = 5212,
  CMD_ULTRA_ENDLESS_GROUP_LEVEL_REWARD_REQ = 5213,
  CMD_ULTRA_ENDLESS_GROUP_LEVEL_REWARD_RSP = 5214,
  CMD_ULTRA_ENDLESS_TOP_RANK_REWARD_REQ = 5215,
  CMD_ULTRA_ENDLESS_TOP_RANK_REWARD_RSP = 5216,
  CMD_ULTRA_ENDLESS_CLIENT_REPORT_NOTIFY = 5219,
  CMD_ULTRA_ENDLESS_FIRST_JOIN_REWARD_NOTIFY = 5220,
  CMD_ULTRA_ENDLESS_COMMON_NOTIFY = 5298,
  CMD_ULTRA_ENDLESS_DUMMY = 5299,
  UNRECOGNIZED = -1,
}

export enum CmdTypeVirtualtrain {
  CMD_GET_VIRTUAL_AVATAR_GROUP_DETAIL_REQ = 3502,
  CMD_GET_VIRTUAL_AVATAR_GROUP_DETAIL_RSP = 3503,
  CMD_SET_VIRTUAL_AVATAR_TEAM_REQ = 3504,
  CMD_SET_VIRTUAL_AVATAR_TEAM_RSP = 3505,
  CMD_DRESS_VIRTUAL_EQUIPMENT_REQ = 3506,
  CMD_DRESS_VIRTUAL_EQUIPMENT_RSP = 3507,
  CMD_VIRTUAL_GACHA_REQ = 3508,
  CMD_VIRTUAL_GACHA_RSP = 3509,
  CMD_GET_VIRTUAL_GACHA_STATUS_REQ = 3510,
  CMD_GET_VIRTUAL_GACHA_STATUS_RSP = 3511,
  CMD_VIRTUAL_AVATAR_GROUP_CHANGE_NOTIFY = 3512,
  CMD_VIRTUAL_TRAIN_DIRECT_GACHA_NOTIFY = 3513,
  CMD_CHOOSE_VIRTUAL_GACHA_ITEM_REQ = 3514,
  CMD_CHOOSE_VIRTUAL_GACHA_ITEM_RSP = 3515,
  CMD_CHOOSE_VIRTUAL_DEFAULT_AVATAR_NOTIFY = 3516,
  CMD_SYNC_VIRTUAL_GACHA_STATUS_NOTIFY = 3517,
  CMD_VIRTUAL_TRAIN_ROLE_CUSTOM_LEVEL_UP_REQ = 3518,
  CMD_VIRTUAL_TRAIN_ROLE_CUSTOM_LEVEL_UP_RSP = 3519,
  CMD_VIRTUAL_TRAIN_ROLE_CUSTOM_CHOOSE_REQ = 3520,
  CMD_VIRTUAL_TRAIN_ROLE_CUSTOM_CHOOSE_RSP = 3521,
  CMD_VIRTUAL_TRAIN_EVO_REQ = 3522,
  CMD_VIRTUAL_TRAIN_EVO_RSP = 3523,
  CMD_VIRTUAL_TRAIN_ITEM_DROP_NOTIFY = 3524,
  CMD_VIRTUAL_TRAIN_DUMMY = 3549,
  UNRECOGNIZED = -1,
}

export enum CmdTypeWarship {
  CMD_GET_WARSHIP_ITEM_DATA_REQ = 5450,
  CMD_GET_WARSHIP_ITEM_DATA_RSP = 5451,
  CMD_GET_WARSHIP_TRIAL_DATA_REQ = 5452,
  CMD_GET_WARSHIP_TRIAL_DATA_RSP = 5453,
  CMD_GET_WARSHIP_DATA_REQ = 5454,
  CMD_GET_WARSHIP_DATA_RSP = 5455,
  CMD_SET_WARSHIP_REQ = 5456,
  CMD_SET_WARSHIP_RSP = 5457,
  CMD_SET_WARSHIP_COMPONENT_REQ = 5458,
  CMD_SET_WARSHIP_COMPONENT_RSP = 5459,
  CMD_SET_WARSHIP_SETTING_REQ = 5460,
  CMD_SET_WARSHIP_SETTING_RSP = 5461,
  CMD_WARSHIP_ITEM_RETURN_MATERIAL_NOTIFY = 5462,
  UNRECOGNIZED = -1,
}

export enum CmdTypeWeeklyreport {
  CMD_GET_WEEKLY_REPORT_REQ = 5100,
  CMD_GET_WEEKLY_REPORT_RSP = 5101,
  CMD_GET_WEEKLY_REPORT_ENDLESS_RECOMMEND_PLAYER_REQ = 5102,
  CMD_GET_WEEKLY_REPORT_ENDLESS_RECOMMEND_PLAYER_RSP = 5103,
  CMD_GET_WEEKLY_REPORT_EX_BOSS_RECOMMEND_PLAYER_REQ = 5104,
  CMD_GET_WEEKLY_REPORT_EX_BOSS_RECOMMEND_PLAYER_RSP = 5105,
  CMD_GET_WEEKLY_REPORT_ULTRA_ENDLESS_RECOMMEND_PLAYER_REQ = 5106,
  CMD_GET_WEEKLY_REPORT_ULTRA_ENDLESS_RECOMMEND_PLAYER_RSP = 5107,
  UNRECOGNIZED = -1,
}

export enum CommentType {
  COMMENT_OK = 1,
  COMMENT_CANCEL = 2,
  COMMENT_IGNORE = 3,
  UNRECOGNIZED = -1,
}

export enum CommonChatMsgType {
  COMMON_CHAT_MSG_NONE = 0,
  COMMON_CHAT_MSG_TEAM = 1,
  COMMON_CHAT_MSG_CAMPAIGN = 2,
  COMMON_CHAT_MSG_ROOM = 3,
  COMMON_CHAT_MSG_PRIVATE = 4,
  COMMON_CHAT_MSG_CAHT_GROUP = 5,
  COMMON_CHAT_MSG_WORLD_CHAT = 6,
  COMMON_CHAT_MSG_ARMADA_CHAT = 7,
  UNRECOGNIZED = -1,
}

export enum CompensationType {
  COMPENSATION_NONE = 0,
  COMPENSATION_ISLAND = 1,
  COMPENSATION_DORM = 2,
  UNRECOGNIZED = -1,
}

export enum ConstantEnum {
  UN_LIMIT_TIMES = 65535,
  FRAME_DEFAULT_ID = 200001,
  UNRECOGNIZED = -1,
}

export enum CreditBehavior {
  CREDIT_UNCONFIRM = 1,
  CREDIT_ON_HOOK = 2,
  CREDIT_TEAM_MATCH = 3,
  CREDIT_WIN = 4,
  CREDIT_LOSE = 5,
  CREDIT_DAILY_REFRESH = 99,
  UNRECOGNIZED = -1,
}

export enum CreditType {
  CREDIT_NONE = 0,
  CREDIT_TVT = 1,
  UNRECOGNIZED = -1,
}

export enum CustomHeadTimeType {
  CUSTOM_HEAD_TIME_FOREVER = 1,
  CUSTOM_HEAD_TIME_DURATION = 2,
  CUSTOM_HEAD_TIME_UNTIL = 3,
  UNRECOGNIZED = -1,
}

export enum CustomHeadType {
  CUSTOM_HEAD_TYPE_NONE = 0,
  CUSTOM_HEAD_TYPE_AVATAR = 1,
  CUSTOM_HEAD_TYPE_DRESS = 2,
  CUSTOM_HEAD_TYPE_NORMAL = 3,
  UNRECOGNIZED = -1,
}

export enum CycleMissionProgressType {
  CYCLE_MISSION_PROGRESS_ALL = 1,
  CYCLE_MISSION_PROGRESS_ONE_BY_ONE = 2,
  UNRECOGNIZED = -1,
}

export enum CycleMissionSolveType {
  CYCLE_MISSION_SOLVE_CLOSE = 0,
  CYCLE_MISSION_SOLVE_RESERVE = 1,
  UNRECOGNIZED = -1,
}

export enum DanmakuChannelType {
  DANMAKU_CHANNEL_NONE = 0,
  DANMAKU_CHANNEL_NORMAL = 1,
  DANMAKU_CHANNEL_KINGDOM = 2,
  UNRECOGNIZED = -1,
}

export enum DanmakuSlotStatus {
  DANMAKU_SLOT_STATUS_NONE = 0,
  DANMAKU_SLOT_STATUS_CLOSE = 1,
  DANMAKU_SLOT_STATUS_FAKE = 2,
  UNRECOGNIZED = -1,
}

export enum DecorationEffectType {
  DECORATION_EFFECT_FURNITURE_LIMIT = 1,
  DECORATION_EFFECT_AVATAR_LIMIT = 2,
  DECORATION_EFFECT_UNLOCK_ROOM = 3,
  DECORATION_EFFECT_POWER_LIMIT = 4,
  UNRECOGNIZED = -1,
}

export enum DeviceType {
  DEVICE_TYPE_NONE = 0,
  DEVICE_TYPE_ANDROID = 1,
  DEVICE_TYPE_IOS = 2,
  DEVICE_TYPE_PC = 3,
  UNRECOGNIZED = -1,
}

export enum DialogType {
  DIALOG_TYPE_NONE = 0,
  DIALOG_TYPE_CONTENT = 1,
  DIALOG_TYPE_SELECT = 2,
  DIALOG_TYPE_HIDE = 3,
  UNRECOGNIZED = -1,
}

export enum DiceType {
  DICE_TYPE_NONE = 0,
  DICE_TYPE_RANDOM = 1,
  DICE_TYPE_FIXED = 2,
  DICE_TYPE_FORWARD = 3,
  UNRECOGNIZED = -1,
}

export enum DiceyDungeonGachaType {
  DICEY_DUNGEON_GACHA_WEAPON = 1,
  DICEY_DUNGEON_GACHA_ORNAMENT_INITIATIVE = 2,
  DICEY_DUNGEON_GACHA_ORNAMENT_PASSIVE = 3,
  UNRECOGNIZED = -1,
}

export enum DiceyDungeonRoleAttributeType {
  DICEY_DUNGEON_ROLE_ATTR_STRENGTH = 1,
  DICEY_DUNGEON_ROLE_ATTR_AGILITY = 2,
  DICEY_DUNGEON_ROLE_ATTR_INTELLIGENCE = 3,
  UNRECOGNIZED = -1,
}

export enum DiceyDungeonRoomType {
  DICEY_DUNGEON_ROOM_DICEY_BATTLE = 1,
  DICEY_DUNGEON_ROOM_AVATAR_BATTLE = 2,
  DICEY_DUNGEON_ROOM_ORNAMENT_REWARD = 3,
  DICEY_DUNGEON_ROOM_HP_RECOVER = 4,
  DICEY_DUNGEON_ROOM_PLOT = 5,
  DICEY_DUNGEON_ROOM_BOSS = 6,
  UNRECOGNIZED = -1,
}

export enum DiceyDungeonSkillType {
  DICEY_DUNGEON_SKILL_NONE = 0,
  DICEY_DUNGEON_SKILL_INITIATIVE = 1,
  DICEY_DUNGEON_SKILL_PASSIVE = 2,
  UNRECOGNIZED = -1,
}

export enum DiceyDungeonType {
  DICEY_DUNGEON_NONE = 0,
  DICEY_DUNGEON_STORY = 1,
  DICEY_DUNGEON_SCHEDULE = 2,
  DICEY_DUNGEON_ENDLESS = 3,
  UNRECOGNIZED = -1,
}

export enum DiscountType {
  DISCOUNT_EQUIP_POWER_UP_SCOIN = 1,
  DISCOUNT_AVATAR_SKILL_UP_SCOIN = 2,
  DISCOUNT_EQUIP_POWER_UP_BOOST_RATE = 3,
  DISCOUNT_EQUIP_POWER_UP_BOOST_PROB = 4,
  UNRECOGNIZED = -1,
}

export enum DishRewardType {
  DISH_REWARD_TYPE_NONE = 0,
  DISH_REWARD_TYPE_PREPARE = 1,
  DISH_REWARD_TYPE_DAILY = 2,
  DISH_REWARD_TYPE_LIMITED = 3,
  UNRECOGNIZED = -1,
}

export enum DisjoinType {
  DISJOIN_TOTAL = 1,
  DISJOIN_TITLE = 2,
  DISJOIN_EX = 3,
  UNRECOGNIZED = -1,
}

export enum DisplayCurrencyType {
  DISPLAY_CURRENCY_TYPE_NONE = 0,
  DISPLAY_CURRENCY_TYPE_SCOIN = 1,
  DISPLAY_CURRENCY_TYPE_STAMINA = 2,
  DISPLAY_CURRENCY_TYPE_HCOIN = 3,
  DISPLAY_CURRENCY_TYPE_PURPLE_JADE = 5,
  DISPLAY_CURRENCY_TYPE_MCOIN = 6,
  DISPLAY_CURRENCY_TYPE_PLAIN_DRESS_TICKET = 7,
  DISPLAY_CURRENCY_TYPE_LUXURY_DRESS_TICKET = 8,
  DISPLAY_CURRENCY_TYPE_VITALITY = 12,
  DISPLAY_CURRENCY_TYPE_ETHER_PHLOGISTON = 13,
  DISPLAY_CURRENCY_TYPE_BRILLIANT_PURE_CRYSTAL = 14,
  DISPLAY_CURRENCY_TYPE_HONOR_MEDAL = 15,
  UNRECOGNIZED = -1,
}

export enum DLCAvatarReviveCostType {
  DLC_AVATAR_REVIVE_COST_TYPE_NONE = 0,
  DLC_AVATAR_REVIVE_COST_TYPE_REVIVE_COIN = 1,
  DLC_AVATAR_REVIVE_COST_TYPE_COIN = 2,
  UNRECOGNIZED = -1,
}

export enum DLCAvatarReviveType {
  DLC_AVATAR_REVIVE_TYPE_NONE = 0,
  DLC_AVATAR_REVIVE_TYPE_DLC_TOWER = 1,
  DLC_AVATAR_REVIVE_TYPE_DLC_STAGE = 2,
  DLC_AVATAR_REVIVE_TYPE_OUTER_STAGE = 3,
  DLC_AVATAR_REVIVE_TYPE_DLC_OW = 4,
  UNRECOGNIZED = -1,
}

export enum DLCSupportType {
  DLC_SUPPORT_TYPE_COLLECTION = 1,
  DLC_SUPPORT_TYPE_STAGE_BEGIN = 2,
  DLC_SUPPORT_TYPE_STORY = 3,
  DLC_SUPPORT_TYPE_DIALOG = 4,
  DLC_SUPPORT_TYPE_QUEST = 5,
  UNRECOGNIZED = -1,
}

export enum DLCTalentType {
  DLC_TALENT_TYPE_NONE = 0,
  DLC_TALENT_TYPE_AUTO = 1,
  DLC_TALENT_TYPE_ACTIVE = 2,
  DLC_TALENT_TYPE_PASSIVE = 3,
  DLC_TALENT_TYPE_REFRESHABLE = 4,
  UNRECOGNIZED = -1,
}

export enum DormDataType {
  DORM_DATA_ALL = 0,
  DORM_DATA_DECORATION = 1,
  DORM_DATA_EVENT = 3,
  DORM_DATA_SNS = 4,
  UNRECOGNIZED = -1,
}

export enum DormEventConditionWay {
  DORM_EVENT_CONDITION_WAY_PASS_STAGE = 1,
  DORM_EVENT_CONDITION_WAY_ISLAND_ADVANTURE = 2,
  DORM_EVENT_CONDITION_WAY_AVATAR_STAR_UP = 3,
  DORM_EVENT_CONDITION_WAY_MP_STAGE = 4,
  DORM_EVENT_CONDITION_WAY_OPEN_WORLD_QUEST = 5,
  DORM_EVENT_CONDITION_WAY_MVP = 6,
  DORM_EVENT_CONDITION_WAY_NO_FIGHT = 7,
  DORM_EVENT_CONDITION_WAY_LEVEL_UP = 8,
  DORM_EVENT_CONDITION_WAY_PASS_STAGE_WITH_ROLE = 9,
  DORM_EVENT_CONDITION_WAY_FINISH_MISSION = 11,
  DORM_EVENT_CONDITION_WAY_ENDLESS_STAGE_PASS = 12,
  DORM_EVENT_CONDITION_WAY_OFFLINE = 13,
  DORM_EVENT_CONDITION_WAY_BIRTHDAY = 14,
  DORM_EVENT_CONDITION_WAY_GACHA = 15,
  DORM_EVENT_CONDITION_WAY_NEW_ROLE = 16,
  DORM_EVENT_CONDITION_WAY_ACTIVE_DEGREE = 17,
  UNRECOGNIZED = -1,
}

export enum DreamUnlockType {
  DREAM_UNLOCK_TYPE_NO_NEWBIE_SCHEDULE = 1,
  DREAM_UNLOCK_TYPE_HAS_NOT_FINISHED_DREAM = 2,
  DREAM_UNLOCK_TYPE_GOBACK_LEVEL = 3,
  DREAM_UNLOCK_TYPE_AVATAR_LOCKED = 4,
  DREAM_UNLOCK_TYPE_HAS_NOT_GOT_ITEM = 5,
  UNRECOGNIZED = -1,
}

export enum DressType {
  DRESS_BATTLE = 1,
  DRESS_SUIT = 2,
  DRESS_ARTIFACT = 4,
  UNRECOGNIZED = -1,
}

export enum DropLimitRefreshType {
  DROP_LIMIT_REFRESH_WEEK_DAY = 1,
  DROP_LIMIT_REFRESH_MONTH = 2,
  UNRECOGNIZED = -1,
}

export enum DropLimitType {
  DROP_LIMIT_STAGE = 1,
  DROP_LIMIT_DLC = 2,
  DROP_LIMIT_GOD_WAR = 3,
  DROP_LIMIT_SC_DLC = 4,
  DROP_LIMIT_CHAPTER_OW = 5,
  UNRECOGNIZED = -1,
}

export enum DutyType {
  DUTY_DAILY = 1,
  DUTY_WEEKLY = 2,
  UNRECOGNIZED = -1,
}

export enum EmojiUnlockType {
  EMOJI_UNLOCK_TYPE_DEFAULT = 1,
  EMOJI_UNLOCK_TYPE_ITEM_DROP = 2,
  UNRECOGNIZED = -1,
}

export enum EndlessItemType {
  ENDLESS_EMPTY = 0,
  ENDLESS_MEDICINE_SELF = 1,
  ENDLESS_MEDICINE_TO_OTHER = 2,
  ENDLESS_TRAP = 3,
  ENDLESS_BOMB = 4,
  ENDLESS_HIDDEN = 5,
  UNRECOGNIZED = -1,
}

export enum EndlessRewardType {
  ENDLESS_PROMOTE = 1,
  ENDLESS_NORMAL = 2,
  ENDLESS_DEMOTE = 3,
  UNRECOGNIZED = -1,
}

export enum EndlessSingleModeActivityType {
  ENDLESS_SINGLE_MODE_ACTIVITY_TYPE_NONE = 0,
  ENDLESS_SINGLE_MODE_ACTIVITY_TYPE_NORMAL = 1,
  ENDLESS_SINGLE_MODE_ACTIVITY_TYPE_OW = 2,
  UNRECOGNIZED = -1,
}

export enum EndlessSinType {
  ENDLESS_SIN_NORMAL = 1,
  ENDLESS_SIN_ANGRY = 2,
  ENDLESS_SIN_NTR = 3,
  ENDLESS_SIN_GREED = 4,
  ENDLESS_SIN_SLOTH = 5,
  ENDLESS_SIN_PRIDE = 6,
  ENDLESS_SIN_GLUTTONY = 7,
  ENDLESS_SIN_ENVY = 8,
  UNRECOGNIZED = -1,
}

export enum EndlessType {
  ENDLESS_TYPE_NONE = 0,
  ENDLESS_TYPE_NORMAL = 1,
  ENDLESS_TYPE_OPENWORLD = 2,
  ENDLESS_TYPE_QUANTUM = 3,
  ENDLESS_TYPE_ULTRA = 4,
  ENDLESS_TYPE_GREEDY = 5,
  ENDLESS_TYPE_FRONT = 6,
  UNRECOGNIZED = -1,
}

export enum EnterTimesType {
  ACITIVYT_TIMES_REF = 1,
  STAGE_TIMES_REF = 2,
  UNRECOGNIZED = -1,
}

export enum EquipmentForgeRefreshType {
  EQUIPMENT_FORGE_REFRESH_NONE = 0,
  EQUIPMENT_FORGE_REFRESH_SCHEDULE = 1,
  EQUIPMENT_FORGE_REFRESH_DAILY = 2,
  UNRECOGNIZED = -1,
}

export enum EquipmentForgeType {
  EQUIPMENT_FORGE_TIMES = 1,
  EQUIPMENT_FORGE_PACKAGE_NUM = 2,
  UNRECOGNIZED = -1,
}

export enum EquipmentSlot {
  EQUIPMENT_SLOT_WEAPON_1 = 1,
  EQUIPMENT_SLOT_STIGMATA_1 = 2,
  EQUIPMENT_SLOT_STIGMATA_2 = 3,
  EQUIPMENT_SLOT_STIGMATA_3 = 4,
  UNRECOGNIZED = -1,
}

export enum EquipmentType {
  EQUIPMENT_MATERIAL = 1,
  EQUIPMENT_AVATAR_FRAGMENT = 2,
  EQUIPMENT_WEAPON = 3,
  EQUIPMENT_STIGMATA = 4,
  EQUIPMENT_AVATAR_CARD = 5,
  EQUIPMENT_ENDLESS_ITEM = 6,
  EQUIPMENT_DRESS = 7,
  EQUIPMENT_VIRTUAL = 8,
  EQUIPMENT_MEDAL = 10,
  EQUIPMENT_FURNITURE = 14,
  EQUIPMENT_OPENWORLD_ENDLESS_ITEM = 15,
  EQUIPMENT_CUSTOM_HEAD = 16,
  EQUIPMENT_FRAME = 20,
  EQUIPMENT_SHOPPING_MALL_GIFT = 30,
  EQUIPMENT_MECHA = 34,
  EQUIPMENT_PHONE_PENDANT = 35,
  EQUIPMENT_EMOJI = 36,
  EQUIPMENT_ELF_FRAGMENT = 37,
  EQUIPMENT_ELF_CARD = 38,
  EQUIPMENT_DLC_AVATAR_CARD = 39,
  EQUIPMENT_WARSHIP = 40,
  EQUIPMENT_TRIAL_WARSHIP = 41,
  EQUIPMENT_ERROR = 100,
  UNRECOGNIZED = -1,
}

export enum EquipmentVirtualType {
  EQUIPMENT_VIRTUAL_ARMADA_FUND = 80001,
  EQUIPMENT_VIRTUAL_MP_EXP = 80002,
  EQUIPMENT_VIRTUAL_SCOIN = 80006,
  EQUIPMENT_MASTER_FAME_EXP = 80007,
  EQUIPMENT_VIRTUAL_SEASON_EXP = 80008,
  EQUIPMENT_VIRTUAL_PLAYER_EXP = 80009,
  EQUIPMENT_VIRTUAL_ARMADA_CONTRIBUTION = 80011,
  EQUIPMENT_VIRTUAL_VITALITY = 80012,
  EQUIPMENT_VIRTUAL_CARD_PRODUCT = 80013,
  EQUIPMENT_VIRTUAL_CONTRACT_POINT = 80014,
  EQUIPMENT_VIRTUAL_DLC_EXP = 80015,
  EQUIPMENT_VIRTUAL_BATTLE_PASS_EXP_ACTIVITY = 80016,
  EQUIPMENT_VIRTUAL_ADVENTURE_BADGE = 80017,
  EQUIPMENT_VIRTUAL_ADVENTURE_GRAIN = 80018,
  EQUIPMENT_VIRTUAL_CHAPTER_ACTIVITY_EXP = 80019,
  EQUIPMENT_VIRTUAL_PICTURE_SCORE = 80020,
  EQUIPMENT_VIRTUAL_OW_FOX_EXP = 80021,
  EQUIPMENT_VIRTUAL_OW_AI_EXP = 80022,
  EQUIPMENT_VIRTUAL_SANCTUARY_EXP = 80023,
  EQUIPMENT_VIRTUAL_CUSTOM_GACHA_ENERGY = 80024,
  EQUIPMENT_VIRTUAL_BATTLE_PASS_THEME_EXP = 80025,
  EQUIPMENT_VIRTUAL_OPTIONAL_GACHA_ENERGY = 80026,
  EQUIPMENT_VIRTUAL_NEWBIE_PRIVILEGE = 80027,
  EQUIPMENT_VIRTUAL_SC_DLC_EXP = 80028,
  EQUIPMENT_VIRTUAL_BATTLE_PASS_EXP_DUTY = 80029,
  EQUIPMENT_VIRTUAL_CUSTOM_GOBACK_GACHA_ENERGY = 80030,
  EQUIPMENT_VIRTUAL_OW_TERMINAL_EXP = 80031,
  UNRECOGNIZED = -1,
}

export enum EventType {
  EVENT_TYPE_ISLAND = 1,
  EVENT_TYPE_CITY_ACTIVITY = 2,
  UNRECOGNIZED = -1,
}

export enum ExaminationTagType {
  EXAMINATION_TYPE_NONE = 0,
  EXAMINATION_TYPE_AVATAR = 1,
  EXAMINATION_TYPE_ELF = 2,
  EXAMINATION_TYPE_MONSTER = 3,
  EXAMINATION_TYPE_COMMON = 4,
  UNRECOGNIZED = -1,
}

export enum ExtraStoryActType {
  EXTRA_STORY_ACT_MAIN = 1,
  EXTRA_STORY_ACT_HIDDEN = 2,
  EXTRA_STORY_ACT_ENTROPY = 3,
  EXTRA_STORY_ACT_ACTIVITY = 4,
  EXTRA_STORY_ACT_FANTASY = 5,
  EXTRA_STORY_ACT_ROGUE = 6,
  UNRECOGNIZED = -1,
}

export enum ExtraStoryChapterType {
  EXTRA_STORY_CHAPTER_INVALID = 0,
  EXTRA_STORY_CHAPTER_NORMAL = 1,
  EXTRA_STORY_CHAPTER_LINE = 2,
  UNRECOGNIZED = -1,
}

export enum FacilityType {
  FACILITY_TYPE_AVATAR_EXP = 1,
  FACILITY_TYPE_AVATAR_SKILL_POINT = 2,
  FACILITY_TYPE_WEAPON_EXP = 3,
  FACILITY_TYPE_STIGMATA_EXP = 4,
  FACILITY_TYPE_BAR = 5,
  FACILITY_TYPE_AUDIO_PLAYER = 6,
  FACILITY_TYPE_ENERGY = 7,
  FACILITY_TYPE_HOMELAND = 8,
  FACILITY_TYPE_REFRIGERATOR = 9,
  FACILITY_TYPE_DOOR = 10,
  UNRECOGNIZED = -1,
}

export enum FarmSlotStatus {
  FARM_SLOT_NONE = 0,
  FARM_SLOT_LOCKED = 1,
  FARM_SLOT_FREE = 2,
  FARM_SLOT_IN_PRODUCE = 3,
  FARM_SLOT_FINISH_PRODUCE = 4,
  UNRECOGNIZED = -1,
}

export enum FastPassLimitType {
  FAST_PASS_LIMIT_NONE = 0,
  FAST_PASS_LIMIT_DAILY = 1,
  FAST_PASS_LIMIT_WEEKLY = 2,
  UNRECOGNIZED = -1,
}

export enum FastPassType {
  FAST_PASS_TYPE_NONE = 0,
  FAST_PASS_TYPE_OW = 1,
  FAST_PASS_TYPE_WEEKDAY = 2,
  UNRECOGNIZED = -1,
}

export enum FeatureLimitLevel {
  LIMIT_LEVEL_ALL = 0,
  LIMIT_LEVEL_MAIN = 100,
  LIMIT_LEVEL_CHAT = 200,
  UNRECOGNIZED = -1,
}

export enum FeatureSwitchActivityType {
  FEATURE_SWITCH_ACTIVITY_TYPE_NONE = 0,
  FEATURE_SWITCH_ACTIVITY_TYPE_SLG_GAME = 1,
  FEATURE_SWITCH_ACTIVITY_TYPE_SLG_BATTLE = 2,
  FEATURE_SWITCH_ACTIVITY_TYPE_SLG_MATCH = 3,
  FEATURE_SWITCH_ACTIVITY_TYPE_GLOBAL_POLLING = 4,
  FEATURE_SWITCH_ACTIVITY_TYPE_SLG_CHAT = 5,
  FEATURE_SWITCH_ACTIVITY_TYPE_SLG_BROADCAST = 6,
  UNRECOGNIZED = -1,
}

export enum FeatureSwitchOpType {
  FEATURE_SWITCH_OP_NONE = 0,
  FEATURE_SWITCH_OP_ADD = 1,
  FEATURE_SWITCH_OP_DEL = 2,
  UNRECOGNIZED = -1,
}

export enum FeatureSwitchType {
  FEATURE_SWITCH_NONE = 0,
  FEATURE_SWITCH_STAGE = 1,
  FEATURE_SWITCH_SHOP = 2,
  FEATURE_SWITCH_SHOP_GOODS_POOL = 3,
  FEATURE_SWITCH_ACTIVITY_PANEL = 4,
  FEATURE_SWITCH_MISSION_HIDE = 5,
  FEATURE_SWITCH_ITEM_USE = 6,
  FEATURE_SWITCH_MATERIAL_HIDE = 7,
  FEATURE_SWITCH_MISSION_REWARD = 8,
  FEATURE_SWITCH_MAIL_ATTACHMENT_TAKE = 9,
  FEATURE_SWITCH_DANMAKU = 10,
  FEATURE_SWITCH_EX_BOSS = 11,
  FEATURE_SWITCH_SHOP_GOODS_POOL_HIDE = 12,
  FEATURE_SWITCH_CHAT = 13,
  FEATURE_SWITCH_HEXIE = 14,
  FEATURE_SWITCH_MCOIN_BUY = 15,
  FEATURE_SWITCH_SHOP_GOODS = 16,
  FEATURE_SWITCH_CMD_CD = 17,
  FEATURE_SWITCH_ENDLESS = 18,
  FEATURE_SWITCH_EX_BOSS_ENTER = 19,
  FEATURE_SWITCH_GACHA = 20,
  FEATURE_SWITCH_AVATAR_FRAGMENT = 22,
  FEATURE_SWITCH_ELF_FRAGMENT = 23,
  FEATURE_SWITCH_EQUIP_FORGE = 24,
  FEATURE_SWITCH_BATTLE_PASS = 25,
  FEATURE_SWITCH_GACHA_COIN_TRANSFER = 26,
  FEATURE_SWITCH_RPG_TALE_SITE = 27,
  FEATURE_SWITCH_ACTIVITY = 28,
  FEATURE_SWITCH_THEME_WANTED = 29,
  FEATURE_SWITCH_SNS_REQUEST = 30,
  FEATURE_SWITCH_GOD_WAR = 31,
  FEATURE_SWITCH_SERVER_STOP_GACHA_MSG = 32,
  FEATURE_SWITCH_KINGDOM_WAR = 33,
  FEATURE_SWITCH_REFINE_RUNE = 34,
  FEATURE_SWITCH_CHANGE_FRIEND_REMARK = 35,
  FEATURE_SWITCH_GACHA_DAILY_TIMES_LIMIT = 36,
  FEATURE_SWITCH_INVITE_ACTIVITY = 37,
  UNRECOGNIZED = -1,
}

export enum FishRewardSrc {
  FISH_REWARD_SRC_NONE = 0,
  FISH_REWARD_SRC_NORMAL = 1,
  FISH_REWARD_SRC_GET_MISSED = 2,
  FISH_REWARD_SRC_ASSIST = 3,
  FISH_REWARD_SRC_LIKE = 4,
  UNRECOGNIZED = -1,
}

export enum FlopActivityCardState {
  FLOP_ACTIVITY_CARD_STATE_NOT_FLOP = 0,
  FLOP_ACTIVITY_CARD_STATE_FLOP = 1,
  FLOP_ACTIVITY_CARD_STATE_REWARD_UNLOCK = 2,
  UNRECOGNIZED = -1,
}

export enum FlopActivityRewardState {
  FLOP_ACTIVITY_REWARD_STATE_LOCK = 0,
  FLOP_ACTIVITY_REWARD_STATE_UNLOCK = 1,
  FLOP_ACTIVITY_REWARD_STATE_HAS_GOT = 2,
  UNRECOGNIZED = -1,
}

export enum FrameTimeType {
  FRAME_TIME_FOREVER = 0,
  FRAME_TIME_LIMIT = 1,
  UNRECOGNIZED = -1,
}

export enum FurnitureDirection {
  FURNITURE_DIRECTION_DOWN = 0,
  FURNITURE_DIRECTION_LEFT = 1,
  FURNITURE_DIRECTION_UP = 2,
  FURNITURE_DIRECTION_RIGHT = 3,
  UNRECOGNIZED = -1,
}

export enum FurnitureLocation {
  FURNITURE_LOCATION_FLOOR = 0,
  FURNITURE_LOCATION_WALL1 = 1,
  FURNITURE_LOCATION_WALL2 = 2,
  FURNITURE_LOCATION_WALL3 = 3,
  FURNITURE_LOCATION_WALL4 = 4,
  UNRECOGNIZED = -1,
}

export enum GachaType {
  GACHA_HCOIN = 2,
  GACHA_SPECIAL_HCOIN = 3,
  GACHA_ACTIVITY_1 = 4,
  GACHA_CUSTOM_AVATAR = 5,
  GACHA_ACTIVITY_2 = 6,
  GACHA_CUSTOM_EQUIP = 7,
  GACHA_BOX_1 = 8,
  GACHA_UNIQUE = 9,
  GACHA_EQUIP_HCOIN = 10,
  GACHA_PRAY = 11,
  GACHA_SPECIAL_2 = 12,
  GACHA_CONTROLLABLE_BOX = 14,
  GACHA_ACTIVITY_3 = 15,
  GACHA_BOX_2 = 16,
  GACHA_BOX_3 = 17,
  GACHA_OPTIONAL_AVATAR = 18,
  GACHA_OPTIONAL_EQUIP = 19,
  GACHA_ADVENTURE = 20,
  GACHA_BOX_4 = 21,
  GACHA_BOX_5 = 22,
  GACHA_ADVENTURE_EQUIP = 23,
  GACHA_BOX_6 = 24,
  GACHA_SP_EQUIP = 25,
  GACHA_ELF_1 = 26,
  GACHA_ACTIVITY_4 = 27,
  GACHA_ACTIVITY_5 = 28,
  GACHA_ACTIVITY_6 = 29,
  GACHA_SPECIAL_3 = 30,
  GACHA_ADVENTURE_NEWBIE_1 = 31,
  GACHA_ADVENTURE_NEWBIE_2 = 32,
  GACHA_SPECIAL_NEWBIE_1 = 33,
  GACHA_SPECIAL_NEWBIE_2 = 34,
  GACHA_BOX_7 = 35,
  GACHA_SPECIAL_NEWBIE_3 = 36,
  GACHA_SPECIAL_NEWBIE_4 = 37,
  GACHA_CUSTOM_AVATAR_GOBACK = 38,
  GACHA_EQUIP_GOBACK = 39,
  GACHA_SPECIAL_NEWBIE_5 = 40,
  GACHA_SPECIAL_NEWBIE_6 = 41,
  GACHA_SPECIAL_NEWBIE_7 = 42,
  GACHA_SPECIAL_NEWBIE_8 = 43,
  GACHA_TYPE_ERROR = 100,
  UNRECOGNIZED = -1,
}

export enum GalInteractBubbleType {
  GALINTERACT_BUBBLE_NO = 0,
  GALINTERACT_BUBBLE_YES = 1,
  GALINTERACT_BUBBLE_PLACEHOLD = 2,
  UNRECOGNIZED = -1,
}

export enum GalInteractTriggerCondition {
  GALINTERACT_CONDITION_DRESS = 1,
  GALINTERACT_CONDITION_SHAKE = 2,
  GALINTERACT_CONDITION_MAIN_SCREEN = 3,
  GALINTERACT_CONDITION_INTERVAL = 4,
  GALINTERACT_CONDITION_DATETIME_YMD = 5,
  GALINTERACT_CONDITION_DATETIME_MD = 6,
  GALINTERACT_CONDITION_WEEKDAY = 7,
  GALINTERACT_CONDITION_DAILY_DUTY_POINT = 8,
  GALINTERACT_CONDITION_WEEKLY_DUTY_POINT = 9,
  GALINTERACT_CONDITION_WEATHER = 10,
  GALINTERACT_CONDITION_GACHA = 11,
  GALINTERACT_CONDITION_ONLINE_TIME = 12,
  GALINTERACT_CONDITION_LOGIN_ITERVAL = 13,
  GALINTERACT_CONDITION_MONTH_DAY_INTERVAL = 14,
  GALINTERACT_CONDITION_USER_BIRTHDAY = 15,
  GALINTERACT_CONDITION_GOODFEEL_LEVEL = 16,
  GALINTERACT_CONDITION_AFFINITY_GET_GIFT_LEVEL = 17,
  UNRECOGNIZED = -1,
}

export enum GeneralActivityPreCondType {
  GENERAL_ACTIVITY_PRE_COND_TYPE_NONE = 0,
  GENERAL_ACTIVITY_PRE_COND_TYPE_SCORE = 1,
  UNRECOGNIZED = -1,
}

export enum GeneralActivityRankSettleType {
  GENERAL_ACTIVITY_RANK_SETTLE_TYPE_DEFAULT = 0,
  GENERAL_ACTIVITY_RANK_SETTLE_TYPE_ACTIVITY = 1,
  UNRECOGNIZED = -1,
}

export enum GeneralActivityRankType {
  GENERAL_ACTIVITY_RANK_TYPE_NONE = 0,
  GENERAL_ACTIVITY_RANK_TYPE_ABS = 1,
  GENERAL_ACTIVITY_RANK_TYPE_PERCENT = 2,
  UNRECOGNIZED = -1,
}

export enum GeneralActivityScheduledMapSiteType {
  GENERAL_ACTIVITY_SCHEDULED_MAP_SITE_DAILY_RAID = 1,
  GENERAL_ACTIVITY_SCHEDULED_MAP_SITE_MINI_SKY_FIRE = 2,
  GENERAL_ACTIVITY_SCHEDULED_MAP_SITE_TWO_PLUS_TWO_PVE = 3,
  GENERAL_ACTIVITY_SCHEDULED_MAP_SITE_BOSS_RUSH = 4,
  GENERAL_ACTIVITY_SCHEDULED_MAP_SITE_CHAPTER_OW = 6,
  UNRECOGNIZED = -1,
}

export enum GeneralActivityScoreRewardType {
  GENERAL_ACTIVITY_SCORE_REWARD_AUTO = 1,
  GENERAL_ACTIVITY_SCORE_REWARD_MANUAL = 2,
  UNRECOGNIZED = -1,
}

export enum GeneralActivityStageAvatarBonusType {
  GENERAL_ACTIVITY_STAGE_AVATAR_BONUS_NONE = 0,
  GENERAL_ACTIVITY_STAGE_AVATAR_BONUS_ONCE = 1,
  GENERAL_ACTIVITY_STAGE_AVATAR_BONUS_ALL = 2,
  UNRECOGNIZED = -1,
}

export enum GeneralActivityStageExchangeType {
  GENERAL_ACTIVITY_EXCHANGE_TYPE_NONE = 0,
  GENERAL_ACTIVITY_EXCHANGE_TYPE_TIMES = 1,
  GENERAL_ACTIVITY_EXCHANGE_TYPE_RESET = 2,
  UNRECOGNIZED = -1,
}

export enum GeneralActivityTicketRefreshType {
  GENERAL_ACTIVITY_TICKET_REFRESH_NONE = 0,
  GENERAL_ACTIVITY_TICKET_REFRESH_DAILY = 1,
  GENERAL_ACTIVITY_TICKET_REFRESH_WEEKLY = 2,
  UNRECOGNIZED = -1,
}

export enum GeneralActivityType {
  GENERAL_ACTIVITY_INVALID = 0,
  GENERAL_ACTIVITY_MAIN_STORY = 1,
  GENERAL_ACTIVITY_EXTRA_STORY = 2,
  GENERAL_ACTIVITY_ENDLESS = 3,
  GENERAL_ACTIVITY_SEALED = 4,
  GENERAL_ACTIVITY_SIN_DEMON_EX = 5,
  GENERAL_ACTIVITY_WORLD_BOSS = 6,
  GENERAL_ACTIVITY_OPENWORLD_NORMAL = 7,
  GENERAL_ACTIVITY_RAID = 8,
  GENERAL_ACTIVITY_NORMAL_ACTIVITY = 9,
  GENERAL_ACTIVITY_MINUTE_CHALLENGE = 11,
  GENERAL_ACTIVITY_SELAED_MODE = 12,
  GENERAL_ACTIVITY_ARMADA_MATRIX = 13,
  GENERAL_ACTIVITY_DUNGEONS = 15,
  GENERAL_ACTIVITY_RECLAIM = 16,
  GENERAL_ACTIVITY_OPENWORLD_ACTIVITY_BOSS = 17,
  GENERAL_ACTIVITY_OPENWORLD_ACTIVITY_ENDLESS = 18,
  GENERAL_ACTIVITY_CAMPAIGN = 19,
  GENERAL_ACTIVITY_RPG_TALE = 20,
  GENERAL_ACTIVITY_MONOPOLY = 21,
  GENERAL_ACTIVITY_GARDEN = 22,
  GENERAL_ACTIVITY_SANCTUARY = 23,
  GENERAL_ACTIVITY_ELITE_STAGE = 24,
  GENERAL_ACTIVITY_OPENWORLD_AVATAR = 26,
  GENERAL_ACTIVITY_GOD_WAR = 27,
  GENERAL_ACTIVITY_OPENWORLD_CHAPTER = 28,
  GENERAL_ACTIVITY_TUTORIAL_ENTRY = 29,
  GENERAL_ACTIVITY_OPENWORLD_HUNT_ACTIVITY = 30,
  GENERAL_ACTIVITY_UNIVERAL = 99,
  GENERAL_ACTIVITY_PUSH_TOWER = 100,
  GENERAL_ACTIVITY_TEAM_ASSAULT = 101,
  GENERAL_ACTIVITY_STAGE = 102,
  GENERAL_ACTIVITY_COUPLE_TOWER = 103,
  GENERAL_ACTIVITY_MASTER_PUPIL = 104,
  GENERAL_ACTIVITY_TOWER_RAID = 105,
  GENERAL_ACTIVITY_TVT = 106,
  GENERAL_ACTIVITY_KINGDOM_WAR = 107,
  GENERAL_ACTIVITY_QUANTUM_ENDLESS = 108,
  GENERAL_ACTIVITY_THEME_WANTED = 109,
  GENERAL_ACTIVITY_ENDLESS_SINGLE = 110,
  GENERAL_ACTIVITY_SINGLE_RAID = 111,
  GENERAL_ACTIVITY_GLOBAL_WAR = 112,
  GENERAL_ACTIVITY_GRATUITY = 113,
  GENERAL_ACTIVITY_NEWBIE = 114,
  GENERAL_ACTIVITY_NINJA = 115,
  GENERAL_ACTIVITY_ARMADA_BOSS = 116,
  GENERAL_ACTIVITY_OPTIONAL_BUFF = 117,
  GENERAL_ACTIVITY_MASSIVE_WAR = 118,
  GENERAL_ACTIVITY_CHALLENGE_WAR = 119,
  GENERAL_ACTIVITY_CRISIS_MODE = 120,
  GENERAL_ACTIVITY_SCHEDULED_MAP_SITE = 121,
  GENERAL_ACTIVITY_SLG = 122,
  GENERAL_ACTIVITY_BOSS_CHALLENGE = 123,
  GENERAL_ACTIVITY_FRONT_ENDLESS = 124,
  UNRECOGNIZED = -1,
}

export enum GeneralStageActivityScoreType {
  GENERAL_ACTIVITY_SCORE_ACCUM = 1,
  GENERAL_ACTIVITY_SCORE_TOP = 2,
  GENERAL_ACTIVITY_SCORE_SINGLE_TOP = 3,
  GENERAL_ACTIVITY_SCORE_MATERIAL_NUM = 4,
  UNRECOGNIZED = -1,
}

export enum GlobalWarIsolatePointStatus {
  GLOBAL_WAR_ISOLATE_POINT_STATUS_NONE = 0,
  GLOBAL_WAR_ISOLATE_POINT_STATUS_LOCKED = 1,
  GLOBAL_WAR_ISOLATE_POINT_STATUS_ACTIVE = 2,
  GLOBAL_WAR_ISOLATE_POINT_STATUS_CLOSE = 3,
  UNRECOGNIZED = -1,
}

export enum GlobalWarPointRankType {
  GLOBAL_WAR_POINT_RANK_NONE = 0,
  GLOBAL_WAR_POINT_RANK_CURRENCY = 1,
  GLOBAL_WAR_POINT_RANK_SCORE = 2,
  UNRECOGNIZED = -1,
}

export enum GlobalWarPointStatus {
  GLOBAL_WAR_POINT_STATUS_NONE = 0,
  GLOBAL_WAR_POINT_STATUS_LOCKED = 1,
  GLOBAL_WAR_POINT_STATUS_ACTIVE = 2,
  GLOBAL_WAR_POINT_STATUS_CLOSE = 3,
  UNRECOGNIZED = -1,
}

export enum GlobalWarPointType {
  GLOBAL_WAR_POINT_TYPE_NONE = 0,
  GLOBAL_WAR_POINT_TYPE_NORMAL = 1,
  GLOBAL_WAR_POINT_TYPE_CRITICAL = 2,
  GLOBAL_WAR_POINT_TYPE_BOSS = 3,
  UNRECOGNIZED = -1,
}

export enum GlobalWarStageType {
  GLOBAL_WAR_STAGE_FOR_NONE = 0,
  GLOBAL_WAR_STAGE_FOR_POINT = 1,
  GLOBAL_WAR_STAGE_FOR_ISOLATE_POINT = 2,
  UNRECOGNIZED = -1,
}

export enum GobackLoginRewardType {
  GOBACK_LOGIN_REWARD_COMMON = 1,
  GOBACK_LOGIN_REWARD_BONUS = 2,
  UNRECOGNIZED = -1,
}

export enum GobackNewbieLevelSourceType {
  GOBACK_NEWBIE_LEVEL_SOURCE_GOBACK_NEWBIE_LEVEL = 0,
  GOBACK_NEWBIE_LEVEL_SOURCE_GOBACK_LEVEL = 1,
  UNRECOGNIZED = -1,
}

export enum GodWarSiteStatus {
  GOD_WAR_SITE_STATUS_INVALID = 0,
  GOD_WAR_SITE_STATUS_HIDE = 1,
  GOD_WAR_SITE_STATUS_SHOW = 2,
  GOD_WAR_SITE_STATUS_UNLOCKED = 3,
  GOD_WAR_SITE_STATUS_CLOSED = 4,
  UNRECOGNIZED = -1,
}

export enum GratuityAcceptType {
  GRATUITY_ACCEPT_NONE = 0,
  GRATUITY_ACCEPT_FREE = 1,
  GRATUITY_ACCEPT_ACTIVITY = 2,
  UNRECOGNIZED = -1,
}

export enum GreedyEndlessFloorType {
  GREEDY_ENDLESS_FLOOR_DEMOTE = 1,
  GREEDY_ENDLESS_FLOOR_NORMAL = 2,
  GREEDY_ENDLESS_FLOOR_PROMOTE = 3,
  UNRECOGNIZED = -1,
}

export enum HybridSiteType {
  HYBRID_SITE_TYPE_STORE = 0,
  HYBRID_SITE_TYPE_CYCLE = 1,
  HYBRID_SITE_TYPE_EX = 2,
  HYBRID_SITE_TYPE_BOSS = 3,
  HYBRID_SITE_TYPE_COLLECTION = 4,
  HYBRID_SITE_TYPE_MP = 5,
  HYBRID_SITE_TYPE_CHALLENGE = 6,
  HYBRID_SITE_TYPE_ZONE_CYCLE = 7,
  HYBRID_SITE_TYPE_ZONE_CHALLENGE = 8,
  HYBRID_SITE_TYPE_EX_BOSS = 9,
  HYBRID_SITE_TYPE_TOWER = 10,
  HYBRID_SITE_TYPE_CG = 11,
  UNRECOGNIZED = -1,
}

export enum InviteeActivityType {
  INVITEE_ACTIVITY_TYPE_NONE = 0,
  INVITEE_ACTIVITY_TYPE_NEWBIE = 1,
  INVITEE_ACTIVITY_TYPE_GOBACK = 2,
  UNRECOGNIZED = -1,
}

export enum InviterActivityType {
  INVITER_ACTIVITY_TYPE_NONE = 0,
  INVITER_ACTIVITY_TYPE_NORMAL = 1,
  INVITER_ACTIVITY_TYPE_LIMIT_TIME = 2,
  UNRECOGNIZED = -1,
}

export enum IslandEventCondType {
  ISLAND_EVENT_COND_ONE_WEATHER = 1,
  ISLAND_EVENT_COND_AVATAR_GOODFEEL = 2,
  ISLAND_EVENT_COND_HAS_AVATAR = 3,
  ISLAND_EVENT_COND_ROLE_AFFINITY = 4,
  ISLAND_EVENT_COND_ALL_AFFINITY = 5,
  ISLAND_EVENT_COND_HAS_ONE_EQUIPMENT = 201,
  ISLAND_EVENT_COND_AVATAR = 202,
  ISLAND_EVENT_COND_FINISH_ONE_EVENT = 203,
  ISLAND_EVENT_COND_POS = 204,
  ISLAND_EVENT_COND_SITE = 205,
  UNRECOGNIZED = -1,
}

export enum IslandPositionType {
  ISLAND_POSITION_CABIN_POWER = 1,
  ISLAND_POSITION_CABIN_ENHANCE_KIANA = 2,
  ISLAND_POSITION_CABIN_COLLECT = 3,
  ISLAND_POSITION_CABIN_MISC = 4,
  ISLAND_POSITION_CABIN_VENTURE = 5,
  ISLAND_POSITION_CABIN_ENHANCE_MEI = 6,
  ISLAND_POSITION_CABIN_ENHANCE_BRONYA = 7,
  ISLAND_POSITION_CABIN_ENHANCE_HIMEKO = 8,
  ISLAND_POSITION_CABIN_ENHANCE_THERESA = 9,
  ISLAND_POSITION_CABIN_ENHANCE_FUKA = 10,
  ISLAND_POSITION_NULL = 21,
  ISLAND_POSITION_MAIN = 22,
  UNRECOGNIZED = -1,
}

export enum IslandVentureDispatchCond {
  ISLAND_VENTURE_AVATAR_ID = 1,
  ISLAND_VENTURE_AVATAR_EACH_LEVEL = 2,
  ISLAND_VENTURE_AVATAR_ONE_LEVEL = 3,
  ISLAND_VENTURE_AVATAR_TOTAL_LEVEL = 4,
  ISLAND_VENTURE_AVATAR_EACH_STAR = 5,
  ISLAND_VENTURE_AVATAR_ONE_STAR = 6,
  ISLAND_VENTURE_AVATAR_NUM = 7,
  ISLAND_VENTURE_AVATAR_ATTR_NUM = 8,
  ISLAND_VENTURE_AVATAR_CLASS_NUM = 9,
  ISLAND_VENTURE_AVATAR_ATTR_NOT_SAME = 10,
  ISLAND_VENTURE_AVATAR_CLASS_NOT_SAME = 11,
  UNRECOGNIZED = -1,
}

export enum IslandVisitRecordType {
  ISLAND_RECORD_HELP_FRIEND = 1,
  ISLAND_RECORD_BE_HELPED = 2,
  ISLAND_RECORD_LIKE = 3,
  ISLAND_RECORD_BE_LIKED = 4,
  UNRECOGNIZED = -1,
}

export enum JiguangTagType {
  TAG_NONE = 0,
  TAG_PLAYER_LEVEL = 1,
  TAG_VIP_LEVEL = 2,
  TAG_BATTLE_PASS = 3,
  TAG_GACHA = 4,
  UNRECOGNIZED = -1,
}

export enum KingdomWarCombatType {
  KINGDOM_WAR_COMBAT_TYPE_NONE = 0,
  KINGDOM_WAR_COMBAT_TYPE_VIP_POINT = 1,
  KINGDOM_WAR_COMBAT_TYPE_LEVEL = 2,
  KINGDOM_WAR_COMBAT_TYPE_AVATAR_STAR = 3,
  UNRECOGNIZED = -1,
}

export enum KingdomWarKingdomStatus {
  KINGDOM_WAR_KINGDOM_NONE = 0,
  KINGDOM_WAR_KINGDOM_DEFENSE = 1,
  KINGDOM_WAR_KINGDOM_ATTACK = 2,
  UNRECOGNIZED = -1,
}

export enum KingdomWarPhaseSettleType {
  KINGDOM_WAR_PHASE_SETTLE_TYPE_NONE = 0,
  KINGDOM_WAR_PHASE_SETTLE_TYPE_FAME = 1,
  KINGDOM_WAR_PHASE_SETTLE_TYPE_BELIEF = 2,
  UNRECOGNIZED = -1,
}

export enum KingdomWarPhaseType {
  KINGDOM_WAR_PHASE_NONE = 0,
  KINGDOM_WAR_PHASE_OCCUPY_POINT = 1,
  KINGDOM_WAR_PHASE_ATTACK_AND_DEFENSE = 2,
  KINGDOM_WAR_PHASE_BATTLE_LINE = 3,
  UNRECOGNIZED = -1,
}

export enum KingdomWarPointType {
  KINGDOM_WAR_POINT_NONE = 0,
  KINGDOM_WAR_POINT_NORMAL = 1,
  KINGDOM_WAR_POINT_CHATWORLD = 2,
  KINGDOM_WAR_POINT_MAIN_CITY = 3,
  KINGDOM_WAR_POINT_BOSS = 4,
  UNRECOGNIZED = -1,
}

export enum LinearMissionSolveType {
  LINEAR_MISSION_SOLVE_CLOSE = 0,
  LINEAR_MISSION_SOLVE_RESERVE = 1,
  LINEAR_MISSION_SOLVE_AUTO = 2,
  UNRECOGNIZED = -1,
}

export enum LobbyClientStatus {
  LOBBY_CLIENT_NONE = 0,
  LOBBY_CLIENT_CHOOSING_AVATAR = 1,
  LOBBY_CLIENT_CHOOSING_WEAPON = 2,
  LOBBY_CLIENT_CHOOSING_STIGMATA = 3,
  UNRECOGNIZED = -1,
}

export enum LobbyEnterType {
  LOBBY_ENTER_TYPE_NONE = 0,
  LOBBY_ENTER_TYPE_PRIVATE = 1,
  LOBBY_ENTER_TYPE_ENTER = 2,
  LOBBY_ENTER_TYPE_FAST = 3,
  UNRECOGNIZED = -1,
}

export enum LobbyMemberStatus {
  LOBBY_MEMBER_UNREADY = 1,
  LOBBY_MEMBER_READY = 2,
  LOBBY_MEMBER_FIGHTING = 3,
  UNRECOGNIZED = -1,
}

export enum LobbyStatus {
  LOBBY_NONE = 0,
  LOBBY_PREPARING = 1,
  LOBBY_CONNECTING = 2,
  LOBBY_FIGHTING = 3,
  LOBBY_FINISHING = 4,
  LOBBY_WAIT_DESTROY = 5,
  UNRECOGNIZED = -1,
}

export enum LoginActivityRewardType {
  LOGIN_ACTIVITY_REWARD_NORMAL = 0,
  LOGIN_ACTIVITY_REWARD_BONUS = 1,
  UNRECOGNIZED = -1,
}

export enum LoginRewardActivityType {
  LOGIN_REWARD_ACTIVITY_NONE = 0,
  LOGIN_REWARD_ACTIVITY_NORMAL = 1,
  LOGIN_REWARD_ACTIVITY_NEWBIE = 2,
  UNRECOGNIZED = -1,
}

export enum LoginRewardTriggerType {
  LOGIN_REWARD_TRIGGER_TYPE_NONE = 0,
  LOGIN_REWARD_TRIGGER_TYPE_ONCE = 1,
  LOGIN_REWARD_TRIGGER_TYPE_ALWAYS = 2,
  UNRECOGNIZED = -1,
}

export enum LotteryRewardType {
  LOTTERY_REWARD_TYPE_INVALID = 0,
  LOTTERY_REWARD_TYPE_FIRST_REWARD = 1,
  LOTTERY_REWARD_TYPE_SECOND_REWARD = 2,
  LOTTERY_REWARD_TYPE_THIRD_REWARD = 3,
  UNRECOGNIZED = -1,
}

export enum MailType {
  MAIL_INNER = 1,
  MAIL_OUTER = 2,
  MAIL_NOTICE = 3,
  UNRECOGNIZED = -1,
}

export enum MassiveWarBattleStatus {
  MASSIVE_WAR_BATTLE_STATUS_NONE = 0,
  MASSIVE_WAR_BATTLE_STATUS_PREPARE = 1,
  MASSIVE_WAR_BATTLE_STATUS_FIGHTING = 2,
  MASSIVE_WAR_BATTLE_STATUS_WAIT_SETTLE = 3,
  MASSIVE_WAR_BATTLE_STATUS_CLOSE = 4,
  MASSIVE_WAR_BATTLE_STATUS_DELETE = 5,
  UNRECOGNIZED = -1,
}

export enum MassiveWarFieldActionType {
  MASSIVE_WAR_FIELD_ACTION_NONE = 0,
  MASSIVE_WAR_FIELD_ACTION_JOIN = 1,
  MASSIVE_WAR_FIELD_ACTION_LEAVE = 2,
  UNRECOGNIZED = -1,
}

export enum MasterPupilEventType {
  MASTER_PUPIL_EVENT_GET_PUPIL = 1,
  MASTER_PUPIL_EVENT_GET_MASTER = 2,
  MASTER_PUPIL_EVENT_PUPIL_ONLINE = 3,
  MASTER_PUPIL_EVENT_MASTER_ONLINE = 4,
  MASTER_PUPIL_EVENT_PUPIL_OFFLINE = 5,
  MASTER_PUPIL_EVENT_MASTER_OFFLINE = 6,
  MASTER_PUPIL_EVENT_FINISH_MISSION = 7,
  MASTER_PUPIL_EVENT_STEP_EVAL = 8,
  MASTER_PUPIL_EVENT_PUPIL_GRADUATED = 9,
  MASTER_PUPIL_EVENT_SELF_MISSION = 10,
  MASTER_PUPIL_EVENT_APPLY_PUPIL = 11,
  MASTER_PUPIL_EVENT_APPLY_MASTER = 12,
  MASTER_PUPIL_EVENT_REJECT_MASTER = 13,
  MASTER_PUPIL_EVENT_REJECT_PUPIL = 14,
  MASTER_PUPIL_EVENT_AGREE_MASTER = 15,
  MASTER_PUPIL_EVENT_AGREE_PUPIL = 16,
  MASTER_PUPIL_EVENT_DISMISS_MASTER = 17,
  MASTER_PUPIL_EVENT_DISMISS_PUPIL = 18,
  MASTER_PUPIL_EVENT_COMPANY_MISSION = 19,
  MASTER_PUPIL_EVNET_RECALL_APPLICATION = 20,
  UNRECOGNIZED = -1,
}

export enum MasterPupilOpType {
  MASTER_PUPIL_OP_NONE = 0,
  MASTER_PUPIL_OP_AGREE = 1,
  MASTER_PUPIL_OP_REJECT = 2,
  MASTER_PUPIL_OP_DISMISS = 3,
  UNRECOGNIZED = -1,
}

export enum MasterPupilStatus {
  MASTER_PUPIL_STATUS_NONE = 0,
  MASTER_PUPIL_STATUS_DURING = 1,
  MASTER_PUPIL_STATUS_FINISH = 2,
  MASTER_PUPIL_STATUS_DISMISS = 3,
  UNRECOGNIZED = -1,
}

export enum MasterPupilType {
  MASTER_PUPIL_NONE_TYPE = 0,
  MASTER_PUPIL_MASTER_TYPE = 1,
  MASTER_PUPIL_PUPIL_TYPE = 2,
  MASTER_PUPIL_NEITHER_ALL = 4,
  UNRECOGNIZED = -1,
}

export enum MaterialUseType {
  MATERIAL_USE_GIFT = 1,
  MATERIAL_USE_TREASURE = 2,
  MATERIAL_USE_RAND_GIFT = 3,
  MATERIAL_USE_BUFF = 4,
  MATERIAL_USE_EXTRA_STORY = 5,
  MATERIAL_USE_TRIAL_AVATAR = 6,
  MATERIAL_USE_MATRIX_EXPLORE_POWER = 7,
  MATERIAL_USE_AUTO_GIFT = 10,
  MATERIAL_USE_OPTIONAL_REWARD = 11,
  MATERIAL_USE_RAND_REWARD = 12,
  MATERIAL_USE_RAND_AVATAR = 13,
  MATERIAL_USE_ARMADA_WAR_ENERGE_ITEM = 14,
  MATERIAL_USE_RAND_GIFT_RESTRICT = 15,
  MATERIAL_USE_ARMADA_REUNION = 17,
  MATERIAL_USE_ULTRA_ENDLESS_BUFFER_CUP = 20,
  MATERIAL_USE_BATTLE_PASS_TICKET = 24,
  MATERIAL_USE_AVATAR_FRAGMENT_TRANSFORM = 25,
  MATERIAL_USE_BAODI_TREASURE = 27,
  MATERIAL_USE_PRIVILEGE = 28,
  MATERIAL_USE_OPENWORLD_AVATAR_ACTIVITY_EXP = 29,
  MATERIAL_USE_CONVERT_EQUIPMENT = 30,
  MATERIAL_USE_AUTO_NEW_GIFT = 31,
  MATERIAL_USE_GOD_WAR_AVATAR = 32,
  MATERIAL_USE_GOD_WAR_SUPPORT_AVATAR = 33,
  MATERIAL_USE_RANCH_MONSTER = 34,
  MATERIAL_USE_OPENWORLD_CHAPTER_EQUIP_COST = 36,
  MATERIAL_USE_OPENWORLD_CHAPTER_EQUIP_BUFF = 37,
  MATERIAL_USE_SC_DLC_FEVER_SLOT = 38,
  MATERIAL_USE_SC_DLC_AVATAR = 39,
  MATERIAL_USE_OPENWORLD_CHAPTER_FAME = 40,
  MATERIAL_USE_REWARD_LINE_SCORE = 41,
  MATERIAL_USE_GOD_WAR_GAIN_COIN = 42,
  MATERIAL_USE_OPENWORLD_CHAPTER_HERO = 43,
  MATERIAL_USE_OPENWORLD_CHAPTER_HERO_CARD = 44,
  MATERIAL_USE_MONSTER_CARD = 45,
  MATERIAL_USE_MONSTER_CARD_NO_OVERFLOW = 46,
  MATERIAL_USE_MONSTER_CARD_DROP_NUM_LIMITED = 47,
  MATERIAL_USE_PVZ_ADD_SPECIAL_MATERIAL = 48,
  UNRECOGNIZED = -1,
}

export enum MatrixEventPlotRequirementType {
  MATRIX_EVENT_PLOT_REQUIREMENT_INVALID = 0,
  MATRIX_EVENT_PLOT_REQUIREMENT_MATERIAL = 1,
  MATRIX_EVENT_PLOT_REQUIREMENT_MISSION = 2,
  MATRIX_EVENT_PLOT_REQUIREMENT_DIALOG = 3,
  MATRIX_EVENT_PLOT_REQUIREMENT_FLOOR_EVENT = 4,
  UNRECOGNIZED = -1,
}

export enum MatrixEventType {
  MATRIX_EVENT_INVALID = 0,
  MATRIX_EVENT_FINISH = 1,
  MATRIX_EVENT_CANCEL = 2,
  MATRIX_EVENT_LINK = 3,
  MATRIX_EVENT_COMPLEX = 4,
  MATRIX_EVENT_MOVE = 5,
  MATRIX_EVENT_LOTTERY = 6,
  MATRIX_EVENT_BUFF = 7,
  MATRIX_EVENT_GUESS = 8,
  MATRIX_EVENT_FORWARD = 9,
  MATRIX_EVENT_RESET_FLOOR = 10,
  MATRIX_EVENT_PLOT = 11,
  MATRIX_EVENT_STAGE = 12,
  MATRIX_EVENT_ITEM_DROP = 13,
  MATRIX_EVENT_ITEM_REWARD = 14,
  MATRIX_EVENT_TIPS = 15,
  MATRIX_EVENT_SUB_RPG_MATERIAL = 16,
  MATRIX_EVENT_RANDOM_PLOT_ONCE = 17,
  MATRIX_EVENT_RANDOM_STAGE_ONCE = 18,
  MATRIX_EVENT_RANDOM_AREA_ONCE = 19,
  MATRIX_EVENT_TRIGGER_EVENT_GROUP = 21,
  MATRIX_EVENT_PASS_RPG_TALE_SITE = 101,
  MATRIX_EVENT_UNLOCK_RPG_TALE_ROLE = 102,
  MATRIX_EVENT_AWAY_RPG_TALE_ROLE = 103,
  MATRIX_EVENT_ADD_RPG_TALE_MISSION = 104,
  MATRIX_EVENT_ADD_RPG_TALE_PHOTO = 105,
  MATRIX_EVENT_ADD_RPG_OVERALL = 106,
  MATRIX_EVENT_DEL_RPG_OVERALL = 107,
  MATRIX_EVENT_SET_RPG_OVERALL = 108,
  MATRIX_EVENT_DISCARD_RPG_TALE_SITE = 109,
  MATRIX_EVENT_NOTIFY = 110,
  MATRIX_EVENT_MATRIX_FLOOR = 111,
  MATRIX_EVENT_MONOPOLY = 112,
  MATRIX_EVENT_RPG_DUNGEON = 113,
  MATRIX_EVENT_RPG_DUNGEON_BUFF = 114,
  MATRIX_EVENT_ROGUE_TOWER_HP_HEAL = 115,
  MATRIX_EVENT_ROGUE_TOWER_HP_HEAL_NO_EXTRA = 116,
  MATRIX_EVENT_ROGUE_TOWER_ADD_COIN = 117,
  MATRIX_EVENT_ROGUE_TOWER_SUB_COIN = 118,
  MATRIX_EVENT_ROGUE_TOWER_GET_RANDOM_BUFF = 119,
  MATRIX_EVENT_ROGUE_TOWER_LEVEL_UP_RANDOM_BUFF = 120,
  MATRIX_EVENT_ROGUE_TOWER_HP_COST = 121,
  MATRIX_EVENT_ROGUE_TOWER_SUPPORT_LEVELUP_TIMES = 122,
  MATRIX_EVENT_RANCH_UNLOCK_AREA = 123,
  MATRIX_EVENT_RANCH_STAGE = 124,
  MATRIX_EVENT_TOWN = 125,
  MATRIX_EVENT_DICEY_DUNGEON = 126,
  MATRIX_EVENT_PVZ_ADD_QAVATAR = 127,
  MATRIX_EVENT_CLIENT = 200,
  MATRIX_EVENT_TILE_MARK = 201,
  MATRIX_EVENT_SET_STAGE_SCORE = 302,
  UNRECOGNIZED = -1,
}

export enum MatrixFingerType {
  MATRIX_FINGER_NONE = 0,
  MATRIX_FINGER_SCISSORS = 1,
  MATRIX_FINGER_STONE = 2,
  MATRIX_FINGER_CLOTH = 3,
  UNRECOGNIZED = -1,
}

export enum MatrixFloorStatus {
  MATRIX_FLOOR_STATUS_INVALID = 0,
  MATRIX_FLOOR_STATUS_LOCKED = 1,
  MATRIX_FLOOR_STATUS_UNLOCKED = 2,
  MATRIX_FLOOR_STATUS_FREE = 3,
  MATRIX_FLOOR_STATUS_IN_STAGE = 11,
  MATRIX_FLOOR_STATUS_IN_PLOT = 12,
  UNRECOGNIZED = -1,
}

export enum MatrixFloorType {
  MATRIX_FLOOR_INVALID = 0,
  MATRIX_FLOOR_NORMAL = 1,
  MATRIX_FLOOR_EXPLORE = 2,
  MATRIX_FLOOR_MONOPOLY = 3,
  UNRECOGNIZED = -1,
}

export enum MatrixGridType {
  MATRIX_GRID_NONE = 0,
  MATRIX_GRID_EMPTY = 1,
  MATRIX_GRID_BARRIER = 2,
  MATRIX_GRID_START = 3,
  MATRIX_GRID_ITEM = 4,
  MATRIX_GRID_MONSTER = 5,
  MATRIX_GRID_RANDOM = 6,
  MATRIX_GRID_TRAP = 7,
  MATRIX_GRID_SHOP = 8,
  MATRIX_GRID_EXIT = 9,
  MATRIX_GRID_DIALOG = 10,
  MATRIX_GRID_TELEPORT = 11,
  MATRIX_GRID_ICE = 12,
  MATRIX_GRID_INVALID = -1,
  UNRECOGNIZED = -1,
}

export enum MatrixMonopolyBuffType {
  MATRIX_MONOPOLY_BUFF_NONE = 0,
  MATRIX_MONOPOLY_BUFF_DICE = 1,
  MATRIX_MONOPOLY_BUFF_STAGE = 2,
  MATRIX_MONOPOLY_BUFF_DROP = 3,
  UNRECOGNIZED = -1,
}

export enum MatrixTriggerType {
  MATRIX_TRIGGER_NONE = 0,
  MATRIX_TRIGGER_STEP_NUM_GE = 1,
  MATRIX_TRIGGER_POSITION = 2,
  MATRIX_TRIGGER_STEP_NUM_LE = 3,
  UNRECOGNIZED = -1,
}

export enum MechaSlot {
  MECHA_SLOT_NONE = 0,
  MECHA_SLOT_LEFT_1 = 1,
  MECHA_SLOT_LEFT_2 = 2,
  MECHA_SLOT_CENTER = 3,
  MECHA_SLOT_RIGHT_2 = 4,
  MECHA_SLOT_RIGHT_1 = 5,
  UNRECOGNIZED = -1,
}

export enum MedalOpType {
  MEDAL_WEAR = 1,
  MEDAL_OFF = 2,
  UNRECOGNIZED = -1,
}

export enum MedalTimeType {
  MEDAL_TIME_FOREVER = 1,
  MEDAL_TIME_DURATION = 2,
  MEDAL_TIME_UNTIL = 3,
  UNRECOGNIZED = -1,
}

export enum MiniRankType {
  MINI_RANK_NONE = 0,
  MINI_RANK_RPG_STAGE = 1,
  MINI_RANK_GENERAL_ACTIVITY_STAGE = 2,
  MINI_RANK_CHAPTER_ACTIVITY_STAGE = 3,
  MINI_RANK_RPG_SCHEDULE = 4,
  MINI_RANK_RANCH_ACTIVITY_STAGE = 5,
  MINI_RANK_OPENWORLD_CHAPTER_CHALLENGE = 6,
  UNRECOGNIZED = -1,
}

export enum MissionFinishWay {
  MISSION_FINISH_NONE = 0,
  MISSION_AUTO = 1,
  MISSION_ANY_STORY_STAGE_NORMAL = 2,
  MISSION_ANY_STORY_STAGE_HARD = 3,
  MISSION_ANY_STORY_STAGE_HELL = 4,
  MISSION_SPECIFIC_STAGE_ID = 5,
  MISSION_SPECIFIC_MONSTER_ID = 6,
  MISSION_SPECIFIC_UNIQUE_MONSTER_ID = 7,
  MISSION_KILL_ANY_ENEMY = 8,
  MISSION_KILL_SPECIFIC_MONSTER_CATEGORY = 9,
  MISSION_TRIGGER_ABILITY_ACTION = 10,
  MISSION_KILL_WITH_ANIM_EVENT_ID = 11,
  MISSION_AVATAR_LEVEL_UP_BY_MATERIAL = 12,
  MISSION_AVATAR_SUB_SKILL_LEVEL_UP = 13,
  MISSION_GACHA = 14,
  MISSION_EQUIPMENT_POWER_UP = 15,
  MISSION_STAGE_SUCC_WITH_FRIEND = 16,
  MISSION_COST_STAMINA = 17,
  MISSION_STAGE_NORMAL_WITH_SPECIFIC_AVATAR_CLASS = 18,
  MISSION_STAGE_HARD_WITH_SPECIFIC_AVATAR_CLASS = 19,
  MISSION_ANY_WEEK_DAY_STAGE = 20,
  MISSION_ANY_BEFALL_STAGE = 21,
  MISSION_ANY_NOT_STORY_STAGE = 22,
  MISSION_KILL_BY_ATTACK_CATEGORY_TAG = 23,
  MISSION_AVATAR_STAR = 24,
  MISSION_AVATAR_SUB_SKILL_LEVEL = 25,
  MISSION_AVATAR_LEVEL = 26,
  MISSION_STAGE_HELL_WITH_SPECIFIC_AVATAR_CLASS = 27,
  MISSION_STAGE_NORMAL_WITH_SPECIFIC_AVATAR = 28,
  MISSION_STAGE_HARD_WITH_SPECIFIC_AVATAR = 29,
  MISSION_STAGE_HELL_WITH_SPECIFIC_AVATAR = 30,
  MISSION_STORY_STAGE_FAIL_NUM = 31,
  MISSION_STAGE_MAX_COMBO_NUM = 32,
  MISSION_STORY_STAGE_NORMAL_NUM = 33,
  MISSION_STORY_STAGE_HARD_NUM = 34,
  MISSION_STORY_STAGE_HELL_NUM = 35,
  MISSION_FINISH_NO_ACHIEVEMENT_NUM = 36,
  MISSION_TOTAL_AVATAR_SKILL_POINT_NUM = 37,
  MISSION_AVATAR_STAR_NUM = 38,
  MISSION_AVATAR_GOODFEEL_LEVEL_NUM = 39,
  MISSION_WEAPON_PICTORIAL_NUM = 40,
  MISSION_STIGMATA_PICTORIAL_NUM = 41,
  MISSION_STIGMATA_PICTORIAL_SUIT_NUM = 42,
  MISSION_TEN_HCOIN_GACHA_STAR_NUM = 43,
  MISSION_FRIEND_POINT_NUM = 44,
  MISSION_STAGE_MIN_TIME_TEN_SECOND = 45,
  MISSION_STAGE_ASSISTANT_NUM = 46,
  MISSION_STAGE_SUCC_NUM = 47,
  MISSION_STAGE_WITH_ASSISTANT_SUCC_NUM = 48,
  MISSION_WEAPON_POWER_UP = 49,
  MISSION_STIGMATA_POWER_UP = 50,
  MISSION_STAGE_TAG_NUM = 51,
  MISSION_ISLAND_COLLECT = 52,
  MISSION_ISLAND_GET_VENTURE_REWARD = 53,
  MISSION_AVATAR_TOUCH_NUM = 54,
  MISSION_EQUIPMENT_POWER_UP_TWO_RATE = 55,
  MISSION_SCOIN_EXCHANGE_TEN_RATE = 56,
  MISSION_ISLAND_MAX_COST_POWER = 57,
  MISSION_ISLAND_VENTURE_TOTAL_COST_HOUR = 58,
  MISSION_TOTAL_COST_STAMINA = 59,
  MISSION_STAGE_MAX_SCORE_WITH_STAGE_ID = 60,
  MISSION_STAGE_TOTAL_SCORE_WITH_STAGE_ID = 61,
  MISSION_STAGE_MAX_SCORE_WITH_STAGE_TAG = 62,
  MISSION_STAGE_TOTAL_SCORE_WITH_STAGE_TAG = 63,
  MISSION_AVATAR_ADD_SUB_SKILL = 64,
  MISSION_MULTI_WEAPON_POWER_UP_LEVEL = 65,
  MISSION_MULTI_STIGMATA_POWER_UP_LEVEL = 66,
  MISSION_ISLAND_CABIN_LEVEL_UP = 67,
  MISSION_ISLAND_CABIN_EXTEND_GRADE = 68,
  MISSION_ISLAND_ADD_TECH = 69,
  MISSION_GACHA_WITH_TYPE = 70,
  MISSION_EXTRASTORY_CHALLENGE_NUM = 71,
  MISSION_EXTRASTORY_STAGE_MAX_SCORE = 72,
  MISSION_REAL_NAME = 73,
  MISSION_ENDLESS_GROUP_LEVEL = 75,
  MISSION_SHARE_GAME_IN_SNS = 80,
  MISSION_COLLECT = 81,
  MISSION_ACTIVITY_PROGRESS = 82,
  MISSION_BUY_GOODS_WITH_SCOIN_OR_HCOIN = 83,
  MISSION_SCOIN_EXCHANGE = 84,
  MISSION_STAMINA_EXCHANGE = 85,
  MISSION_CONSIGNED_ORDER = 86,
  MISSION_ROGUE_STAGE = 87,
  MISSION_STAGE_MAX_COMBO_PASS = 88,
  MISSION_OPENWORLD_FINISH_EVENT_TYPE = 90,
  MISSION_OPENWORLD_FIGHT_BOSS = 91,
  MISSION_OPENWORLD_KILL_BOSS = 92,
  MISSION_OPENWORLD_BOSS_DAMAGE = 93,
  MISSION_OPENWORLD_QUEST_LEVEL = 94,
  MISSION_OPENWORLD_FINISH_QUEST_NUM = 95,
  MISSION_OPENWORLD_FINISH_SIDE_QUEST_NUM = 96,
  MISSION_OPENWORLD_PERFECT_REWARD_NUM = 97,
  MISSION_EQUIPMENT_POWER_UP_NO_BACKTRACK = 98,
  MISSION_JOIN_ARMADA = 99,
  MISSION_FIGHT_ARMADA_STAGE = 100,
  MISSION_OPENWORLD_FINISH_QUEST_NO_BACKTRACK = 101,
  MISSION_OPENWORLD_REWARD_NUM = 102,
  MISSION_WAREHOUSE_DONATE = 103,
  MISSION_OPENWORLD_FINISH_STORY = 104,
  MISSION_STORY_STAGE_WITH_AVATAR_NUM = 105,
  MISSION_EQUIPMENT_EVO = 107,
  MISSION_USE_AVATAR_KILL_MONSTER = 108,
  MISSION_AVATAR_MAX_LEVEL = 109,
  MISSION_AVATAR_MAX_SUB_SKILL_LEVEL = 110,
  MISSION_WEAPON_TYPE_MAX_LEVEL = 111,
  MISSION_HELP_FRIEND_ISLAND = 112,
  MISSION_STAGE_MIN_BE_HIT_PASS = 113,
  MISSION_STAGE_COSMOS_BREAK = 114,
  MISSION_STAGE_COSMOS_BREAK_DAMAGE = 115,
  MISSION_STAGE_USE_EX_SKILL = 116,
  MISSION_REFINE_STIGMATA = 117,
  MISSION_DISJOIN_EQUIPMENT = 118,
  MISSION_FINISH_MP_STAGE_WITH_TYPE = 119,
  MISSION_USE_MP_TEAM_SKILL = 120,
  MISSION_USE_MP_QTE_SKILL = 121,
  MISSION_OPENWORLD_FINISH_EVENT_TYPE_NO_BACKTRACK = 122,
  MISSION_MIN_BE_HIT_PASS_WITH_STAGE_ID = 123,
  MISSION_FINISH_MP_STAGE = 124,
  MISSION_BIND_ACCOUNT = 125,
  MISSION_STAGE_DEFEND_TARGET_MIN_HP_PASS = 126,
  MISSION_STAGE_DEFEND_TARGET_MIN_HP_PERCENT_PASS = 127,
  MISSION_EXTRASTORY_HAS_PASS_NUM_WITH_DIFFICULTY = 128,
  MISSION_EXTRASTORY_HAS_PASS_NUM = 129,
  MISSION_CLEAN_STAGE_NUM = 130,
  MISSION_GET_CARD_REWARD_NUM = 131,
  MISSION_TOTAL_COST_SCOIN_NUM = 132,
  MISSION_TOTAL_COST_SCOIN_NUM_BACKTRACK = 133,
  MISSION_TOTAL_COST_HCOIN_NUM = 134,
  MISSION_TOTAL_COST_HCOIN_NUM_BACKTRACK = 135,
  MISSION_MP_MVP_NUM = 136,
  MISSION_MP_MVP_NUM_BACKTRACK = 137,
  MISSION_GET_MP_LIKE_NUM = 138,
  MISSION_GET_MP_LIKE_NUM_BACKTRACK = 139,
  MISSION_FINISH_MP_STAGE_WITH_TYPE_BACKTRACK = 140,
  MISSION_FINISH_MP_STAGE_BACKTRACK = 141,
  MISSION_MP_LEVEL = 143,
  MISSION_STAGE_TOTAL_MAX_SCORE_WITH_STAGE_TAG = 144,
  MISSION_FACEBOOK_LIKE = 145,
  MISSION_STAGE_MIN_TIME_WITH_STAGE_ID = 146,
  MISSION_STAGE_TAG_COMBO_PASS = 147,
  MISSION_STAGE_TAG_WITH_SPECIFIC_AVATAR = 148,
  MISSION_AVATAR_DRESSED_EQUIPMENTS = 149,
  MISSION_DRESSED_ANY_BEFALL_WEAPON = 150,
  MISSION_POWERUP_MULTI_SPECIFIC_EQUIP_LEVEL = 151,
  MISSION_EVO_MULTI_SPECIFIC_EQUIP_STAR = 152,
  MISSION_EVO_ANY_BEFALL_WEAPON_STAR = 153,
  MISSION_FRAGMENTS_EXCHANGE_STIGMATA = 154,
  MISSION_GET_NEWBIE_TRAIN_REWARD = 155,
  MISSION_STAGE_TAG_SUCCESS_EVADE_PASS = 156,
  MISSION_CHALLENGE_SPECIFIC_STAGE_ID = 157,
  MISSION_POWERUP_MULTI_SPECIFIC_EQUIP_BACKTRACK = 158,
  MISSION_EVO_MULTI_SPECIFIC_EQUIP_BACKTRACK = 159,
  MISSION_FINISH_EXBOSS_NUM = 160,
  MISSION_FINISH_EXBOSS_NUM_BACKTRACK = 161,
  MISSION_WIN_LEVEL_EXBOSS = 162,
  MISSION_GET_EXBOSS_RANK = 163,
  MISSION_OPENWORLD_TECH_LEVEL = 164,
  MISSION_BIND_MOBILE = 165,
  MISSION_BIND_EMAIL = 166,
  MISSION_SET_ACCOUNT_USERNAME = 167,
  MISSION_UNLOCK_AVATAR = 168,
  MISSION_FINISH_SPECIFIC_MISSION = 169,
  MISSION_FINISH_SPECIFIED_DIFFICULTY_RAID_WITH_MASTER = 170,
  MISSION_FINISH_PLAYER_LEVEL = 171,
  MISSION_GET_EXBOSS_SCORE_BACKTRACK = 172,
  MISSION_PUPIL_GRADUATED_BACKTRACK = 173,
  MISSION_MASTER_HAS_NUM_GRADUATED_PUPIL_BACKTRACK = 174,
  MISSION_PUBLISH_MASTER_PUPIL_CARD = 175,
  MISSION_FINISH_BE_MASTER_BACKTRACK = 176,
  MISSION_RECRUIT_NUM_PUPIL_BACKTRACK = 177,
  MISSION_FINISH_BE_PUPIL_BACKTRACK = 178,
  MISSION_GET_EXBOSS_RANK_PERCENT = 179,
  MISSION_SPECIFIC_STAGE_ID_BACKTRACK = 180,
  MISSION_MP_LIKE_NUM = 181,
  MISSION_CLICK_LINK = 182,
  MISSION_COLLECT_FURNITURE_SUIT = 183,
  MISSION_BUY_FURNITURE = 184,
  MISSION_COLLECT_SPECIFIC_ITEM = 185,
  MISSION_DORM_COMFORT_LEVEL = 186,
  MISSION_DORM_COMFORT_VALUE = 187,
  MISSION_DORM_FACILITY_LEVEL = 188,
  MISSION_DORM_HOUSE_LEVEL = 189,
  MISSION_OPENWORLD_QUEST_LEVEL_BACKTRACK = 190,
  MISSION_DORM_HOUSE_LEVEL_IN_PARAM = 191,
  MISSION_MATERIAL_RECYCLE = 192,
  MISSION_OPENWORLD_FINISH_EVENT_SUBTYPE_LIST = 193,
  MISSION_OPENWORLD_FINISH_QUEST_SPECIFIC_AVATAR = 194,
  MISSION_EXBOSS_STAGE_SPECIFIC_AVATAR = 195,
  MISSION_RAID_STAGE_SPECIFIC_AVATAR = 197,
  MISSION_ISLAND_VENTURE_SPECIFIC_AVATAR = 198,
  MISSION_DORM_EVENT_SPECIFIC_AVATAR = 199,
  MISSION_ROGUE_STAGE_SPECIFIC_AVATAR = 200,
  MISSION_PASS_STAGE_SPECIFIC_AVATAR = 201,
  MISSION_PASS_SPECIFIC_STAGE_SPECIFIC_AVATAR = 202,
  MISSION_PASS_STAGE_SPECIFIC_REQUIRE = 203,
  MISSION_SEALED_FINISH_NUM_BACKTRACK = 204,
  MISSION_SEALED_RANK_LEVEL = 205,
  MISSION_DORM_USE_FACILITY_NUM = 206,
  MISSION_POWERUP_MULTI_SPECIFIC_EQUIP_MAINID_BACKTRACK = 207,
  MISSION_EVO_MULTI_SPECIFIC_EQUIP_MAINID_BACKTRACK = 208,
  MISSION_SEALED_FINISH_NUM = 209,
  MISSIONG_ROGUE_STAGE_HARD_LEVEL_PROGRESS = 210,
  MISSIONG_ROGUE_STAGE_HARD_LEVEL_PROGRESS_BACKTRACK = 211,
  MISSION_AVATAR_GOODFEEL_LEVEL_SPECIFIC_AVATAR = 212,
  MISSION_COLLECT_SPECIFIC_AMOUNT_ITEMS = 213,
  MISSION_USE_SPECIFIC_AVATARS_KILL_MONSTER = 214,
  MISSION_WORLD_BOSS_PERSONAL_TECH_LEVEL_UP_NUM = 215,
  MISSION_WORLD_BOSS_GLOBAL_TECH_DONATE_NUM = 216,
  MISSION_WORLD_BOSS_USE_PERSONAL_TECH_NUM = 217,
  MISSION_PASS_STAGE_WITH_EQUIPMENT_MAINID = 218,
  MISSION_REACH_DAILY_DUTY_POINT = 219,
  MISSION_REACH_DAILY_DUTY_POINT_BACKTRACK = 220,
  MISSION_REACH_WEEKLY_DUTY_POINT = 221,
  MISSION_REACH_WEEKLY_DUTY_POINT_BACKTRACK = 222,
  MISSION_LEVEL_MULTI_EQUIP_MAINID_BACKTRACK = 223,
  MISSION_STAR_MULTI_EQUIP_MAINID_BACKTRACK = 224,
  MISSION_AVATAR_DRESSED_EQUIPMENTS_MAINID = 225,
  MISSION_AVATAR_SUB_SKILL_LEVELUP_PROGRESS = 226,
  MISSION_STAGE_TOTAL_BATTLE_SCORE_WITH_STAGE_TAG = 227,
  MISSION_STAGE_RANK_WITH_STAGE_TAG = 228,
  MISSION_ARMADA_MATRIX_FINISH_FLOOR = 229,
  MISSION_ARMADA_MATRIX_FOUND_TREASURE = 230,
  MISSION_TEAM_ASSAULT_PROGRESS = 231,
  MISSION_TEAM_ASSAULT_ACTIVITY_TOTAL_SCORE = 232,
  MISSION_GENERAL_ACTIVITY_FINISH_TIMES = 233,
  MISSION_GENERAL_ACTIVITY_SCORE_BACKTRACK = 234,
  MISSION_DORM_CLIENT_CUSTOM = 241,
  MISSION_OPENWORLD_CHOOSE_QUEST = 242,
  MISSION_SHOP_BUY_GOODS = 243,
  MISSION_DORM_TAKE_DAILY_STAMINA = 244,
  MISSION_OPENWORLD_MAKE_MECHA_TIMES = 253,
  MISSION_OPENWORLD_MAKE_MECHA_TIMES_BACKTRACK = 254,
  MISSION_OPENWORLD_TECH_ADD_EXP_TIMES = 255,
  MISSION_OPENWORLD_QUEST_RATE = 256,
  MISSION_OPENWORLD_QUEST_RATE_BACKTRACK = 257,
  MISSION_OPENWORLD_QUEST_FINISHED_CHALLENGE_NUM = 258,
  MISSION_OPENWORLD_QUEST_FINISHED_WITH_MECHA = 259,
  MISSION_OPENWORLD_HACK_ITEM = 260,
  MISSION_OPENWORLD_TD_STAGE_RATE = 261,
  MISSION_OPENWORLD_TD_STAGE_RATE_BACKTRACK = 262,
  MISSION_OPENWORLD_FINISH_EVENT_TYPE_WITH_MAP = 263,
  MISSION_OPENWORLD_QUEST_LEVEL_WITH_MAP = 264,
  MISSION_OPENWORLD_QUEST_LEVEL_BACKTRACK_WITH_MAP = 265,
  MISSION_OPENWORLD_FINISH_QUEST_NUM_WITH_MAP = 266,
  MISSION_OPENWORLD_FINISH_QUEST_NO_BACKTRACK_WITH_MAP = 267,
  MISSION_OPENWORLD_FINISH_QUEST_NO_BACKTRACK_WITH_SUB_TYPE_AND_MAP = 268,
  MISSION_OPENWORLD_FINISH_EVENT_TYPE_NO_BACKTRACK_WITH_MAP = 269,
  MISSION_GOBACK_DUTY_POINT = 270,
  MISSION_ONLINE_TIME = 272,
  MISSION_TAKE_PHOTOS = 273,
  MISSION_WIKI_EQUIPMENT_NUM_BY_RARITY = 274,
  MISSION_WIKI_STIGMATA_SUIT_NUM_BY_RARITY = 275,
  MISSION_WIKI_CG_NUM = 276,
  MISSION_WIKI_ACHIEVEMENT_NUM_BY_TYPE = 277,
  MISSION_RECLAIM_GACHA_BOX = 282,
  MISSION_RECLAIM_LEVEL = 283,
  MISSION_ARMADA_WAR_PLAYER_SEASON_STAGE_NUM = 291,
  MISSION_ARMADA_WAR_PLAYER_SEASON_BATTLE_NUM = 292,
  MISSION_ARMADA_WAR_ARMADA_SEASON_STAGE_NUM = 293,
  MISSION_ARMADA_WAR_ARMADA_SEASON_WIN_STRONGHOLD_NUM = 294,
  MISSION_ARMADA_WAR_ARMADA_SEASON_WIN_NUM = 295,
  MISSION_ARMADA_WAR_ARMADA_GRADE = 296,
  MISSION_BINGO_ACTIVITY_FLOP_CARD = 297,
  MISSION_BINGO_ACTIVITY_BINGO_COMPLETE = 298,
  MISSION_GOBACK_GAIN_EXP = 299,
  MISSION_FINISH_MP_STAGE_WITH_GOBACK_PLAYER = 300,
  MISSION_OPENWORLD_BOSS_GET_RATING_NUM = 301,
  MISSION_OPENWORLD_BOSS_KILLED_NUM_WITHIN_TIME_LIMIT = 302,
  MISSION_OPENWORLD_ACTIVITY_LEVEL = 303,
  MISSION_OPENWORLD_BOSS_HUNT_FIND_CLUE_NUM = 304,
  MISSION_OPENWORLD_BOSS_KILLED_NUM_SPECIFIC_AVATAR = 305,
  MISSION_OPENWORLD_BOSS_MP_STAGE_NUM_AS_MP_LEADER = 306,
  MISSION_OPENWORLD_BOSS_MP_STAGE_NUM_AS_MP_ASSISTANT = 307,
  MISSION_RPG_TALE_ROLE_NUM = 308,
  MISSION_RPG_TALE_PASS_SITE = 309,
  MISSION_RPG_TALE_OVERALL_EQUAL = 310,
  MISSION_RPG_TALE_TOTAL_STAGE_SCORE = 311,
  MISSION_MATRIX_FINISH_EVENT = 315,
  MISSION_MATRIX_COLLECT_ITEM = 316,
  MISSION_VIRTUAL_TRAIN_AVATAR_NUM = 317,
  MISSION_VIRTUAL_TRAIN_AVATAR_STAR_NUM = 318,
  MISSION_VIRTUAL_TRAIN_GACHA_TIMES = 319,
  MISSION_VIRTUAL_TRAIN_GACHA_AVATAR_STAR = 320,
  MISSION_RPG_TALE_TAKE_PRODUCT_TIMES = 321,
  MISSION_RPG_TALE_TAKE_PRODUCT_NUM = 322,
  MISSION_RPG_TALE_TOWER_FLOOR = 323,
  MISSION_RPG_TALE_TOWER_TIMES = 324,
  MISSION_RPG_TALE_ABILITY_LEVEL_BACKTRACK = 325,
  MISSION_FINISH_ANY_RAID_ACTIVITY = 330,
  MISSION_FRIEND_INVITE = 331,
  MISSION_MASTER_PUPIL_INVITE = 332,
  MISSION_ARMADA_APPLY = 333,
  MISSION_AVATAR_LEVEL_NUM = 334,
  MISSION_ISLAND_CABIN_LEVEL = 335,
  MISSION_DORM_ROOM_UNLOCK = 336,
  MISSION_SHOPPING_TIMES = 337,
  MISSION_COUPLE_TOWER_FINISH_FLOOR = 338,
  MISSION_COUPLE_TOWER_ASSISTANT = 339,
  MISSION_COUPLE_TOWER_ENTER_TIMES = 340,
  MISSION_ADD_UP_VIP_POINT = 341,
  MISSION_DORM_USE_FACILITY_NUM_NO_RESULT = 342,
  MISSION_FINISH_SPECIFIC_PLOT_ID = 343,
  MISSION_OPENWORLD_ENDLESS_SCORE = 344,
  MISSION_OPENWORLD_ENDLESS_BOSS = 345,
  MISSION_OPENWORLD_ENDLESS_ADD_GROUP_LEVEL = 346,
  MISSION_OPENWORLD_ENDLESS_GROUP_LEVEL = 347,
  MISSION_OPENWORLD_ENDLESS_FINISH_MONSTER_GROUP = 348,
  MISSION_OPENWORLD_ENDLESS_USE_ITEM = 349,
  MISSION_ENDLESS_FINISH_STAGE_OR_BOSS_WITH_ENDLESS_TYPE = 350,
  MISSION_ENDLESS_FINISH_STAGE_OR_BOSS_SPECIFIC_AVATAR = 351,
  MISSION_QUANTUM_ENDLESS_PASS_MONSTER_GROUP = 352,
  MISSION_FRONT_ENDLESS_FINISH_FLOOR = 353,
  MISSION_EQUIPMENT_POWER_UP_LEVEL_BACKTRACK = 365,
  MISSION_FARM_ACTIVITY_SPEED_UP_PRODUCE_TIMES = 366,
  MISSION_FARM_ACTIVITY_FINISH_PRODUCE_TIMES = 367,
  MISSION_FARM_ACTIVITY_FARM_LEVEL = 368,
  MISSION_FARM_ACTIVITY_UNLOCK_SLOT_NUM = 369,
  MISSION_FARM_ACTIVITY_FINISH_PRODUCE_SPECIFIC_MATERIAL = 370,
  MISSION_TAKE_SPECIFIC_NPC_RED_ENVELOPE_NUM = 372,
  MISSION_GACHA_WITH_MULTI_TYPES = 373,
  MISSION_TOWER_RAID_NUM = 374,
  MISSION_TOWER_RAID_BOSS_NUM = 375,
  MISSION_TOWER_RAID_FINISH_ALL_NUM = 376,
  MISSION_CHATWORLD_ONLINE_TIME = 377,
  MISSION_GOBACK_SCORE = 378,
  MISSION_CHATWORLD_USE_ITEM = 379,
  MISSION_CAMPAIGN_FINISH_PHASE = 380,
  MISSION_CAMPAIGN_FINISH = 381,
  MISSION_CAMPAIGN_FINISH_STAGE = 382,
  MISSION_AVATAR_ARTIFACT_LEVEL = 383,
  MISSION_LEVEL_LOCK_EXP = 384,
  MISSION_SET_LEVEL_LOCK_ID = 385,
  MISSION_ELF_STAR = 386,
  MISSION_ELF_LEVEL = 387,
  MISSION_ELF_STAR_NUM = 388,
  MISSION_ELF_LEVEL_NUM = 389,
  MISSION_STAGE_TAG_NUM_SPECIFIC_ELF = 390,
  MISSION_STAGE_NUM_SPECIFIC_ELF = 391,
  MISSION_ENDLESS_FINISH_STAGE_OR_BOSS_SPECIFIC_ELF = 392,
  MISSION_EXBOSS_STAGE_SPECIFIC_ELF = 393,
  MISSION_FINISH_MP_STAGE_SPECIFIC_ELF = 394,
  MISSION_STORY_STAGE_SPECIFIC_ELF = 395,
  MISSION_ELF_TALENT_LEVEL = 396,
  MISSION_ELF_TALENT_GROUP_LEVEL = 397,
  MISSION_ELF_TALENT_SLOT_UNLOCK_NUM = 398,
  MISSION_ELF_TOTAL_PERIOD_UPGRADE_TIMES = 399,
  MISSION_STAGE_NUM_WITH_ELF = 400,
  MISSION_ELF_TOTAL_SKILL_LEVEL = 401,
  MISSION_CAMPAIGN_SHORT_CHAT = 421,
  MISSION_CAMPAIGN_FINISH_SCORE = 422,
  MISSION_CAMPAIGN_MVP = 423,
  MISSION_CAMPAIGN_TEAM_DRAW_RARITY = 424,
  MISSION_CMAPAIGN_SELF_DRAW = 425,
  MISSION_CAMPAIGN_LIKE_NUM = 426,
  MISSION_CAMPAIGN_TEACH_MODE_FINISH_PHASE = 427,
  MISSION_CAMPAIGN_TEACH_MODE_FINISH = 428,
  MISSION_PASS_STAGE_WITH_ANY_SPECIFIC_AVATAR = 441,
  MISSION_STAGE_TAG_NUM_AS_LEADER_OR_ASSISTANT = 442,
  MISSION_KINGDOM_WAR_MOVE_STEP = 443,
  MISSION_TVT_STAGE_SETTLE_NUM = 444,
  MISSION_TVT_TOTAL_WIN_NUM = 445,
  MISSION_TVT_MAX_WIN_STREAK = 446,
  MISSION_TVT_MVP_NUM = 447,
  MISSION_TVT_DIVISION = 448,
  MISSION_TVT_STAGE_SCOIN = 449,
  MISSION_CHATWORLD_KILL_NUM = 451,
  MISSION_GOBACK_TOTAL_LOGIN_DAYS = 452,
  MISSION_ARMADA_MATRIX_USE_ITEM = 453,
  MISSION_ARMADA_MATRIX_FIRE_BOSS_ITEM = 454,
  MISSION_ARMADA_MATRIX_KILL_MONSTER = 455,
  MISSION_STAGE_ACTIVITY_NUM_AS_LEADER_OR_ASSISTANT = 456,
  MISSION_CHATWORLD_BATTLE_SCORE = 457,
  MISSION_COUPLE_TOWER_KILL_MONSTER = 458,
  MISSION_COUPLE_TOWER_KILL_BOSS = 459,
  MISSION_COUPLE_TOWER_BUFF_NUM = 460,
  MISSION_COUPLE_TOWER_KILL_WAVE = 461,
  MISSION_TOTAL_LOGIN_DAYS = 462,
  MISSION_GACHA_TOTAL_SCORE = 463,
  MISSION_MONOPOLY_THROW_DICE = 464,
  MISSION_MONOPOLY_EXPLORE = 465,
  MISSION_MONOPOLY_PASS_AREA = 466,
  MISSION_MATRIX_FINISH_FLOOR = 467,
  MISSION_MATRIX_TRIGGER_EVENT = 468,
  MISSION_STAGE_TAG_CHALLENGE_NUM = 469,
  MISSION_EQUIPMENT_FORGE_TIMES = 470,
  MISSION_GLOBAL_WAR_TOTAL_CURRENCY = 471,
  MISSION_GLOBAL_WAR_CURRENCY_BY_STAGE = 472,
  MISSION_GLOBAL_WAR_CURRENCY_BY_EXCHANGE = 473,
  MISSION_GLOBAL_WAR_EXCHANGE_TIMES = 474,
  MISSION_GLOBAL_WAR_FINISH_POINT = 475,
  MISSION_GLOBAL_WAR_CURRENCY_BY_SWEEP = 476,
  MISSION_GLOBAL_WAR_FINISH_OR_EXCHANGE_TIMES_WITH_POINT_ID_LIST = 477,
  MISSION_SHOP_COST_MCOIN_NUM = 480,
  MISSION_VIRTUAL_TRAIN_CUSTOM_LEVEL = 481,
  MISSION_VIRTUAL_TRAIN_GROUP_TOTAL_LEVEL_UP_TIMES = 482,
  MISSION_GRATUITY_STAGE_FINISH_NUM = 483,
  MISSION_GRATUITY_STAGE_END_NUM = 484,
  MISSION_GRATUITY_STAGE_ASSIST_NUM = 485,
  MISSION_GRATUITY_PUBLISH = 486,
  MISSION_GRATUITY_INVITE = 487,
  MISSION_GRATUITY_COLLECT = 488,
  MISSION_SEND_RED_ENVELOPE_IN_SPECIFIC_TIME = 489,
  MISSION_ADVENTURE_LEVEL = 490,
  MISSION_ADVENTURE_ADD_BADGE = 491,
  MISSION_ADVENTURE_ADD_BADGE_BACKTRACK = 492,
  MISSION_ADVENTURE_FINISH_ADVENTURE_BY_RARITY = 493,
  MISSION_ADVENTURE_FINISH_ADVENTURE = 494,
  MISSION_ADVENTURE_TAKE_SCOIN = 495,
  MISSION_SCRATCH_TICKET_SCRATCH_NUM = 501,
  MISSION_SCRATCH_TICKET_ROUND_NUM = 502,
  MISSION_BBQ_COOK_NUM = 503,
  MISSION_NINJA_SLOT_LEVEL = 504,
  MISSION_DLC_USE_ACTIVE_SKILL = 505,
  MISSION_DLC_OUTER_AREA_KILL_NUM = 506,
  MISSION_DLC_SHIELD_MONSTER_KILL_NUM = 507,
  MISSION_DLC_IN_CIRCLE_KILL_NUM = 508,
  MISSION_DLC_AIR_KILL_NUM = 509,
  MISSION_DLC_THROW_SKILL_KILL_NUM = 510,
  MISSION_DLC_ACTIVE_SKILL_KILL_NUM = 511,
  MISSION_DLC_BREAK_FREQUENCY_SHIELD_NUM = 512,
  MISSION_DLC_BREAK_HARD_SHIELD_NUM = 513,
  MISSION_DLC_EX_JUMP = 514,
  MISSION_DLC_USE_THROW_SKILL = 515,
  MISSION_DLC_AVATAR_TALENT_TOTAL_LEVEL = 516,
  MISSION_DLC_TOWER_MAX_PROGRESS = 517,
  MISSION_DLC_TOWER_TOTAL_PROGRESS = 518,
  MISSION_DLC_ENTER_STAGE_WITH_SPECIFIC_AVATAR = 519,
  MISSION_DLC_SUPPORT_NPC_LEVEL = 520,
  MISSION_DLC_TALENT_LEVEL = 521,
  MISSION_DLC_LEVEL = 522,
  MISSION_DLC_COLLECTION_TYPE_NUM = 523,
  MISSION_OPENWORLD_KILL_ENEMY_WITH_MAP = 524,
  MISSION_OPENWORLD_FINISH_ONCE_EVENT_BACKTRACK_WITH_MAP = 525,
  MISSION_DLC_TOWER_MAX_PROGRESS_NO_BACKTRACK = 526,
  MISSION_OPENWORLD_CHOOSE_ANY_QUEST = 527,
  MISSION_OPENWORLD_FINISH_SPECIFIC_STORY_NUM_BACKTRACK = 528,
  MISSION_CHATWORLD_MAKE_ACTION_NUM = 545,
  MISSION_CHATWORLD_FISH_SUCC_OR_WAIT_ASSIST_NUM = 546,
  MISSION_CHATWORLD_PRAY_NUM = 547,
  MISSION_STAGE_TAG_FAIL_NUM = 548,
  MISSION_LOGIN_WITH_SPECAIL_DEVICE_TYPE = 549,
  MISSION_UNLOCK_MONTH_CARD_OR_BATTLE_PASS = 550,
  MISSION_GACHA_COST_TICKET_TOTAL_SCORE = 551,
  MISSION_GARDEN_HARVEST_NUM = 552,
  MISSION_GARDEN_HARVEST_KIND = 553,
  MISSION_GARDEN_HARVEST_NUM_BY_KIND = 554,
  MISSION_JIGSAW_EXCHANGE_PIECE = 555,
  MISSION_JIGSAW_FINISH_JIGSAW = 556,
  MISSION_OVERLAP_SUMMON_NUM = 557,
  MISSION_CHATWORLD_QUESTION = 558,
  MISSION_CHATWORLD_DISH_NUM = 559,
  MISSION_ARMADA_REUNION_REWARD = 560,
  MISSION_ARMADA_REUNION_PREPARE = 561,
  MISSION_GARDEN_SPEED_UP_TIMES = 562,
  MISSION_MASSIVE_WAR_BATTLE_SETTLE_TIMES = 563,
  MISSION_MASSIVE_WAR_RANK_RATIO = 564,
  MISSION_MASSIVE_WAR_DAMAGE_LEVEL = 565,
  MISSION_MASSIVE_WAR_TOTAL_DAMAGE = 566,
  MISSION_MASSIVE_WAR_FINISH_STAGE = 567,
  MISSION_KINGDOM_WAR_EXCHANGE = 571,
  MISSION_KINGDOM_WAR_EXCHANGE_CURRENCY = 572,
  MISSION_KINGDOM_WAR_FINISH_STAGE_CURRENCY = 573,
  MISSION_KINGDOM_WAR_CURRENCY = 574,
  MISSION_KINGDOM_WAR_ACTIVITY_STAMINA = 575,
  MISSION_WEB_ACTIVITY_1 = 581,
  MISSION_WEB_ACTIVITY_2 = 582,
  MISSION_WEB_ACTIVITY_3 = 583,
  MISSION_WEB_ACTIVITY_4 = 584,
  MISSION_WEB_ACTIVITY_5 = 585,
  MISSION_WEB_ACTIVITY_6 = 586,
  MISSION_WEB_ACTIVITY_7 = 587,
  MISSION_WEB_ACTIVITY_8 = 588,
  MISSION_WEB_ACTIVITY_9 = 589,
  MISSION_WEB_ACTIVITY_10 = 590,
  MISSION_NORMAL_FINISH_SPECIFIC_STAGE_ID = 591,
  MISSION_SHOP_BUY_GOODS_ID_COST_MCOIN = 592,
  MISSION_SANCTUARY_ACTIVITY_LEVEL = 593,
  MISSION_SANCTUARY_TAKE_PRODUCT_TIMES = 594,
  MISSION_SLOT_MACHINE_START_TIMES = 595,
  MISSION_EXAMINATION_FINISH_NUM = 596,
  MISSION_RAFFLE_DRAW_TICKET_NUM = 597,
  MISSION_FINISH_MOSAIC_NUM_BACKTRACK = 598,
  MISSION_MONOPOLY_BUILDING_NUM = 599,
  MISSION_MONOPOLY_BUILDING_LEVEL = 600,
  MISSION_FINISH_MOSAIC_NUM = 601,
  MISSION_MONOPOLY_USE_ITEM = 602,
  MISSION_ULTRA_ENDLESS_FINISH_SITE = 603,
  MISSION_ULTRA_ENDLESS_FINISH_SITE_WITH_TAG_AVATAR = 604,
  MISSION_ULTRA_ENDLESS_TOTAL_SCORE = 605,
  MISSION_ULTRA_ENDLESS_FINISH_SITE_NUM = 606,
  MISSION_ULTRA_ENDLESS_TOTAL_ADD_SCORE = 607,
  MISSION_ULTRA_ENDLESS_MAX_GROUP_LEVEL = 608,
  MISSION_ULTRA_ENDLESS_SEASON_ADD_CUP_NUM = 609,
  MISSION_ULTRA_ENDLESS_TOP_RANK_TIMES = 610,
  MISSION_BATTLE_PASS_THEME_LEVEL = 611,
  MISSION_BATTLE_PASS_UNLOCK_TICKET = 612,
  MISSION_GET_EXBOSS_SCORE = 613,
  MISSION_OPENWORLD_QUEST_ACTIVITY_TOTAL_SCORE_BACKTRACK = 614,
  MISSION_TOTAL_DUTY_POINT_IN_PERIOD = 615,
  MISSION_FINISH_MISSION_TIMES_WITH_MISSION_ID_LIST = 617,
  MISSION_GACHA_CONSUME_TOTAL_SCORE = 618,
  MISSION_REPLAY_UPLOAD = 619,
  MISSION_REPLAY_PLAY = 620,
  MISSION_REPLAY_RECORD = 621,
  MISSION_FINISH_ELITE_STAGE_NUM = 622,
  MISSION_PASS_STAGE_NUM = 623,
  MISSION_STAGE_TAG_WITH_ALL_SPECIFIC_AVATAR = 624,
  MISSION_SPECIFIC_MATERIAL_ADD_NUM = 625,
  MISSION_SPECIFIC_MATERIAL_COST_NUM = 626,
  MISSION_UNLOCK_AVATAR_IN_SPECIFIC_NEWBIE_ACTIVITY = 627,
  MISSION_QAVATAR_BATTLE_PARTICIPATE_NUM = 630,
  MISSION_QAVATAR_BATTLE_KILL_NUM = 631,
  MISSION_QAVATAR_BATTLE_KILL_NUM_SINGLE_GAME = 632,
  MISSION_QAVATAR_BATTLE_WIN_NUM = 633,
  MISSION_QAVATAR_BATTLE_SCORE = 634,
  MISSION_VIRTUAL_TRAIN_SPECIFIC_STIGMATA_NUM = 635,
  MISSION_VIRTUAL_TRAIN_SPECIFIC_AVATAR_NUM = 636,
  MISSION_ROGUE_TOWER_ENDLESS_MAX_SCORE_WITH_AVATAR_ID_LIST = 637,
  MISSION_ROGUE_TOWER_ENDLESS_TOTAL_SCORE_WITH_AVATAR_ID_LIST = 638,
  MISSION_REUNION_COOK_WITH_BOOK_ID_LIST = 639,
  MISSION_CHATWORLD_BEAST_TREASURE_TAKE_TIMES = 640,
  MISSION_CHATWORLD_BEAST_SINGLE_DAMAGE = 641,
  MISSION_CHATWORLD_BEAST_TOTAL_DAMAGE = 642,
  MISSION_CHATWORLD_NORMAL_BOX_TAKE_TIMES = 643,
  MISSION_ADD_UP_VIP_POINT_BY_PRODUCT = 644,
  MISSION_OPENWORLD_AVATAR_ACTIVITY_CULTIVATE = 645,
  MISSION_OPENWORLD_AVATAR_ACTIVITY_TALENT = 646,
  MISSION_OPENWORLD_FINISH_QUEST_NO_BACKTRACK_WITH_RARITY_AND_MAP = 647,
  MISSION_OPENWORLD_AVATAR_ACTIVITY_LEVEL = 648,
  MISSION_BOSSRUSH_ACTIVITY_STAGE_TAG_ID_USE_SPECIFIC_BUFF_ID_LIST = 649,
  MISSION_STAGE_TAG_SCORE = 650,
  MISSION_OPENWORLD_AVATAR_ACCEPT_QUEST = 651,
  MISSION_THEME_WANTED_STAGE_PASS_NUM = 652,
  MISSION_THEME_WANTED_SPECIFIC_PROGRESS_PASS_NUM = 653,
  MISSION_THEME_WANTED_MP_SPECIFIC_PROGRESS_PASS_NUM = 654,
  MISSION_AVATAR_STAR_SUBSTAR = 655,
  MISSION_SLG_OCCUPIED_POINT_NUM = 656,
  MISSION_SLG_OCCUPIED_BUFF_POINT_NUM = 657,
  MISSION_SLG_PLAYER_SCORE = 658,
  MISSION_RELAY_STAGE_PHASE_PASS_TIME = 659,
  MISSION_EXBOSS_ACC_SCORE = 660,
  MISSION_GOD_WAR_STAGE_WITH_ITEM = 661,
  MISSION_GOD_WAR_STAGE_WITH_SUPPORT_AVATAR = 662,
  MISSION_GOD_WAR_ROLE_RELATION_LEVEL_BACKTRACK = 663,
  MISSION_GOD_WAR_TALENT_LEVEL_NUM_BACKTRACK = 664,
  MISSION_GOD_WAR_AVATAR_PUNISH_LEVEL_NUM_BACKTRACK = 665,
  MISSION_GOD_WAR_AVATAR_PUNISH_LEVEL_SUCC_NUM = 666,
  MISSION_GOD_WAR_PUNISH_BUFF_SUCC_NUM = 667,
  MISSION_GOD_WAR_STAGE_WITH_PUNISH_LEVEL = 668,
  MISSION_GOD_WAR_COLLECTION = 669,
  MISSION_GOD_WAR_COLLECTION_SUIT = 670,
  MISSION_GOD_WAR_COLLECTION_TYPE_NUM_BACKTRACK = 671,
  MISSION_GOD_WAR_ROLE_AVATAR_LEVEL_NUM_BACKTRACK = 672,
  MISSION_GOD_WAR_SETTLE_EVENT_BACKTRACK = 673,
  MISSION_GOD_WAR_FINISH_LOBBY_ACTION = 674,
  MISSION_GOD_WAR_STAGE_TAG_SPECIFIC_CHAPTER_ON_SETTLE = 675,
  MISSION_GOD_WAR_MAX_SCORE_ON_SETTLE = 676,
  MISSION_GOD_WAR_AVATAR_SPECIFIC_PUNISH_LEVEL_SUCC_NUM = 677,
  MISSION_RANCH_MONSTER_RARITY_NUM = 691,
  MISSION_RANCH_MONSTER_WIKI_LIST = 692,
  MISSION_RANCH_COLLCTION_POINT = 693,
  MISSION_RANCH_TAKE_PRODUCT_TIMES = 694,
  MISSION_RANCH_MONSTER_SYNTHESIS_WITH_FORMULA_TIMES = 695,
  MISSION_RANCH_MONSTER_SYNTHESIS_WITHOUT_FORMULA_TIMES = 696,
  MISSION_BIND_HOYOLAB_ACCOUNT = 701,
  MISSION_OPENWORLD_FINISH_STORY_NUM = 702,
  MISSION_OPENWORLD_CHAPTER_EQUIP_COST = 703,
  MISSION_NINJA_SLOT_LIST_LEVEL = 704,
  MISSION_RESTAURANT_DELIVER_QUEST_NUM = 705,
  MISSION_RESTAURANT_FACILITY_LEVEL = 706,
  MISSION_RESTAURANT_COOK_SPECIFIC_RECIPE = 707,
  MISSION_RESTAURANT_COOK_SPECIFIC_RECIPE_WITH_AVATAR = 708,
  MISSION_OPENWORLD_CHAPTER_FAME_LEVEL_BACKTRACK = 709,
  MISSION_SPECIFIC_MATERIAL_NUM_BACKTRACK = 710,
  MISSION_SC_DLC_FINISH_DAILY_QUEST_NUM = 711,
  MISSION_SC_DLC_LEVEL_BACKTRACK = 712,
  MISSION_SC_DLC_AVATAR_LEVEL_BACKTRACK = 713,
  MISSION_SC_DLC_AVATAR_TALENT_NUM_BACKTRACK = 714,
  MISSION_SC_DLC_NPC_SUPPORT_LEVEL_BACKTRACK = 715,
  MISSION_SC_DLC_TOWER_MAX_PROGRESS = 716,
  MISSION_SC_DLC_ANALYSIS_MONSTER = 717,
  MISSION_SC_DLC_AVATAR_LEVEL_NUM_BACKTRACK = 718,
  MISSION_SC_DLC_UNLOCK_TALENT_NUM_BACKTRACK = 719,
  MISSION_SC_DLC_NPC_SUPPORT_LEVEL_NUM_BACKTRACK = 720,
  MISSION_SC_DLC_LEVELUP_TALENT_NUM = 721,
  MISSION_SC_DLC_ACHIEVE_EVENT_NUM = 722,
  BingoMetaDataImpl = 723,
  MISSION_SPECIFIC_STAGE_NUM_BACKTRACK = 741,
  MISSION_UNLOCK_SPECIFIC_PHOTO_NUM_BACKTRACK = 742,
  MISSION_TOWN_ACTIVITY_FINISH_GAMES = 751,
  MISSION_TOWN_ACTIVITY_FINISH_BOSS = 752,
  MISSION_TOWN_ACTIVITY_BUILD_NUM = 753,
  MISSION_TOWN_ACTIVITY_BUILD_NUM_IN_ONE_GAME = 754,
  MISSION_TOWN_ACTIVITY_CHALLNGE_NUM_BACKTRACK = 755,
  MISSION_TUTORIAL_WATCH_SITE_VIDEO = 771,
  MISSION_CHATWORLD_BATTLE_BOX_TAKE_TIMES = 776,
  MISSION_FINISH_TUTORIAL_ID = 780,
  MISSION_SPECIFIC_AVATAR_EQUIP_WEAPON_LEVEL_BACKTRACK = 781,
  MISSION_SPECIFIC_AVATAR_EQUIP_STIGMATA_SUIT_BACKTRACK = 782,
  MISSION_AVATAR_SPECIFIC_UNLOCK_STAR_NUM_BACKTRACK = 783,
  MISSION_AVATAR_SPECIFIC_TYPE_NUM_BACKTRACK = 784,
  MISSION_AVATAR_SPECIFIC_UNLOCK_STAR_SPECIFC_LEVEL_NUM_BACKTRACK = 785,
  MISSION_BOSS_CHALLENGE_FINISH_STAGE = 786,
  MISSION_AVATAR_SPECIFIC_TYPE_SPECIFIC_LEVEL_NUM_BACKTRACK = 790,
  MISSION_GRAND_KEY_GET_ANY_BACKTRACK = 791,
  MISSION_SELECT_ADVENTURE_QUEST = 792,
  MISSION_BEGIN_ADVENTURE_STORY_SWEEP = 793,
  MISSION_STAGE_TAG_CHALLENGE_NUM_BACKTRACK = 796,
  MISSION_FINISH_MISSION_TIMES_WITH_MISSION_ID_LIST_BACKTRACK = 797,
  MISSION_FINISH_EXBOSS_WITH_AVATAR_LIST = 800,
  MISSION_OPENWORLD_CHAPTER_UNLOCK_HERO_BACKTRACK = 806,
  MISSION_OPENWORLD_CHAPTER_ADD_HERO_CARD_NUM = 807,
  MISSION_OPENWORLD_CHAPTER_HERO_CARD_LEVEL_BACKTRACK = 808,
  MISSION_OPENWORLD_CHAPTER_HERO_LEVEL_BACKTRACK = 809,
  MISSION_OPENWORLD_ACTIVE_CARD_GROUP_BATTLE_POINT_BACKTRACK = 810,
  MISSION_OPENWORLD_CHAPTER_UNLOCK_HERO_CARD_BACKTRACK = 811,
  MISSION_OPENWORLD_CHAPTER_FINISH_CHALLENGE_GROUP = 812,
  MISSION_OPENWORLD_CHAPTER_FINISH_CHALLENGE_GROUP_INDEX = 813,
  MISSION_OPENWORLD_CHAPTER_FINISH_ENDLESS_CHALLENGE = 814,
  MISSION_OPENWORLD_HUNT_FINISH_QUEST_NUM_BACKTRACK = 820,
  MISSION_OPENWORLD_HUNT_DESTROY_STRONGHOLD_NUM_BACKTRACK = 821,
  MISSION_OPENWORLD_HUNT_HUNTER_KILLED_MAP_NUM_BACKTRACK = 822,
  MISSION_OPENWORLD_HUNT_TALENT_TOTAL_LEVEL_BACKTRACK = 823,
  MISSION_MONSTER_CARD_COLLECTION_NUM_BACKTRACK = 826,
  MISSION_MONSTER_CARD_COLLECTION_LEVEL_BACKTRACK = 827,
  MISSION_MONSTER_CARD_NUM_LEVEL_GREATER_EQUAL_BACKTRACK = 828,
  MISSION_MONSTER_CARD_EXP_STAGE_PASS_TIMES = 829,
  MISSION_GACHA_NUM_SPECIFIC_TICKET_ID_LIST = 831,
  MISSION_GACHA_NUM_AFTER_DISCOUNT_SPECIFIC_TICKET_ID_LIST = 832,
  MISSION_OPENWORLD_FINISH_STORY_NO_BACKTRACK = 833,
  MISSION_EX_BOSS_FINISH_BOSS_NUM_WITH_LEVEL = 834,
  MISSION_BATTLE_PASS_EXP_ACTIVITY_MISSION = 835,
  MISSION_BUFF_ASSIST_SELECT_BUFF_TIMES = 836,
  MISSION_BUFF_ASSIST_PUBLISH_BUFF_TIMES = 837,
  MISSION_DICEY_DUNGEON_ENDLESS_PASSED_FLOOR = 838,
  MISSION_DICEY_DUNGEON_DAILY_PASSED_TIMES = 839,
  MISSION_DICEY_DUNGEON_WEAPON_UNLOCK = 840,
  MISSION_DICEY_DUNGEON_WEAPON_GACHA_TIMES = 841,
  MISSION_DICEY_DUNGEON_TOTAL_ROLE_LEVEL = 842,
  MISSION_DICEY_DUNGEON_ROLE_LEVEL_GREATER_EQUAL_NUM = 843,
  MISSION_DICEY_DUNGEON_ROLE_NUM_LEVEL_GREATER_EQUAL = 844,
  MISSION_PVZ_DAILY_PASS_TIMES = 845,
  MISSION_PVZ_QAVATAR_NUM_LEVEL_GREATER_EQUAL = 846,
  MISSION_PVZ_SPECIAL_MATERIAL_NUM = 847,
  UNRECOGNIZED = -1,
}

export enum MissionMpMemberType {
  MISSION_MP_LEADER = 1,
  MISSION_MP_ASSISTANT = 2,
  UNRECOGNIZED = -1,
}

export enum MissionStatus {
  MISSION_STATUS_NONE = 0,
  MISSION_NOT_BEGIN = 1,
  MISSION_DOING = 2,
  MISSION_FINISH = 3,
  MISSION_TIMEOUT = 4,
  MISSION_CLOSE = 5,
  MISSION_WAIT_DELETE = 6,
  UNRECOGNIZED = -1,
}

export enum MissionSubType {
  MISSION_SUB_BRANCH = 1,
  MISSION_SUB_MP_RAID = 102,
  MISSION_SUB_ARMADA = 301,
  MISSION_SUB_SHOP_ADD_ON = 501,
  MISSION_SUB_RAFFLE = 502,
  MISSION_SUB_WEB_ACTIVITY = 503,
  MISSION_SUB_COMPETITION_SEASON = 504,
  MISSION_SUB_DREAM = 505,
  MISSION_SUB_REFRESH_CYCLE_ON_FINISH = 506,
  MISSION_SUB_GOD_WAR = 507,
  MISSION_SUB_SC_DLC = 508,
  MISSION_SUB_CHAPTER_OW = 509,
  MISSION_SUB_OW_STORY = 510,
  MISSION_SUB_RPG_TAKE_REWARD_DROP = 1301,
  MISSION_SUB_GOBACK = 1501,
  MISSION_SUB_GOBACK_ACTIVITY = 1502,
  MISSION_SUB_GOBACK_LIMIT_TIME = 1503,
  MISSION_SUB_NINJA = 2001,
  MISSION_SUB_ARMADA_REUNION = 2002,
  MISSION_SUB_LOGIN_MISSION = 2003,
  MISSION_SUB_INVITEE = 2004,
  UNRECOGNIZED = -1,
}

export enum MissionType {
  MISSION_NONE = 0,
  MISSION_LINEAR = 1,
  MISSION_BOUNTY = 2,
  MISSION_TIMED = 3,
  MISSION_SIDE = 4,
  MISSION_CYCLE = 5,
  MISSION_DAILY = 6,
  MISSION_PROGRESS = 7,
  MISSION_CHALLENGE = 8,
  MISSION_MINUTE = 9,
  MISSION_MASTER_PUPIL_EXAM = 10,
  MISSION_MASTER_PUPIL_DAILY = 11,
  MISSION_AVATAR_TRAINING = 12,
  MISSION_RPG_TALE = 13,
  MISSION_MAINLINE_STEP = 14,
  MISSION_GOBACK = 15,
  MISSION_WEEKLY_ROUTINE = 16,
  MISSION_BATTLE_PASS = 17,
  MISSION_ADVENTURE_GROUP = 18,
  MISSION_MASTER_PUPIL_COMPANY = 19,
  MISSION_ACTIVITY = 20,
  MISSION_COMPETITION_SEASON = 21,
  UNRECOGNIZED = -1,
}

export enum MonopolyAreaStatus {
  MONOPOLY_AREA_STATUS_NONE = 0,
  MONOPOLY_AREA_STATUS_LOCKED = 1,
  MONOPOLY_AREA_STATUS_UNLOCKED = 2,
  UNRECOGNIZED = -1,
}

export enum MonopolyBehaviorType {
  MONOPOLY_BEHAVIOR_WALK = 1,
  MONOPOLY_BEHAVIOR_DEMOLISH_BUILDING = 2,
  MONOPOLY_BEHAVIOR_FREEZE_BUILDING = 3,
  MONOPOLY_BEHAVIOR_RANDOM_FREEZE = 4,
  MONOPOLY_BEHAVIOR_SUMMON = 5,
  MONOPOLY_BEHAVIOR_REPEL = 7,
  MONOPOLY_BEHAVIOR_DELELTE_SELF = 8,
  MONOPOLY_BEHAVIOR_TRIGGER_RPG_EVENT = 9,
  UNRECOGNIZED = -1,
}

export enum MonopolyBuildingFuncType {
  MONOPOLY_BUILDING_FUNC_PRODUCT = 1,
  MONOPOLY_BUILDING_FUNC_BUFF = 2,
  UNRECOGNIZED = -1,
}

export enum MonopolyDiceType {
  MONOPOLY_DICE_NONE = 0,
  MONOPOLY_DICE_NORMAL = 1,
  MONOPOLY_DICE_BUILDING_PRIORITY = 2,
  UNRECOGNIZED = -1,
}

export enum MonopolyItemType {
  MONOPOLY_ITEM_CONTROLABLE_DICE = 1,
  MONOPOLY_ITEM_ROADBLOCK = 2,
  MONOPOLY_ITEM_EXCHANGE_POSITION = 4,
  MONOPOLY_ITEM_LEVELUP_BUILDING = 7,
  MONOPOLY_ITEM_CHANGE_DIRECTION = 8,
  UNRECOGNIZED = -1,
}

export enum MonopolyRoundStatus {
  MONOPOLY_ROUND_STATUS_NONE = 0,
  MONOPOLY_ROUND_STATUS_START = 1,
  MONOPOLY_ROUND_STATUS_AFTER_DICE = 2,
  MONOPOLY_ROUND_STATUS_AFTER_CONSTRUCT = 3,
  UNRECOGNIZED = -1,
}

export enum MonsterCardLevelLimitType {
  MONSTER_CARD_LEVEL_LIMIT_TYPE_NONE = 0,
  MONSTER_CARD_LEVEL_LIMIT_TYPE_PASS_RPG_SITE = 1,
  UNRECOGNIZED = -1,
}

export enum MonsterCardRandomTalentConfirmType {
  MONSTER_CARD_RANDOM_TALENT_CONFIRM_TYPE_NONE = 0,
  MONSTER_CARD_RANDOM_TALENT_CONFIRM_TYPE_CONFIRM = 1,
  MONSTER_CARD_RANDOM_TALENT_CONFIRM_TYPE_ABANDON = 2,
  UNRECOGNIZED = -1,
}

export enum MonsterCardSelectCardCondition {
  MONSTER_CARD_SELECT_CARD_CONDITION_NONE = 0,
  MONSTER_CARD_SELECT_CARD_CONDITION_LEVEL_GREATER_EQUAL = 1,
  UNRECOGNIZED = -1,
}

export enum MonsterCardSkillType {
  MONSTER_CARD_SKILL_TYPE_NONE = 0,
  MONSTER_CARD_SKILL_TYPE_ATK = 1,
  MONSTER_CARD_SKILL_TYPE_LB = 2,
  MONSTER_CARD_SKILL_TYPE_AUTO = 3,
  MONSTER_CARD_SKILL_TYPE_PASSIVE = 4,
  MONSTER_CARD_SKILL_TYPE_WEATHER = 5,
  MONSTER_CARD_SKILL_TYPE_TALENT = 6,
  MONSTER_CARD_SKILL_TYPE_UNLOCK = 99,
  UNRECOGNIZED = -1,
}

export enum MonsterCardStageType {
  MONSTER_CARD_STAGE_TYPE_NONE = 0,
  MONSTER_CARD_STAGE_TYPE_NORMAL = 1,
  MONSTER_CARD_STAGE_TYPE_BOSS = 2,
  MONSTER_CARD_STAGE_TYPE_EXP = 3,
  MONSTER_CARD_STAGE_TYPE_TOWER = 4,
  UNRECOGNIZED = -1,
}

export enum MonsterCardSyncType {
  MONSTER_CARD_SYNC_TYPE_NONE = 0,
  MONSTER_CARD_SYNC_TYPE_LEVEL_UP = 1,
  MONSTER_CARD_SYNC_TYPE_STAR_UP = 2,
  MONSTER_CARD_SYNC_TYPE_LEARN_TALENT = 3,
  MONSTER_CARD_SYNC_TYPE_NEW_CARD = 4,
  MONSTER_CARD_SYNC_TYPE_REFRESH = 5,
  MONSTER_CARD_SYNC_TYPE_ADD_FRAGMENT = 6,
  UNRECOGNIZED = -1,
}

export enum MpAction {
  MP_ACTION_ERROR = 0,
  MP_ACTION_CLOSE_MVP_PAGE = 1,
  MP_ACTION_CLOSE_LIKE_PAGE = 2,
  UNRECOGNIZED = -1,
}

export enum MpDataType {
  MP_DATA_ALL = 0,
  MP_DATA_LEVEL = 1,
  MP_DATA_EXP = 2,
  MP_DATA_SKILL_POINT = 3,
  MP_DATA_SKILL = 4,
  MP_DATA_AVATAR = 5,
  MP_DATA_PUNISH_TIME = 6,
  UNRECOGNIZED = -1,
}

export enum MpLeaveTeamReason {
  LEAVE_TEAM_REASON_NONE = 0,
  LEAVE_TEAM_REASON_KICK = 1,
  UNRECOGNIZED = -1,
}

export enum MpMemberClientStatus {
  MP_MEMBER_CLIENT_NONE = 0,
  MP_MEMBER_CLIENT_IN_TEAM = 1,
  MP_MEMBER_CLIENT_IN_LOBBY = 2,
  UNRECOGNIZED = -1,
}

export enum MpSkillType {
  MP_SKILL_NONE = 0,
  MP_SKILL_ATTACK = 1,
  MP_SKILL_DEFENCE = 2,
  MP_SKILL_OTHER = 3,
  UNRECOGNIZED = -1,
}

export enum MpStageMatchType {
  CREATE_ENTER = 1,
  MATCH_ENTER = 2,
  UNRECOGNIZED = -1,
}

export enum MpStageMemberLimitType {
  MP_MEMBER_LIMIT_NONE = 0,
  MP_MEMBER_LIMIT_MASTER_ONLY = 1,
  MP_MEMBER_LIMIT_PUPIL_ONLY = 2,
  MP_MEMBER_LIMIT_ARMADA_ONLY = 3,
  MP_MEMBER_LIMIT_NEWBIE_ONLY = 4,
  UNRECOGNIZED = -1,
}

export enum MpStageVoteOption {
  MP_STAGE_VOTE_OPTION_STAY_IN_TEAM = 0,
  MP_STAGE_VOTE_OPTION_STAGE_AGAIN = 1,
  MP_STAGE_VOTE_OPTION_NEXT_STAGE = 2,
  UNRECOGNIZED = -1,
}

export enum MpTeamStatus {
  TEAM_STATUS_NONE = 0,
  TEAM_STATUS_IN_TEAM = 1,
  TEAM_STATUS_IN_LOBBY = 2,
  UNRECOGNIZED = -1,
}

export enum NinjaSiteType {
  NINJA_SITE_NORMAL = 1,
  NINJA_SITE_BOSS = 2,
  NINJA_SITE_CHALLENGE = 3,
  UNRECOGNIZED = -1,
}

export enum OfflineResourceType {
  OFFLINE_RESOURCE_TYPE_NONE = 0,
  OFFLINE_RESOURCE_TYPE_OW_QUEST = 1,
  OFFLINE_RESOURCE_TYPE_OW_MECHA = 2,
  OFFLINE_RESOURCE_TYPE_WEEK_DAY = 3,
  OFFLINE_RESOURCE_TYPE_ARMADA = 4,
  OFFLINE_RESOURCE_TYPE_ENDLESS = 5,
  OFFLINE_RESOURCE_TYPE_EX_BOSS = 6,
  UNRECOGNIZED = -1,
}

export enum OffLineTagType {
  OFFLINE_TAG_TYPE_NORMAL = 0,
  OFFLINE_TAG_TYPE_SMURF = 1,
  UNRECOGNIZED = -1,
}

export enum OnlineRewardActivityType {
  ONLINE_REWARD_ACTIVITY_TYPE_DAILY = 1,
  ONLINE_REWARD_ACTIVITY_TYPE_ACTIVITY = 2,
  UNRECOGNIZED = -1,
}

export enum OpenworldEndlessDataType {
  OPENWORLD_ENDLESS_DATA_TYPE_INVAISON = 1,
  OPENWORLD_ENDLESS_DATA_TYPE_SCENE_GEAR = 2,
  UNRECOGNIZED = -1,
}

export enum OpenworldEndlessInvasionBuffConditionType {
  INVASION_BUFF_CONDITION_TOTAL_LEVEL = 1,
  INVASION_BUFF_CONDITION_NUM_LEVEL = 2,
  INVASION_BUFF_CONDITION_NUM_LEVEL_ATTRIBUTE = 3,
  INVASION_BUFF_CONDITION_NUM_LEVEL_ALL_ATTRIBUTE = 4,
  INVASION_BUFF_CONDITION_NUM_CLASS = 5,
  INVASION_BUFF_CONDITION_ID_STAR_LEVEL = 6,
  UNRECOGNIZED = -1,
}

export enum OpenworldEndlessItemType {
  OPENWORLD_ENDLESS_ITEM_INVASION = 1,
  OPENWORLD_ENDLESS_ITEM_BUFF = 2,
  OPENWORLD_ENDLESS_ITEM_TRAP = 3,
  OPENWORLD_ENDLESS_ITEM_COUNTER = 4,
  OPENWORLD_ENDLESS_ITEM_CONSUME = 5,
  OPENWORLD_ENDLESS_ITEM_TRAP_BUFF = 6,
  UNRECOGNIZED = -1,
}

export enum OpenworldQuestStatus {
  OPENWORLD_QUEST_NONE = 0,
  OPENWORLD_QUEST_DOING = 1,
  OPENWORLD_QUEST_FINISH = 2,
  OPENWORLD_QUEST_CLOSE = 3,
  UNRECOGNIZED = -1,
}

export enum OpenworldStageType {
  OPENWORLD_STAGE_TYPE_NONE = 0,
  OPENWORLD_STAGE_TYPE_MAINLINE = 1,
  OPENWORLD_STAGE_TYPE_EXPORE = 2,
  UNRECOGNIZED = -1,
}

export enum OptionalBuffType {
  OPTIONAL_BUFF_NONE = 0,
  OPTIONAL_BUFF_DEBUFF = 1,
  OPTIONAL_BUFF_RESTRICT = 2,
  UNRECOGNIZED = -1,
}

export enum OuterRewardType {
  OUTER_REWARD_TYPE_NONE = 0,
  OUTER_REWARD_TYPE_REDEEM = 1,
  UNRECOGNIZED = -1,
}

export enum PanelActivityType {
  PANEL_ACTIVITY_THEME = 2,
  PANEL_ACTIVITY_RECLAIM = 4,
  PANEL_ACTIVITY_KINGDOM_WAR = 5,
  PANEL_ACTIVITY_BATTLE_PASS = 6,
  PANEL_ACTIVITY_GLOBAL_WAR = 7,
  PANEL_ACTIVITY_SLG = 8,
  PANEL_ACTIVITY_GLOBAL_POLLING = 9,
  PANEL_ACTIVITY_COLLABORATION = 10,
  UNRECOGNIZED = -1,
}

export enum PhoneEventStatus {
  PHONE_EVENT_NONE = 0,
  PHONE_EVENT_FINISH = 1,
  PHONE_EVENT_REFUSE = 2,
  PHONE_EVENT_HOLD = 3,
  PHONE_EVENT_OVER = 4,
  UNRECOGNIZED = -1,
}

export enum PhonePendantOpType {
  PHONE_PENDANT_WEAR = 1,
  PHONE_PENDANT_OFF = 2,
  UNRECOGNIZED = -1,
}

export enum PhonePendantTimeType {
  PHONE_PENDANT_TIME_FOREVER = 1,
  PHONE_PENDANT_TIME_LIMIT = 2,
  UNRECOGNIZED = -1,
}

export enum PhotoType {
  PHOTO_TYPE_ALL = 0,
  PHOTO_TYPE_CITY_ACTIVITY = 1,
  PHOTO_TYPE_ANNIVERSARY = 2,
  PHOTO_TYPE_RPG_TALE = 3,
  PHOTO_TYPE_FARM = 4,
  PHOTO_TYPE_KINGDOM_WAR = 5,
  PHOTO_TYPE_DLC = 6,
  PHOTO_TYPE_GLOBAL_WAR = 7,
  PHOTO_TYPE_NINJA = 8,
  PHOTO_TYPE_CHAPTER_HIDDEN = 9,
  PHOTO_TYPE_OW_AVATAR = 10,
  PHOTO_TYPE_SLG = 11,
  PHOTO_TYPE_GOD_WAR = 12,
  PHOTO_TYPE_OPENWORLD_CHAPTER = 13,
  PHOTO_TYPE_SC_DLC = 14,
  PHOTO_TYPE_OW_HUNT = 15,
  UNRECOGNIZED = -1,
}

export enum PhotoUnlockType {
  PHOTO_UNLOCK_FINISH_OW_EVENT = 1,
  PHOTO_UNLOCK_KILL_MONSTER = 2,
  PHOTO_UNLOCK_FINISH_OW_STORY = 3,
  PHOTO_UNLOCK_FINISH_DLC_DIALOG = 4,
  PHOTO_UNLOCK_GOD_WAR = 5,
  PHOTO_UNLOCK_VISUAL_NOVEL = 6,
  PHOTO_UNLOCK_MATERIAL = 7,
  UNRECOGNIZED = -1,
}

export enum PlatFormType {
  PLATFORM_NONE = 0,
  PLATFORM_ANDROID = 100001,
  PLATFORM_IOS = 200002,
  PLATFORM_PC = 300003,
  UNRECOGNIZED = -1,
}

export enum PlayerAreaType {
  AREA_NO_LIMIT = 0,
  AREA_NORTH_CHINA = 1,
  AREA_NORTH_EAST = 2,
  AREA_EAST_CHINA = 3,
  AREA_CENTRAL_CHINA = 4,
  AREA_CENTRAL_SOUTH = 5,
  AREA_NORTH_WEST = 6,
  AREA_SOUTH_WEST = 7,
  AREA_HK_MC_TW = 8,
  UNRECOGNIZED = -1,
}

export enum PlayerCardMsgConfig {
  CARD_MSG_ALL = 0,
  CARD_MSG_FRIEND = 1,
  CARD_MSG_FORBIDDEN = 2,
  UNRECOGNIZED = -1,
}

export enum PlayerCardType {
  CARD_ALL = 0,
  CARD_AVATAR = 1,
  CARD_MEDAL = 2,
  CARD_MESSAGE = 3,
  CARD_MSG_CONFIG = 4,
  CARD_ELF = 5,
  UNRECOGNIZED = -1,
}

export enum PlayerGenderType {
  GENDER_NONE_TYPE = 0,
  GENDER_MALE_TYPE = 1,
  GENDER_FEMALE_TYPE = 2,
  UNRECOGNIZED = -1,
}

export enum PlayerInterestType {
  INTEREST_NONE = 0,
  INTEREST_ANIMATION = 1,
  INTEREST_COMIC = 2,
  INTEREST_GAME = 3,
  INTEREST_MUSIC = 4,
  INTEREST_DANCING = 5,
  INTEREST_KITIKU = 6,
  INTEREST_MMD = 7,
  INTEREST_TOKUSATSU = 8,
  UNRECOGNIZED = -1,
}

export enum PlayerOnlineStatus {
  PLAYER_ONLINE_STATUS_NONE = 0,
  PLAYER_ONLINE_STATUS_ONLINE = 1,
  PLAYER_ONLINE_STATUS_WAIT_SAVE = 2,
  PLAYER_ONLINE_STATUS_OFFLINE = 3,
  UNRECOGNIZED = -1,
}

export enum PlotType {
  PLOT_TYPE_NORMAL = 0,
  PLOT_TYPE_DORM = 1,
  PLOT_TYPE_MATRIX = 2,
  PLOT_TYPE_RPG = 3,
  PLOT_TYPE_ISLAND = 4,
  PLOT_TYPE_CITY_ACTIVITY = 5,
  UNRECOGNIZED = -1,
}

export enum PrivilegeProductType {
  PRIVILEGE_PRODUCT_ALL = 0,
  PRIVILEGE_PRODUCT_NEWBIE = 1,
  PRIVILEGE_PRODUCT_GOBACK = 2,
  PRIVILEGE_PRODUCT_ADVENTURE = 3,
  UNRECOGNIZED = -1,
}

export enum PrivilegeRightType {
  PRIVILEGE_RIGHT_FREE_GACHA = 1,
  PRIVILEGE_RIGHT_CARD_DAILY_REWARD = 2,
  UNRECOGNIZED = -1,
}

export enum ProductType {
  PRODUCT_NORMAL = 1,
  PRODUCT_LIMIT = 2,
  PRODUCT_CARD = 3,
  PRODUCT_SUBSCRIPTION = 4,
  PRODUCT_RANDOM_BOX = 5,
  PRODUCT_FIXED_BOX = 6,
  PRODUCT_MCOIN = 7,
  PRODUCT_FOUNDATION = 8,
  PRODUCT_SUBSCRIPTION_NON_RENEWING = 9,
  PRODUCT_MAIL_REWARD = 10,
  PRODUCT_PROMO_CODE = 11,
  UNRECOGNIZED = -1,
}

export enum PvzBattleEndStatus {
  PVZ_BATTLE_END_NONE = 0,
  PVZ_BATTLE_END_SUCC = 1,
  PVZ_BATTLE_END_FAIL = 2,
  PVZ_BATTLE_END_QUIT = 3,
  UNRECOGNIZED = -1,
}

export enum PvzQAvatarNextLevelConditionType {
  PVZ_QAVATAR_NEXT_LEVEL_CONDITION_NONE = 0,
  PVZ_QAVATAR_NEXT_LEVEL_CONDITION_PASS_SITE = 1,
  UNRECOGNIZED = -1,
}

export enum PvzQAvatarType {
  PVZ_QAVATAR_ATTACK = 1,
  PVZ_QAVATAR_ASSIST = 2,
  UNRECOGNIZED = -1,
}

export enum PvzSiteType {
  PVZ_SITE_NORMAL = 1,
  PVZ_SITE_DAILY = 2,
  PVZ_SITE_CHALLENGE = 3,
  UNRECOGNIZED = -1,
}

export enum QAvatarActionType {
  QAVATAR_ACTION_NONE = 0,
  QAVATAR_ACTION_ADD_BUFF = 1,
  QAVATAR_ACTION_REMOVE_BUFF = 2,
  QAVATAR_ACTION_EVADE = 3,
  QAVATAR_ACTION_SHOOT_BULLET = 4,
  QAVATAR_ACTION_MELEE_ATK = 5,
  QAVATAR_ACTION_COMBO_ATK = 6,
  QAVATAR_ACTION_CREATE_GADGET = 7,
  QAVATAR_ACTION_MUTE_SKILL = 8,
  QAVATAR_ACTION_BREAK_SKILL = 9,
  QAVATAR_ACTION_CHANGE_PROP = 11,
  QAVATAR_ACTION_HOLDUP_ACTION = 13,
  QAVATAR_ACTION_SET_ANIM_PARA = 21,
  QAVATAR_ACTION_APPLY_EFFECT = 22,
  QAVATAR_ACTION_SET_CAMERA_PARA = 23,
  QAVATAR_ACTION_LOCK_AIM_ROTATION = 24,
  QAVATAR_ACTION_SIM_SKILL_BUTTON_OP = 25,
  UNRECOGNIZED = -1,
}

export enum QAvatarBattleCollidePropertyType {
  QAVATAR_BATTLE_COLLIDE_PROPERTY_TYPE_WALL = 0,
  QAVATAR_BATTLE_COLLIDE_PROPERTY_TYPE_AVATAR_SENSOR = 1,
  QAVATAR_BATTLE_COLLIDE_PROPERTY_TYPE_BULLET = 2,
  QAVATAR_BATTLE_COLLIDE_PROPERTY_TYPE_AVATAR = 3,
  UNRECOGNIZED = -1,
}

export enum QAvatarBattleComponentType {
  QAVATAR_BATTLE_COMPONENT_TYPE_NONE = 0,
  QAVATAR_BATTLE_COMPONENT_TYPE_POSITION = 1,
  QAVATAR_BATTLE_COMPONENT_TYPE_SPEED = 2,
  QAVATAR_BATTLE_COMPONENT_TYPE_RIGID_BODY = 3,
  QAVATAR_BATTLE_COMPONENT_TYPE_SKILL = 4,
  QAVATAR_BATTLE_COMPONENT_TYPE_BUFF = 5,
  QAVATAR_BATTLE_COMPONENT_TYPE_EVADE = 6,
  QAVATAR_BATTLE_COMPONENT_TYPE_STIGMATA = 7,
  QAVATAR_BATTLE_COMPONENT_TYPE_CONTACT = 8,
  QAVATAR_BATTLE_COMPONENT_TYPE_TICK = 9,
  UNRECOGNIZED = -1,
}

export enum QAvatarBattleDropItemType {
  QAVATAR_BATTLE_DROP_ITEM_TYPE_BUFF = 1,
  QAVATAR_BATTLE_DROP_ITEM_TYPE_STIGMATA = 2,
  QAVATAR_BATTLE_DROP_ITEM_TYPE_INSTANT_HEAL_HP = 3,
  UNRECOGNIZED = -1,
}

export enum QAvatarBattleEndReason {
  QAVATAR_BATTLE_END_REASON_NONE = 0,
  QAVATAR_BATTLE_END_REASON_FAIL = 1,
  QAVATAR_BATTLE_END_REASON_TIMEOUT = 2,
  QAVATAR_BATTLE_END_REASON_TIMEOUT_INVALID = 3,
  QAVATAR_BATTLE_END_REASON_KILL_NUM = 4,
  QAVATAR_BATTLE_END_REASON_GM = 5,
  UNRECOGNIZED = -1,
}

export enum QAvatarBattleEntityDeleteReasonType {
  QAVATAR_BATTLE_ENTITY_DELETE_REASON_NONE = 0,
  QAVATAR_BATTLE_ENTITY_DELETE_REASON_EXPIRE = 1,
  QAVATAR_BATTLE_ENTITY_DELETE_REASON_HIT = 2,
  QAVATAR_BATTLE_ENTITY_DELETE_REASON_PICK_UP = 3,
  UNRECOGNIZED = -1,
}

export enum QAvatarBattleEntityType {
  QAVATAR_BATTLE_ENTITY_TYPE_NONE = 0,
  QAVATAR_BATTLE_ENTITY_TYPE_PLAYER = 1,
  QAVATAR_BATTLE_ENTITY_TYPE_BULLET = 2,
  QAVATAR_BATTLE_ENTITY_TYPE_GADGET = 3,
  QAVATAR_BATTLE_ENTITY_TYPE_SCHEDULED_TASK = 4,
  UNRECOGNIZED = -1,
}

export enum QAvatarBattleGadgetEffectCampType {
  QAVATAR_BATTLE_GADGET_EFFECT_CAMP_TYPE_ALL = 0,
  QAVATAR_BATTLE_GADGET_EFFECT_CAMP_TYPE_ALLIES = 1,
  QAVATAR_BATTLE_GADGET_EFFECT_CAMP_TYPE_ENEMIES = 2,
  UNRECOGNIZED = -1,
}

export enum QAvatarBattleGadgetType {
  QAVATAR_BATTLE_GADGET_TYPE_BREAKABLE_BOX = 1,
  QAVATAR_BATTLE_GADGET_TYPE_DROP_ITEM = 2,
  QAVATAR_BATTLE_GADGET_TYPE_DAMAGE_AREA = 3,
  QAVATAR_BATTLE_GADGET_TYPE_DELAYED_BOMB = 4,
  QAVATAR_BATTLE_GADGET_TYPE_UNSTABLE_DELAYED_BOMB = 5,
  QAVATAR_BATTLE_GADGET_TYPE_BREAKABLE_DELAYED_BOMB = 6,
  UNRECOGNIZED = -1,
}

export enum QAvatarBattleTickComponentEventType {
  QAVATAR_BATTLE_TICK_EVENT_TYPE_ENABLE = 1,
  QAVATAR_BATTLE_TICK_EVENT_TYPE_INTERVAL = 2,
  UNRECOGNIZED = -1,
}

export enum QAvatarBuffEffectType {
  QAVATAR_BUFF_EFFECT_NONE = 0,
  QAVATAR_BUFF_EFFECT_HP_GREATER = 1,
  QAVATAR_BUFF_EFFECT_HP_LESS = 2,
  QAVATAR_BUFF_EFFECT_OUT_OF_BATTLE = 3,
  UNRECOGNIZED = -1,
}

export enum QAvatarBuffType {
  QAVATAR_BUFF_NONE = 0,
  QAVATAR_BUFF_MAXHP = 1,
  QAVATAR_BUFF_ATTACK = 2,
  QAVATAR_BUFF_MOVESPEED = 3,
  QAVATAR_BUFF_HEALHP = 4,
  QAVATAR_BUFF_CHANGESKILL = 5,
  QAVATAR_BUFF_HEALSP = 6,
  QAVATAR_BUFF_ADDEDDAMAGERATIO = 7,
  QAVATAR_BUFF_DAMAGETAKENRATIO = 8,
  QAVATAR_BUFF_CHANGESKILLCD = 9,
  QAVATAR_BUFF_CRITICALRATE = 10,
  QAVATAR_BUFF_CRITICALDAMAGERATIO = 11,
  QAVATAR_BUFF_CLIENT_ONLY = 21,
  UNRECOGNIZED = -1,
}

export enum QAvatarChangePropType {
  QAVATAR_CHANGE_PROP_NONE = 0,
  QAVATAR_CHANGE_PROP_HP = 1,
  QAVATAR_CHANGE_PROP_SP = 2,
  UNRECOGNIZED = -1,
}

export enum QAvatarLobbyStatus {
  QAVATAR_LOBBY_STATUS_INVALID = 0,
  QAVATAR_LOBBY_STATUS_INIT = 1,
  QAVATAR_LOBBY_STATUS_PREPARE = 2,
  QAVATAR_LOBBY_STATUS_FIGHT = 3,
  QAVATAR_LOBBY_STATUS_SETTLE = 4,
  QAVATAR_LOBBY_STATUS_DELETE = 5,
  UNRECOGNIZED = -1,
}

export enum QAvatarShapeType {
  QAVATAR_SHAPE_NONE = 0,
  QAVATAR_SHAPE_AABB = 1,
  QAVATAR_SHAPE_CIRCLE = 2,
  QAVATAR_SHAPE_OAB = 3,
  UNRECOGNIZED = -1,
}

export enum QAvatarSkillTriggerType {
  QAVATAR_SKILL_TRIGGER_NONE = 0,
  QAVATAR_SKILL_TRIGGER_DOWN = 1,
  QAVATAR_SKILL_TRIGGER_UP = 2,
  QAVATAR_SKILL_TRIGGER_HOLDUP = 3,
  QAVATAR_SKILL_TRIGGER_HOLDLOOP = 4,
  UNRECOGNIZED = -1,
}

export enum QAvatarSkillType {
  QAVATAR_SKILL_NONE = 0,
  QAVATAR_SKILL_ATK = 1,
  QAVATAR_SKILL_SKL01 = 2,
  QAVATAR_SKILL_SKL02 = 3,
  UNRECOGNIZED = -1,
}

export enum QAvatarStigmataEffectType {
  QAVATAR_STIGMATA_EFFECT_NONE = 0,
  QAVATAR_STIGMATA_EFFECT_DIRECT = 1,
  QAVATAR_STIGMATA_EFFECT_SKILL_TRIGGER = 2,
  QAVATAR_STIGMATA_EFFECT_ROLE = 3,
  QAVATAR_STIGMATA_EFFECT_AVATAR_ID = 4,
  QAVATAR_STIGMATA_EFFECT_ATTACK_ON = 5,
  QAVATAR_STIGMATA_EFFECT_DEL_HP = 8,
  UNRECOGNIZED = -1,
}

export enum QAvatarStigmataSrcType {
  QAVATAR_STIGMATA_SRC_NONE = 0,
  QAVATAR_STIGMATA_SRC_DEFAULT = 1,
  QAVATAR_STIGMATA_SRC_DROP = 2,
  UNRECOGNIZED = -1,
}

export enum QCandyBattleActionType {
  QCANDY_BATTLE_ACTION_TYPE_NONE = 0,
  QCANDY_BATTLE_ACTION_TYPE_ADD_SCORE = 1,
  UNRECOGNIZED = -1,
}

export enum QCandyBattleAvatarState {
  QCANDY_BATTLE_AVATAR_NONE = 0,
  QCANDY_BATTLE_AVATAR_IDLE = 1,
  QCANDY_BATTLE_AVATAR_GROUND_MOVE = 2,
  QCANDY_BATTLE_AVATAR_JUMP = 3,
  QCANDY_BATTLE_AVATAR_DOUBLE_JUMP = 4,
  QCANDY_BATTLE_AVATAR_FALL = 5,
  QCANDY_BATTLE_AVATAR_TUMBLE = 6,
  QCANDY_BATTLE_AVATAR_FLY = 7,
  UNRECOGNIZED = -1,
}

export enum QCandyBattleComponentType {
  QCANDY_BATTLE_COMPONENT_TYPE_NONE = 0,
  QCANDY_BATTLE_COMPONENT_TYPE_POSITION = 1,
  UNRECOGNIZED = -1,
}

export enum QCandyBattleDelayActionType {
  QCANDY_BATTLE_DELAY_ACTION_TYPE_NONE = 0,
  QCANDY_BATTLE_DELAY_ACTION_TYPE_STATE_RESET = 1,
  QCANDY_BATTLE_DELAY_ACTION_TYPE_SKILL_END = 2,
  UNRECOGNIZED = -1,
}

export enum QCandyBattleEntityType {
  QCANDY_BATTLE_ENTITY_TYPE_NONE = 0,
  QCANDY_BATTLE_ENTITY_TYPE_PLAYER = 1,
  QCANDY_BATTLE_ENTITY_TYPE_PROP = 2,
  UNRECOGNIZED = -1,
}

export enum QCandyBattlePropState {
  QCANDY_BATTLE_PROP_CANNOT_TRIGGER = 0,
  QCANDY_BATTLE_PROP_CAN_TRIGGER = 1,
  UNRECOGNIZED = -1,
}

export enum QCandyBattlePropType {
  QCANDY_BATTLE_PROP_TYPE_NONE = 0,
  QCANDY_BATTLE_PROP_TYPE_HAS_CD = 1,
  QCANDY_BATTLE_PROP_TYPE_AUTO_RECOVER = 2,
  UNRECOGNIZED = -1,
}

export enum QCandyBattleTriggerEventType {
  QCANDY_BATTLE_TRIGGER_EVENT_TYPE_ADD_SCORE = 1,
  UNRECOGNIZED = -1,
}

export enum QCandyBattleType {
  QCANDY_BATTLE_TYPE_NONE = 0,
  QCANDY_BATTLE_TYPE_RACING = 1,
  QCANDY_BATTLE_TYPE_SURVIVE = 2,
  QCANDY_BATTLE_TYPE_SCORE = 3,
  UNRECOGNIZED = -1,
}

export enum QCandyLobbyStatus {
  QCANDY_LOBBY_STATUS_INVALID = 0,
  QCANDY_LOBBY_STATUS_INIT = 1,
  QCANDY_LOBBY_STATUS_PREPARE = 2,
  QCANDY_LOBBY_STATUS_FIGHT = 3,
  QCANDY_LOBBY_STATUS_SETTLE = 4,
  QCANDY_LOBBY_STATUS_DELETE = 5,
  UNRECOGNIZED = -1,
}

export enum RaffleActivityType {
  RAFFLE_ACTIVITY_NONE = 0,
  RAFFLE_ACTIVITY_MONOPOLY = 1,
  UNRECOGNIZED = -1,
}

export enum RaffleRewardGrade {
  RAFFLE_REWARD_NONE = 0,
  RAFFLE_REWARD_FIRST = 1,
  RAFFLE_REWARD_SECOND = 2,
  RAFFLE_REWARD_THIRD = 3,
  UNRECOGNIZED = -1,
}

export enum RaidActiveType {
  RAID_ACTIVE_NONE = 0,
  RAID_ACTIVE_DAILY_RAID = 1,
  RAID_ACTIVE_WEEKLY_RAID = 2,
  UNRECOGNIZED = -1,
}

export enum RanchMonsterSkillType {
  RANCH_MONSTER_SKILL_ACTIVE = 1,
  RANCH_MONSTER_SKILL_PASSIVE = 2,
  RANCH_MONSTER_SKILL_FAST_PRODUCTION = 3,
  RANCH_MONSTER_SKILL_RARITY_UP = 4,
  UNRECOGNIZED = -1,
}

export enum RanchMonsterSourceType {
  RANCH_MONSTER_SOURCE_STAGE = 1,
  RANCH_MONSTER_SOURCE_MATERIAL = 2,
  RANCH_MONSTER_SOURCE_SYNTHESIS_WITH_FOMULA = 3,
  RANCH_MONSTER_SOURCE_PRODUCT = 4,
  RANCH_MONSTER_SOURCE_SYNTHESIS_WITHOUT_FORMULA = 5,
  RANCH_MONSTER_SOURCE_GM = 6,
  UNRECOGNIZED = -1,
}

export enum RanchNotifyType {
  RANCH_NOTIFY_UNKNOWN = 0,
  RANCH_NOTIFY_SYNTHESIS = 1,
  RANCH_NOTIFY_STAGE_END = 2,
  RANCH_NOTIFY_LOCK = 3,
  UNRECOGNIZED = -1,
}

export enum RanchRarityType {
  RANCH_LEGENDARY = 4,
  UNRECOGNIZED = -1,
}

export enum RanchSynthesisType {
  RANCH_SYNSHESIS_WITHOUT_FORMULA = 1,
  RANCH_SYNSHESIS_WITH_FORMULA = 2,
  UNRECOGNIZED = -1,
}

export enum RankPowerType {
  AVATAR_SSS_NUM = 101,
  AVATAR_SS_NUM = 102,
  AVATAR_S_NUM = 103,
  AVATAR_A_NUM = 104,
  WEAPON_5STAR_NUM = 201,
  WEAPON_4STAR_NUM = 202,
  WEAPON_3STAR_NUM = 203,
  STIGMATA_5STAR_NUM = 301,
  STIGMATA_4STAR_NUM = 302,
  STIGMATA_3STAR_NUM = 303,
  UNRECOGNIZED = -1,
}

export enum RankScheduleType {
  RANK_SCHEDULE_DORM = 1,
  UNRECOGNIZED = -1,
}

export enum ReclaimActivityDataType {
  RECLAIM_ACTIVITY_DATA_ALL = 0,
  RECLAIM_ACTIVITY_DATA_AVATAR = 1,
  RECLAIM_ACTIVITY_DATA_LEVEL = 2,
  UNRECOGNIZED = -1,
}

export enum ReclaimEquipmentType {
  RECLAIM_NONE = 0,
  RECLAIM_AVATAR = 1,
  RECLAIM_WEAPON = 2,
  RECLAIM_STIGMATA = 3,
  UNRECOGNIZED = -1,
}

export enum ReplayOp {
  REPLAY_UPLOAD = 1,
  REPLAY_DELETE = 2,
  UNRECOGNIZED = -1,
}

export enum ReplayType {
  REPLAY_NONE = 0,
  REPLAY_EXBOSS = 1,
  REPLAY_TVT = 2,
  UNRECOGNIZED = -1,
}

export enum RestaurantRoomType {
  RESTAURANT_ROOM_STORE = 1,
  RESTAURANT_ROOM_KITCHEN = 2,
  RESTAURANT_ROOM_CHECKOUT = 3,
  UNRECOGNIZED = -1,
}

export enum RestaurantSkillType {
  RESTAURANT_SKILL_COOK_ID_SPEED_UP = 1,
  RESTAURANT_SKILL_COOK_TAG_SPEED_UP = 2,
  RESTAURANT_SKILL_COOK_ALL_SPEED_UP = 3,
  RESTAURANT_SKILL_SELL_ID_SPEED_UP = 4,
  RESTAURANT_SKILL_SELL_TAG_SPEED_UP = 5,
  RESTAURANT_SKILL_SELL_ALL_SPEED_UP = 6,
  RESTAURANT_SKILL_SELL_ID_PRICE_UP = 7,
  RESTAURANT_SKILL_SELL_TAG_PRICE_UP = 8,
  RESTAURANT_SKILL_SELL_ALL_PRICE_UP = 9,
  UNRECOGNIZED = -1,
}

export enum RestaurantWorkStatus {
  RESTAURANT_WORK_NOT_BEGIN = 1,
  RESTAURANT_WORK_DOING = 2,
  RESTAURANT_WORK_PAUSE = 3,
  UNRECOGNIZED = -1,
}

export enum ReunionCookBookType {
  REUNION_COOK_BOOK_NORMAL = 1,
  REUNION_COOK_BOOK_RECYCLE = 2,
  UNRECOGNIZED = -1,
}

export enum RogueStageEnum {
  ROGUE_STAGE_HARD_LEVEL_NUM = 4,
  ROGUE_STAGE_AVATAR_POSITION_NUM = 9,
  UNRECOGNIZED = -1,
}

export enum RoomClientStatus {
  ROOM_CLIENT_NONE = 0,
  ROOM_CLIENT_SELECTING_MAP = 1,
  ROOM_CLIENT_EQUIPING = 2,
  UNRECOGNIZED = -1,
}

export enum RoomExitReason {
  ROOM_EXIT_NONE = 0,
  ROOM_EXIT_KICK = 1,
  UNRECOGNIZED = -1,
}

export enum RoomMemberStatus {
  ROOM_UNREADY = 1,
  ROOM_READY = 2,
  ROOM_IN_BATTLE = 3,
  UNRECOGNIZED = -1,
}

export enum RoomMode {
  ROOM_MODE_INVALID = 0,
  ROOM_MODE_TVT = 1,
  ROOM_MODE_MASSIVE_WAR = 2,
  ROOM_MODE_QAVATAR_BATTLE = 3,
  ROOM_MODE_QCANDY_BATTLE = 4,
  UNRECOGNIZED = -1,
}

export enum RoomType {
  ROOM_TYPE_HALL = 1,
  ROOM_TYPE_BEDROOM = 2,
  UNRECOGNIZED = -1,
}

export enum RpgScheduleRankType {
  RPG_SCHEDULE_RANK_COLLECTION = 1,
  RPG_SCHEDULE_RANK_GENERAL = 2,
  UNRECOGNIZED = -1,
}

export enum RpgTaleCollectionRewardType {
  RPG_TALE_COLLECTION_REWARD_NONE = 0,
  RPG_TALE_COLLECTION_REWARD_QAVATAR_STAR = 1,
  RPG_TALE_COLLECTION_REWARD_EVENT = 2,
  RPG_TALE_COLLECTION_REWARD_SHOP = 3,
  RPG_TALE_COLLECTION_REWARD_TOTAL_STAGE_SCORE = 4,
  RPG_TALE_COLLECTION_REWARD_STAGE_CHALLENGE_NUM = 5,
  RPG_TALE_COLLECTION_REWARD_LINKED_ACTIVITY_SCORE = 6,
  RPG_TALE_COLLECTION_REWARD_STAGE_SCORE = 7,
  UNRECOGNIZED = -1,
}

export enum RpgTaleFlagType {
  RPG_TALE_FLAG_INVALID = 0,
  RPG_TALE_FLAG_MATERIAL = 1,
  RPG_TALE_FLAG_MISSION = 2,
  RPG_TALE_FLAG_DIALOG = 3,
  RPG_TALE_FLAG_ROLE = 4,
  RPG_TALE_FLAG_ROLE_STAR_NUM = 5,
  RPG_TALE_FLAG_BEGIN_TIME = 6,
  RPG_TALE_FLAG_END_TIME = 7,
  RPG_TALE_FLAG_PRE_SITE = 8,
  RPG_TALE_FLAG_MATERIAL_NUM = 9,
  RPG_TALE_FLAG_AVATAR = 10,
  RPG_TALE_FLAG_STAGE_CHALLENGE_NUM = 11,
  RPG_TALE_FLAG_PLAYER_LEVEL = 12,
  RPG_TALE_FLAG_OVERALL = 13,
  RPG_TALE_FLAG_TOTAL_STAGE_SCORE = 15,
  RPG_TALE_FLAG_STAGE_SCORE = 16,
  RPG_TALE_FLAG_ABILITY_LEVEL = 17,
  RPG_TALE_FLAG_ABILITY_TOTAL_LEVEL = 18,
  RPG_TALE_FLAG_SITE_ALLOW_ENTER = 19,
  RPG_TALE_FLAG_SITE_STATUS = 20,
  RPG_TALE_FLAG_DROP_LIMIT = 21,
  RPG_TALE_FLAG_IS_STAGE_PASSED = 22,
  UNRECOGNIZED = -1,
}

export enum RpgTaleLinkedActivityType {
  RPG_TALE_LINKED_NONE = 0,
  RPG_TALE_LINKED_ROGUE_TOWER = 1,
  RPG_TALE_LINKED_NEWBIE = 2,
  RPG_TALE_LINKED_RPG_DUNGEON = 3,
  RPG_TALE_LINKED_RANCH = 4,
  RPG_TALE_LINKED_RESTAURANT = 5,
  RPG_TALE_LINKED_TOWN = 6,
  RPG_TALE_LINKED_MONSTER_CARD = 7,
  RPG_TALE_LINKED_DICEY_DUNGEON = 8,
  RPG_TALE_LINKED_PVZ = 9,
  RPG_TALE_LINKED_QCANDY_BATTLE = 10,
  UNRECOGNIZED = -1,
}

export enum RpgTaleOverallCmpType {
  RPG_TALE_CMP_INVALID = 0,
  RPG_TALE_CMP_LESS = 1,
  RPG_TALE_CMP_LESS_OR_EQUAL = 2,
  RPG_TALE_CMP_EQUAL = 3,
  RPG_TALE_CMP_GREATER = 4,
  RPG_TALE_CMP_GREATER_OR_EQUAL = 5,
  UNRECOGNIZED = -1,
}

export enum RpgTaleOverallRefreshType {
  RPG_TALE_OVERALL_REFRESH_NONE = 0,
  RPG_TALE_OVERALL_REFRESH_DAILY = 1,
  RPG_TALE_OVERALL_REFRESH_WEEKLY = 2,
  UNRECOGNIZED = -1,
}

export enum RpgTaleProgressType {
  RPG_TALE_PROGRESS_NONE = 0,
  RPG_TALE_PROGRESS_EVENT = 1,
  RPG_TALE_PROGRESS_TOWER = 2,
  RPG_TALE_PROGRESS_GENERAL_ACTIVITY = 3,
  RPG_TALE_PROGRESS_STAGE_SCORE = 4,
  UNRECOGNIZED = -1,
}

export enum RpgTaleRoleStatus {
  RPG_TALE_ROLE_STATUS_INVALID = 0,
  RPG_TALE_ROLE_STATUS_LOCKED = 1,
  RPG_TALE_ROLE_STATUS_UNLOCKED = 2,
  RPG_TALE_ROLE_STATUS_AWAY = 3,
  UNRECOGNIZED = -1,
}

export enum RpgTaleSiteContentType {
  RPG_TALE_SITE_CONTENT_INVALID = 0,
  RPG_TALE_SITE_CONTENT_NONE = 1,
  RPG_TALE_SITE_CONTENT_MATRIX = 2,
  RPG_TALE_SITE_CONTENT_PLOT = 3,
  RPG_TALE_SITE_CONTENT_TIPS = 4,
  RPG_TALE_SITE_CONTENT_LINK = 5,
  UNRECOGNIZED = -1,
}

export enum RpgTaleSiteStatus {
  RPG_TALE_SITE_STATUS_INVALID = 0,
  RPG_TALE_SITE_STATUS_HIDE = 1,
  RPG_TALE_SITE_STATUS_SHOW = 2,
  RPG_TALE_SITE_STATUS_CONTENT_UNLOCKED = 3,
  RPG_TALE_SITE_STATUS_PASSED = 4,
  RPG_TALE_SITE_STATUS_CLOSED = 5,
  RPG_TALE_SITE_STATUS_CD = 6,
  RPG_TALE_SITE_STATUS_DISCARD = 7,
  UNRECOGNIZED = -1,
}

export enum RpgTaleSiteType {
  RPG_TALE_SITE_TYPE_STORY = 1,
  RPG_TALE_SITE_TYPE_CLUE = 2,
  RPG_TALE_SITE_TYPE_CYCLE = 3,
  RPG_TALE_SITE_TYPE_RANK = 4,
  RPG_TALE_SITE_TYPE_ENDLESS = 5,
  UNRECOGNIZED = -1,
}

export enum RpgTaleTicketRefreshType {
  RPG_TALE_TICKET_REFRESH_DAILY = 1,
  RPG_TALE_TICKET_REFRESH_WEEKLY = 2,
  RPG_TALE_TICKET_REFRESH_CUSTOM = 3,
  RPG_TALE_TICKET_REFRESH_DAILY_WITH_STORAGE = 4,
  UNRECOGNIZED = -1,
}

export enum SealedModePlayerStatus {
  SEALED_MODE_PLAYER_STATUS_NONE = 0,
  SEALED_MODE_PLAYER_STATUS_IN_MATCH = 1,
  SEALED_MODE_PLAYER_STATUS_IN_ROOM = 2,
  UNRECOGNIZED = -1,
}

export enum SealedModeStageType {
  SEALED_MODE_PRACTICE = 1,
  SEALED_MODE_SP = 2,
  SEALED_MODE_MP = 3,
  UNRECOGNIZED = -1,
}

export enum SealedSuiteSelectionStatus {
  SEALED_SUITE_SELECTION_STATUS_NONE = 0,
  SEALED_SUITE_SELECTION_STATUS_ING = 1,
  SEALED_SUITE_SELECTION_STATUS_FINISH = 2,
  UNRECOGNIZED = -1,
}

export enum SealedSuiteSelectionStep {
  SEALED_SUITE_SELECTION_STEP_NONE = 0,
  SEALED_SUITE_SELECTION_STEP_AVATAR = 1,
  SEALED_SUITE_SELECTION_STEP_WEAPON = 2,
  SEALED_SUITE_SELECTION_STEP_STIGMATA = 3,
  UNRECOGNIZED = -1,
}

export enum SecurityEngineCheckType {
  SECURITY_ENGINE_CHECK_NONE = 0,
  SECURITY_ENGINE_CHECK_LOGIN = 1,
  SECURITY_ENGINE_CHECK_STAGE = 2,
  UNRECOGNIZED = -1,
}

export enum SecurityPasswordDeviceStatus {
  SECURITY_PASSWORD_DEVICE_UNLOCKED = 0,
  SECURITY_PASSWORD_DEVICE_LOCKED = 1,
  UNRECOGNIZED = -1,
}

export enum SecurityPasswordOpType {
  SECURITY_PASSWORD_NONE_OP = 0,
  SECURITY_PASSWORD_FAST_UNPROTECT_WEAPON = 1,
  SECURITY_PASSWORD_FAST_UNPROTECT_STIGMATA = 2,
  UNRECOGNIZED = -1,
}

export enum SecurityPasswordStatus {
  SECURITY_PASSWORD_NOT_SET = 0,
  SECURITY_PASSWORD_IS_SET = 1,
  SECURITY_PASSWORD_TOO_MANY_FAILS = 2,
  UNRECOGNIZED = -1,
}

export enum SellCurrencyType {
  SELL_CURRENCY_TYPE_NONE = 0,
  SELL_CURRENCY_TYPE_SCOIN = 1,
  SELL_CURRENCY_TYPE_PURPLE_JADE = 5,
  UNRECOGNIZED = -1,
}

export enum ShareRewardType {
  SHARE_REWARD_TYPE_NONE = 0,
  SHARE_REWARD_TYPE_ONCE = 1,
  SHARE_REWARD_TYPE_DAILY = 2,
  UNRECOGNIZED = -1,
}

export enum ShopGoodsPoolUnlockType {
  SHOP_GOODS_POOL_UNLOCK_PLAYER_LEVEL = 1,
  SHOP_GOODS_POOL_UNLOCK_MP_LEVEL = 2,
  SHOP_GOODS_POOL_UNLOCK_MAX_QUEST_LEVEL = 3,
  SHOP_GOODS_POOL_UNLOCK_OPENWORLD_ACTIVITY_LEVEL = 4,
  SHOP_GOODS_POOL_UNLOCK_EX_BOSS_MONSTER_LEVEL = 5,
  SHOP_GOODS_POOL_UNLOCK_EX_BOSS_SCORE = 6,
  SHOP_GOODS_POOL_UNLOCK_ELF = 7,
  SHOP_GOODS_POOL_UNLOCK_GLOBALWAR_POINT_NUM = 8,
  SHOP_GOODS_POOL_UNLOCK_GLOBALWAR_POINT_ID = 9,
  SHOP_GOODS_POOL_UNLOCK_ADVENTURE_LEVEL = 10,
  SHOP_GOODS_POOL_UNLOCK_DAILY_DUTY_POINT = 11,
  SHOP_GOODS_POOL_UNLOCK_AVATAR = 12,
  SHOP_GOODS_POOL_UNLOCK_STAGE = 13,
  SHOP_GOODS_POOL_UNLOCK_KINGDOM_WAR_CURRENCY = 14,
  SHOP_GOODS_POOL_UNLOCK_MISSION = 15,
  SHOP_GOODS_POOL_UNLOCK_SANCTUARY_LEVEL = 16,
  SHOP_GOODS_POOL_UNLOCK_GOBACK_LEVEL = 17,
  SHOP_GOODS_POOL_UNLOCK_AVATAR_LOCKED = 18,
  SHOP_GOODS_POOL_UNLOCK_HAS_GOT_ITEM = 19,
  SHOP_GOODS_POOL_UNLOCK_AVATAR_DETAIL = 20,
  SHOP_GOODS_POOL_UNLOCK_ELF_DETAIL = 21,
  SHOP_GOODS_POOL_UNLOCK_BATTLE_PASS_TICKET = 22,
  SHOP_GOODS_POOL_UNLOCK_PRIVILEGE_DETAIL = 23,
  SHOP_GOODS_POOL_UNLOCK_HAS_NOT_GOT_ITEM = 24,
  SHOP_GOODS_POOL_UNLOCK_BP_LEVEL = 25,
  SHOP_GOODS_POOL_UNLOCK_PLAYER_LEVEL_LOCK_ID = 26,
  SHOP_GOODS_POOL_UNLOCK_GOBACK_NEWBIE_LEVEL = 27,
  UNRECOGNIZED = -1,
}

export enum ShopType {
  SHOP_NORMAL = 1,
  SHOP_ENDLESS = 2,
  SHOP_ACTIVITY = 3,
  SHOP_EXTRASTORY = 4,
  SHOP_ARMADA = 5,
  SHOP_GACHATICKET = 6,
  SHOP_EXCHANGE_HOUSE = 7,
  SHOP_EXTRASTORY_ACTIVITY = 8,
  SHOP_MP = 9,
  SHOP_EXBOSS = 10,
  SHOP_SKIN = 11,
  SHOP_MASTER = 12,
  SHOP_DORM = 13,
  SHOP_FRAGMENT = 14,
  SHOP_ACTIVITY_EXCLUDE = 15,
  SHOP_MINUTE = 16,
  SHOP_DUNGEONS = 17,
  SHOP_GOBACK = 18,
  SHOP_MASTER_PUPIL = 19,
  SHOP_TYPE_ENCORE = 20,
  SHOP_TYPE_WANTED = 21,
  SHOP_TYPE_ADVENTURE = 22,
  SHOP_TYPE_NEWBIE_ACTIVITY = 23,
  SHOP_TYPE_VIP_EQUIPMENT = 24,
  SHOP_TYPE_GACHA_COIN = 25,
  SHOP_TYPE_MAIN_STORY = 26,
  SHOP_GOBACK_2 = 27,
  SHOP_GOBACK_3 = 28,
  SHOP_TYPE_NEWBIE_ACTIVITY_2 = 29,
  SHOP_TYPE_NEWBIE_ACTIVITY_3 = 30,
  SHOP_TYPE_GOD_WAR = 31,
  SHOP_TYPE_CHAPTER = 32,
  SHOP_TYPE_SC_DLC = 33,
  SHOP_TYPE_BP_ELITE_WORKS = 34,
  SHOP_TYPE_BP_STORE = 35,
  SHOP_TYPE_BP_ELITE_WORKS_VINTAGE = 36,
  SHOP_TYPE_NEWBIE_ACTIVITY_4 = 37,
  SHOP_TYPE_NEWBIE_ACTIVITY_5 = 38,
  SHOP_TYPE_CHAPTER_OW = 39,
  SHOP_OPENWORLD = 100,
  SHOP_OPENWORLD_SENIOR = 101,
  SHOP_OPENWORLD_NEW = 102,
  SHOP_OPENWORLD_ACTIVITY = 103,
  SHOP_TYPE_GIFT_PACK = 201,
  SHOP_ACTIVITY_2 = 302,
  SHOP_ACTIVITY_3 = 303,
  SHOP_ACTIVITY_4 = 304,
  SHOP_ACTIVITY_5 = 305,
  SHOP_ACTIVITY_6 = 306,
  SHOP_ACTIVITY_7 = 307,
  SHOP_ACTIVITY_8 = 308,
  SHOP_WEST = 1001,
  UNRECOGNIZED = -1,
}

export enum SideMissionCond {
  SIDE_MISSION_COND_AVATAR_GOODFEEL = 1,
  UNRECOGNIZED = -1,
}

export enum SkillDamageCollisionType {
  SKILL_DAMAGE_COLLISION_TYPE_POINT = 1,
  SKILL_DAMAGE_COLLISION_TYPE_CIRCLE = 2,
  SKILL_DAMAGE_COLLISION_TYPE_RECT = 3,
  SKILL_DAMAGE_COLLISION_TYPE_SECTOR = 4,
  UNRECOGNIZED = -1,
}

export enum SlgBattleRankType {
  SLG_BATTLE_RANK_NORMAL_POINT = 1,
  SLG_BATTLE_RANK_BIG_BOSS = 2,
  SLG_BATTLE_RANK_COUNTRY = 3,
  UNRECOGNIZED = -1,
}

export enum SlgBossType {
  SLG_BOSS_TYPE_NONE = 0,
  SLG_BOSS_TYPE_SMALL_BOSS = 1,
  SLG_BOSS_TYPE_BIG_BOSS = 2,
  UNRECOGNIZED = -1,
}

export enum SlgBroadcastType {
  SLG_BROADCAST_TYPE_OCCUPY = 1,
  SLG_BROADCAST_TYPE_SCORE_STREAK = 2,
  SLG_BROADCAST_TYPE_OCCUPY_STREAK = 3,
  UNRECOGNIZED = -1,
}

export enum SlgBuffType {
  SLG_BUFF_TYPE_NONE = 0,
  SLG_BUFF_TYPE_ACTIVITY_STAMINA_COST = 1,
  SLG_BUFF_TYPE_STAGE_SCORE = 2,
  SLG_BUFF_TYPE_SETTLE_SCORE = 3,
  SLG_BUFF_TYPE_STAGE = 4,
  UNRECOGNIZED = -1,
}

export enum SlgBuildingType {
  SLG_BUILDING_TYPE_OCCUPY_OWNER_BUFF = 1,
  SLG_BUILDING_TYPE_OCCUPY_OTHERS_BUFF = 2,
  SLG_BUILDING_TYPE_SMALL_BOSS = 3,
  SLG_BUILDING_TYPE_BIG_BOSS = 4,
  UNRECOGNIZED = -1,
}

export enum SlgMatchFactorType {
  SLG_MATCH_FACTOR_TYPE_NONE = 0,
  SLG_MATCH_FACTOR_TYPE_CRYSTAL_COST = 1,
  SLG_MATCH_FACTOR_TYPE_PLAYER_LEVEL = 2,
  SLG_MATCH_FACTOR_TYPE_TOP_AVATAR_COMBAT_SUM = 3,
  SLG_MATCH_FACTOR_TYPE_CUR_BATTLE_SCORE = 4,
  UNRECOGNIZED = -1,
}

export enum SlgScoreRewardType {
  SLG_SCORE_REWARD_TYPE_NONE = 0,
  SLG_SCORE_REWARD_TYPE_PERSONAL_TOTAL = 1,
  SLG_SCORE_REWARD_TYPE_COUNTRY = 2,
  UNRECOGNIZED = -1,
}

export enum SnsShowPriviledgeState {
  SNS_SHOW_NONE = 0,
  SNS_SHOW_OPEN_TO_PUBLIC = 1,
  SNS_SHOW_OPEN_TO_FRIENDS = 2,
  SNS_SHOW_OPEN_TO_SELF = 3,
  UNRECOGNIZED = -1,
}

export enum SnsShowType {
  SNS_NONE = 0,
  SNS_MAIN = 1,
  SNS_WAR_HISTORY = 2,
  SNS_WIKI = 3,
  SNS_MSG_CARD = 4,
  UNRECOGNIZED = -1,
}

export enum SpecialArmadaMatrixGenericItem {
  ARMADA_MATRIX_GENERIC_ITEM_CANDY = 7002,
  UNRECOGNIZED = -1,
}

export enum SpecialItemId {
  ITEM_GREEN_STONE = 4,
  ITEM_PURPLE_JADE = 5,
  ITEM_FRIENDS_POINT = 6,
  ITEM_SCOIN = 100,
  ITEM_FIGHT_OPENWORLD_STAGE_BOSS = 901,
  ITEM_ARMADA_WAR_ENERGE_ITEM_ID = 914,
  ITEM_DLC_COIN = 801,
  ITEM_DLC_REVIVE_COIN = 803,
  ITEM_SC_DLC_REVIVE_COIN = 835,
  ITEM_STAMINA_MEDICINE = 7033,
  ITEM_BENG_HUAI_FRAGMENTS = 7032,
  ITEM_WEEK_DAY_ACTIVITY_COIN = 7034,
  ITEM_SPEED_UP_STAGE = 9007,
  ITEM_ROGUE_STAGE_COIN = 9008,
  UNRECOGNIZED = -1,
}

export enum SpecialMailId {
  MAIL_INVITE = 1001,
  MAIL_INVITEE = 1002,
  MAIL_ACTIVITY_INVITE = 1003,
  MAIL_ARMADA_KICK = 2001,
  MAIL_ARMADA_DISSOLVE = 2002,
  MAIL_RECLAIM_RANK_REWARD = 2017,
  MAIL_CHAPTER_RESET = 2021,
  MAIL_CHAPTER_RESET_AVATAR_COMPENSATE = 2022,
  MAIL_MP_RAID_HCOIN_COMPENSATE = 2023,
  MAIL_ARMADA_CHANGE_NAME = 2101,
  MAIL_ARMADA_LEADER_OFFLINE_NOTICE = 2102,
  MAIL_ARMADA_IMPEACH_LEADER_START = 2103,
  MAIL_ARMADA_IMPEACH_LEADER_SUCCESS = 2104,
  MAIL_ARMADA_IMPEACH_LEADER_FAIL = 2105,
  MAIL_ARMADA_IMPEACH_LEADER_CANCEL = 2106,
  MAIL_MP_NEWBIE = 3001,
  MAIL_MP_REPORT = 3002,
  MAIL_PAY_CARD = 4001,
  MAIL_PAY_SUBS = 4002,
  MAIL_SECURITY_PASSWORD_RESET = 4101,
  MAIL_OPENWORLD_QUEST_REWARD = 5001,
  MAIL_SIMULATE_REWARD = 6004,
  MAIL_ARMADA_WAREHOUSE_AUTO_CANCEL = 6023,
  MAIL_CHATWORLD_DISH_COMPENSATE = 6024,
  MAIL_RAFFLE_COMPENSATE = 6025,
  MAIL_BULLETIN_SCORE_REWARD = 6039,
  MAIL_BIRTHDAY_REWARD = 6101,
  MAIL_RAID_RANK_REWARD = 6201,
  MAIL_RAID_SCORE_REWARD = 6202,
  MAIL_RAID_SPECIAL_REWARD = 6203,
  MAIL_SEASON_WEEK_RANK_REWARD = 6301,
  MAIL_SEASON_RANK_REWARD = 6302,
  MAIL_SEASON_SCORE_REWARD = 6303,
  MAIL_EXTRA_STORY_COMPENSATE_REWARD = 6401,
  MAIL_WORLD_BOSS_SCORE_REWARD = 6501,
  MAIL_WORLD_BOSS_RANK_REWARD = 6502,
  MAIL_WORLD_BOSS_KILL_BOSS_REWARD = 6503,
  MAIL_HCOIN_GACHA_RESET = 6601,
  MAIL_GACHA_EX_REWARD = 6602,
  MAIL_COUPLE_TOWER_ACTIVITY_FLOOR_REWARD = 6801,
  MAIL_PLAYER_WEEKLY_REPORT = 6901,
  MAIL_MASTER_PUPIL_MASTER_REWARD_0_STAR = 7001,
  MAIL_MASTER_PUPIL_MASTER_REWARD_1_STAR = 7002,
  MAIL_MASTER_PUPIL_MASTER_REWARD_2_STAR = 7003,
  MAIL_MASTER_PUPIL_MASTER_REWARD_3_STAR = 7004,
  MAIL_MASTER_PUPIL_PUPIL_REWARD = 7005,
  MAIL_MASTER_PUPIL_DISMISS = 7006,
  MAIL_ARMADA_MATRIX_DEPOSIT_REWARD = 7101,
  MAIL_ARMADA_WAR_SEASON_REWARD = 7102,
  MAIL_ARMADA_WAR_BATTLE_REWARD = 7103,
  MAIL_ARMADA_WAR_BATTLE_CONTRIBUTION_REWARD = 7104,
  MAIL_ARMADA_WAR_BATTLE_RANK_REWARD = 7105,
  MAIL_ARMADA_WAR_APPLY_NOTIFY_MAIL = 7106,
  MAIL_ARMADA_WAR_ARMADA_RESET_MAIL = 7107,
  MAIL_ARMADA_WAR_PLAYER_BATTLE_NUM_REWARD = 7108,
  MAIL_ARMADA_FIRST_JOIN_REWARD = 7109,
  MAIL_TIME_LIMIT_ADD_UP_REWARD = 7201,
  MAIL_TVT_FIRST_DIVISION_UP_REWARD = 7202,
  MAIL_TVT_SEASON_OFF_REWARD = 7203,
  MAIL_CREDIT_BEHAVIOR_SELF_NOTIFY = 7209,
  MAIL_CREDIT_BEHAVIOR_OTHER_NOTIFY = 7210,
  MAIL_CREDIT_RANK_REDUCE_NOTIFY = 7211,
  MAIL_CREDIT_RANK_IMPROVE_NOTIFY = 7212,
  MAIL_KINGDOM_WAR_RANK_REWARD = 7301,
  MAIL_KINGDOM_WAR_PERCENT_RANK_REWARD = 7302,
  MAIL_KINGDOM_WAR_PERCENT_SCORE_REWARD = 7303,
  MAIL_KINGDOM_WAR_PHASE_REWARD = 7304,
  MAIL_ARMADA_MATRIX_ARMADA_REWARD = 7305,
  MAIL_MP_RAID_RESET_MISSION_REWARD = 7402,
  MAIL_BLOCK_ZONE_MISSION_REWARD = 7403,
  MAIL_AVATAR_STAR_UP_RETURN = 7601,
  MAIL_ROGUE_TOWER_ENDLESS_SCORE_REWARD = 7602,
  MAIL_DREAM_REWARD = 7604,
  MAIL_SLG_BATTLE_COUNTRY_RANK_REWARD = 7607,
  MAIL_SINGLE_WANTED_WEEKLY_ENGAGE_REWARD = 7608,
  MAIL_SINGLE_WANTED_BOX_FIXED_REWARD = 7609,
  MAIL_SINGLE_WANTED_BOX_CHOICE_REWARD = 7610,
  MAIL_SLG_BATTLE_SCORE_REWARD = 7611,
  MAIL_SLG_ACTIVITY_SCORE_REWARD = 7612,
  MAIL_WANTED_OFF_COMPENSATE_REWARD = 7613,
  MAIL_OPENWORLD_CHAPTER_LIMIT_REWARD_COMPENSATE = 7617,
  MAIL_SC_DLC_DAILY_QUEST_COMPENSATE = 7619,
  MAIL_NEWBIE_LEVEL_RUSH_COMPENSATE = 7620,
  MAIL_SC_DLC_EVENT_COMPENSATE = 7621,
  MAIL_MODIFY_PLAYER_DATA_580_LEVEL_DATA_COMPENSATE = 7625,
  MAIL_NEWBIE_MATERIAL_RECYCLE = 8058,
  UNRECOGNIZED = -1,
}

export enum SpecialStageId {
  STAGE_ID_ENDLESS = 900101,
  STAGE_ID_ROGUE = 900201,
  STAGE_ID_ARMADA = 900301,
  STAGE_ID_ARMADA_MP = 900302,
  STAGE_ID_OPENWORLD = 900401,
  STAGE_ID_OPENWORLD_BOSS = 900402,
  STAGE_ID_OPENWORLD_DEFENSE = 900408,
  STAGE_ID_EXBOSS = 900501,
  STAGE_ID_ARMADA_MATRIX = 900601,
  STAGE_ID_SC_DLC_TOWER = 900701,
  STAGE_ID_SEVEN_CHAPTER_CG = 901000,
  STAGE_ID_ARMADA_BOSS = 100000000,
  UNRECOGNIZED = -1,
}

export enum SpecificRankType {
  SPECIFIC_RANK_NONE = 0,
  SPECIFIC_RANK_GLOBAL_GOODS = 1,
  UNRECOGNIZED = -1,
}

export enum StageChallengeType {
  CHALLENGE_LIMIT_AVATAR = 1,
  CHALLENGE_LIMIT_AVATAR_KILLED = 2,
  CHALLENGE_MAX_COMBO = 3,
  CHALLENGE_LIMIT_BE_HIT = 4,
  CHALLENGE_LIMIT_LEVEL_TIME = 5,
  CHALLENGE_LIMIT_WITCH_TIME_TRIGGERED = 6,
  CHALLENGE_MAX_DAMAGE_IN_WITCH_TIME = 7,
  CHALLENGE_MAX_ULTIMATE_SKILL_TRIGGERED = 8,
  CHALLENGE_MAX_DAMAGE_IN_CERTAIN_TIME = 9,
  CHALLENGE_MAX_ULTIMATE_SKILL_TRIGGERED_BY_DISTINCT_AVATAR = 10,
  CHALLENGE_LIMIT_BE_HIT_DOWN = 11,
  CHALLENGE_MAX_AVATAR_CLASS_IN_TEAM = 12,
  CHALLENGE_MAX_MONSTER_KILLED = 13,
  CHALLENGE_MAX_AVATAR_NATURE_IN_TEAM = 14,
  CHALLENGE_LIMIT_TOTAL_DAMAGE = 15,
  CHALLENGE_HELPER_AVATAR_ALIVE = 16,
  CHALLENGE_LIMIT_TRAP_TRIGGERED = 17,
  CHALLENGE_MAX_BOX_OPENED = 18,
  CHALLENGE_MAX_DEBUFF_ADD = 19,
  CHALLENGE_LIMIT_BE_ADDED_DEBUFF = 20,
  CHALLENGE_MAX_ALL_DAMAGE_IND_WITCH_TIME = 21,
  CHALLENGE_MAX_MONSTER_KILLED_BY_SWITCH_IN_ATTACK = 22,
  CHALLENGE_MAX_MONSTER_KILLED_IN_WITCH_TIME = 23,
  CHALLENGE_MONSTER_LAST_KILLED_BY_SWITCH_IN_ATTACK = 24,
  CHALLENGE_MAX_MONSTER_KILLED_IN_CERTAIN_TIME = 25,
  CHALLENGE_MAX_MONSTER_HIT_AIR = 26,
  CHALLENGE_FINISH_STAGE_NORMAL = 27,
  CHALLENGE_FINISH_STAGE_FAST = 28,
  CHALLENGE_FINISH_STAGE_VERY_FAST = 29,
  CHALLENGE_MONSTER_KILLED_BY_BRANCH = 30,
  CHALLENGE_QTE_TRIGGERED = 31,
  CHALLENGE_MAX_MONSTER_KILLED_BY_ASSASSIN = 32,
  CHALLENGE_MAX_MONSTER_CONTINOUS_KILLED_BY_ASSASSIN = 33,
  CHALLENGE_MAX_ELITE_MONSTER_KLLED = 34,
  CHALLENGE_LIMIT_DISCOVERED = 35,
  CHALLENGE_MAX_DEFEND_OBJECT_DAMAGE = 36,
  CHALLENGE_MAX_TEAM_SKILL_TRIGGERED = 37,
  CHALLENGE_ALL_STORY_MISSION_COMPLETE = 38,
  CHALLENGE_MAX_SCORE = 39,
  CHALLENGE_MAX_TEAM_SKILL_TRIGGERED_FOR_ALL_TEAM_MEMBER = 40,
  CHALLENGE_MAX_MONSTER_KILLED_IN_WITCH_TIME_FOR_ALL_TEAM_MEMBER = 41,
  CHALLENGE_MAX_MONSTER_KILLED_FOR_ALL_TEAM_MEMBER = 42,
  CHALLENGE_MONSTER_KILLED_BY_BRANCH_FOR_ALL_TEAM_MEMBER = 43,
  CHALLENGE_MAX_QTE_TRIGGERED_FOR_ALL_TEAM_MEMBER = 44,
  CHALLENGE_LIMIT_EVADE_SUCCESS_TRIGGERED_FOR_ALL_TEAM_MEMBER = 45,
  CHALLENGE_MAX_ULTIMATE_SKILL_TRIGGERED_FOR_ALL_TEAM_MEMBER = 46,
  CHALLENGE_LIMIT_AVATAR_KILLED_FOR_ALL_TEAM_MEMBER = 47,
  CHALLENGE_MONSTER_KILLED_BY_QTE_FOR_ALL_TEAM_MEMBER = 48,
  CHALLENGE_CLIENT_CUSTOM = 49,
  CHALLENGE_CUSTOM_BUTTON = 50,
  CHALLENGE_LIMIT_LEVEL_TIME2 = 51,
  CHALLENGE_MONSTERCARD_LIMIT_AVATARSIDE_MONSTER_KILLED = 52,
  UNRECOGNIZED = -1,
}

export enum StageDifficulty {
  STAGE_DIFFICULTY_NORMAL = 1,
  STAGE_DIFFICULTY_HARD = 2,
  STAGE_DIFFICULTY_HELL = 3,
  UNRECOGNIZED = -1,
}

export enum StageEndStatus {
  STAGE_WIN = 1,
  STAGE_NOT_MEET_CONDITION = 2,
  STAGE_All_DEAD = 3,
  STAGE_EXIT = 4,
  UNRECOGNIZED = -1,
}

export enum StageEnterTimesType {
  STAGE_ENTER_TIMES_DAILY = 0,
  STAGE_ENTER_TIMES_WEEKLY = 1,
  UNRECOGNIZED = -1,
}

export enum StageOpenStatus {
  STAGE_NOT_OPEN = 1,
  STAGE_OPENED = 2,
  STAGE_CLOSED = 3,
  UNRECOGNIZED = -1,
}

export enum StagePassType {
  STAGE_PASS_TYPE_NORMAL = 0,
  STAGE_PASS_TYPE_BURDEN_ALLEVIATION = 1,
  UNRECOGNIZED = -1,
}

export enum StageRecordType {
  STAGE_RECORD_SCORE = 1,
  STAGE_RECORD_TIME = 2,
  STAGE_RECORD_TOTAL_SCORE = 3,
  STAGE_RECORD_BATTLE_SCORE = 4,
  STAGE_RECORD_BATTLE_SCORE_NO_COIN = 5,
  UNRECOGNIZED = -1,
}

export enum StageResetType {
  STAGE_RESET_TYPE_RESET = 0,
  STAGE_RESET_TYPE_ADD = 1,
  UNRECOGNIZED = -1,
}

export enum StageStatus {
  STAGE_LOCKED = 1,
  STAGE_DOING = 2,
  STAGE_DONE = 3,
  UNRECOGNIZED = -1,
}

export enum StageTagRestrictType {
  STAGE_TAG_RESTRICT_NONE = 0,
  STAGE_TAG_RESTRICT_TAG = 1,
  STAGE_TAG_RESTRICT_NO_TAG = 2,
  STAGE_TAG_RESTRICT_ATTRIBUTE = 3,
  STAGE_TAG_RESTRICT_NO_ATTRIBUTE = 4,
  STAGE_TAG_RESTRICT_ROLE = 5,
  STAGE_TAG_RESTRICT_NO_ROLE = 6,
  UNRECOGNIZED = -1,
}

export enum StageType {
  STAGE_STORY = 1,
  STAGE_WEEK_DAY = 2,
  STAGE_BEFALL = 3,
  STAGE_ENDLESS = 4,
  STAGE_NUCLEAR = 5,
  STAGE_EXTRA_STORY = 7,
  STAGE_ROGUE = 9,
  STAGE_ARMADA = 10,
  STAGE_OPENWORLD = 11,
  STAGE_OPENWORLD_BOSS = 12,
  STAGE_TUTORIAL = 13,
  STAGE_CAMPWAR = 14,
  STAGE_EX_BOSS = 15,
  STAGE_MINUTE = 16,
  STAGE_SEALED = 17,
  STAGE_WORLDBOSS = 18,
  STAGE_LEVELMATRIX = 19,
  STAGE_PUSHTOWER = 20,
  STAGE_TEAM_ASSAULT = 21,
  STAGE_GENERAL_ACTIVITY = 22,
  STAGE_AVATAR_TRAINING = 23,
  STAGE_ARMADA_WAR = 24,
  STAGE_DUNGEONS = 25,
  STAGE_OPENWORLD_DEFENSE = 26,
  STAGE_RECLAIM = 27,
  STAGE_OPENWORLD_BOSS_MP = 28,
  STAGE_OPENWORLD_ENDLESS = 29,
  STAGE_MATRIX_NORMAL = 30,
  STAGE_MATRIX_QAVATAR = 31,
  STAGE_COUPLE_TOWER = 32,
  STAGE_CAMPAIGN = 33,
  STAGE_TOWER_RAID = 34,
  STAGE_KINGDOM_WAR = 35,
  STAGE_TVT = 36,
  STAGE_QUANTUM_ENDLESS = 37,
  STAGE_WANTED = 38,
  STAGE_QAVATAR_PVE = 39,
  STAGE_DLC_TOWER = 40,
  STAGE_ENDLESS_SINGLE = 41,
  STAGE_MONOPOLY_BOSS = 42,
  STAGE_ADVENTURE_GROUP = 43,
  STAGE_GLOBAL_WAR = 44,
  STAGE_GRATUITY = 45,
  STAGE_NINJA = 46,
  STAGE_SINGLE_RAID_STEP = 47,
  STAGE_ARMADA_STAGE_SCORE_ACTIVITY = 48,
  STAGE_NEWBIE_CHALLENGE_ACTIVITY = 49,
  STAGE_CHALLENGE_WAR = 50,
  STAGE_MASSIVE_WAR = 51,
  STAGE_SANCTUARY = 52,
  STAGE_CRISIS_MODE = 53,
  STAGE_SCHEDULED_MAP_SITE = 54,
  STAGE_EXAMINATION = 55,
  STAGE_MONOPOLY_MONSTER = 56,
  STAGE_ULTIMATE_ENDLESS = 57,
  STAGE_HYBRID = 58,
  STAGE_DAILY_MP = 59,
  STAGE_ULTRA_ENDLESS = 60,
  STAGE_BUFF_TOWER = 61,
  STAGE_ROGUE_TOWER = 62,
  STAGE_ROGUE_TOWER_ENDLESS = 64,
  STAGE_CHATWORLD_BEAST = 65,
  STAGE_SLG = 66,
  STAGE_THEME_WANTED = 67,
  STAGE_GOD_WAR = 68,
  STAGE_HYBRID_RELAY = 69,
  STAGE_GENSHIN_LD = 70,
  STAGE_RANCH = 71,
  STAGE_SINK_CITY_DLC_PREHEAT = 72,
  STAGE_SC_DLC_CHALLENGE = 73,
  STAGE_OW_CHAPTER_TOWER = 74,
  STAGE_OW_CHAPTER_ENDLESS_TOWER = 75,
  STAGE_CHATWORLD_BOX = 76,
  STAGE_SC_DLC_MP = 77,
  STAGE_GREEDY_ENDLESS = 78,
  STAGE_OW_CHAPTER_CYCLE = 79,
  STAGE_OW_HUNT_ACTIVITY = 80,
  STAGE_FRONT_ENDLESS = 81,
  STAGE_MONSTER_CARD_NORMAL = 82,
  STAGE_MONSTER_CARD_BOSS = 83,
  STAGE_MONSTER_CARD_TOWER = 84,
  STAGE_DICEY_DUNGEON_STORY = 85,
  STAGE_DICEY_DUNGEON_SCHEDULE = 86,
  STAGE_BUFF_ASSIST = 87,
  STAGE_QCANDY_TUTORIAL = 88,
  STAGE_QCANDY_PVP = 89,
  UNRECOGNIZED = -1,
}

export enum StigmataPosition {
  STIGMATA_UP = 1,
  STIGMATA_MID = 2,
  STIGMATA_DOWN = 3,
  STIGMATA_MAX = 4,
  UNRECOGNIZED = -1,
}

export enum StigmataRefineTimesType {
  STIGMATA_REFINE_TIMES_ONE = 1,
  STIGMATA_REFINE_TIMES_TEN = 10,
  UNRECOGNIZED = -1,
}

export enum StigmataRefineType {
  STIGMATA_REFINE_NORMAL = 1,
  STIGMATA_REFINE_ADD_SLOT = 2,
  STIGMATA_REFINE_SPECIAL = 3,
  STIGMATA_REFINE_LOCK = 4,
  UNRECOGNIZED = -1,
}

export enum StigmataType {
  STIGMATA_SLOT_1 = 1,
  STIGMATA_SLOT_2 = 2,
  STIGMATA_SLOT_3 = 3,
  UNRECOGNIZED = -1,
}

export enum StorySweepGroupType {
  STORY_SWEEP_GROUP_AVATAR_FRAGMENT = 1,
  STORY_SWEEP_GROUP_MATERIAL = 2,
  STORY_SWEEP_GROUP_ACTIVITY = 3,
  STORY_SWEEP_GROUP_MATERIAL_NEW = 4,
  UNRECOGNIZED = -1,
}

export enum SupportActivityType {
  ACTIVITY_TYPE_GLOBAL_SUPPORT = 0,
  ACTIVITY_TYPE_NORMAL = 1,
  UNRECOGNIZED = -1,
}

export enum SystemChatMsgType {
  CHAT_MSG_NONE = 0,
  CHAT_MSG_GACHA = 1,
  CHAT_MSG_LOBBY = 2,
  CHAT_MSG_FORGE = 3,
  CHAT_MSG_SCRATCH = 4,
  UNRECOGNIZED = -1,
}

export enum TeamAssaultActivityScoreType {
  TEAM_ASSAULT_ACTIVITY_SCORE_ACCUM = 1,
  TEAM_ASSAULT_ACTIVITY_SCORE_MAX = 2,
  UNRECOGNIZED = -1,
}

export enum TeamRestrictType {
  TEAM_RESTRICT_TYPE_AVATAR_NUM = 1,
  TEAM_RESTRICT_TYPE_AVATAR_CLASS_NUM = 2,
  TEAM_RESTRICT_TYPE_AVATAR_EACH_LEVEL = 3,
  TEAM_RESTRICT_TYPE_AVATAR_EACH_STAR = 4,
  TEAM_RESTRICT_TYPE_AVATAR_ONE_STAR = 5,
  TEAM_RESTRICT_TYPE_AVATAR_CLASS_NOT_SAME = 6,
  TEAM_RESTRICT_TYPE_AVATAR_ATTR_NOT_SAME = 7,
  TEAM_RESTRICT_TYPE_AVATAR_EACH_ATTR = 8,
  TEAM_RESTRICT_TYPE_AVATAR_NOT_ATTR = 9,
  TEAM_RESTRICT_TYPE_AVATAR_EACH_CLASS = 10,
  TEAM_RESTRICT_TYPE_AVATAR_NOT_CLASS = 11,
  TEAM_RESTRICT_TYPE_HAS_AVATAR_ID = 12,
  TEAM_RESTRICT_TYPE_AVATAR_NOT_ID = 13,
  TEMA_RESTRICT_TYPE_ROLE_AVATAR_NUM = 15,
  TEAM_RESTRICT_TYPE_ROLE_LIST = 16,
  TEAM_RESTRICT_TYPE_IN_AVATAR_LIST = 17,
  TEAM_RESTRICT_TYPE_RESISTANCE = 18,
  TEAM_RESTRICT_TYPE_HAS_ELF = 19,
  TEAM_RESTRICT_TYPE_AVATAR_EACH_TAG_LIST = 20,
  TEAM_RESTRICT_TYPE_AVATAR_NOT_TAG_LIST = 21,
  TEAM_RESTRICT_TYPE_AVATAR_ONE_TAG = 22,
  TEAM_RESTRICT_TYPE_AVATAR_TAG_NUM = 23,
  TEAM_RESTRICT_TYPE_AVATAR_ATTR_NUM = 24,
  TEAM_RESTRICT_TYPE_AVATAR_ATTR_SAME_NUM = 25,
  TEAM_RESTRICT_TYPE_IN_RPG_ROLE_LIST = 26,
  UNRECOGNIZED = -1,
}

export enum TileBarrierType {
  TILE_BARRIER_TYPE_NONE = 0,
  TILE_BARRIER_TYPE_PERMANENT = 1,
  TILE_BARRIER_TYPE_BLOCK = 2,
  TILE_BARRIER_TYPE_STOP_ON_PLAYER = 3,
  TILE_BARRIER_TYPE_STOP_ON_ONCE = 4,
  TILE_BARRIER_TYPE_NON_ROADBLOCK = 5,
  UNRECOGNIZED = -1,
}

export enum TileEntityType {
  TILE_ENTITY_TYPE_NONE = 0,
  TILE_ENTITY_TYPE_PLAYER = 1,
  TILE_ENTITY_TYPE_NPC = 2,
  TILE_ENTITY_TYPE_ROADBLOCK = 3,
  TILE_ENTITY_TYPE_TOWN_AVATAR = 4,
  TILE_ENTITY_TYPE_TOWN_BUILDING = 5,
  UNRECOGNIZED = -1,
}

export enum TileFloorStatus {
  TILE_FLOOR_STATUS_NONE = 0,
  TILE_FLOOR_STATUS_LOCKED = 1,
  TILE_FLOOR_STATUS_UNLOCKED = 2,
  TILE_FLOOR_STATUS_VISTIED = 3,
  UNRECOGNIZED = -1,
}

export enum TileMoveType {
  TILE_MOVE_WALK = 0,
  TILE_MOVE_TELEPORT = 1,
  TILE_MOVE_KNOCK_OFF = 2,
  UNRECOGNIZED = -1,
}

export enum TimeLimitAddUpType {
  ADD_UP_VIP_POINT_ALL = 1,
  ADD_UP_HCOIN_COST = 2,
  ADD_UP_SCOIN_COST = 3,
  ADD_UP_STAMINA_COST = 4,
  ADD_UP_HCOIN_GACHA = 5,
  ADD_UP_EXP = 6,
  ADD_UP_VIP_POINT = 7,
  UNRECOGNIZED = -1,
}

export enum TowerRaidRating {
  TOWER_RAID_RATING_NONE = 0,
  TOWER_RAID_RATING_DEGRADE = 1,
  TOWER_RAID_RATING_KEEP = 2,
  TOWER_RAID_RATING_UPGRADE = 3,
  UNRECOGNIZED = -1,
}

export enum TownActivityChallengeCmpType {
  TOWN_ACTIVITY_CHALLENGE_CMP_GREATER = 1,
  TOWN_ACTIVITY_CHALLENGE_CMP_LESS = 2,
  TOWN_ACTIVITY_CHALLENGE_CMP_EQUAL = 3,
  TOWN_ACTIVITY_CHALLENGE_CMP_GREATER_EQUAL = 4,
  TOWN_ACTIVITY_CHALLENGE_CMP_LESS_EQUAL = 5,
  UNRECOGNIZED = -1,
}

export enum TownActivityChallengeFinishWay {
  TOWN_ACTIVITY_CHALLENGE_BUILDING_HP = 1,
  TOWN_ACTIVITY_CHALLENGE_AVATAR_DIE_TIMES = 2,
  TOWN_ACTIVITY_CHALLENGE_BUILDING_TIMES = 3,
  TOWN_ACTIVITY_CHALLENGE_STRENTH_AVATAR_NUM = 4,
  TOWN_ACTIVITY_CHALLENGE_COIN_NUM = 5,
  UNRECOGNIZED = -1,
}

export enum TownActivityChallengeRecordType {
  TOWN_ACTIVITY_CHALLENGE_RECORD_IN_GAME = 1,
  TOWN_ACTIVITY_CHALLENGE_RECORD_SETTLE_GAME = 2,
  UNRECOGNIZED = -1,
}

export enum TownActivityCondType {
  TOWN_ACTIVITY_COND_NONE = 0,
  TOWN_ACTIVITY_COND_TOTAL_STRENGTH = 1,
  TOWN_ACTIVITY_COND_TOTAL_SPEED = 2,
  TOWN_ACTIVITY_COND_TOTAL_LUCK = 3,
  TOWN_ACTIVITY_COND_COIN_MATERIAL_NUM = 4,
  TOWN_ACTIVITY_COND_BUILDING_NUM = 5,
  UNRECOGNIZED = -1,
}

export enum TownActivityConst {
  TOWN_ACTIVITY_ROUND_PER_SECOND = 50,
  TOWN_ACTIVITY_STEP_PER_TILE_CELL = 10000,
  TOWN_ACTIVITY_MAX_HP_RATIO = 100000,
  UNRECOGNIZED = -1,
}

export enum TownActivityGoodsLimitType {
  TOWN_ACTIVITY_GOODS_LIMIT_SHOP = 1,
  TOWN_ACTIVITY_GOODS_LIMIT_GLOBAL = 2,
  UNRECOGNIZED = -1,
}

export enum TownActivityMaterialUseType {
  TOWN_ACTIVITY_MATERIAL_USE_BUILDING = 1,
  TOWN_ACTIVITY_MATERIAL_USE_AVATAR_BUFF = 2,
  TOWN_ACTIVITY_MATERIAL_USE_KILL_MONSTER = 3,
  TOWN_ACTIVITY_MATERIAL_USE_GLOBAL_BUFF = 4,
  UNRECOGNIZED = -1,
}

export enum TownBuffDurationType {
  TOWN_BUFF_DURATION_PERMANENT = 0,
  TOWN_BUFF_DURATION_BATTLE = 1,
  TOWN_BUFF_DURATION_STEP = 2,
  TOWN_BUFF_DURATION_BOSS = 3,
  UNRECOGNIZED = -1,
}

export enum TownBuffType {
  TOWN_BUFF_ADD_STRENGTH_RATIO = 1,
  TOWN_BUFF_ADD_STRENGTH = 2,
  TOWN_BUFF_ADD_LUCK = 3,
  TOWN_BUFF_COIN_RATIO = 4,
  TOWN_BUFF_ADD_MATERIAL = 5,
  TOWN_BUFF_ADD_DAMAGE_RATIO = 6,
  TOWN_BUFF_CHANGE_TERRAIN = 7,
  TOWN_BUFF_CHANGE_GROUND = 8,
  TOWN_BUFF_ADD_DAMAGE_RECEIVED = 9,
  TOWN_BUFF_RPG_EVENT = 10,
  TOWN_BUFF_HEAL_HP_BY_RATIO = 11,
  TOWN_BUFF_HEAL = 12,
  TOWN_BUFF_CHECK_IN = 13,
  TOWN_BUFF_CHECK_OUT = 14,
  TOWN_BUFF_POSTPONE_BOSS = 15,
  TOWN_BUFF_CREATE_ENTITY = 16,
  TOWN_BUFF_REPLACE_ENTITY = 17,
  TOWN_BUFF_ADD_BRICK = 18,
  TOWN_BUFF_LOSE_GAME = 19,
  TOWN_BUFF_RESET_GROUND = 20,
  TOWN_BUFF_ADD_SPEED = 21,
  TOWN_BUFF_CHECK_IN_OPTIONAL = 22,
  TOWN_BUFF_ADD_MONSTER = 23,
  TOWN_BUFF_ADD_EVENT = 24,
  TOWN_BUFF_WIN_GAME = 25,
  TOWN_BUFF_RESET_TERRAIN = 26,
  TOWN_BUFF_BATTLE_SKILL = 27,
  TOWN_BUFF_CHANGE_BUILDING = 28,
  TOWN_BUFF_REDUCE_BOSS_INITIAL_HP_RATIO = 29,
  TOWN_BUFF_ATTACK_ENEMY = 30,
  UNRECOGNIZED = -1,
}

export enum TownBuildingSkillCondType {
  TOWN_BUILDING_COND_NONE = 0,
  TOWN_BUILDING_COND_SIDE_BUILDING = 1,
  TOWN_BUILDING_COND_SIDE_BUILDING_MAX_NUM = 2,
  TOWN_BUILDING_COND_NO_SIDE_BUILDING = 3,
  TOWN_BUILDING_COND_SIDE_ROAD = 4,
  TOWN_BUILDING_COND_TOTAL_BUILDING_NUM = 5,
  TOWN_BUILDING_COND_PASS_AVATAR = 6,
  TOWN_BUILDING_COND_SIDE_ROAD_WITH_TERRAIN = 7,
  UNRECOGNIZED = -1,
}

export enum TownBuildingSkillTargetType {
  TOWN_TARGET_NONE = 0,
  TOWN_TARGET_AVATAR_CHECK_IN = 1,
  TOWN_TARGET_ALL_AVATAR = 2,
  TOWN_TARGET_ATTRIBUTE_AVATAR = 3,
  TOWN_TARGET_PASSED_AVATAR_IN_CROSS = 4,
  TOWN_TARGET_ROAD_IN_CROSS = 5,
  TOWN_TARGET_ROAD_IN_ROUND = 6,
  TOWN_TARGET_BUILDING = 7,
  TOWN_TARGET_PASSED_AVATAR_IN_ROUND = 8,
  TOWN_TARGET_SPECIFIC_AVATAR = 9,
  TOWN_TARGET_RANDOM_EMPTY_ROAD_IN_ROUND = 10,
  TOWN_TARGET_RANDOM_MONSTER_AOE = 11,
  TOWN_TARGET_BOSS = 12,
  UNRECOGNIZED = -1,
}

export enum TownPropType {
  TOWN_NONE = 0,
  TOWN_AVATAR = 1,
  TOWN_MONSTER = 2,
  UNRECOGNIZED = -1,
}

export enum TownRangeType {
  TOWN_RANGE_NONE = 0,
  TOWN_RANGE_CROSS = 1,
  TOWN_RANGE_ROUND = 2,
  UNRECOGNIZED = -1,
}

export enum TrialWarshipTimeType {
  TRIAL_WARSHIP_TIME_UNTIL = 1,
  TRIAL_WARSHIP_TIME_DURATION = 2,
  UNRECOGNIZED = -1,
}

export enum TvtBattleJudgeType {
  TVT_BATTLE_JUDGE_NONE = 0,
  TVT_BATTLE_JUDGE_WIN_WHEN_ZERO = 1,
  TVT_BATTLE_JUDGE_LOSE_WHEN_ZERO = 2,
  UNRECOGNIZED = -1,
}

export enum TvtBattleMemberStatus {
  TVT_BATTLE_MEMBER_STATUS_NONE = 0,
  TVT_BATTLE_MEMBER_STATUS_ONLINE = 1,
  TVT_BATTLE_MEMBER_STATUS_OFFLINE = 2,
  UNRECOGNIZED = -1,
}

export enum TvtStagePickType {
  TVT_STAGE_PICK_NONE = 0,
  TVT_STAGE_PICK_FREE = 1,
  TVT_STAGE_PICK_RANDOM = 2,
  UNRECOGNIZED = -1,
}

export enum TvtType {
  TVT_NONE = 0,
  TVT_NORMAL = 1,
  TVT_RANKING = 2,
  UNRECOGNIZED = -1,
}

export enum UserRankType {
  USER_RANK_NONE = 0,
  USER_RANK_NORMAL = 1,
  USER_RANK_PERCENT = 2,
  UNRECOGNIZED = -1,
}

export enum UserType {
  USER_TYPE_NONE = 0,
  USER_TYPE_ANDROID = 1,
  USER_TYPE_IOS = 2,
  USER_TYPE_PC = 3,
  USER_TYPE_CHANNEL = 4,
  USER_TYPE_WEGAME = 5,
  USER_TYPE_STEAM = 6,
  UNRECOGNIZED = -1,
}

export enum VipRewardStatus {
  VIP_REWARD_LOCKED = 1,
  VIP_REWARD_NOT_GET = 2,
  VIP_REWARD_HAS_GOT = 3,
  VIP_REWARD_HAS_GOT_BUT_SPECIAL = 4,
  UNRECOGNIZED = -1,
}

export enum WareHouseStatus {
  WAREHOUSE_STATUS_NONE = 0,
  WAREHOUSE_STATUS_NORMAL = 1,
  WAREHOUSE_STATUS_DEMANDING = 2,
  WAREHOUSE_STATUS_FINISH = 3,
  WAREHOUSE_STATUS_CD = 4,
  UNRECOGNIZED = -1,
}

export enum WarshipBgmPlayMode {
  WARSHIP_BGM_PLAY_MODE_RANDOM = 0,
  WARSHIP_BGM_PLAY_MODE_SINGLE = 1,
  UNRECOGNIZED = -1,
}

export enum WarshipItemType {
  WARSHIP_ITEM_TYPE_NONE = 0,
  WARSHIP_ITEM_TYPE_WARSHIP = 1,
  WARSHIP_ITEM_TYPE_BGM = 2,
  UNRECOGNIZED = -1,
}

export enum WarshipSettingType {
  WARSHIP_SETTING_BGM_PLAY_MODE = 1,
  WARSHIP_SETTING_BGM_WEATHER = 2,
  UNRECOGNIZED = -1,
}

export enum WeaponBranchType {
  WEAPON_DEFAULT = 1,
  WEAPON_BEFALL = 2,
  UNRECOGNIZED = -1,
}

export enum WeaponType {
  WEAPON_DOUBLE_GUN = 1,
  WEAPON_SWORD = 2,
  WEAPON_HAND_GUN = 3,
  WEAPON_HEAVY_SWORD = 4,
  WEAPON_TAIL = 5,
  WEAPON_FIST = 6,
  WEAPON_SCYTHE = 7,
  WEAPON_LANCE = 8,
  WEAPON_BOW = 9,
  BladeRing = 10,
  UNRECOGNIZED = -1,
}

export enum WebActivityShowType {
  WEB_ACTIVITY_SHOW_TYPE_NONE = 0,
  WEB_ACTIVITY_SHOW_TYPE_TRACK_POINT = 1,
  WEB_ACTIVITY_SHOW_TYPE_FINISH = 2,
  WEB_ACTIVITY_SHOW_TYPE_HIDE = 3,
  UNRECOGNIZED = -1,
}

export enum WeekdayActivityEnterTimesType {
  WEEKDAY_ACTIVITY_ENTER_TIMES_DAILY = 0,
  WEEKDAY_ACTIVITY_ENTER_TIMES_WEEKLY = 1,
  UNRECOGNIZED = -1,
}

export enum WeekDayActivityOpenType {
  WEEK_DAY_ACTIVITY_OPEN_DAILY = 0,
  WEEK_DAY_ACTIVITY_OPEN_WEEK_DAY = 1,
  UNRECOGNIZED = -1,
}

export enum WikiDetailType {
  WIKI_UNKNOWN = 0,
  WIKI_ALL = 1,
  WIKI_STIGMATA = 2,
  WIKI_WEAPON = 3,
  WIKI_DORM = 4,
  WIKI_CG = 5,
  WIKI_MEDAL = 6,
  WIKI_ACHIEVEMENT = 7,
  WIKI_SKIN = 8,
  WIKI_EMOJI = 9,
  WIKI_AVATAR = 10,
  UNRECOGNIZED = -1,
}

export enum WikiType {
  WIKI_TYPE_OVERVIEW = 0,
  WIKI_TYPE_WEAPON = 1,
  WIKI_TYPE_STIGMATA = 2,
  WIKI_TYPE_FURNITURE = 3,
  WIKI_TYPE_CG = 4,
  WIKI_TYPE_MEDAL = 5,
  WIKI_TYPE_ACHIEVEMENT = 6,
  WIKI_TYPE_DRESS = 7,
  WIKI_TYPE_EMOJI = 8,
  WIKI_TYPE_AVATAR = 9,
  WIKI_TYPE_ACTIVITY = 10,
  WIKI_TYPE_MONSTER = 11,
  UNRECOGNIZED = -1,
}

export enum WorldChatroomType {
  WORLD_CHATROOM_TYPE_NONE = 0,
  WORLD_CHATROOM_TYPE_NORMAL = 1,
  WORLD_CHATROOM_TYPE_ACTIVITY = 2,
  UNRECOGNIZED = -1,
}

export interface AccelerateRestaurantWorkReq {
  activityId: number;
  roomId: number;
  num: number;
}

export enum AccelerateRestaurantWorkReq_CmdId {
  CMD_ID = 5872,
  UNRECOGNIZED = -1,
}

export interface AccelerateRestaurantWorkRsp {
  retcode: AccelerateRestaurantWorkRsp_Retcode;
  activityId: number;
  roomId: number;
  num: number;
}

export enum AccelerateRestaurantWorkRsp_CmdId {
  CMD_ID = 5873,
  UNRECOGNIZED = -1,
}

export enum AccelerateRestaurantWorkRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MATERIAL_LACK = 2,
  ROOM_NOT_EXIST = 3,
  WORK_NOT_DOING = 4,
  TICKET_LACK = 5,
  STOCK_LIMIT = 6,
  AVATAR_INVALID = 7,
  UNRECOGNIZED = -1,
}

export interface AcceptFriendInviteReq {
  inviteCode: string;
  inviteType: InviteeActivityType;
  scheduleId: number;
}

export enum AcceptFriendInviteReq_CmdId {
  CMD_ID = 227,
  UNRECOGNIZED = -1,
}

export interface AcceptFriendInviteRsp {
  retcode: AcceptFriendInviteRsp_Retcode;
  inviteUid: number;
}

export enum AcceptFriendInviteRsp_CmdId {
  CMD_ID = 228,
  UNRECOGNIZED = -1,
}

export enum AcceptFriendInviteRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  INVITE_CODE_ERROR = 2,
  LEVEL_LACK = 3,
  INVITE_FULL = 4,
  INVITE_INVALID_REGION = 5,
  UNRECOGNIZED = -1,
}

export interface AcceptGratuityStageReq {
  acceptType: GratuityAcceptType;
  playerInfo: GratuityPlayerInfo | undefined;
  stageMetaList: GratuityStageMeta[];
}

export enum AcceptGratuityStageReq_CmdId {
  CMD_ID = 4102,
  UNRECOGNIZED = -1,
}

export interface AcceptGratuityStageRsp {
  retcode: AcceptGratuityStageRsp_Retcode;
  stageList: GratuityStage[];
  acceptType: GratuityAcceptType;
  todayLeftFreeStageNum: number;
}

export enum AcceptGratuityStageRsp_CmdId {
  CMD_ID = 4103,
  UNRECOGNIZED = -1,
}

export enum AcceptGratuityStageRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  TIMES_LACK = 2,
  NOT_OPEN = 3,
  UNRECOGNIZED = -1,
}

export interface AcceptScDLCDailyQuestReq {
  questId: number;
}

export enum AcceptScDLCDailyQuestReq_CmdId {
  CMD_ID = 6320,
  UNRECOGNIZED = -1,
}

export interface AcceptScDLCDailyQuestRsp {
  retcode: AcceptScDLCDailyQuestRsp_Retcode;
  quest: OpenworldQuest | undefined;
}

export enum AcceptScDLCDailyQuestRsp_CmdId {
  CMD_ID = 6321,
  UNRECOGNIZED = -1,
}

export enum AcceptScDLCDailyQuestRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  QUEST_ERROR = 2,
  STAMINA_LACK = 3,
  ACCEPT_TIMES_LACK = 4,
  SLOT_LACK = 5,
  UNRECOGNIZED = -1,
}

export interface AccountBuffReward {
  scoinReward: number;
  avatarExpReward: number;
  playerExpReward: number;
}

export interface ActivateTrialAvatarReq {
  sampleId: number;
}

export enum ActivateTrialAvatarReq_CmdId {
  CMD_ID = 583,
  UNRECOGNIZED = -1,
}

export interface ActivateTrialAvatarRsp {
  retcode: ActivateTrialAvatarRsp_Retcode;
  avatar: TrialAvatar | undefined;
}

export enum ActivateTrialAvatarRsp_CmdId {
  CMD_ID = 584,
  UNRECOGNIZED = -1,
}

export enum ActivateTrialAvatarRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  REPEATE_ACTIVATE = 2,
  MATERIAL_LACK = 3,
  TYPE_ERROR = 4,
  LEVEL_LIMIT = 5,
  UNRECOGNIZED = -1,
}

export interface ActiveRaidReq {
  activeType: RaidActiveType;
}

export enum ActiveRaidReq_CmdId {
  CMD_ID = 1624,
  UNRECOGNIZED = -1,
}

export interface ActiveRaidRsp {
  retcode: ActiveRaidRsp_Retcode;
  activeType: RaidActiveType;
}

export enum ActiveRaidRsp_CmdId {
  CMD_ID = 1625,
  UNRECOGNIZED = -1,
}

export enum ActiveRaidRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  ALREADY_ACTIVED = 3,
  TYPE_ERROR = 4,
  UNRECOGNIZED = -1,
}

export interface ActiveScDLCFeverSuiteReq {
  suiteId: number;
}

export enum ActiveScDLCFeverSuiteReq_CmdId {
  CMD_ID = 6306,
  UNRECOGNIZED = -1,
}

export interface ActiveScDLCFeverSuiteRsp {
  retcode: ActiveScDLCFeverSuiteRsp_Retcode;
}

export enum ActiveScDLCFeverSuiteRsp_CmdId {
  CMD_ID = 6307,
  UNRECOGNIZED = -1,
}

export enum ActiveScDLCFeverSuiteRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ActivityBuff {
  id: number;
  candidateBuffIdList: number[];
  buffList: ActivityBuff_Buff[];
  chargeValue: number;
  buffChargedTimes: number;
}

export interface ActivityBuff_Buff {
  buffId: number;
  buffNum: number;
}

export interface ActivityGachaData {
  ticketHcoinCost: number;
  ticketMaterialId: number;
  costMaterialId: number;
  costMaterialNum: number;
  baodiTimes: number;
  gachaType: GachaType;
  gachaTimes: number;
  displayProtectEntryList: ProtectEntry[];
  isProtectRecycle: boolean;
  displayProtectTimes: number;
  noProtectGachaTimes: number;
  gachaExRewardInfo: GachaExRewardInfo | undefined;
  displaySettingDict: SettingDict | undefined;
  wishWellData: WishWellData | undefined;
}

export interface ActivityPanelSwitchData {
  panelId: number;
}

export interface ActivityRewardStatisticData {
  id: number;
  itemDataList: ActivityRewardStatisticItemData[];
}

export interface ActivityRewardStatisticItemData {
  showId: number;
  num: number;
}

export interface ActivitySeries {
  seriesId: number;
  availableSweepNum: number;
}

export interface ActivitySwitchData {
  activityType: number;
}

export interface AddAvatarExpByMaterialReq {
  avatarId: number;
  materialId: number;
  materialNum: number;
}

export enum AddAvatarExpByMaterialReq_CmdId {
  CMD_ID = 35,
  UNRECOGNIZED = -1,
}

export interface AddAvatarExpByMaterialRsp {
  retcode: AddAvatarExpByMaterialRsp_Retcode;
}

export enum AddAvatarExpByMaterialRsp_CmdId {
  CMD_ID = 36,
  UNRECOGNIZED = -1,
}

export enum AddAvatarExpByMaterialRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_NOT_EXIST = 2,
  AVATAR_LEVEL_FULL = 3,
  MATERAIL_NOT_ENOUGH = 4,
  MATERAIL_CAN_NOT_ADD_EXP = 5,
  UNRECOGNIZED = -1,
}

export interface AddElfExpByMaterialReq {
  elfId: number;
  materialId: number;
  materialNum: number;
}

export enum AddElfExpByMaterialReq_CmdId {
  CMD_ID = 2107,
  UNRECOGNIZED = -1,
}

export interface AddElfExpByMaterialRsp {
  retcode: AddElfExpByMaterialRsp_Retcode;
  oldLevel: number;
  oldExp: number;
}

export enum AddElfExpByMaterialRsp_CmdId {
  CMD_ID = 2108,
  UNRECOGNIZED = -1,
}

export enum AddElfExpByMaterialRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ELF_NOT_EXIST = 2,
  ELF_LEVEL_FULL = 3,
  MATERIAL_NOT_ENOUGH = 4,
  MATERIAL_CAN_NOT_ADD_EXP = 5,
  SCOIN_LACK = 6,
  UNRECOGNIZED = -1,
}

export interface AddFriendReq {
  action: AddFriendAction;
  targetUidList: number[];
}

export enum AddFriendReq_CmdId {
  CMD_ID = 66,
  UNRECOGNIZED = -1,
}

export interface AddFriendRsp {
  retcode: AddFriendRsp_Retcode;
  action: AddFriendAction;
  targetUidList: number[];
}

export enum AddFriendRsp_CmdId {
  CMD_ID = 67,
  UNRECOGNIZED = -1,
}

export enum AddFriendRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  TARGET_NOT_EXIST = 2,
  FRIEND_FULL = 3,
  TARGET_FRIEND_FULL = 4,
  IS_SELF = 5,
  IS_FRIEND = 6,
  ASK_TOO_OFTEN = 7,
  ldupAndTest = 8,
  TARGET_IN_ASK_LIST = 9,
  REDIS_MULTI_ERROR = 10,
  NOT_ALLOW_CROSS_REGION_FRIEND = 11,
  CROSS_REGION_FRIEND_FULL = 12,
  FEATURE_LIMIT = 13,
  FORBIDDEN = 14,
  FEATURE_CLOSED = 15,
  UNRECOGNIZED = -1,
}

export interface AddGoodfeelReq {
  avatarId: number;
  addGoodfeel: number;
  addGoodfeelType: number;
}

export enum AddGoodfeelReq_CmdId {
  CMD_ID = 154,
  UNRECOGNIZED = -1,
}

export enum AddGoodfeelReq_AddGoodfeelType {
  TOUCH = 1,
  STAGE = 2,
  DORM = 3,
  UNRECOGNIZED = -1,
}

export interface AddGoodfeelRsp {
  retcode: AddGoodfeelRsp_Retcode;
}

export enum AddGoodfeelRsp_CmdId {
  CMD_ID = 155,
  UNRECOGNIZED = -1,
}

export enum AddGoodfeelRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_NOT_EXIST = 2,
  UNRECOGNIZED = -1,
}

export interface AddOnActivityRewardNotify {
  missionId: number;
  rewardData: RewardData | undefined;
}

export enum AddOnActivityRewardNotify_CmdId {
  CMD_ID = 4156,
  UNRECOGNIZED = -1,
}

export enum AddOnActivityRewardNotify_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface AddScDLCSupportNPCExpReq {
  npcId: number;
  materialId: number;
}

export enum AddScDLCSupportNPCExpReq_CmdId {
  CMD_ID = 6308,
  UNRECOGNIZED = -1,
}

export interface AddScDLCSupportNPCExpRsp {
  retcode: AddScDLCSupportNPCExpRsp_Retcode;
}

export enum AddScDLCSupportNPCExpRsp_CmdId {
  CMD_ID = 6309,
  UNRECOGNIZED = -1,
}

export enum AddScDLCSupportNPCExpRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MATERIAL_LACK = 2,
  NPC_ERROR = 3,
  MATERIAL_ERROR = 4,
  UNRECOGNIZED = -1,
}

export interface AddTechExpReq {
  materialId: number;
  materialNum: number;
  mapId: number;
}

export enum AddTechExpReq_CmdId {
  CMD_ID = 538,
  UNRECOGNIZED = -1,
}

export interface AddTechExpRsp {
  retcode: AddTechExpRsp_Retcode;
}

export enum AddTechExpRsp_CmdId {
  CMD_ID = 539,
  UNRECOGNIZED = -1,
}

export enum AddTechExpRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  TECH_NOT_OPEN = 2,
  TECH_LEVEL_FULL = 3,
  MATERAIL_NOT_ENOUGH = 4,
  MATERAIL_CAN_NOT_ADD_EXP = 5,
  UNRECOGNIZED = -1,
}

export interface AddToBlackListReq {
  targetUid: number;
}

export enum AddToBlackListReq_CmdId {
  CMD_ID = 1596,
  UNRECOGNIZED = -1,
}

export interface AddToBlackListRsp {
  retcode: AddToBlackListRsp_Retcode;
  targetUid: number;
}

export enum AddToBlackListRsp_CmdId {
  CMD_ID = 1597,
  UNRECOGNIZED = -1,
}

export enum AddToBlackListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ALREADY_IN_LIST = 2,
  LIST_FULL = 3,
  TARGET_NOT_EXIST = 4,
  UNRECOGNIZED = -1,
}

export interface AdventureAvatar {
  avatarId: number;
  star: number;
  skillList: AdventureAvatar_Skill[];
}

export interface AdventureAvatar_Skill {
  skillId: number;
  skillLevel: number;
}

export interface AdventureDecorationSlot {
  slotId: number;
  furnitureId: number;
  direction: number;
}

export interface AdventureGroupAvailableQuest {
  poolId: number;
  questId: number;
}

export interface AdventureGroupAvatar {
  avatarId: number;
  finishedRecordList: number[];
}

export interface AdventureGroupQuest {
  poolId: number;
  questId: number;
  acceptTime: number;
  avatarList: number[];
  status: number;
  elfId: number;
}

export interface AdventureStorySweepReq {
  sweepId: number;
  avatarIdList: number[];
}

export enum AdventureStorySweepReq_CmdId {
  CMD_ID = 3912,
  UNRECOGNIZED = -1,
}

export interface AdventureStorySweepRsp {
  retcode: AdventureStorySweepRsp_Retcode;
  sweepData: IslandStorySweepData | undefined;
  usedStamina: number;
}

export enum AdventureStorySweepRsp_CmdId {
  CMD_ID = 3913,
  UNRECOGNIZED = -1,
}

export enum AdventureStorySweepRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_MEET_RESTRICT = 2,
  HAS_TAKEN = 3,
  LACK_MATERIAL = 4,
  STAMINA_LACK = 5,
  EQUIPMENT_FULL = 6,
  EQUIPMENT_MATERIAL_LIMIT = 7,
  EQUIPMENT_FRAGMENT_LIMIT = 8,
  ENTER_TIMES_LACK = 9,
  NOT_MEET_FAST = 10,
  EXCEED_STAMINA = 11,
  NOT_FINISH_CHALLENGE = 12,
  AVATAR_SWEEPING = 13,
  TEAM_LIMIT = 14,
  AVATAR_ERROR = 15,
  STAGE_NOT_EXIST = 16,
  ACTIVITY_ENTER_TIMES_LACK = 17,
  LEVEL_LACK = 18,
  UNRECOGNIZED = -1,
}

export interface AnswerQuestionReq {
  questionId: number;
  answerList: number[];
}

export enum AnswerQuestionReq_CmdId {
  CMD_ID = 4260,
  UNRECOGNIZED = -1,
}

export interface AnswerQuestionRsp {
  retcode: AnswerQuestionRsp_Retcode;
  question: Question | undefined;
  rewardData: RewardData | undefined;
}

export enum AnswerQuestionRsp_CmdId {
  CMD_ID = 4261,
  UNRECOGNIZED = -1,
}

export enum AnswerQuestionRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  NO_QUESTION = 3,
  HAVE_ANSWER = 4,
  NO_ANSWER = 5,
  NOT_JOIN_ARMADA = 6,
  UNRECOGNIZED = -1,
}

export interface AntiAddict {
  childAge: number;
  teenageAge: number;
  age: number;
  maxTodayRechargePrice: number;
  isMaxGameTime: boolean;
  isForceKick: boolean;
  warningTodayRechargePrice: number;
  warningGameTime: number;
  isWarningGameTime: boolean;
  maxGameTime: number;
  isForceKickForLatestTime: boolean;
  isForceKickForMaxTime: boolean;
  teenagerLoginLatestTime: string;
  teenagerLoginEarliestTime: string;
  isLastestTime: boolean;
}

export interface AntiAddictNotify {
  msgType: AntiAddictNotify_AntiAddictMsgType;
  msg: string;
  level: string;
}

export enum AntiAddictNotify_CmdId {
  CMD_ID = 5004,
  UNRECOGNIZED = -1,
}

export enum AntiAddictNotify_AntiAddictMsgType {
  ANTI_ADDICT_MSG_ERROR = 0,
  ANTI_ADDICT_MSG_ANTI_ADDICT = 1,
  ANTI_ADDICT_MSG_SHOULD_BIND_ACCOUNT = 2,
  UNRECOGNIZED = -1,
}

export interface AntiCheatReportReq {
  cheatType: number;
  ext: string;
}

export enum AntiCheatReportReq_CmdId {
  CMD_ID = 217,
  UNRECOGNIZED = -1,
}

export enum AntiCheatReportReq_CheatType {
  EMPTY = 0,
  CHEATER = 1,
  EMULATOR = 2,
  HASH_CHANGED = 3,
  MEMORY_SCAN = 4,
  JAIL_BREAK = 5,
  UNRECOGNIZED = -1,
}

export interface AntiCheatReportRsp {
  retcode: AntiCheatReportRsp_Retcode;
  cheatType: number;
  progressWay: AntiCheatReportRsp_ProgressWay;
}

export enum AntiCheatReportRsp_CmdId {
  CMD_ID = 218,
  UNRECOGNIZED = -1,
}

export enum AntiCheatReportRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export enum AntiCheatReportRsp_ProgressWay {
  IGNORE = 1,
  EXIT_GAME = 2,
  UNRECOGNIZED = -1,
}

export interface ApplyJoinArmadaReq {
  armadaId: number;
  level: number;
}

export enum ApplyJoinArmadaReq_CmdId {
  CMD_ID = 2607,
  UNRECOGNIZED = -1,
}

export interface ApplyJoinArmadaRsp {
  retcode: ApplyJoinArmadaRsp_Retcode;
}

export enum ApplyJoinArmadaRsp_CmdId {
  CMD_ID = 2608,
  UNRECOGNIZED = -1,
}

export enum ApplyJoinArmadaRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  STATUS_ERROR = 2,
  ARMADA_NOT_EXIST = 3,
  LEVEL_LACK = 4,
  MEMBER_FULL = 5,
  APPLY_FULL = 6,
  IN_CD_TIME = 7,
  APPLY_LIMIT = 8,
  HAS_APPLYED = 9,
  IN_LOW_POPL_CD_TIME = 10,
  FEATURE_CLOSED = 11,
  UNRECOGNIZED = -1,
}

export interface ArmadaActivity {
  type: ArmadaActivityType;
  scheduleId: number;
  beginTime: number;
  endTime: number;
  openDayTime: number;
  closeDayTime: number;
}

export interface ArmadaApply {
  uid: number;
  briefData: PlayerFriendBriefData | undefined;
}

export interface ArmadaApplyNotify {
  type: ArmadaApplyNotifyType;
  targetUid: number;
}

export enum ArmadaApplyNotify_CmdId {
  CMD_ID = 2682,
  UNRECOGNIZED = -1,
}

export interface ArmadaApplyResult {
  uid: number;
  briefData: PlayerFriendBriefData | undefined;
  agree: boolean;
}

export interface ArmadaBossGetMpStatusReq {
  uidList: number[];
  isFightBody: boolean;
}

export enum ArmadaBossGetMpStatusReq_CmdId {
  CMD_ID = 554,
  UNRECOGNIZED = -1,
}

export interface ArmadaBossGetMpStatusRsp {
  retcode: ArmadaBossGetMpStatusRsp_Retcode;
  memberStatusList: ArmadaBossMemberStatus[];
}

export enum ArmadaBossGetMpStatusRsp_CmdId {
  CMD_ID = 555,
  UNRECOGNIZED = -1,
}

export enum ArmadaBossGetMpStatusRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  UNRECOGNIZED = -1,
}

export interface ArmadaBossMemberStatus {
  uid: number;
  errorStatus: number;
  nextFightTime: number;
}

export interface ArmadaBossroom {
  id: number;
  level: number;
}

export interface ArmadaBriefData {
  id: number;
  name: string;
  level: number;
  bulletin: string;
  applyLevel: number;
  autoPass: boolean;
  autoPassLevel: number;
  fund: number;
  fundCap: number;
  ap: number;
  apCap: number;
  popl: number;
  poplCap: number;
  memberNum: number;
  memberCap: number;
  leaderId: number;
  leaderName: string;
  contact: string;
  contribution: number;
  isLowPopl: boolean;
  recentContribution: number;
  activeLevel: number;
  activeMemberNum: number;
  friendUidList: number[];
  leaderBriefData: PlayerFriendBriefData | undefined;
  label: ArmadaLabel | undefined;
}

export interface ArmadaBuildNotify {
  type: ArmadaBuildNotifyType;
  armadaData: ArmadaData | undefined;
  gridList: ArmadaGrid[];
}

export enum ArmadaBuildNotify_CmdId {
  CMD_ID = 2678,
  UNRECOGNIZED = -1,
}

export interface ArmadaBulletinNotify {
  bulletin: string;
  contact: string;
}

export enum ArmadaBulletinNotify_CmdId {
  CMD_ID = 2679,
  UNRECOGNIZED = -1,
}

export interface ArmadaContact {
  id: number;
  level: number;
  memberList: number[];
}

export interface ArmadaData {
  brief: ArmadaBriefData | undefined;
  memberList: ArmadaMember[];
  position: ArmadaPosition;
  gridList: ArmadaGrid[];
  contactList: ArmadaContact[];
  hangarList: ArmadaHangar[];
  workshopList: ArmadaWorkshop[];
  exchequerList: ArmadaExchequer[];
  bossroomList: ArmadaBossroom[];
  levelUpCabinType: ArmadaCabinType;
  levelUpCabinId: number;
  levelUpEndTime: number;
  dissolveTime: number;
  armadaPlayerData: ArmadaPlayerData | undefined;
  impeachData: ArmadaImpeachData | undefined;
  isArmadaChangeNameFree: boolean;
}

export interface ArmadaDiscoveryRewardConfig {
  discovery: number;
  rewardId: number;
}

export interface ArmadaExchequer {
  id: number;
  level: number;
}

export interface ArmadaGrid {
  id: number;
  type: ArmadaCabinType;
  cabinId: number;
}

export interface ArmadaHangar {
  id: number;
  level: number;
}

export interface ArmadaImpeachData {
  impeachStatus: number;
  optionalLeaderList: ArmadaOptionalLeader[];
  electionEndTime: number;
}

export interface ArmadaLabel {
  prefixId: number;
  labelIdList: number[];
  recruit: string;
}

export interface ArmadaLogoutNotify {
}

export enum ArmadaLogoutNotify_CmdId {
  CMD_ID = 2731,
  UNRECOGNIZED = -1,
}

export interface ArmadaManageNotify {
  type: ArmadaManageNotifyType;
  targetUid: number;
}

export enum ArmadaManageNotify_CmdId {
  CMD_ID = 2680,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixActivateBuffReq {
  buffId: number;
  activated: boolean;
}

export enum ArmadaMatrixActivateBuffReq_CmdId {
  CMD_ID = 2753,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixActivateBuffRsp {
  retcode: ArmadaMatrixActivateBuffRsp_Retcode;
  buffId: number;
  activated: boolean;
}

export enum ArmadaMatrixActivateBuffRsp_CmdId {
  CMD_ID = 2754,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixActivateBuffRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVATE_LIMIT = 2,
  NO_BUFF = 3,
  SAME_STATUS = 4,
  NO_ARMADA = 5,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixActiveReq {
}

export enum ArmadaMatrixActiveReq_CmdId {
  CMD_ID = 2808,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixActiveRsp {
  retcode: ArmadaMatrixActiveRsp_Retcode;
  activeDays: number;
  supplyAdd: number;
  curSupply: number;
}

export enum ArmadaMatrixActiveRsp_CmdId {
  CMD_ID = 2809,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixActiveRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_SUPPLY = 2,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixAdvancePath {
  pathFrom: ArmadaMatrixGridPos | undefined;
  pathTo: ArmadaMatrixGridPos | undefined;
}

export interface ArmadaMatrixAdvanceReq {
  from: ArmadaMatrixGridPos | undefined;
  to: ArmadaMatrixGridPos | undefined;
  pathList: ArmadaMatrixAdvancePath[];
  curScheduleId: number;
  level: number;
  mapId: number;
}

export enum ArmadaMatrixAdvanceReq_CmdId {
  CMD_ID = 2738,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixAdvanceRsp {
  retcode: ArmadaMatrixRetcode_Retcode;
  curPos: ArmadaMatrixGridPos | undefined;
}

export enum ArmadaMatrixAdvanceRsp_CmdId {
  CMD_ID = 2739,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixAnswerQuestionReq {
  pos: ArmadaMatrixGridPos | undefined;
  questionId: number;
  answerList: number[];
}

export enum ArmadaMatrixAnswerQuestionReq_CmdId {
  CMD_ID = 2832,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixAnswerQuestionRsp {
  retcode: ArmadaMatrixAnswerQuestionRsp_Retcode;
  question: Question | undefined;
  rewardData: RewardData | undefined;
}

export enum ArmadaMatrixAnswerQuestionRsp_CmdId {
  CMD_ID = 2833,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixAnswerQuestionRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAVE_ANSWER = 2,
  NOT_QUESTION = 3,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixArmadaBoss {
  maxHp: number;
  leftHp: number;
  itemLayList: ArmadaMatrixItemLay[];
  damageUidList: number[];
}

export interface ArmadaMatrixArmadaOverview {
  memberNum: number;
  deepLevel: number;
  deepLevelUid: number;
  totalExploreValue: number;
}

export interface ArmadaMatrixAskSupplyReq {
}

export enum ArmadaMatrixAskSupplyReq_CmdId {
  CMD_ID = 2810,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixAskSupplyRsp {
  retcode: ArmadaMatrixAskSupplyRsp_Retcode;
}

export enum ArmadaMatrixAskSupplyRsp_CmdId {
  CMD_ID = 2811,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixAskSupplyRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SUPPLY_LIMIT = 2,
  HAVE_ASK = 3,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixBuffData {
  id: number;
  num: number;
  activated: boolean;
}

export interface ArmadaMatrixChangeLevelReq {
  level: number;
  curScheduleId: number;
}

export enum ArmadaMatrixChangeLevelReq_CmdId {
  CMD_ID = 2772,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixChangeLevelRsp {
  retcode: ArmadaMatrixRetcode_Retcode;
  level: number;
}

export enum ArmadaMatrixChangeLevelRsp_CmdId {
  CMD_ID = 2773,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixChoosePathReq {
  pathList: ArmadaMatrixGridPos[];
}

export enum ArmadaMatrixChoosePathReq_CmdId {
  CMD_ID = 2827,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixChoosePathRsp {
  retcode: ArmadaMatrixChoosePathRsp_Retcode;
  targetPos: ArmadaMatrixGridPos | undefined;
}

export enum ArmadaMatrixChoosePathRsp_CmdId {
  CMD_ID = 2828,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixChoosePathRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  INVALID_START = 2,
  INVALID_PATH = 3,
  CONDITION_LACK = 4,
  ENTER_LIMIT = 5,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixChooseTemporaryDepositReq {
  chosenDepositList: ArmadaMatrixChosenDeposit[];
}

export enum ArmadaMatrixChooseTemporaryDepositReq_CmdId {
  CMD_ID = 2788,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixChooseTemporaryDepositRsp {
  retcode: ArmadaMatrixRetcode_Retcode;
}

export enum ArmadaMatrixChooseTemporaryDepositRsp_CmdId {
  CMD_ID = 2789,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixChosenDeposit {
  index: number;
  deposit: ArmadaMatrixTemporaryDeposit | undefined;
}

export interface ArmadaMatrixConfirmPosReq {
  targetPos: ArmadaMatrixGridPos | undefined;
}

export enum ArmadaMatrixConfirmPosReq_CmdId {
  CMD_ID = 2829,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixConfirmPosRsp {
  retcode: ArmadaMatrixConfirmPosRsp_Retcode;
  curPos: ArmadaMatrixGridPos | undefined;
}

export enum ArmadaMatrixConfirmPosRsp_CmdId {
  CMD_ID = 2830,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixConfirmPosRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  TARGET_DISMATCH = 2,
  TRIGGER_FAILED = 3,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixDialogChooseEventReq {
  selectEventId: number;
}

export enum ArmadaMatrixDialogChooseEventReq_CmdId {
  CMD_ID = 2797,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixDialogChooseEventRsp {
  retcode: ArmadaMatrixDialogChooseEventRsp_Retcode;
}

export enum ArmadaMatrixDialogChooseEventRsp_CmdId {
  CMD_ID = 2798,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixDialogChooseEventRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixDialogEventNotify {
  dialogEventId: number;
}

export enum ArmadaMatrixDialogEventNotify_CmdId {
  CMD_ID = 2795,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixExchangeExplorePowerReq {
  stamina: number;
}

export enum ArmadaMatrixExchangeExplorePowerReq_CmdId {
  CMD_ID = 2758,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixExchangeExplorePowerRsp {
  retcode: ArmadaMatrixRetcode_Retcode;
  explorePowerAdded: number;
  expAdded: number;
  expConvertScoin: number;
}

export enum ArmadaMatrixExchangeExplorePowerRsp_CmdId {
  CMD_ID = 2759,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixExitCondition {
  floorId: number;
  exitConditionId: number;
  progress: number;
  status: ArmadaMatrixExitConditionStatus;
}

export interface ArmadaMatrixExitConditionSyncNotify {
  exitCondition: ArmadaMatrixExitCondition | undefined;
}

export enum ArmadaMatrixExitConditionSyncNotify_CmdId {
  CMD_ID = 2790,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixFireBossItemReq {
  level: number;
  pos: ArmadaMatrixGridPos | undefined;
  itemId: number;
}

export enum ArmadaMatrixFireBossItemReq_CmdId {
  CMD_ID = 2814,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixFireBossItemRsp {
  retcode: ArmadaMatrixFireBossItemRsp_Retcode;
  exploreAdd: number;
  layUid: number;
  bossLeftHp: number;
}

export enum ArmadaMatrixFireBossItemRsp_CmdId {
  CMD_ID = 2815,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixFireBossItemRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  IS_SELF = 2,
  NO_ITEM = 3,
  BOSS_DEAD = 4,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetAvatarTeamReq {
}

export enum ArmadaMatrixGetAvatarTeamReq_CmdId {
  CMD_ID = 2748,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetAvatarTeamRsp {
  retcode: ArmadaMatrixRetcode_Retcode;
  teamList: ArmadaMatrixTeamInfo[];
  avatarList: ArmadaMatrixPlayerAvatarInfo[];
  curTeamIndex: number;
}

export enum ArmadaMatrixGetAvatarTeamRsp_CmdId {
  CMD_ID = 2749,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetExchangeExplorePowerInfoReq {
}

export enum ArmadaMatrixGetExchangeExplorePowerInfoReq_CmdId {
  CMD_ID = 2760,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetExchangeExplorePowerInfoRsp {
  retcode: ArmadaMatrixRetcode_Retcode;
  staminaExchanged: number;
}

export enum ArmadaMatrixGetExchangeExplorePowerInfoRsp_CmdId {
  CMD_ID = 2761,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetGenericItemReq {
  itemIdList: number[];
  buffIdList: number[];
}

export enum ArmadaMatrixGetGenericItemReq_CmdId {
  CMD_ID = 2755,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetGenericItemRsp {
  retcode: ArmadaMatrixGetGenericItemRsp_Retcode;
  itemList: GenericItemNum[];
  buffList: ArmadaMatrixBuffData[];
}

export enum ArmadaMatrixGetGenericItemRsp_CmdId {
  CMD_ID = 2756,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixGetGenericItemRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetLevelBriefDataReq {
}

export enum ArmadaMatrixGetLevelBriefDataReq_CmdId {
  CMD_ID = 2774,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetLevelBriefDataRsp {
  retcode: ArmadaMatrixRetcode_Retcode;
  levelDataList: ArmadaMatrixLevelBriefData[];
}

export enum ArmadaMatrixGetLevelBriefDataRsp_CmdId {
  CMD_ID = 2775,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetLocationReq {
  locationType: ArmadaMatrixLocationType;
  uid: number;
  level: number;
  pos: ArmadaMatrixGridPos | undefined;
}

export enum ArmadaMatrixGetLocationReq_CmdId {
  CMD_ID = 2819,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetLocationRsp {
  retcode: ArmadaMatrixGetLocationRsp_Retcode;
  locationType: ArmadaMatrixLocationType;
  level: number;
  pos: ArmadaMatrixGridPos | undefined;
  playerInfo: ArmadaMatrixMemberPos | undefined;
  stageInfo: ArmadaMatrixStageConfig | undefined;
  mapInfo: ArmadaMatrixMapInfo | undefined;
}

export enum ArmadaMatrixGetLocationRsp_CmdId {
  CMD_ID = 2820,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixGetLocationRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  NO_PLAYER = 3,
  NO_MONSTER = 4,
  MONSTER_DEAD = 5,
  NOT_ARMADA_BOSS = 6,
  NOT_JOIN = 7,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetLockedGridInfoReq {
}

export enum ArmadaMatrixGetLockedGridInfoReq_CmdId {
  CMD_ID = 2784,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetLockedGridInfoRsp {
  retcode: ArmadaMatrixRetcode_Retcode;
}

export enum ArmadaMatrixGetLockedGridInfoRsp_CmdId {
  CMD_ID = 2785,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetMainInfoReq {
  curScheduleId: number;
  level: number;
  isScheduleRefresh: boolean;
}

export enum ArmadaMatrixGetMainInfoReq_CmdId {
  CMD_ID = 2736,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetMainInfoRsp {
  retcode: ArmadaMatrixRetcode_Retcode;
  matrixMapInfo: ArmadaMatrixMapInfo | undefined;
  playerMainInfo: ArmadaMatrixPlayerMainInfo | undefined;
  settleInfo: ArmadaMatrixSettleInfo | undefined;
  exitCondition: ArmadaMatrixExitCondition | undefined;
  levelBriefList: ArmadaMatrixLevelBrief[];
  mapCycleId: number;
}

export enum ArmadaMatrixGetMainInfoRsp_CmdId {
  CMD_ID = 2737,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetOverviewReq {
}

export enum ArmadaMatrixGetOverviewReq_CmdId {
  CMD_ID = 2782,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetOverviewRsp {
  retcode: ArmadaMatrixRetcode_Retcode;
  playerOverview: ArmadaMatrixPlayerOverview | undefined;
  armadaOverview: ArmadaMatrixArmadaOverview | undefined;
}

export enum ArmadaMatrixGetOverviewRsp_CmdId {
  CMD_ID = 2783,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetRandomInfoReq {
}

export enum ArmadaMatrixGetRandomInfoReq_CmdId {
  CMD_ID = 2817,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetRandomInfoRsp {
  retcode: ArmadaMatrixGetRandomInfoRsp_Retcode;
  stageList: ArmadaMatrixStageConfig[];
}

export enum ArmadaMatrixGetRandomInfoRsp_CmdId {
  CMD_ID = 2818,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixGetRandomInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetRankListReq {
}

export enum ArmadaMatrixGetRankListReq_CmdId {
  CMD_ID = 2780,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetRankListRsp {
  retcode: ArmadaMatrixRetcode_Retcode;
  rankItemList: ArmadaMatrixRankItem[];
}

export enum ArmadaMatrixGetRankListRsp_CmdId {
  CMD_ID = 2781,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetScheduleReq {
}

export enum ArmadaMatrixGetScheduleReq_CmdId {
  CMD_ID = 2734,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetScheduleRsp {
  retcode: ArmadaMatrixRetcode_Retcode;
  openTime: number;
  closeTime: number;
  settleTime: number;
  openDayTime: number;
  closeDayTime: number;
  groupId: number;
  scheduleId: number;
}

export enum ArmadaMatrixGetScheduleRsp_CmdId {
  CMD_ID = 2735,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetScoreRewardInfoReq {
}

export enum ArmadaMatrixGetScoreRewardInfoReq_CmdId {
  CMD_ID = 2778,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetScoreRewardInfoRsp {
  retcode: ArmadaMatrixRetcode_Retcode;
  rewardGrantedIdList: number[];
  armadaRewardGrantedIdList: number[];
}

export enum ArmadaMatrixGetScoreRewardInfoRsp_CmdId {
  CMD_ID = 2779,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetTemporaryDepositReq {
}

export enum ArmadaMatrixGetTemporaryDepositReq_CmdId {
  CMD_ID = 2786,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGetTemporaryDepositRsp {
  retcode: ArmadaMatrixRetcode_Retcode;
  depositList: ArmadaMatrixTemporaryDeposit[];
  choosenIdxList: number[];
}

export enum ArmadaMatrixGetTemporaryDepositRsp_CmdId {
  CMD_ID = 2787,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGrantScoreRewardNotify {
  rewardList: RewardData[];
  id: number;
}

export enum ArmadaMatrixGrantScoreRewardNotify_CmdId {
  CMD_ID = 2777,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixGrid {
  pos: ArmadaMatrixGridPos | undefined;
  type: ArmadaMatrixGridType;
  state: ArmadaMatrixGridState;
  isVisited: boolean;
  isWin: boolean;
  presetId: number;
  showType: number;
  armadaBoss: ArmadaMatrixArmadaBoss | undefined;
  expireTime: number;
}

export interface ArmadaMatrixGridDetail {
  pos: ArmadaMatrixGridPos | undefined;
  stageInfo: ArmadaMatrixStageConfig | undefined;
  shopInfo: ArmadaMatrixShopInfo | undefined;
}

export interface ArmadaMatrixGridPos {
  rowIndex: number;
  colIndex: number;
}

export interface ArmadaMatrixInteractNotify {
  type: ArmadaMatrixInteractNotify_InteractType;
  scheduleId: number;
  interactUid: number;
  supplyAdd: number;
  exploreAdd: number;
}

export enum ArmadaMatrixInteractNotify_CmdId {
  CMD_ID = 2813,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixInteractNotify_InteractType {
  INTERACT_TYPE_NONE = 0,
  INTERACT_TYPE_SUPPLY = 1,
  INTERACT_TYPE_BOSS = 2,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixItemLay {
  itemId: number;
  layUid: number;
  layTime: number;
}

export interface ArmadaMatrixLeaveMsgSyncNotify {
  id: number;
  pos: ArmadaMatrixGridPos | undefined;
  msgIdx: number;
  level: number;
  mapId: number;
  uid: number;
}

export enum ArmadaMatrixLeaveMsgSyncNotify_CmdId {
  CMD_ID = 2765,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixLevelBrief {
  level: number;
  mapId: number;
  buffId: number;
}

export interface ArmadaMatrixLevelBriefData {
  level: number;
  monsterLeft: number;
  treasureLeft: number;
  shopNum: number;
}

export interface ArmadaMatrixLevelBriefDataNotify {
  levelData: ArmadaMatrixLevelBriefData | undefined;
}

export enum ArmadaMatrixLevelBriefDataNotify_CmdId {
  CMD_ID = 2776,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixMapInfo {
  visionGridList: ArmadaMatrixGrid[];
  curLevel: number;
  currentPos: ArmadaMatrixGridPos | undefined;
  memberPosList: ArmadaMatrixMemberPos[];
  mapId: number;
  width: number;
  height: number;
  isAll: boolean;
  floorId: number;
  floorBuffId: number;
  msgPosList: ArmadaMatrixMsgPos[];
  itemTempBuff: number;
  isLocked: boolean;
  eventTempBuffList: number[];
  flareGridList: ArmadaMatrixGrid[];
  gridDetailList: ArmadaMatrixGridDetail[];
  randomGridList: ArmadaMatrixRandomGrid[];
}

export interface ArmadaMatrixMemberPos {
  uid: number;
  pos: ArmadaMatrixGridPos | undefined;
  avatarId: number;
  curLevel: number;
  askSupplyTime: number;
  curSupply: number;
  exploreValue: number;
  boomItemNum: number;
  supplyItemNum: number;
  monsterDefeat: number;
  armadaBossDefeat: number;
  collectItemNum: number;
  collectBuffNum: number;
}

export interface ArmadaMatrixMonster {
  monsterId: number;
  num: number;
}

export interface ArmadaMatrixMsgPos {
  pos: ArmadaMatrixGridPos | undefined;
  msgList: ArmadaMatrixMsgPos_Message[];
}

export interface ArmadaMatrixMsgPos_Message {
  uid: number;
  msgIdx: number;
}

export interface ArmadaMatrixOuterItem {
  itemId: number;
  level: number;
  num: number;
}

export interface ArmadaMatrixPlayerAvatarInfo {
  avatarId: number;
  state: ArmadaMatrixAvatarState;
  curFatigue: number;
}

export interface ArmadaMatrixPlayerAvatarSyncNotify {
  avatarList: ArmadaMatrixPlayerAvatarInfo[];
}

export enum ArmadaMatrixPlayerAvatarSyncNotify_CmdId {
  CMD_ID = 2750,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixPlayerMainInfo {
  explorePower: number;
  exploreValue: number;
  honkaiEnergy: number;
  totalExploreValue: number;
  takeFatigueRewardDays: number;
  curSupply: number;
}

export interface ArmadaMatrixPlayerMainInfoSyncNotify {
  playerMainInfo: ArmadaMatrixPlayerMainInfo | undefined;
}

export enum ArmadaMatrixPlayerMainInfoSyncNotify_CmdId {
  CMD_ID = 2757,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixPlayerOverview {
  monsterDefeated: number;
  bossDefeated: number;
  honkaiEnergy: number;
  treasureFound: number;
  itemGathered: number;
  buffGot: number;
  shopFound: number;
  regionMarked: number;
  exploreValue: number;
}

export interface ArmadaMatrixQuestionNotify {
  level: number;
  pos: ArmadaMatrixGridPos | undefined;
  questionPoolId: number;
  questionList: Question[];
}

export enum ArmadaMatrixQuestionNotify_CmdId {
  CMD_ID = 2831,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixRandomEvent {
  eventId: number;
  eventType: ArmadaMatrixEventType;
  param: number;
  deposit: ArmadaMatrixTemporaryDeposit | undefined;
  outerItem: ArmadaMatrixOuterItem | undefined;
}

export interface ArmadaMatrixRandomEventNotify {
  pos: ArmadaMatrixGridPos | undefined;
  randomEvent: ArmadaMatrixRandomEvent | undefined;
}

export enum ArmadaMatrixRandomEventNotify_CmdId {
  CMD_ID = 2770,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixRandomGrid {
  pos: ArmadaMatrixGridPos | undefined;
  gridType: number;
  expireTime: number;
}

export interface ArmadaMatrixRankItem {
  uid: number;
  exploreValue: number;
}

export interface ArmadaMatrixRetcode {
}

export enum ArmadaMatrixRetcode_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_ERROR = 2,
  STAMINA_EXCHANGE_LIMIT = 3,
  STAMINA_LACK = 4,
  EXPLORE_POWER_LIMIT = 5,
  GRID_LOCKED = 6,
  CONDITION_LACK = 7,
  SUPPLY_LACK = 8,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixSetAvatarTeamReq {
  index: number;
  teamInfo: ArmadaMatrixTeamInfo | undefined;
}

export enum ArmadaMatrixSetAvatarTeamReq_CmdId {
  CMD_ID = 2746,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixSetAvatarTeamRsp {
  retcode: ArmadaMatrixRetcode_Retcode;
  index: number;
  teamInfo: ArmadaMatrixTeamInfo | undefined;
}

export enum ArmadaMatrixSetAvatarTeamRsp_CmdId {
  CMD_ID = 2747,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixSetCurAvatarTeamReq {
  index: number;
}

export enum ArmadaMatrixSetCurAvatarTeamReq_CmdId {
  CMD_ID = 2751,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixSetCurAvatarTeamRsp {
  retcode: ArmadaMatrixRetcode_Retcode;
  curTeamIndex: number;
}

export enum ArmadaMatrixSetCurAvatarTeamRsp_CmdId {
  CMD_ID = 2752,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixSettleInfo {
  exploreValue: number;
  totalExploreValue: number;
  exploreWinner: ArmadaMatrixSettleWinner | undefined;
  monsterWinner: ArmadaMatrixSettleWinner | undefined;
  honkaiEnergyWinner: ArmadaMatrixSettleWinner | undefined;
  floorId: number;
  monsterDefeated: number;
  bossDefeated: number;
  treasureFound: number;
}

export interface ArmadaMatrixSettleWinner {
  uid: number;
  value: number;
}

export interface ArmadaMatrixShopBuyReq {
  pos: ArmadaMatrixGridPos | undefined;
  goodsId: number;
}

export enum ArmadaMatrixShopBuyReq_CmdId {
  CMD_ID = 2768,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixShopBuyRsp {
  retcode: ArmadaMatrixShopBuyRsp_Retcode;
  goodsId: number;
  isSold: boolean;
}

export enum ArmadaMatrixShopBuyRsp_CmdId {
  CMD_ID = 2769,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixShopBuyRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SOLD_OUT = 2,
  LACK_MONEY = 3,
  NO_ARMADA = 4,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixShopInfo {
  shopId: number;
  goodsList: DropItem[];
}

export interface ArmadaMatrixShopSyncNotify {
  shop: PlayerMatrixShop | undefined;
  pos: ArmadaMatrixGridPos | undefined;
}

export enum ArmadaMatrixShopSyncNotify_CmdId {
  CMD_ID = 2767,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixStageBattleNotify {
  stageConfig: ArmadaMatrixStageConfig | undefined;
  pos: ArmadaMatrixGridPos | undefined;
  bossLoseHpPercent: number;
}

export enum ArmadaMatrixStageBattleNotify_CmdId {
  CMD_ID = 2745,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixStageBeginReq {
  pos: ArmadaMatrixGridPos | undefined;
  avatarIdList: number[];
}

export enum ArmadaMatrixStageBeginReq_CmdId {
  CMD_ID = 2740,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixStageBeginRsp {
  retcode: ArmadaMatrixRetcode_Retcode;
  dropItemList: DropItem[];
}

export enum ArmadaMatrixStageBeginRsp_CmdId {
  CMD_ID = 2741,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixStageConfig {
  presetId: number;
  hardLevel: number;
  monsterList: ArmadaMatrixMonster[];
  monsterBuffList: number[];
  discoveryValue: number;
  honkaiEnergy: number;
  fundReward: number;
  displayerDropList: number[];
  supplyCost: number;
  armadaBoss: ArmadaMatrixArmadaBoss | undefined;
  armadaDiscoveryValue: number;
}

export interface ArmadaMatrixStageDropItem {
  matrixMaterialId: number;
  matrixMaterialNum: number;
}

export interface ArmadaMatrixStageEndReq {
  pos: ArmadaMatrixGridPos | undefined;
  endStatus: StageEndStatus;
  cheatDataList: StageCheatData[];
  dropItemList: DropItem[];
  bossLoseHpPercent: number;
}

export enum ArmadaMatrixStageEndReq_CmdId {
  CMD_ID = 2742,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixStageEndRsp {
  retcode: ArmadaMatrixRetcode_Retcode;
  dropItemList: DropItem[];
  matrixDropItemList: DropItem[];
  discoveryValue: number;
  honkaiEnergy: number;
  fundReward: number;
}

export enum ArmadaMatrixStageEndRsp_CmdId {
  CMD_ID = 2743,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixSyncArmadaInfoNotify {
  scheduleId: number;
  totalExploreValue: number;
}

export enum ArmadaMatrixSyncArmadaInfoNotify_CmdId {
  CMD_ID = 2816,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixSyncMemberNotify {
  member: ArmadaMatrixMemberPos | undefined;
}

export enum ArmadaMatrixSyncMemberNotify_CmdId {
  CMD_ID = 2812,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixSyncNotify {
  matrixMapInfo: ArmadaMatrixMapInfo | undefined;
  notifyType: ArmadaMatrixSyncNotifyType;
  scheduleId: number;
}

export enum ArmadaMatrixSyncNotify_CmdId {
  CMD_ID = 2744,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixTakeFatigueRewardReq {
}

export enum ArmadaMatrixTakeFatigueRewardReq_CmdId {
  CMD_ID = 2793,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixTakeFatigueRewardRsp {
  retcode: ArmadaMatrixTakeFatigueRewardRsp_Retcode;
  rewardNum: number;
  itemId: number;
  itemCount: number;
}

export enum ArmadaMatrixTakeFatigueRewardRsp_CmdId {
  CMD_ID = 2794,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixTakeFatigueRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_REWARD = 2,
  NOT_OPEN = 3,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixTeamInfo {
  avatarIdList: number[];
  index: number;
}

export interface ArmadaMatrixTemporaryBuffSyncNotify {
  itemTempBuff: number;
  eventTempBuffList: number[];
}

export enum ArmadaMatrixTemporaryBuffSyncNotify_CmdId {
  CMD_ID = 2766,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixTemporaryDeposit {
  itemId: number;
  level: number;
  num: number;
}

export interface ArmadaMatrixTransportNotify {
  targetPos: ArmadaMatrixGridPos | undefined;
}

export enum ArmadaMatrixTransportNotify_CmdId {
  CMD_ID = 2796,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixTreasure {
  treasureId: number;
  treasureItem: DropItem | undefined;
}

export interface ArmadaMatrixTreasureNotify {
  pos: ArmadaMatrixGridPos | undefined;
  treasure: ArmadaMatrixTreasure | undefined;
}

export enum ArmadaMatrixTreasureNotify_CmdId {
  CMD_ID = 2771,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixUseItemNotify {
  id: number;
  targetList: number[];
  curScheduleId: number;
  level: number;
  mapId: number;
}

export enum ArmadaMatrixUseItemNotify_CmdId {
  CMD_ID = 2764,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixUseItemReq {
  id: number;
  targetList: number[];
}

export enum ArmadaMatrixUseItemReq_CmdId {
  CMD_ID = 2762,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixUseItemRsp {
  retcode: ArmadaMatrixUseItemRsp_Retcode;
  id: number;
  targetList: number[];
}

export enum ArmadaMatrixUseItemRsp_CmdId {
  CMD_ID = 2763,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixUseItemRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LACK = 2,
  EMPTY_MSG = 3,
  MSG_ERROR = 4,
  POS_ERROR = 5,
  SAME_TEMP_BUFF = 6,
  OUT_EFFECTIVE_RANGE = 7,
  NO_ARMADA = 8,
  FATIGUE_FULL = 9,
  TARGET_SELF = 10,
  HAVE_ANSWER = 11,
  BOSS_DEAD = 12,
  HAVE_USE_ITEM = 13,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixUseTempBuffReq {
}

export enum ArmadaMatrixUseTempBuffReq_CmdId {
  CMD_ID = 2791,
  UNRECOGNIZED = -1,
}

export interface ArmadaMatrixUseTempBuffRsp {
  retcode: ArmadaMatrixUseTempBuffRsp_Retcode;
}

export enum ArmadaMatrixUseTempBuffRsp_CmdId {
  CMD_ID = 2792,
  UNRECOGNIZED = -1,
}

export enum ArmadaMatrixUseTempBuffRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_ALLOW = 2,
  BUFF_USED_UP = 3,
  UNRECOGNIZED = -1,
}

export interface ArmadaMember {
  uid: number;
  position: ArmadaPosition;
  briefData: PlayerFriendBriefData | undefined;
  weekPopl: number;
  totalPopl: number;
  weekFund: number;
  totalFund: number;
  weekContribution: number;
  totalContribution: number;
}

export interface ArmadaMemberDiscovery {
  uid: number;
  weekDiscovery: number;
}

export interface ArmadaOptionalLeader {
  id: number;
  contribution: number;
}

export interface ArmadaPlayerContributionSyncNotify {
  armadaContribution: number;
  uid: number;
  weekContribution: number;
  totalContribution: number;
}

export enum ArmadaPlayerContributionSyncNotify_CmdId {
  CMD_ID = 2806,
  UNRECOGNIZED = -1,
}

export interface ArmadaPlayerData {
  uid: number;
  takeAchievementIdList: number[];
}

export interface ArmadaPlayerNotify {
  type: ArmadaPlayerNotifyType;
  targetUid: number;
  member: ArmadaMember | undefined;
  memberList: number[];
  newName: string;
}

export enum ArmadaPlayerNotify_CmdId {
  CMD_ID = 2681,
  UNRECOGNIZED = -1,
}

export interface ArmadaReunionMission {
  missionId: number;
  finishTimes: number;
}

export interface ArmadaReunionPlayer {
  uid: number;
  materialList: Material[];
}

export interface ArmadaReunionRewardNotify {
  mission: ArmadaReunionMission | undefined;
  rewardData: RewardData | undefined;
}

export enum ArmadaReunionRewardNotify_CmdId {
  CMD_ID = 2836,
  UNRECOGNIZED = -1,
}

export interface ArmadaSendMailReq {
  content: string;
  sender: string;
}

export enum ArmadaSendMailReq_CmdId {
  CMD_ID = 2689,
  UNRECOGNIZED = -1,
}

export interface ArmadaSendMailRsp {
  retcode: ArmadaSendMailRsp_Retcode;
}

export enum ArmadaSendMailRsp_CmdId {
  CMD_ID = 2690,
  UNRECOGNIZED = -1,
}

export enum ArmadaSendMailRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_GRANTED = 2,
  NOT_IN_ARMADA = 3,
  FORMAT_ERROR = 4,
  SENSITIVE_WORDS = 5,
  SEND_CD = 6,
  UNRECOGNIZED = -1,
}

export interface ArmadaStageBeginReq {
  avatarIdList: number[];
  isFightBody: boolean;
  isMpMode: boolean;
}

export enum ArmadaStageBeginReq_CmdId {
  CMD_ID = 2669,
  UNRECOGNIZED = -1,
}

export interface ArmadaStageBeginRsp {
  retcode: ArmadaStageBeginRsp_Retcode;
  isFightBody: boolean;
  isMpMode: boolean;
}

export enum ArmadaStageBeginRsp_CmdId {
  CMD_ID = 2670,
  UNRECOGNIZED = -1,
}

export enum ArmadaStageBeginRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  NOT_OPEN = 3,
  BOSS_DEAD = 4,
  FIGHT_INTERVAL = 5,
  NOT_BEGIN = 6,
  AVATAR_ERROR = 7,
  FIGHT_TIMES_LACK = 8,
  BOSS_NO_DEAD = 9,
  HAS_FIGHT = 10,
  LEVEL_LACK = 11,
  FEATURE_CLOSED = 12,
  UNRECOGNIZED = -1,
}

export interface ArmadaStageEndReq {
  bossDamage: number;
  endStatus: StageEndStatus;
  cheatType: number;
  cheatDataList: StageCheatData[];
  isFightBody: boolean;
  body: StageEndReqBody | undefined;
}

export enum ArmadaStageEndReq_CmdId {
  CMD_ID = 2671,
  UNRECOGNIZED = -1,
}

export interface ArmadaStageEndRsp {
  retcode: ArmadaStageEndRsp_Retcode;
  addScoin: number;
  endStatus: StageEndStatus;
  isFightBody: boolean;
  body: StageEndReqBody | undefined;
}

export enum ArmadaStageEndRsp_CmdId {
  CMD_ID = 2672,
  UNRECOGNIZED = -1,
}

export enum ArmadaStageEndRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  NOT_OPEN = 3,
  BOSS_DEAD = 4,
  FIGHT_INTERVAL = 5,
  STAGE_ERROR = 6,
  STAGE_FAIL = 7,
  FIGHT_TIMES_LACK = 8,
  BOSS_NO_DEAD = 9,
  HAS_FIGHT = 10,
  UNRECOGNIZED = -1,
}

export interface ArmadaStageFightInfo {
  uid: number;
  totalDamage: number;
  isFightBody: boolean;
  killRewardMaterialNum: number;
}

export interface ArmadaStageScore {
  stageId: number;
  score: number;
}

export interface ArmadaStageScorePlayerScore {
  uid: number;
  score: number;
  avatarList: number[];
}

export interface ArmadaSystemChatMsg {
  type: ArmadaSystemChatMsgType;
  uid: number;
  nickname: string;
  avatarId: number;
  dressId: number;
  time: number;
  gachaType: GachaType;
  itemId: number;
  targetAvatarId: number;
  missionId: number;
  armadaLevel: number;
  cabinType: ArmadaCabinType;
  cabinLevel: number;
  position: ArmadaPosition;
  targetUid: number;
  poplCost: number;
  oldName: string;
  newName: string;
  textMap: string;
}

export interface ArmadaWorkshop {
  id: number;
  level: number;
}

export interface AskForMasterOrPupilReq {
  type: MasterPupilType;
  askUid: number;
  time: number;
}

export enum AskForMasterOrPupilReq_CmdId {
  CMD_ID = 570,
  UNRECOGNIZED = -1,
}

export interface AskForMasterOrPupilRsp {
  retcode: MasterPupilRetcode_Retcode;
  type: MasterPupilType;
  askUid: number;
}

export enum AskForMasterOrPupilRsp_CmdId {
  CMD_ID = 571,
  UNRECOGNIZED = -1,
}

export interface AsMasterPupilCardReq {
  card: MasterPupilCard | undefined;
}

export enum AsMasterPupilCardReq_CmdId {
  CMD_ID = 566,
  UNRECOGNIZED = -1,
}

export interface AsMasterPupilCardRsp {
  retcode: MasterPupilRetcode_Retcode;
  cdEndTime: number;
}

export enum AsMasterPupilCardRsp_CmdId {
  CMD_ID = 567,
  UNRECOGNIZED = -1,
}

export interface AssignRestaurantWorkReq {
  activityId: number;
  roomId: number;
  avatarId: number;
  materialId: number;
}

export enum AssignRestaurantWorkReq_CmdId {
  CMD_ID = 5864,
  UNRECOGNIZED = -1,
}

export interface AssignRestaurantWorkRsp {
  retcode: AssignRestaurantWorkRsp_Retcode;
  activityId: number;
  roomId: number;
  avatarId: number;
  materialId: number;
}

export enum AssignRestaurantWorkRsp_CmdId {
  CMD_ID = 5865,
  UNRECOGNIZED = -1,
}

export enum AssignRestaurantWorkRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ROOM_NOT_EXIST = 2,
  ALREADY_ASSIGN = 3,
  AVATAR_WORK_LIMIT = 4,
  UNRECOGNIZED = -1,
}

export interface AssistantFrozen {
  uid: number;
  leftFrozenTime: number;
  leftAssistantTimes: number;
}

export interface AssistGratuityStageReq {
  stageUniqueId: number;
  playerInfo: GratuityPlayerInfo | undefined;
  relationTag: number;
}

export enum AssistGratuityStageReq_CmdId {
  CMD_ID = 4104,
  UNRECOGNIZED = -1,
}

export interface AssistGratuityStageRsp {
  retcode: AssistGratuityStageRsp_Retcode;
  stage: GratuityStage | undefined;
  relationTag: number;
}

export enum AssistGratuityStageRsp_CmdId {
  CMD_ID = 4105,
  UNRECOGNIZED = -1,
}

export enum AssistGratuityStageRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LEVEL_LACK = 2,
  STAGE_EXPIRED = 3,
  STAGE_FINISH = 4,
  HAVE_ASSIST = 5,
  PLAYER_FULL = 6,
  ASSIST_FULL = 7,
  IS_SELF = 8,
  ASSIST_STAMINA_LACK = 9,
  UNRECOGNIZED = -1,
}

export interface Avatar {
  avatarId: number;
  star: number;
  level: number;
  exp: number;
  fragment: number;
  weaponUniqueId: number;
  stigmataUniqueId1: number;
  stigmataUniqueId2: number;
  stigmataUniqueId3: number;
  skillList: AvatarSkill[];
  touchGoodfeel: number;
  todayHasAddGoodfeel: number;
  stageGoodfeel: number;
  dressList: number[];
  dressId: number;
  mode: AvatarBindEquipMode;
  avatarArtifact: AvatarArtifactDetail | undefined;
  subStar: number;
}

export interface AvatarArtifactDetail {
  artifactId: number;
  artifactLevel: number;
  isArtifactSwitchOn: boolean;
}

export interface AvatarArtifactLevelUpReq {
  avatarId: number;
  artifactId: number;
}

export enum AvatarArtifactLevelUpReq_CmdId {
  CMD_ID = 1446,
  UNRECOGNIZED = -1,
}

export interface AvatarArtifactLevelUpRsp {
  retcode: AvatarArtifactLevelUpRsp_Retcode;
  avatarId: number;
  artifactId: number;
  avatarDetail: AvatarDetailData | undefined;
  rewardData: RewardData | undefined;
}

export enum AvatarArtifactLevelUpRsp_CmdId {
  CMD_ID = 1447,
  UNRECOGNIZED = -1,
}

export enum AvatarArtifactLevelUpRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_LEVEL_LACK = 2,
  AVATAR_STAR_LACK = 3,
  MATERIAL_LACK = 4,
  FEATURE_CLOSED = 5,
  UNRECOGNIZED = -1,
}

export interface AvatarArtifactSwitch {
  avatarId: number;
  isArtifactSwitchOn: boolean;
}

export interface AvatarArtifactUnlockReq {
  avatarId: number;
  artifactId: number;
}

export enum AvatarArtifactUnlockReq_CmdId {
  CMD_ID = 1444,
  UNRECOGNIZED = -1,
}

export interface AvatarArtifactUnlockRsp {
  retcode: AvatarArtifactUnlockRsp_Retcode;
  avatarId: number;
  artifactId: number;
  rewardData: RewardData | undefined;
}

export enum AvatarArtifactUnlockRsp_CmdId {
  CMD_ID = 1445,
  UNRECOGNIZED = -1,
}

export enum AvatarArtifactUnlockRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_LEVEL_LACK = 2,
  AVATAR_STAR_LACK = 3,
  MATERIAL_LACK = 4,
  FEATURE_CLOSED = 5,
  UNRECOGNIZED = -1,
}

export interface AvatarBindEquipData {
  avatarId: number;
  weaponUid: number;
  stigmataUidList: number[];
}

export interface AvatarBriefInfo {
  avatarId: number;
  avatarLevel: number;
  avatarStar: number;
  weaponId: number;
  stigmataIdList: number[];
  subWeaponId: number;
  dressId: number;
  isArtifactSwitchOn: boolean;
}

export interface AvatarCostPlusConfig {
  star: number;
  costPlus: number;
}

export interface AvatarDetailData {
  avatarId: number;
  avatarStar: number;
  avatarLevel: number;
  weapon: WeaponDetailData | undefined;
  stigmata1: StigmataDetailData | undefined;
  stigmata2: StigmataDetailData | undefined;
  stigmata3: StigmataDetailData | undefined;
  skillList: AvatarSkillDetailData[];
  dressId: number;
  avatarCombat: number;
  avatarArtifact: AvatarArtifactDetail | undefined;
  avatarSubStar: number;
}

export interface AvatarEquipBuff {
  avatarId: number;
  buffName: string;
  buffNum: number;
}

export interface AvatarEquipSuite {
  suiteId: number;
  weaponUniqueId: number;
  stigmataUniqueId1: number;
  stigmataUniqueId2: number;
  stigmataUniqueId3: number;
  suiteName: string;
}

export interface AvatarFragment {
  fragmentId: number;
  num: number;
}

export interface AvatarFragmentSwitchData {
  avatarId: number;
}

export interface AvatarFragmentTransformReq {
  id: number;
  num: number;
}

export enum AvatarFragmentTransformReq_CmdId {
  CMD_ID = 827,
  UNRECOGNIZED = -1,
}

export interface AvatarFragmentTransformRsp {
  retcode: AvatarFragmentTransformRsp_Retcode;
  returnId: number;
  returnNum: number;
}

export enum AvatarFragmentTransformRsp_CmdId {
  CMD_ID = 828,
  UNRECOGNIZED = -1,
}

export enum AvatarFragmentTransformRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NEED_SSS = 2,
  LACK = 3,
  FULL = 4,
  FEATURE_CLOSED = 5,
  UNRECOGNIZED = -1,
}

export interface AvatarReviveReq {
  isRetry: boolean;
  reviveUseId: number;
}

export enum AvatarReviveReq_CmdId {
  CMD_ID = 106,
  UNRECOGNIZED = -1,
}

export interface AvatarReviveRsp {
  retcode: AvatarReviveRsp_Retcode;
  reviveTimes: number;
}

export enum AvatarReviveRsp_CmdId {
  CMD_ID = 107,
  UNRECOGNIZED = -1,
}

export enum AvatarReviveRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HCOIN_LACK = 2,
  TIMES_LACK = 3,
  NOT_IN_STAGE = 4,
  MATERIAL_LACK = 5,
  UNRECOGNIZED = -1,
}

export interface AvatarRoll {
  avatarId: number;
  progress: number;
  hasTakeGroupList: number[];
  isUnlock: boolean;
}

export interface AvatarSkill {
  skillId: number;
  subSkillList: AvatarSubSkill[];
}

export interface AvatarSkillDetailData {
  skillId: number;
  subSkillList: AvatarSubSkillDetailData[];
}

export interface AvatarStarUpReq {
  avatarId: number;
}

export enum AvatarStarUpReq_CmdId {
  CMD_ID = 29,
  UNRECOGNIZED = -1,
}

export interface AvatarStarUpRsp {
  retcode: AvatarStarUpRsp_Retcode;
}

export enum AvatarStarUpRsp_CmdId {
  CMD_ID = 30,
  UNRECOGNIZED = -1,
}

export enum AvatarStarUpRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_NOT_EXIST = 2,
  FRAGMENT_LACK = 3,
  STAR_FULL = 4,
  FEATURE_CLOSED = 5,
  UNRECOGNIZED = -1,
}

export interface AvatarSubSkill {
  subSkillId: number;
  level: number;
  isMask: boolean;
}

export interface AvatarSubSkillDetailData {
  subSkillId: number;
  level: number;
  isMask: boolean;
}

export interface AvatarSubSkillLevelUpReq {
  avatarId: number;
  skillId: number;
  subSkillId: number;
  isLevelUpAll: boolean;
}

export enum AvatarSubSkillLevelUpReq_CmdId {
  CMD_ID = 50,
  UNRECOGNIZED = -1,
}

export interface AvatarSubSkillLevelUpRsp {
  retcode: AvatarSubSkillLevelUpRsp_Retcode;
}

export enum AvatarSubSkillLevelUpRsp_CmdId {
  CMD_ID = 51,
  UNRECOGNIZED = -1,
}

export enum AvatarSubSkillLevelUpRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_NOT_EXIST = 2,
  SKILL_NOT_EXIST = 3,
  SUB_SKILL_NOT_EXIST = 4,
  AVATAR_LEVEL_LACK = 5,
  AVATAR_STAR_LACK = 6,
  SCOIN_LACK = 7,
  SKILL_POINT_LACK = 8,
  MATERIAL_LACK = 9,
  LEVEL_FULL = 10,
  UNRECOGNIZED = -1,
}

export interface AvatarSuite {
  avatar: ObjSelected | undefined;
  weapon: ObjSelected | undefined;
  stigmataList: ObjSelected[];
  skill: ObjSelected | undefined;
}

export interface AvatarSuiteSelection {
  status: AvatarSuiteSelectionStatus;
  sysId: AvatarSuiteSelectionSystem;
  beginTime: number;
  curStep: AvatarSuiteSelectionStep;
  choiceList: number[];
  avatarSuite: AvatarSuite | undefined;
}

export interface AvatarSuiteSelectionNotify {
  avatarSelection: AvatarSuiteSelection | undefined;
}

export enum AvatarSuiteSelectionNotify_CmdId {
  CMD_ID = 582,
  UNRECOGNIZED = -1,
}

export interface AvatarTeam {
  stageType: number;
  avatarIdList: number[];
}

export interface BackEquipmentActivity {
  mainidList: number[];
  remainBackTimes: number;
}

export interface BackEquipmentReq {
  uniqueId: number;
}

export enum BackEquipmentReq_CmdId {
  CMD_ID = 3663,
  UNRECOGNIZED = -1,
}

export interface BackEquipmentRsp {
  retcode: BackEquipmentRsp_Retcode;
  uniqueIdList: number[];
  materialList: Material[];
  remainBackTimes: number;
}

export enum BackEquipmentRsp_CmdId {
  CMD_ID = 3664,
  UNRECOGNIZED = -1,
}

export enum BackEquipmentRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_OPEN = 2,
  CONSUME_ITEM_NOT_EXIST = 3,
  CONSUME_ITEM_IN_USE = 4,
  CONSUME_ITEM_PROTECTED = 5,
  COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 6,
  COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 7,
  EQUIPMENT_NOT_OPEN = 8,
  TIMES_LACK = 9,
  CONSUME_ITEM_IN_FACILITY = 10,
  CONSUME_ITEM_GRAND_KEY = 11,
  CONSUME_ITEM_REPEAT = 12,
  COST_GACHA_TICKET = 13,
  CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 14,
  UNRECOGNIZED = -1,
}

export interface BattleChatParam {
  battleMode: BattleMode;
  battlePara: number;
}

export interface BattlePassMission {
  missionId: number;
  missionFinishTimes: number;
}

export interface BattlePassSwitchData {
}

export interface BattlePassThemeExpTransformNotify {
  addExp: number;
  addThemeExp: number;
}

export enum BattlePassThemeExpTransformNotify_CmdId {
  CMD_ID = 3766,
  UNRECOGNIZED = -1,
}

export interface BbqActivityCookReq {
  activityId: number;
  bonusLevel: number;
}

export enum BbqActivityCookReq_CmdId {
  CMD_ID = 4252,
  UNRECOGNIZED = -1,
}

export interface BbqActivityCookRsp {
  retcode: BbqActivityCookRsp_Retcode;
  activityId: number;
  rewardData: RewardData | undefined;
  bbqLevel: number;
  bbqExp: number;
  canUseBbqCount: number;
}

export enum BbqActivityCookRsp_CmdId {
  CMD_ID = 4253,
  UNRECOGNIZED = -1,
}

export enum BbqActivityCookRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  ITEMS_LACK = 3,
  UNRECOGNIZED = -1,
}

export interface BbqActivityTakeLevelUpRewardReq {
  activityId: number;
}

export enum BbqActivityTakeLevelUpRewardReq_CmdId {
  CMD_ID = 4254,
  UNRECOGNIZED = -1,
}

export interface BbqActivityTakeLevelUpRewardRsp {
  retcode: BbqActivityTakeLevelUpRewardRsp_Retcode;
  rewardDataList: RewardData[];
  maxRewardTakenLevel: number;
}

export enum BbqActivityTakeLevelUpRewardRsp_CmdId {
  CMD_ID = 4255,
  UNRECOGNIZED = -1,
}

export enum BbqActivityTakeLevelUpRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  NO_REWARD = 3,
  UNRECOGNIZED = -1,
}

export interface BindAccountReq {
  accountType: number;
  accountUid: string;
  accountToken: string;
  accountExt: string;
}

export enum BindAccountReq_CmdId {
  CMD_ID = 119,
  UNRECOGNIZED = -1,
}

export interface BindAccountRsp {
  retcode: BindAccountRsp_Retcode;
  accountType: number;
  accountUid: string;
}

export enum BindAccountRsp_CmdId {
  CMD_ID = 120,
  UNRECOGNIZED = -1,
}

export enum BindAccountRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACCOUNT_TYPE_ERROR = 2,
  ACCOUNT_VERIFY_FAILED = 3,
  ACCOUNT_BIND_TO_OTHER_UID = 4,
  REPEAT_BIND = 5,
  UNRECOGNIZED = -1,
}

export interface BindHoyolabAccountReq {
  hoyolabChannelId: number;
  hoyolabAccountUid: string;
  hoyolabToken: string;
}

export enum BindHoyolabAccountReq_CmdId {
  CMD_ID = 1658,
  UNRECOGNIZED = -1,
}

export interface BindHoyolabAccountRsp {
  retcode: BindHoyolabAccountRsp_Retcode;
  hoyolabAccountUid: string;
}

export enum BindHoyolabAccountRsp_CmdId {
  CMD_ID = 1659,
  UNRECOGNIZED = -1,
}

export enum BindHoyolabAccountRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ALREADY_BIND = 2,
  BIND_BY_OTHER = 3,
  UNRECOGNIZED = -1,
}

export interface BingoActivityFlopCardReq {
  activityId: number;
  bingoId: number;
  cardId: number;
}

export enum BingoActivityFlopCardReq_CmdId {
  CMD_ID = 4159,
  UNRECOGNIZED = -1,
}

export interface BingoActivityFlopCardRsp {
  retcode: BingoActivityFlopCardRsp_Retcode;
  activityId: number;
  bingoId: number;
  cardId: number;
  rewardList: RewardData[];
  dropItemList: DropItem[];
  isAllFinished: boolean;
}

export enum BingoActivityFlopCardRsp_CmdId {
  CMD_ID = 4160,
  UNRECOGNIZED = -1,
}

export enum BingoActivityFlopCardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  ITEMS_LACK = 3,
  HAS_FINISED = 4,
  HAS_FLOPED = 5,
  UNRECOGNIZED = -1,
}

export interface BingoActivityResetBingoReq {
  activityId: number;
  bingoId: number;
}

export enum BingoActivityResetBingoReq_CmdId {
  CMD_ID = 4161,
  UNRECOGNIZED = -1,
}

export interface BingoActivityResetBingoRsp {
  retcode: BingoActivityResetBingoRsp_Retcode;
  activityId: number;
}

export enum BingoActivityResetBingoRsp_CmdId {
  CMD_ID = 4162,
  UNRECOGNIZED = -1,
}

export enum BingoActivityResetBingoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_TIMES = 2,
  NO_COMPLETE = 3,
  NOT_OPEN = 4,
  ITEMS_LACK = 5,
  UNRECOGNIZED = -1,
}

export interface BingoCard {
  cardId: number;
  cardStatus: BingoCard_BingoCardStatus;
}

export enum BingoCard_BingoCardStatus {
  CARD_STATUS_WRONG = 0,
  CARD_STATUS_CORRECT = 1,
  UNRECOGNIZED = -1,
}

export interface BingoData {
  bingoId: number;
  cardList: BingoCard[];
  resetTimes: number;
}

export interface BossChallengeActivity {
  stageList: BossChallengeStage[];
}

export interface BossChallengeActivityGetStageRankReq {
  activityId: number;
  stageId: number;
}

export enum BossChallengeActivityGetStageRankReq_CmdId {
  CMD_ID = 4062,
  UNRECOGNIZED = -1,
}

export interface BossChallengeActivityGetStageRankRsp {
  retcode: BossChallengeActivityGetStageRankRsp_Retcode;
  rank: number;
  rankRatio: number;
}

export enum BossChallengeActivityGetStageRankRsp_CmdId {
  CMD_ID = 4063,
  UNRECOGNIZED = -1,
}

export enum BossChallengeActivityGetStageRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface BossChallengeAvatar {
  avatarId: number;
  hpPercent: number;
  spPercent: number;
}

export interface BossChallengeScDLCStatus {
  scDlcFeverScore: number;
  scDlcClimaxScore: number;
}

export interface BossChallengeStage {
  stageId: number;
  unlockTime: number;
  maxRewardIdx: number;
  curFloor: number;
  curStageCostTime: number;
  minStageCostTime: number;
  avatarList: BossChallengeAvatar[];
  scDlcStatus: BossChallengeScDLCStatus | undefined;
}

export interface BossRushBuff {
  poolId: number;
  buffId: number;
}

export interface BoxGachaData {
  boxGachaData: BoxGachaDisplayData | undefined;
  ticketHcoinCost: number;
  ticketMaterialId: number;
  costMaterialId: number;
  costMaterialNum: number;
  isEnableBaodi: boolean;
  maxGachaTimes: number;
  gachaTimes: number;
}

export interface BoxGachaDisplayData {
  itemList: BoxGachaItemData[];
  showList: GachaItem[];
  preGachaId: number;
  webLink: string;
  linkType: number;
  linkPara: string;
  linkParaStr: string;
}

export interface BoxGachaItemData {
  id: number;
  totalNum: number;
  gachaNum: number;
  itemNumPerDrop: number;
}

export interface BuffAssistActivity {
  activityId: number;
  buffScheduleId: number;
  waitSelectBuffPool: BuffAssistBuffPool | undefined;
  produceBuffPoolList: BuffAssistBuffPool[];
  buffSlotList: BuffAssistPlayerBuffSlot[];
  refreshBuffPoolTimes: number;
  curStageGroupId: number;
  leftSelectBuffTimes: number;
  historyList: BuffAssistHistory[];
  assistLevel: number;
  assistNum: number;
  beAssistedNum: number;
  publishBuffPoolTimes: number;
}

export interface BuffAssistBuffPool {
  poolId: number;
  uniqueId: number;
  producerUid: number;
  producerNickname: string;
  buffSlotList: BuffAssistBuffSlot[];
  expireTime: number;
  assistWordIdList: number[];
  buffScheduleId: number;
  producerType: number;
  producerHeadId: number;
  producerAssistLevel: number;
}

export interface BuffAssistBuffSlot {
  slotId: number;
  buffId: number;
  isUsed: boolean;
}

export interface BuffAssistGetActivityReq {
}

export enum BuffAssistGetActivityReq_CmdId {
  CMD_ID = 5941,
  UNRECOGNIZED = -1,
}

export interface BuffAssistGetActivityRsp {
  retcode: BuffAssistGetActivityRsp_Retcode;
  activity: BuffAssistActivity | undefined;
}

export enum BuffAssistGetActivityRsp_CmdId {
  CMD_ID = 5942,
  UNRECOGNIZED = -1,
}

export enum BuffAssistGetActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface BuffAssistHistory {
  assistType: number;
  peerNickname: string;
  peerAssistLevel: number;
  assistStageId: number;
  assistWordIdList: number[];
}

export interface BuffAssistPlayerBuffSlot {
  slotId: number;
  buffId: number;
  isReplace: boolean;
}

export interface BuffAssistPublishBuffPoolReq {
  poolId: number;
  assistWordIdList: number[];
  buffPool: BuffAssistBuffPool | undefined;
  isAnonymous: boolean;
}

export enum BuffAssistPublishBuffPoolReq_CmdId {
  CMD_ID = 5947,
  UNRECOGNIZED = -1,
}

export interface BuffAssistPublishBuffPoolRsp {
  retcode: BuffAssistPublishBuffPoolRsp_Retcode;
  poolId: number;
}

export enum BuffAssistPublishBuffPoolRsp_CmdId {
  CMD_ID = 5948,
  UNRECOGNIZED = -1,
}

export enum BuffAssistPublishBuffPoolRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  ASSIST_WORD_ERROR = 3,
  POOL_ERROR = 4,
  BUFF_SCHEDULE_ERROR = 5,
  BUFF_POOL_FULL = 6,
  LACK_TIMES = 7,
  REPEATED_PUBLISH = 8,
  UNRECOGNIZED = -1,
}

export interface BuffAssistRecvStageAssistInfoNotify {
  activityId: number;
  assistInfo: BuffAssistStageAssistInfo | undefined;
}

export enum BuffAssistRecvStageAssistInfoNotify_CmdId {
  CMD_ID = 5950,
  UNRECOGNIZED = -1,
}

export interface BuffAssistRefreshWaitSelectBuffPoolReq {
}

export enum BuffAssistRefreshWaitSelectBuffPoolReq_CmdId {
  CMD_ID = 5943,
  UNRECOGNIZED = -1,
}

export interface BuffAssistRefreshWaitSelectBuffPoolRsp {
  retcode: BuffAssistRefreshWaitSelectBuffPoolRsp_Retcode;
  buffPool: BuffAssistBuffPool | undefined;
}

export enum BuffAssistRefreshWaitSelectBuffPoolRsp_CmdId {
  CMD_ID = 5944,
  UNRECOGNIZED = -1,
}

export enum BuffAssistRefreshWaitSelectBuffPoolRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  NO_VALID_POOL = 3,
  REFRESH_TIMES_LACK = 4,
  SYSTEM_BUSY = 5,
  UNRECOGNIZED = -1,
}

export interface BuffAssistSelectBuffReq {
  buffSlotId: number;
  waitSelectBuffSlotId: number;
}

export enum BuffAssistSelectBuffReq_CmdId {
  CMD_ID = 5945,
  UNRECOGNIZED = -1,
}

export interface BuffAssistSelectBuffRsp {
  retcode: BuffAssistSelectBuffRsp_Retcode;
}

export enum BuffAssistSelectBuffRsp_CmdId {
  CMD_ID = 5946,
  UNRECOGNIZED = -1,
}

export enum BuffAssistSelectBuffRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  NO_BUFF = 3,
  BUFF_SLOT_ERROR = 4,
  BUFF_SLOT_REPLACED = 5,
  WAIT_SELECT_BUFF_SLOT_ERROR = 6,
  SELECT_TIMES_LACK = 7,
  BUFF_SLOT_LOCKED = 8,
  UNRECOGNIZED = -1,
}

export interface BuffAssistStageAssistInfo {
  producerUid: number;
  peerUid: number;
  peerAssistLevel: number;
  assistStageId: number;
  assistWordIdList: number[];
  buffSlotList: BuffAssistBuffSlot[];
  buffPoolUniqueId: number;
}

export interface BuffAssistStageEndNotify {
  stageId: number;
  curStageBuffPoolList: BuffAssistBuffPool[];
}

export enum BuffAssistStageEndNotify_CmdId {
  CMD_ID = 5949,
  UNRECOGNIZED = -1,
}

export interface BuffEffect {
  effectId: number;
  endTime: number;
  maxDuring: number;
  totalContriNum: number;
}

export interface Bulletin {
  id: number;
  type: number;
  weight: number;
  titleButton: string;
  title: string;
  bannerPath: string;
  eventDateStr: string;
  content: string;
  mark: number;
  beginTime: number;
  endTime: number;
  updateTime: number;
  showConfigId: number;
}

export interface BulletinActivityConfig {
  activityId: number;
  activityType: number;
  beginTime: number;
  endTime: number;
  bulletinId: number;
  missionIds: number[];
  typeParamList: number[];
  typeParamStr: string;
  minPlayerLevel: number;
  maxPlayerLevel: number;
  itemList: number[];
  titleName: string;
  titleImage: string;
  imagePath: string;
  linkButton: string;
  description: string;
  weight: number;
  backgroundPath: string;
  textImagePath: string;
  currencyList: number[];
  unlockParamStr: string;
}

export interface BulletinMission {
  missionId: number;
  cycleList: BulletinMission_BulletinMissionCycle[];
}

export interface BulletinMission_BulletinMissionCycle {
  cycleId: number;
  beginTime: number;
  endTime: number;
}

export interface BulletinMissionGroup {
  activityId: number;
  missionList: BulletinMission[];
}

export interface BulletinScoreActivity {
  activityId: number;
  score: number;
  hasTakeRewardList: number[];
  hasTakeRewardProgressList: number[];
}

export interface BurdenAlleviation {
  alleviationId: number;
  showBeginTime: number;
  showEndTime: number;
  beginTime: number;
  endTime: number;
  alleviateTimes: number;
}

export interface BurdenAlleviationActivity {
  curScheduleId: number;
  alleviationList: BurdenAlleviation[];
}

export interface BuyBattlePassLevelReq {
  targetLevel: number;
  hcoinCost: number;
}

export enum BuyBattlePassLevelReq_CmdId {
  CMD_ID = 3756,
  UNRECOGNIZED = -1,
}

export interface BuyBattlePassLevelRsp {
  retcode: BuyBattlePassLevelRsp_Retcode;
  hcoinCost: number;
}

export enum BuyBattlePassLevelRsp_CmdId {
  CMD_ID = 3757,
  UNRECOGNIZED = -1,
}

export enum BuyBattlePassLevelRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  HCOIN_LACK = 3,
  LEVEL_ERROR = 4,
  HCOIN_ERROR = 5,
  FEATURE_CLOSED = 6,
  UNRECOGNIZED = -1,
}

export interface BuyBattlePassThemeLevelReq {
  targetLevel: number;
  hcoinCost: number;
}

export enum BuyBattlePassThemeLevelReq_CmdId {
  CMD_ID = 3764,
  UNRECOGNIZED = -1,
}

export interface BuyBattlePassThemeLevelRsp {
  retcode: BuyBattlePassThemeLevelRsp_Retcode;
}

export enum BuyBattlePassThemeLevelRsp_CmdId {
  CMD_ID = 3765,
  UNRECOGNIZED = -1,
}

export enum BuyBattlePassThemeLevelRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  HCOIN_LACK = 3,
  LEVEL_ERROR = 4,
  HCOIN_ERROR = 5,
  FEATURE_CLOSED = 6,
  UNRECOGNIZED = -1,
}

export interface BuyBattlePassTicketReq {
  type: BattlePassTicketType;
}

export enum BuyBattlePassTicketReq_CmdId {
  CMD_ID = 3752,
  UNRECOGNIZED = -1,
}

export interface BuyBattlePassTicketRsp {
  retcode: BuyBattlePassTicketRsp_Retcode;
  advancedRewardList: RewardData[];
  luxuryRewardList: RewardData[];
}

export enum BuyBattlePassTicketRsp_CmdId {
  CMD_ID = 3753,
  UNRECOGNIZED = -1,
}

export enum BuyBattlePassTicketRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  TYPE_ERROR = 3,
  HAS_GOT = 4,
  LACK_MCOIN = 5,
  FEATURE_CLOSED = 6,
  UNRECOGNIZED = -1,
}

export interface BuyFurnitureReq {
  furnitureList: DepotFurniture[];
}

export enum BuyFurnitureReq_CmdId {
  CMD_ID = 621,
  UNRECOGNIZED = -1,
}

export interface BuyFurnitureRsp {
  retcode: BuyFurnitureRsp_Retcode;
}

export enum BuyFurnitureRsp_CmdId {
  CMD_ID = 622,
  UNRECOGNIZED = -1,
}

export enum BuyFurnitureRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LOCK = 2,
  HCOIN_LACK = 3,
  SCOIN_LACK = 4,
  MATERIAL_LACK = 5,
  KEEP_LIMIT = 6,
  UNRECOGNIZED = -1,
}

export interface BuyGoodsCost {
  hcoinCost: number;
  scoinCost: number;
  mcoinCost: number;
  costItemList: Material[];
}

export interface BuyGoodsReq {
  shopId: number;
  goodsId: number;
  couponMaterialId: number;
  couponNum: number;
  mcoinCouponMaterialId: number;
  goodsNum: number;
  giftPackSelectRewardId: number;
  discountSaveNum: number;
}

export enum BuyGoodsReq_CmdId {
  CMD_ID = 203,
  UNRECOGNIZED = -1,
}

export interface BuyGoodsRsp {
  retcode: BuyGoodsRsp_Retcode;
  shopId: number;
  goodsId: number;
  goodsBuyTimes: number;
  itemId: number;
  level: number;
  num: number;
  giftPackSelectRewardId: number;
}

export enum BuyGoodsRsp_CmdId {
  CMD_ID = 204,
  UNRECOGNIZED = -1,
}

export enum BuyGoodsRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  GOODS_NOT_EXIST = 2,
  BUY_TIMES_LACK = 3,
  MONEY_LACK = 4,
  EQUIPMENT_FULL = 5,
  SHOP_CLOSE = 6,
  SHOP_OVERDUE = 7,
  GIFT_GOODS_EFFECT = 8,
  GOODS_LOCKED = 9,
  COUPON_ERROR = 10,
  COUPON_LACK = 11,
  FEATURE_CLOSED = 12,
  MCOIN_LIMIT = 13,
  GLOBAL_GOODS_NUM_LIMIT = 14,
  NOT_IN_DISCOUNT = 15,
  IN_DISCOUNT = 16,
  DISCOUNT_ERROR = 17,
  UNRECOGNIZED = -1,
}

export interface BuyProductReq {
  name: string;
  price: number;
  currencyCode: string;
  formatPrice: string;
}

export enum BuyProductReq_CmdId {
  CMD_ID = 805,
  UNRECOGNIZED = -1,
}

export interface BuyProductRsp {
  retcode: BuyProductRsp_Retcode;
}

export enum BuyProductRsp_CmdId {
  CMD_ID = 806,
  UNRECOGNIZED = -1,
}

export enum BuyProductRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  DEVICE_ERROR = 2,
  PRODUCT_INVALID = 3,
  TIMES_LIMIT = 4,
  UNRECOGNIZED = -1,
}

export interface Cabin {
  type: number;
  level: number;
  extendGrade: number;
  levelUpEndTime: number;
  techList: CabinTech[];
}

export interface CabinLevel {
  cabinType: number;
  level: number;
  extendGrade: number;
}

export interface CabinTech {
  posX: number;
  posY: number;
}

export interface CabinTechAddAttr {
  attrType: AvatarAttrType;
  addRatio: number;
}

export interface CancelAdventureQuestReq {
  poolId: number;
}

export enum CancelAdventureQuestReq_CmdId {
  CMD_ID = 3922,
  UNRECOGNIZED = -1,
}

export interface CancelAdventureQuestRsp {
  retcode: CancelAdventureQuestRsp_Retcode;
  poolId: number;
}

export enum CancelAdventureQuestRsp_CmdId {
  CMD_ID = 3923,
  UNRECOGNIZED = -1,
}

export enum CancelAdventureQuestRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_SELECTED = 2,
  OVER_TIME = 3,
  UNRECOGNIZED = -1,
}

export interface CancelApplyArmadaReq {
  armadaId: number;
}

export enum CancelApplyArmadaReq_CmdId {
  CMD_ID = 2629,
  UNRECOGNIZED = -1,
}

export interface CancelApplyArmadaRsp {
  retcode: CancelApplyArmadaRsp_Retcode;
}

export enum CancelApplyArmadaRsp_CmdId {
  CMD_ID = 2630,
  UNRECOGNIZED = -1,
}

export enum CancelApplyArmadaRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface CancelDissolveArmadaReq {
}

export enum CancelDissolveArmadaReq_CmdId {
  CMD_ID = 2683,
  UNRECOGNIZED = -1,
}

export interface CancelDissolveArmadaRsp {
  retcode: CancelDissolveArmadaRsp_Retcode;
}

export enum CancelDissolveArmadaRsp_CmdId {
  CMD_ID = 2684,
  UNRECOGNIZED = -1,
}

export enum CancelDissolveArmadaRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_GRANTED = 2,
  NOT_IN_ARMADA = 3,
  UNRECOGNIZED = -1,
}

export interface CancelGratuityStageReq {
  stageUniqueId: number;
}

export enum CancelGratuityStageReq_CmdId {
  CMD_ID = 4106,
  UNRECOGNIZED = -1,
}

export interface CancelGratuityStageRsp {
  retcode: CancelGratuityStageRsp_Retcode;
  stageUniqueId: number;
}

export enum CancelGratuityStageRsp_CmdId {
  CMD_ID = 4107,
  UNRECOGNIZED = -1,
}

export enum CancelGratuityStageRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACCEPTOR = 2,
  UNRECOGNIZED = -1,
}

export interface CancelLevelUpArmadaCabinReq {
  type: ArmadaCabinType;
  cabinId: number;
}

export enum CancelLevelUpArmadaCabinReq_CmdId {
  CMD_ID = 2633,
  UNRECOGNIZED = -1,
}

export interface CancelLevelUpArmadaCabinRsp {
  retcode: CancelLevelUpArmadaCabinRsp_Retcode;
}

export enum CancelLevelUpArmadaCabinRsp_CmdId {
  CMD_ID = 2634,
  UNRECOGNIZED = -1,
}

export enum CancelLevelUpArmadaCabinRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  CABIN_NOT_IN_LEVELUP = 2,
  NOT_GRANTED = 3,
  NOT_IN_ARMADA = 4,
  NO_OWNERSHIP = 5,
  UNRECOGNIZED = -1,
}

export interface CancelRestaurantWorkReq {
  activityId: number;
  roomId: number;
}

export enum CancelRestaurantWorkReq_CmdId {
  CMD_ID = 5866,
  UNRECOGNIZED = -1,
}

export interface CancelRestaurantWorkRsp {
  retcode: CancelRestaurantWorkRsp_Retcode;
  activityId: number;
  roomId: number;
}

export enum CancelRestaurantWorkRsp_CmdId {
  CMD_ID = 5867,
  UNRECOGNIZED = -1,
}

export enum CancelRestaurantWorkRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ROOM_NOT_EXIST = 2,
  WORK_NOT_BEGIN = 3,
  UNRECOGNIZED = -1,
}

export interface CancelRoomMatchReq {
}

export enum CancelRoomMatchReq_CmdId {
  CMD_ID = 3167,
  UNRECOGNIZED = -1,
}

export interface CancelRoomMatchRsp {
  retcode: CancelRoomMatchRsp_Retcode;
}

export enum CancelRoomMatchRsp_CmdId {
  CMD_ID = 3168,
  UNRECOGNIZED = -1,
}

export enum CancelRoomMatchRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_MATCH = 2,
  TOO_FREQUENT = 3,
  UNRECOGNIZED = -1,
}

export interface CancelWareHouseDemandReq {
}

export enum CancelWareHouseDemandReq_CmdId {
  CMD_ID = 2651,
  UNRECOGNIZED = -1,
}

export interface CancelWareHouseDemandRsp {
  retcode: CancelWareHouseDemandRsp_Retcode;
  demandId: number;
  isAutoCancel: boolean;
}

export enum CancelWareHouseDemandRsp_CmdId {
  CMD_ID = 2652,
  UNRECOGNIZED = -1,
}

export enum CancelWareHouseDemandRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  STATUS_ERROR = 3,
  UNRECOGNIZED = -1,
}

export interface CardProductInfo {
  productName: string;
  expireTime: number;
  rewardNum: number;
  hcoin: number;
  takeRewardDays: number;
  lastDailyRewardTime: number;
  bonusNeedDays: number;
  bonusHcoin: number;
  bonusMaxSaveDays: number;
  cardLeftDays: number;
}

export interface CardProductReward {
  productName: string;
  hcoin: number;
  takeRewardDays: number;
}

export interface ChallengeMissionData {
  isUnlock: boolean;
  stepList: ChallengeMissionStep[];
}

export interface ChallengeMissionStep {
  stepId: number;
  status: ChallengeMissionStep_StepStatus;
  hasTakeBonus: boolean;
}

export enum ChallengeMissionStep_StepStatus {
  UNLOCK = 0,
  DOING = 1,
  REWARDING = 2,
  FINISH = 3,
  UNRECOGNIZED = -1,
}

export interface ChallengeModeArea {
  areaId: number;
  avatarList: ChallengeModeAvatar[];
  weaponUidList: number[];
  stigmataUidList: number[];
}

export interface ChallengeModeAvatar {
  avatarId: number;
  hpPercent: number;
  spPercent: number;
  lastRecoverTime: number;
  isDie: boolean;
}

export interface ChallengeStepCompensation {
  compensationId: number;
  isTakeCompensation: boolean;
  newChallengeStepCompensationList: StepCompensation[];
  oldChallengeStepCompensationList: StepCompensation[];
  mainlineStepCompensationList: StepCompensation[];
}

export interface ChallengeWarActivity {
  stageGroupScheduleList: GeneralActivityStageGroupScheduleInfo[];
  teamList: ChallengeWarActivity_StageAvatarTeam[];
  stageList: ChallengeWarStage[];
}

export interface ChallengeWarActivity_StageAvatarTeam {
  stageId: number;
  avatarIdList: number[];
  supportAvatarIdList: number[];
}

export interface ChallengeWarActivityFinishFloorReq {
  stageId: number;
  floor: number;
  score: number;
  cheatDataList: StageCheatData[];
}

export enum ChallengeWarActivityFinishFloorReq_CmdId {
  CMD_ID = 4058,
  UNRECOGNIZED = -1,
}

export interface ChallengeWarActivityFinishFloorRsp {
  retcode: ChallengeWarActivityFinishFloorRsp_Retcode;
}

export enum ChallengeWarActivityFinishFloorRsp_CmdId {
  CMD_ID = 4059,
  UNRECOGNIZED = -1,
}

export enum ChallengeWarActivityFinishFloorRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_CUR_FLOOR = 2,
  UNRECOGNIZED = -1,
}

export interface ChallengeWarStage {
  stageId: number;
  floorScoreList: ChallengeWarStage_StageFloorScore[];
  maxFinishFloor: number;
}

export interface ChallengeWarStage_StageFloorScore {
  floor: number;
  score: number;
}

export interface ChallengeWarUpdateTeamReq {
  stageId: number;
  avatarIdList: number[];
  supportAvatarIdList: number[];
}

export enum ChallengeWarUpdateTeamReq_CmdId {
  CMD_ID = 4054,
  UNRECOGNIZED = -1,
}

export interface ChallengeWarUpdateTeamRsp {
  retcode: ChallengeWarUpdateTeamRsp_Retcode;
  stageId: number;
}

export enum ChallengeWarUpdateTeamRsp_CmdId {
  CMD_ID = 4055,
  UNRECOGNIZED = -1,
}

export enum ChallengeWarUpdateTeamRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_REPEATED = 2,
  AVATAR_NOT_EXIST = 3,
  UNRECOGNIZED = -1,
}

export interface ChangeArmadaNameReq {
  name: string;
  isScoinLack: boolean;
  isHcoinLack: boolean;
}

export enum ChangeArmadaNameReq_CmdId {
  CMD_ID = 2691,
  UNRECOGNIZED = -1,
}

export interface ChangeArmadaNameRsp {
  retcode: ChangeArmadaNameRsp_Retcode;
  name: string;
  oldName: string;
  auditName: string;
  isChangeNameFree: boolean;
  cdEndTime: number;
}

export enum ChangeArmadaNameRsp_CmdId {
  CMD_ID = 2692,
  UNRECOGNIZED = -1,
}

export enum ChangeArmadaNameRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SCOIN_LACK = 2,
  HCOIN_LACK = 3,
  NAME_REPEAT = 4,
  NAME_FORMAT_ERROR = 5,
  NAME_SENSITIVE_WORDS = 6,
  NOT_IN_ARMADA = 7,
  POSITION_LIMIT = 8,
  IN_CD = 9,
  IN_AUDIT = 10,
  UNRECOGNIZED = -1,
}

export interface ChangeFriendRemarkSwitchData {
}

export interface ChangeGodWarChallengeSupportAvatarReq {
  godWarId: number;
  taleId: number;
  supportAvatarIdList: number[];
  extraItemId: number;
  assistantExtraItemId: number;
}

export enum ChangeGodWarChallengeSupportAvatarReq_CmdId {
  CMD_ID = 0,
  UNRECOGNIZED = -1,
}

export interface ChangePlayerCardReq {
  type: PlayerCardType;
  slotList: PlayerCardSlot[];
  msgConfig: PlayerCardMsgConfig;
}

export enum ChangePlayerCardReq_CmdId {
  CMD_ID = 482,
  UNRECOGNIZED = -1,
}

export interface ChangePlayerCardRsp {
  retcode: ChangePlayerCardRsp_Retcode;
  type: PlayerCardType;
  slotList: PlayerCardSlot[];
  msgConfig: PlayerCardMsgConfig;
}

export enum ChangePlayerCardRsp_CmdId {
  CMD_ID = 483,
  UNRECOGNIZED = -1,
}

export enum ChangePlayerCardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ChangeSecurityPasswordReq {
  oldPassword: string;
  newPassword: string;
}

export enum ChangeSecurityPasswordReq_CmdId {
  CMD_ID = 5025,
  UNRECOGNIZED = -1,
}

export interface ChangeSecurityPasswordRsp {
  retcode: ChangeSecurityPasswordRsp_Retcode;
  securityPasswordInfo: SecurityPasswordInfo | undefined;
}

export enum ChangeSecurityPasswordRsp_CmdId {
  CMD_ID = 5026,
  UNRECOGNIZED = -1,
}

export enum ChangeSecurityPasswordRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  TOO_MANY_FAILS = 2,
  IS_IN_RESETTING = 3,
  WRONG_PASSWORD = 4,
  UNRECOGNIZED = -1,
}

export interface ChapterActCompensation {
  actId: number;
  difficulty: number;
  challengeRewardIdList: number[];
}

export interface ChapterActivity {
  chapterId: number;
  level: number;
  levelExp: number;
  hasTakeRewardLevelList: number[];
  isTakeDailyReward: boolean;
  bossList: ChapterActivityBoss[];
  playerLevel: number;
  dailyRewardId: number;
  stageList: ChapterActivityStage[];
}

export interface ChapterActivityBoss {
  bossStageId: number;
  leftHp: number;
  curSectionId: number;
}

export interface ChapterActivityDailyRewardNotify {
  chapterId: number;
  dailyReward: RewardData | undefined;
}

export enum ChapterActivityDailyRewardNotify_CmdId {
  CMD_ID = 4331,
  UNRECOGNIZED = -1,
}

export interface ChapterActivityExclusiveStage {
  groupId: number;
  stageId: number;
}

export interface ChapterActivityStage {
  stageId: number;
  maxFloor: number;
  passTimes: number;
  maxScore: number;
}

export interface ChapterActivityTakeDailyRewardReq {
  chapterId: number;
}

export enum ChapterActivityTakeDailyRewardReq_CmdId {
  CMD_ID = 4350,
  UNRECOGNIZED = -1,
}

export interface ChapterActivityTakeDailyRewardRsp {
  retcode: ChapterActivityTakeDailyRewardRsp_Retcode;
  chapterId: number;
  dailyReward: RewardData | undefined;
}

export enum ChapterActivityTakeDailyRewardRsp_CmdId {
  CMD_ID = 4351,
  UNRECOGNIZED = -1,
}

export enum ChapterActivityTakeDailyRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKE = 2,
  ACTIVITY_NOT_OPEN = 3,
  UNRECOGNIZED = -1,
}

export interface ChapterCompensationInfo {
  compensationId: number;
  stageCompensationList: ChapterStageCompensation[];
  actCompensationList: ChapterActCompensation[];
  isTakenCompensation: boolean;
  chapterId: number;
}

export interface ChapterGroup {
  id: number;
  siteList: ChapterGroupSite[];
}

export interface ChapterGroupGetDataReq {
  chapterGroupId: number;
}

export enum ChapterGroupGetDataReq_CmdId {
  CMD_ID = 1660,
  UNRECOGNIZED = -1,
}

export interface ChapterGroupGetDataRsp {
  retcode: ChapterGroupGetDataRsp_Retcode;
  chapterGroupList: ChapterGroup[];
  isAll: boolean;
  chapterGroupId: number;
}

export enum ChapterGroupGetDataRsp_CmdId {
  CMD_ID = 1661,
  UNRECOGNIZED = -1,
}

export enum ChapterGroupGetDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_EXIST = 2,
  UNRECOGNIZED = -1,
}

export interface ChapterGroupSite {
  siteId: number;
  chapterId: number;
  status: ChapterGroupSiteStatus;
}

export interface ChapterStageCompensation {
  stageId: number;
  isFirstWin: boolean;
  challengeRewardIdList: number[];
}

export interface ChargeActivityBuffReq {
  activityBuffId: number;
}

export enum ChargeActivityBuffReq_CmdId {
  CMD_ID = 1605,
  UNRECOGNIZED = -1,
}

export interface ChargeActivityBuffRsp {
  retcode: ChargeActivityBuffRsp_Retcode;
  activityBuffId: number;
}

export enum ChargeActivityBuffRsp_CmdId {
  CMD_ID = 1606,
  UNRECOGNIZED = -1,
}

export enum ChargeActivityBuffRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_FOUND = 2,
  NOT_ALLOWED = 3,
  FULL_CHARGED = 4,
  MATERIAL_LACK = 5,
  UNRECOGNIZED = -1,
}

export interface ChatCloseNotify {
  retcode: ChatCloseNotify_Retcode;
}

export enum ChatCloseNotify_CmdId {
  CMD_ID = 2239,
  UNRECOGNIZED = -1,
}

export enum ChatCloseNotify_Retcode {
  SUCC = 0,
  FAIL = 1,
  FEATURE_CLOSE = 2,
  LEVEL_LIMIT = 3,
  UNRECOGNIZED = -1,
}

export interface ChatForbidNotify {
  forbidFinishTime: number;
  forbidType: ChatForbidNotify_ForbidType;
}

export enum ChatForbidNotify_CmdId {
  CMD_ID = 1154,
  UNRECOGNIZED = -1,
}

export enum ChatForbidNotify_ForbidType {
  FORBID_COMMON = 0,
  REPEAT_CHAT = 1,
  UNRECOGNIZED = -1,
}

export interface ChatForbidSnsNotify {
  creditBound: number;
  chatForbidFinishTime: number;
  chatForbidTimes: number;
}

export enum ChatForbidSnsNotify_CmdId {
  CMD_ID = 1161,
  UNRECOGNIZED = -1,
}

export interface Chatgroup {
  chatgroupId: number;
  name: string;
  notice: string;
  iconId: number;
  memberList: ChatgroupMember[];
  labelIdList: number[];
}

export interface ChatgroupInvite {
  chatgroupId: number;
  name: string;
  notice: string;
  iconId: number;
  inviterUid: number;
  inviterInfo: PlayerFriendBriefData | undefined;
  inviteTime: number;
  chatgroupMemberNum: number;
}

export interface ChatgroupJoinMsg {
  inviterUid: number;
  memberList: ChatgroupMember[];
}

export interface ChatgroupLeaveMsg {
  operatorUid: number;
  leaveUid: number;
}

export interface ChatgroupMember {
  uid: number;
  position: ChatgroupPosition;
  briefData: PlayerFriendBriefData | undefined;
}

export interface ChatgroupSettingMsg {
  operatorUid: number;
  name: string;
  notice: string;
  iconId: number;
  labelIdList: number[];
}

export interface ChatgroupSystemNotify {
  type: ChatgroupSystemNotifyType;
  chatgroupId: number;
  chatgroup: Chatgroup | undefined;
  joinMsg: ChatgroupJoinMsg | undefined;
  leaveMsg: ChatgroupLeaveMsg | undefined;
  settingMsg: ChatgroupSettingMsg | undefined;
  invite: ChatgroupInvite | undefined;
  targetUidList: number[];
  chatgroupName: string;
  time: number;
}

export enum ChatgroupSystemNotify_CmdId {
  CMD_ID = 2211,
  UNRECOGNIZED = -1,
}

export interface ChatMsg {
  uid: number;
  nickname: string;
  time: number;
  msg: string;
  avatarId: number;
  dressId: number;
  content: ChatMsgContent | undefined;
  channel: ChatMsg_MsgChannel;
  frameId: number;
  isSensitive: boolean;
  isGoback: boolean;
  channelId: number;
  customHeadId: number;
  masterPupilTag: MasterPupilType;
  systemMsg: ChatMsg_SystemChatMsg | undefined;
  targetUid: number;
  seasonId: number;
  seasonGroupId: number;
  seasonLevel: number;
  mode: number;
  modePara: number;
  isArmadaLeader: boolean;
  isTeamLeader: boolean;
  checkResult: ChatMsgSensitiveCheckResult | undefined;
  isLobbyInvite: boolean;
}

export enum ChatMsg_MsgChannel {
  DEFAULT = 0,
  WORLD = 1,
  FRIEND = 2,
  ARMADA = 3,
  PLAYER_CARD = 4,
  LOBBY = 5,
  MASTER_PUPIL = 6,
  COMMON_CHATWORLD = 7,
  GROUP = 8,
  TEAM = 9,
  CAMPAIGN = 10,
  ROOM = 11,
  WORLD_ACTIVITY = 12,
  PRIVATE = 13,
  BATTLE = 14,
  UNRECOGNIZED = -1,
}

export interface ChatMsg_SystemChatMsg {
  type: SystemChatMsgType;
  itemId: number;
  itemLevel: number;
  itemNum: number;
  gachaType: GachaType;
}

export interface ChatMsgAvatar {
  id: number;
  avatar: AvatarDetailData | undefined;
}

export interface ChatMsgContent {
  items: ChatMsgItem[];
}

export interface ChatMsgElf {
  id: number;
  elf: ElfDetailData | undefined;
}

export interface ChatMsgInternal {
  keyValueList: ChatMsgKeyValue[];
}

export interface ChatMsgItem {
  type: ChatMsgItem_ChatMsgType;
  msgStr: string;
  weapon: ChatMsgWeapon | undefined;
  stigmata: ChatMsgStigmata | undefined;
  avatar: ChatMsgAvatar | undefined;
  lobby: ChatMsgLobby | undefined;
  internal: ChatMsgInternal | undefined;
  sendRedEnvelope: ChatSendRedEnvelope | undefined;
  takeRedEnvelope: ChatTakeRedEnvelope | undefined;
  emojiId: number;
  elf: ChatMsgElf | undefined;
  redEnvelopeTakeOver: ChatRedEnvelopeTakeOver | undefined;
  chatworldBeast: ChatMsgWorldBeast | undefined;
}

export enum ChatMsgItem_ChatMsgType {
  STR_MSG = 1,
  WEAPON_MSG = 2,
  STIGMATA_MSG = 3,
  AVATAR_MSG = 4,
  LOBBY_MSG = 5,
  INTERNAL_MSG = 6,
  SEND_RED_ENVELOPE_MSG = 7,
  TAKE_RED_ENVELOPE_MSG = 8,
  EMOJI = 9,
  ELF_MSG = 10,
  RED_ENVELOPE_TAKE_OVER_MSG = 11,
  CHATWORLD_BEAST_MSG = 12,
  UNRECOGNIZED = -1,
}

export interface ChatMsgKeyValue {
  key: string;
  value: string;
}

export interface ChatMsgLobby {
  msg: string;
  level: number;
}

export interface ChatMsgSensitiveCheckResult {
  shieldType: number;
  numberCheck: number;
  rewriteText: string;
}

export interface ChatMsgStigmata {
  uniqueId: number;
  stigmata: StigmataDetailData | undefined;
}

export interface ChatMsgWeapon {
  uniqueId: number;
  weapon: WeaponDetailData | undefined;
}

export interface ChatMsgWorldBeast {
  chatworldId: number;
  sceneId: number;
  beastUniqueIdU64: number;
  stageId: number;
}

export interface ChatRedEnvelopeTakeOver {
  senderUid: number;
  senderNickname: string;
  itemId: number;
  msg: string;
  redEnvelopeId: number;
}

export interface ChatReport {
  targetUid: number;
  reportType: number;
  reportDetail: string;
  reporterUid: number;
}

export interface ChatReportNotify {
  reportUid: number;
  targetUid: number;
  reportType: number;
  lostChatCredit: number;
  chatForbidTimes: number;
}

export enum ChatReportNotify_CmdId {
  CMD_ID = 1152,
  UNRECOGNIZED = -1,
}

export interface ChatReportReq {
  chatReport: ChatReport | undefined;
}

export enum ChatReportReq_CmdId {
  CMD_ID = 1150,
  UNRECOGNIZED = -1,
}

export interface ChatReportRsp {
  retcode: ChatReportRsp_Retcode;
  cdLeftTime: number;
}

export enum ChatReportRsp_CmdId {
  CMD_ID = 1151,
  UNRECOGNIZED = -1,
}

export enum ChatReportRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  CHAT_BLOCKED = 2,
  IN_REPORT_CD = 3,
  UNRECOGNIZED = -1,
}

export interface ChatSendRedEnvelope {
  itemId: number;
  msg: string;
  redEnvelopeId: number;
}

export interface ChatSwitchData {
  chatSwitchChannelType: number;
}

export interface ChatTakeRedEnvelope {
  senderUid: number;
  senderNickname: string;
  itemId: number;
  takeScoin: number;
  dropItemList: DropItem[];
  msg: string;
  takeMaterial: Material | undefined;
}

export interface ChatUnforbidNotify {
  uidList: number[];
}

export enum ChatUnforbidNotify_CmdId {
  CMD_ID = 1153,
  UNRECOGNIZED = -1,
}

export interface ChatworldActivityInfo {
  treasureScheduleId: number;
  isHasNpcRedEnvelope: boolean;
}

export interface ChatworldActivitySchedule {
  scheduleId: number;
  activityId: number;
  beginTime: number;
  endTime: number;
  beginDayTime: number;
  endDayTime: number;
}

export interface ChatworldBattle {
  score: number;
  killNum: number;
  killStreak: number;
  legendaryTimes: number;
  collectBattleItemList: ChatworldCollectBattleItem[];
}

export interface ChatworldBattleCollectItemReq {
  itemId: number;
  itemUniqueId: number;
}

export enum ChatworldBattleCollectItemReq_CmdId {
  CMD_ID = 2425,
  UNRECOGNIZED = -1,
}

export interface ChatworldBattleCollectItemRsp {
  retcode: ChatworldBattleCollectItemRsp_Retcode;
  itemId: number;
  itemUniqueId: number;
  rewardData: RewardData | undefined;
}

export enum ChatworldBattleCollectItemRsp_CmdId {
  CMD_ID = 2426,
  UNRECOGNIZED = -1,
}

export enum ChatworldBattleCollectItemRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_CHATWORLD = 2,
  NOT_EXIST = 3,
  CAMP_INVALID = 4,
  LACK_TIMES = 5,
  ITEM_NOT_USED = 6,
  ITEM_LIMIT = 7,
  UNRECOGNIZED = -1,
}

export interface ChatworldBattleUseItemReq {
  itemId: number;
}

export enum ChatworldBattleUseItemReq_CmdId {
  CMD_ID = 2422,
  UNRECOGNIZED = -1,
}

export interface ChatworldBattleUseItemRsp {
  retcode: ChatworldBattleUseItemRsp_Retcode;
}

export enum ChatworldBattleUseItemRsp_CmdId {
  CMD_ID = 2423,
  UNRECOGNIZED = -1,
}

export enum ChatworldBattleUseItemRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_CHATWORLD = 2,
  NOT_EXIST = 3,
  UNRECOGNIZED = -1,
}

export interface ChatworldBeast {
  beastUniqueIdU64: number;
  beastId: number;
  stageId: number;
  leftHp: number;
  status: ChatworldBeast_Status;
  waitTakeTreasureUidList: number[];
  expireTime: number;
  challengerNum: number;
  treasureRankId: number;
}

export enum ChatworldBeast_Status {
  CHALLENGE = 1,
  TREASURE = 2,
  UNRECOGNIZED = -1,
}

export interface ChatworldBeastAbandonChallengeReq {
}

export enum ChatworldBeastAbandonChallengeReq_CmdId {
  CMD_ID = 2473,
  UNRECOGNIZED = -1,
}

export interface ChatworldBeastAbandonChallengeRsp {
  retcode: ChatworldBeastAbandonChallengeRsp_Retcode;
}

export enum ChatworldBeastAbandonChallengeRsp_CmdId {
  CMD_ID = 2474,
  UNRECOGNIZED = -1,
}

export enum ChatworldBeastAbandonChallengeRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ChatworldBeastAddResultNotify {
  retcode: ChatworldBeastAddResultNotify_Retcode;
}

export enum ChatworldBeastAddResultNotify_CmdId {
  CMD_ID = 2460,
  UNRECOGNIZED = -1,
}

export enum ChatworldBeastAddResultNotify_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_POSITION = 2,
  ROOM_LIMIT = 3,
  UNRECOGNIZED = -1,
}

export interface ChatworldBeastChallengeReq {
  beastUniqueIdU64: number;
  beastId: number;
}

export enum ChatworldBeastChallengeReq_CmdId {
  CMD_ID = 2461,
  UNRECOGNIZED = -1,
}

export interface ChatworldBeastChallengeRsp {
  retcode: ChatworldBeastChallengeRsp_Retcode;
  beast: ChatworldBeast | undefined;
  chatworldId: number;
  sceneId: number;
}

export enum ChatworldBeastChallengeRsp_CmdId {
  CMD_ID = 2462,
  UNRECOGNIZED = -1,
}

export enum ChatworldBeastChallengeRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  DAILY_LIMIT = 3,
  PLAYER_FULL = 4,
  EXPIRE = 5,
  FINISH = 6,
  TIME_NOT_ENOUGH = 7,
  UNRECOGNIZED = -1,
}

export interface ChatworldBeastGetActivityReq {
}

export enum ChatworldBeastGetActivityReq_CmdId {
  CMD_ID = 2465,
  UNRECOGNIZED = -1,
}

export interface ChatworldBeastGetActivityRsp {
  retcode: ChatworldBeastGetActivityRsp_Retcode;
  dailySeniorChallengeTimes: number;
  dailyJuniorChallengeTimes: number;
  dailySeniorTreasureTimes: number;
  dailyJuniorTreasureTimes: number;
  refreshBeginTime: number;
  refreshEndTime: number;
  refreshInterval: number;
}

export enum ChatworldBeastGetActivityRsp_CmdId {
  CMD_ID = 2466,
  UNRECOGNIZED = -1,
}

export enum ChatworldBeastGetActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface ChatworldBeastSyncReq {
  beastUniqueIdU64: number;
  costHp: number;
}

export enum ChatworldBeastSyncReq_CmdId {
  CMD_ID = 2463,
  UNRECOGNIZED = -1,
}

export interface ChatworldBeastSyncRsp {
  retcode: ChatworldBeastSyncRsp_Retcode;
  beastUniqueIdU64: number;
  fromUid: number;
  costHp: number;
  leftHp: number;
}

export enum ChatworldBeastSyncRsp_CmdId {
  CMD_ID = 2464,
  UNRECOGNIZED = -1,
}

export enum ChatworldBeastSyncRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ChatworldBeastTakeTreasureReq {
  beastUniqueIdU64: number;
  beastId: number;
}

export enum ChatworldBeastTakeTreasureReq_CmdId {
  CMD_ID = 2471,
  UNRECOGNIZED = -1,
}

export interface ChatworldBeastTakeTreasureRsp {
  retcode: ChatworldBeastTakeTreasureRsp_Retcode;
  dropItemList: DropItem[];
  beastId: number;
  treasureRankId: number;
}

export enum ChatworldBeastTakeTreasureRsp_CmdId {
  CMD_ID = 2472,
  UNRECOGNIZED = -1,
}

export enum ChatworldBeastTakeTreasureRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKE = 2,
  DAILY_LIMIT = 3,
  NOT_EXIST = 4,
  NO_RIGHT = 5,
  NOT_OPEN = 6,
  UNRECOGNIZED = -1,
}

export interface ChatworldBox {
  boxSeriesId: number;
  scheduleId: number;
  expireTime: number;
}

export interface ChatworldBoxActivity {
  scheduleId: number;
  openBoxUniqueIdU64List: number[];
}

export interface ChatworldBoxGetDataReq {
}

export enum ChatworldBoxGetDataReq_CmdId {
  CMD_ID = 2467,
  UNRECOGNIZED = -1,
}

export interface ChatworldBoxGetDataRsp {
  retcode: ChatworldBoxGetDataRsp_Retcode;
  boxActivityList: ChatworldBoxActivity[];
}

export enum ChatworldBoxGetDataRsp_CmdId {
  CMD_ID = 2468,
  UNRECOGNIZED = -1,
}

export enum ChatworldBoxGetDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface ChatworldBoxTakeRewardReq {
  uniqueId: number;
  scheduleId: number;
}

export enum ChatworldBoxTakeRewardReq_CmdId {
  CMD_ID = 2469,
  UNRECOGNIZED = -1,
}

export interface ChatworldBoxTakeRewardRsp {
  retcode: ChatworldBoxTakeRewardRsp_Retcode;
  rewardData: RewardData | undefined;
  boxSeriesId: number;
  scheduleId: number;
  stageId: number;
  boxUniqueId: number;
  openBoxUniqueIdU64List: number[];
  chatworldId: number;
  sceneId: number;
}

export enum ChatworldBoxTakeRewardRsp_CmdId {
  CMD_ID = 2470,
  UNRECOGNIZED = -1,
}

export enum ChatworldBoxTakeRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_OPEN = 2,
  HAS_TAKE = 3,
  DAILY_LIMIT = 4,
  BOX_NOT_EXIST = 5,
  FINISH = 6,
  UNRECOGNIZED = -1,
}

export interface ChatworldBrief {
  chatworldId: number;
  playerNum: number;
  isHasUntakenTreasure: boolean;
  beastNum: number;
}

export interface ChatworldBuff {
  buffId: number;
  expireTimeMsU64: number;
}

export interface ChatworldChangeAvatarReq {
  avatarId: number;
  sceneId: number;
}

export enum ChatworldChangeAvatarReq_CmdId {
  CMD_ID = 2409,
  UNRECOGNIZED = -1,
}

export interface ChatworldChangeAvatarRsp {
  retcode: ChatworldChangeAvatarRsp_Retcode;
  avatarId: number;
  sceneId: number;
}

export enum ChatworldChangeAvatarRsp_CmdId {
  CMD_ID = 2410,
  UNRECOGNIZED = -1,
}

export enum ChatworldChangeAvatarRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_CHATWORLD = 2,
  AVATAR_LOCK = 3,
  SCENE_NOT_EXIST = 4,
  UNRECOGNIZED = -1,
}

export interface ChatworldCollectBattleItem {
  itemId: number;
  itemNum: number;
}

export interface ChatworldDishReward {
  rewardId: number;
  takenTimes: number;
  lastTakeTime: number;
}

export interface ChatworldEntity {
  uniqueId: number;
  entityType: number;
  campTag: number;
  position: ChatworldPosition | undefined;
  playerInfo: ChatworldPlayerInfo | undefined;
  chatworldItem: ChatworldItem | undefined;
  chatworldStance: ChatworldStance | undefined;
  chatworldFishSpot: ChatworldFishSpot | undefined;
  chatworldQuestion: ChatworldQuestion | undefined;
  chatworldBeast: ChatworldBeast | undefined;
  chatworldBox: ChatworldBox | undefined;
}

export interface ChatworldEntityHp {
  hitUniqueId: number;
  oldHp: number;
  leftHp: number;
}

export interface ChatworldEntityMsg {
  updateEntityList: ChatworldEntity[];
  deleteEntityList: number[];
}

export interface ChatworldFishAssistReq {
  fishSpotId: number;
  targetUid: number;
}

export enum ChatworldFishAssistReq_CmdId {
  CMD_ID = 2437,
  UNRECOGNIZED = -1,
}

export interface ChatworldFishAssistRsp {
  retcode: ChatworldFishAssistRsp_Retcode;
  fishSpotId: number;
  targetUid: number;
}

export enum ChatworldFishAssistRsp_CmdId {
  CMD_ID = 2438,
  UNRECOGNIZED = -1,
}

export enum ChatworldFishAssistRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  CURRENCY_LIMIT = 2,
  UNRECOGNIZED = -1,
}

export interface ChatworldFishCancelWaitAssistReq {
  fishSpotId: number;
}

export enum ChatworldFishCancelWaitAssistReq_CmdId {
  CMD_ID = 2442,
  UNRECOGNIZED = -1,
}

export interface ChatworldFishCancelWaitAssistRsp {
  retcode: ChatworldFishCancelWaitAssistRsp_Retcode;
  fishSpotId: number;
}

export enum ChatworldFishCancelWaitAssistRsp_CmdId {
  CMD_ID = 2443,
  UNRECOGNIZED = -1,
}

export enum ChatworldFishCancelWaitAssistRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_WAIT = 2,
  UNRECOGNIZED = -1,
}

export interface ChatworldFishEndReq {
  fishEndStatus: ChatworldFishEndReq_FishEndStatus;
  fishSpotId: number;
  fishGroupId: number;
  fishHardLevel: number;
}

export enum ChatworldFishEndReq_CmdId {
  CMD_ID = 2435,
  UNRECOGNIZED = -1,
}

export enum ChatworldFishEndReq_FishEndStatus {
  FISH_END_SUCC = 0,
  FISH_END_WAIT_ASSIST = 1,
  FISH_END_FAIL = 2,
  UNRECOGNIZED = -1,
}

export interface ChatworldFishEndRsp {
  retcode: ChatworldFishEndRsp_Retcode;
  fishSpotId: number;
}

export enum ChatworldFishEndRsp_CmdId {
  CMD_ID = 2436,
  UNRECOGNIZED = -1,
}

export enum ChatworldFishEndRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ChatworldFisher {
  uid: number;
  seatIdx: number;
  fisherStatus: ChatworldFisherStatus;
  statusStartTimeMsU64: number;
  waitAssistFishHardLevel: number;
  assistUidList: number[];
  likeUidList: number[];
  lastGetFishId: number;
  lastGetFishTimeMsU64: number;
  fishInfo: ChatworldFishInfo | undefined;
}

export interface ChatworldFishGetActivityInfoReq {
}

export enum ChatworldFishGetActivityInfoReq_CmdId {
  CMD_ID = 2445,
  UNRECOGNIZED = -1,
}

export interface ChatworldFishGetActivityInfoRsp {
  retcode: ChatworldFishGetActivityInfoRsp_Retcode;
  fishInfo: ChatworldFishInfo | undefined;
}

export enum ChatworldFishGetActivityInfoRsp_CmdId {
  CMD_ID = 2446,
  UNRECOGNIZED = -1,
}

export enum ChatworldFishGetActivityInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ChatworldFishInfo {
  dailyGetCurrencyNum: number;
}

export interface ChatworldFishJoinSpotReq {
  fishSpotId: number;
  seatIdx: number;
  fishInfo: ChatworldFishInfo | undefined;
}

export enum ChatworldFishJoinSpotReq_CmdId {
  CMD_ID = 2429,
  UNRECOGNIZED = -1,
}

export interface ChatworldFishJoinSpotRsp {
  retcode: ChatworldFishJoinSpotRsp_Retcode;
  fishSpotId: number;
  seatIdx: number;
}

export enum ChatworldFishJoinSpotRsp_CmdId {
  CMD_ID = 2430,
  UNRECOGNIZED = -1,
}

export enum ChatworldFishJoinSpotRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SPOT_FULL = 2,
  CURRENCY_LIMIT = 3,
  UNRECOGNIZED = -1,
}

export interface ChatworldFishKickPlayerNotify {
  kickReason: ChatworldFishKickPlayerNotify_KickReason;
}

export enum ChatworldFishKickPlayerNotify_CmdId {
  CMD_ID = 2444,
  UNRECOGNIZED = -1,
}

export enum ChatworldFishKickPlayerNotify_KickReason {
  KICK_NONE = 0,
  KICK_CURRENCY_FULL = 1,
  KICK_NO_ACTION = 2,
  UNRECOGNIZED = -1,
}

export interface ChatworldFishLeaveSpotReq {
  fishSpotId: number;
}

export enum ChatworldFishLeaveSpotReq_CmdId {
  CMD_ID = 2431,
  UNRECOGNIZED = -1,
}

export interface ChatworldFishLeaveSpotRsp {
  retcode: ChatworldFishLeaveSpotRsp_Retcode;
  fishSpotId: number;
}

export enum ChatworldFishLeaveSpotRsp_CmdId {
  CMD_ID = 2432,
  UNRECOGNIZED = -1,
}

export enum ChatworldFishLeaveSpotRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ChatworldFishLikeReq {
  fishSpotId: number;
  targetUid: number;
}

export enum ChatworldFishLikeReq_CmdId {
  CMD_ID = 2439,
  UNRECOGNIZED = -1,
}

export interface ChatworldFishLikeRsp {
  retcode: ChatworldFishLikeRsp_Retcode;
  fishSpotId: number;
  targetUid: number;
}

export enum ChatworldFishLikeRsp_CmdId {
  CMD_ID = 2440,
  UNRECOGNIZED = -1,
}

export enum ChatworldFishLikeRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  CURRENCY_LIMIT = 2,
  UNRECOGNIZED = -1,
}

export interface ChatworldFishRewardNotify {
  rewardSrc: FishRewardSrc;
  fishId: number;
  addCurrencyNum: number;
  curDailyGetCurrencyNum: number;
  extraRewardData: RewardData | undefined;
}

export enum ChatworldFishRewardNotify_CmdId {
  CMD_ID = 2441,
  UNRECOGNIZED = -1,
}

export interface ChatworldFishSpot {
  fishSpotId: number;
  fisherList: ChatworldFisher[];
}

export interface ChatworldFishStartReq {
  fishSpotId: number;
}

export enum ChatworldFishStartReq_CmdId {
  CMD_ID = 2433,
  UNRECOGNIZED = -1,
}

export interface ChatworldFishStartRsp {
  retcode: ChatworldFishStartRsp_Retcode;
  fishSpotId: number;
}

export enum ChatworldFishStartRsp_CmdId {
  CMD_ID = 2434,
  UNRECOGNIZED = -1,
}

export enum ChatworldFishStartRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  CURRENCY_LIMIT = 2,
  UNRECOGNIZED = -1,
}

export interface ChatworldGetActivityScheduleReq {
  sceneId: number;
}

export enum ChatworldGetActivityScheduleReq_CmdId {
  CMD_ID = 2427,
  UNRECOGNIZED = -1,
}

export interface ChatworldGetActivityScheduleRsp {
  retcode: ChatworldGetActivityScheduleRsp_Retcode;
  sceneId: number;
  scheduleList: ChatworldActivitySchedule[];
}

export enum ChatworldGetActivityScheduleRsp_CmdId {
  CMD_ID = 2428,
  UNRECOGNIZED = -1,
}

export enum ChatworldGetActivityScheduleRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ChatworldGetDishInfoReq {
}

export enum ChatworldGetDishInfoReq_CmdId {
  CMD_ID = 2456,
  UNRECOGNIZED = -1,
}

export interface ChatworldGetDishInfoRsp {
  retcode: ChatworldGetDishInfoRsp_Retcode;
  scheduleId: number;
  isPrepareRewardTaken: boolean;
  dishRewardList: ChatworldDishReward[];
  takenDishLimitedRewardList: number[];
}

export enum ChatworldGetDishInfoRsp_CmdId {
  CMD_ID = 2457,
  UNRECOGNIZED = -1,
}

export enum ChatworldGetDishInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface ChatworldGetPrayInfoReq {
  sceneId: number;
}

export enum ChatworldGetPrayInfoReq_CmdId {
  CMD_ID = 2451,
  UNRECOGNIZED = -1,
}

export interface ChatworldGetPrayInfoRsp {
  retcode: ChatworldGetPrayInfoRsp_Retcode;
  prayId: number;
  isHasPrayed: boolean;
}

export enum ChatworldGetPrayInfoRsp_CmdId {
  CMD_ID = 2452,
  UNRECOGNIZED = -1,
}

export enum ChatworldGetPrayInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface ChatworldGrantRewardNotify {
  activityType: number;
  activityId: number;
  rewardId: number;
  extraInt: number;
  rewardData: RewardData | undefined;
}

export enum ChatworldGrantRewardNotify_CmdId {
  CMD_ID = 2455,
  UNRECOGNIZED = -1,
}

export interface ChatworldInteractReq {
  interactMsg: ChatworldMsgInteract | undefined;
}

export enum ChatworldInteractReq_CmdId {
  CMD_ID = 2413,
  UNRECOGNIZED = -1,
}

export interface ChatworldInteractRsp {
  retcode: ChatworldInteractRsp_Retcode;
  interactMsg: ChatworldMsgInteract | undefined;
}

export enum ChatworldInteractRsp_CmdId {
  CMD_ID = 2414,
  UNRECOGNIZED = -1,
}

export enum ChatworldInteractRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_CHATWORLD = 3,
  HELD_BY_OTHER = 4,
  NOT_HOLD = 5,
  UNRECOGNIZED = -1,
}

export interface ChatworldItem {
  itemId: number;
  itemHp: number;
}

export interface ChatworldItemMsg {
  updateItemList: ChatworldItem[];
  deleteItemList: number[];
}

export interface ChatworldMsg {
  itemList: ChatworldMsgItem[];
  uid: number;
  timeMsU64: number;
  clientTime: number;
  isSystemMsg: boolean;
  checkResult: ChatMsgSensitiveCheckResult | undefined;
}

export interface ChatworldMsgAction {
  actionId: number;
  targetUid: number;
}

export interface ChatworldMsgInteract {
  interactType: ChatworldInteractType;
  targetNpcId: number;
}

export interface ChatworldMsgItem {
  type: ChatworldMsgItem_ChatworldMsgType;
  playerInfo: ChatworldEntity | undefined;
  msgInt: number;
  clientMsg: Buffer;
  normalMsg: ChatMsgItem | undefined;
  useItemMsg: ChatworldMsgUseItem | undefined;
  interactMsg: ChatworldMsgInteract | undefined;
  actionMsg: ChatworldMsgAction | undefined;
  redEnvelopeMsg: CommonChatworldRedEnvelopeMsg | undefined;
  chatworldTreasureMsg: ChatworldTreasureMsg | undefined;
  skillAttackMsg: ChatworldSkillAttackMsg | undefined;
  skillDamageMsg: ChatworldSkillDamageMsg | undefined;
  skillCancelMsg: ChatworldSkillCancelMsg | undefined;
  entityMsg: ChatworldEntityMsg | undefined;
  entityHpMsg: ChatworldEntityHp | undefined;
}

export enum ChatworldMsgItem_ChatworldMsgType {
  STR_MSG = 1,
  ENTER_CHATWORLD = 2,
  MOVE_IN_CHATWORLD = 3,
  LEAVE_CHATWORLD = 4,
  INT_MSG = 5,
  CLIENT_MSG = 6,
  NORMAL_MSG = 7,
  USE_ITEM = 8,
  CHANGE_AVATAR = 9,
  INTERACT_MSG = 10,
  ACTION_MSG = 11,
  SEND_RED_ENVELOPE = 12,
  RED_ENVELOPE_TAKEN_OVER = 13,
  TREASURE_MSG = 14,
  SKILL_ATTACK_MSG = 15,
  SKILL_DAMAGE_MSG = 16,
  PLAYER_REBORN_MSG = 17,
  BUFF_MSG = 18,
  SKILL_CANCEL_MSG = 20,
  PLAYER_BATTLE_MSG = 21,
  ENTITY_MSG = 23,
  ENTITY_HP_MSG = 24,
  UNRECOGNIZED = -1,
}

export interface ChatworldMsgMove {
  targetPosition: ChatworldPosition | undefined;
}

export interface ChatworldMsgUseItem {
  materialId: number;
  num: number;
  targetUidList: number[];
  msg: string;
  extraData: Buffer;
}

export interface ChatworldPlayerInfo {
  uid: number;
  nickname: string;
  avatarId: number;
  chatDressId: number;
  position: ChatworldPosition | undefined;
  chatAvatarId: number;
  chatFrameId: number;
  holdingList: number[];
  level: number;
  armadaName: string;
  mpLevel: number;
  onMedalId: number;
  actionId: number;
  chatworldRedEnvelopeList: CommonChatworldRedEnvelope[];
  isAllInfo: boolean;
  leftHp: number;
  nextRebornTime: number;
  buffList: ChatworldBuff[];
  runtimeTag: number;
  customHeadId: number;
  onMedal: Medal | undefined;
  battleInfo: ChatworldBattle | undefined;
}

export interface ChatworldPlayerScene {
  leftHp: number;
  score: number;
  lastLoginTime: number;
}

export interface ChatworldPosition {
  x: number;
  y: number;
  z: number;
  rotation: number;
  speed: number;
  timeMsU64: number;
  aimRotation: number;
}

export interface ChatworldPosResetNotify {
  resetPos: ChatworldPosition | undefined;
}

export enum ChatworldPosResetNotify_CmdId {
  CMD_ID = 2424,
  UNRECOGNIZED = -1,
}

export interface ChatworldPrayReq {
  sceneId: number;
}

export enum ChatworldPrayReq_CmdId {
  CMD_ID = 2453,
  UNRECOGNIZED = -1,
}

export interface ChatworldPrayRsp {
  retcode: ChatworldPrayRsp_Retcode;
  prayId: number;
  rewardData: RewardData | undefined;
}

export enum ChatworldPrayRsp_CmdId {
  CMD_ID = 2454,
  UNRECOGNIZED = -1,
}

export enum ChatworldPrayRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_CHATWORLD = 2,
  PRAYED = 3,
  NOT_OPEN = 4,
  UNRECOGNIZED = -1,
}

export interface ChatworldQuestion {
  activityId: number;
  questionId: number;
  status: ChatworldQuestionStatus;
  endTime: number;
  rightAnswerId: number;
}

export interface ChatworldSkillAttackMsg {
  skillUniqueIdList: number[];
  skillId: number;
  attackPos: ChatworldPosition | undefined;
}

export interface ChatworldSkillCancelMsg {
  skillUniqueId: number;
}

export interface ChatworldSkillDamageJudgeReq {
  skillUniqueId: number;
  hitUniqueIdList: number[];
  damagePos: ChatworldPosition | undefined;
}

export enum ChatworldSkillDamageJudgeReq_CmdId {
  CMD_ID = 2420,
  UNRECOGNIZED = -1,
}

export interface ChatworldSkillDamageJudgeRsp {
  retcode: ChatworldSkillDamageJudgeRsp_Retcode;
  damageMsg: ChatworldSkillDamageMsg | undefined;
  score: number;
}

export enum ChatworldSkillDamageJudgeRsp_CmdId {
  CMD_ID = 2421,
  UNRECOGNIZED = -1,
}

export enum ChatworldSkillDamageJudgeRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_CHATWORLD = 2,
  HIT_NOT_IN_CHATWORLD = 3,
  NO_ATTACK = 4,
  EXCEED_RANGE = 5,
  CAN_NOT_HIT = 6,
  INVALID_PATH = 7,
  DAMAGE_FREE = 8,
  NOT_ENEMY = 9,
  IS_DEAD = 10,
  UNRECOGNIZED = -1,
}

export interface ChatworldSkillDamageMsg {
  skillUniqueId: number;
  skillId: number;
  damagePos: ChatworldPosition | undefined;
  entityHpList: ChatworldEntityHp[];
}

export interface ChatworldStance {
  stanceId: number;
  position: ChatworldPosition | undefined;
  holdingStanceCampTag: number;
  camp1StanceProgress: number;
  camp2StanceProgress: number;
}

export interface ChatworldStanceMsg {
  stanceList: ChatworldStance[];
}

export interface ChatworldTakeDishRewardReq {
  rewardType: DishRewardType;
  rewardId: number;
}

export enum ChatworldTakeDishRewardReq_CmdId {
  CMD_ID = 2458,
  UNRECOGNIZED = -1,
}

export interface ChatworldTakeDishRewardRsp {
  retcode: ChatworldTakeDishRewardRsp_Retcode;
  rewardType: DishRewardType;
  rewardData: RewardData | undefined;
}

export enum ChatworldTakeDishRewardRsp_CmdId {
  CMD_ID = 2459,
  UNRECOGNIZED = -1,
}

export enum ChatworldTakeDishRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAVE_TAKEN = 2,
  NOT_OPEN = 3,
  NO_REWARD = 4,
  IN_CD_TIME = 5,
  UNRECOGNIZED = -1,
}

export interface ChatworldTreasure {
  chatworldId: number;
  treasureId: number;
  position: ChatworldPosition | undefined;
  isRewardTaken: boolean;
  openUidList: number[];
}

export interface ChatworldTreasureMsg {
  curTreasureScheduleId: number;
  newTreasureList: ChatworldTreasure[];
  updateTreasureList: ChatworldTreasure[];
  deleteTreasureList: ChatworldTreasure[];
}

export interface ChatworldTreasureRewardNotify {
  chatworldId: number;
  treasureId: number;
  dropItemList: DropItem[];
}

export enum ChatworldTreasureRewardNotify_CmdId {
  CMD_ID = 2419,
  UNRECOGNIZED = -1,
}

export interface ChatworldUseItemReq {
  useItemMsg: ChatworldMsgUseItem | undefined;
}

export enum ChatworldUseItemReq_CmdId {
  CMD_ID = 2407,
  UNRECOGNIZED = -1,
}

export interface ChatworldUseItemRsp {
  retcode: ChatworldUseItemRsp_Retcode;
  materialId: number;
  num: number;
  targetUidList: number[];
}

export enum ChatworldUseItemRsp_CmdId {
  CMD_ID = 2408,
  UNRECOGNIZED = -1,
}

export enum ChatworldUseItemRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ITEM_LACK = 2,
  SENSITIVE_WORD = 3,
  NOT_IN_CHATWORLD = 4,
  UNRECOGNIZED = -1,
}

export interface CheckDormLikesDropReq {
}

export enum CheckDormLikesDropReq_CmdId {
  CMD_ID = 1010,
  UNRECOGNIZED = -1,
}

export interface CheckDormLikesDropRsp {
  retcode: CheckDormLikesDropRsp_Retcode;
  hasLikesDrop: boolean;
  yesterdayBeLikedNum: number;
}

export enum CheckDormLikesDropRsp_CmdId {
  CMD_ID = 1011,
  UNRECOGNIZED = -1,
}

export enum CheckDormLikesDropRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LEVEL_LIMIT = 2,
  UNRECOGNIZED = -1,
}

export interface CheckExtraStoryLockedAvatarBindEquipReq {
}

export enum CheckExtraStoryLockedAvatarBindEquipReq_CmdId {
  CMD_ID = 1000,
  UNRECOGNIZED = -1,
}

export interface CheckExtraStoryLockedAvatarBindEquipRsp {
  retcode: CheckExtraStoryLockedAvatarBindEquipRsp_Retcode;
  needSwitch: boolean;
}

export enum CheckExtraStoryLockedAvatarBindEquipRsp_CmdId {
  CMD_ID = 1001,
  UNRECOGNIZED = -1,
}

export enum CheckExtraStoryLockedAvatarBindEquipRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface CheckRpgTaleStageTriggerReq {
  triggerList: number[];
  taleId: number;
}

export enum CheckRpgTaleStageTriggerReq_CmdId {
  CMD_ID = 2315,
  UNRECOGNIZED = -1,
}

export interface CheckRpgTaleStageTriggerRsp {
  retcode: CheckRpgTaleStageTriggerRsp_Retcode;
  showTriggerList: number[];
  taleId: number;
}

export enum CheckRpgTaleStageTriggerRsp_CmdId {
  CMD_ID = 2316,
  UNRECOGNIZED = -1,
}

export enum CheckRpgTaleStageTriggerRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ChooseAvatarMissionAvatarReq {
  sampleId: number;
}

export enum ChooseAvatarMissionAvatarReq_CmdId {
  CMD_ID = 3002,
  UNRECOGNIZED = -1,
}

export interface ChooseAvatarMissionAvatarRsp {
  retcode: ChooseAvatarMissionAvatarRsp_Retcode;
  activityId: number;
  sampleId: number;
}

export enum ChooseAvatarMissionAvatarRsp_CmdId {
  CMD_ID = 3003,
  UNRECOGNIZED = -1,
}

export enum ChooseAvatarMissionAvatarRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  HAVE_CHOOSEN = 3,
  UNRECOGNIZED = -1,
}

export interface ChooseBossRushBuffReq {
  activityId: number;
  poolId: number;
  buffId: number;
}

export enum ChooseBossRushBuffReq_CmdId {
  CMD_ID = 498,
  UNRECOGNIZED = -1,
}

export interface ChooseBossRushBuffRsp {
  retcode: ChooseBossRushBuffRsp_Retcode;
  activityId: number;
  poolId: number;
  buffId: number;
}

export enum ChooseBossRushBuffRsp_CmdId {
  CMD_ID = 499,
  UNRECOGNIZED = -1,
}

export enum ChooseBossRushBuffRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_OPEN = 2,
  ACTIVITY_ERROR = 3,
  POOL_ID_ERROR = 4,
  BUFF_ID_ERROR = 5,
  TIME_LIMIT = 6,
  UNRECOGNIZED = -1,
}

export interface ChooseConsignedOrderReq {
  index: number;
  choosenOrder: ConsignedOrder | undefined;
}

export enum ChooseConsignedOrderReq_CmdId {
  CMD_ID = 2641,
  UNRECOGNIZED = -1,
}

export interface ChooseConsignedOrderRsp {
  retcode: ChooseConsignedOrderRsp_Retcode;
  choosenOrder: ConsignedOrder | undefined;
}

export enum ChooseConsignedOrderRsp_CmdId {
  CMD_ID = 2642,
  UNRECOGNIZED = -1,
}

export enum ChooseConsignedOrderRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  STATUS_ERROR = 3,
  INDEX_ERROR = 4,
  TIMES_LIMIT = 5,
  UNRECOGNIZED = -1,
}

export interface ChooseConsignedRewardReq {
  optionalRewardList: number[];
}

export enum ChooseConsignedRewardReq_CmdId {
  CMD_ID = 521,
  UNRECOGNIZED = -1,
}

export interface ChooseConsignedRewardRsp {
  retcode: ChooseConsignedRewardRsp_Retcode;
  optionalRewardList: number[];
}

export enum ChooseConsignedRewardRsp_CmdId {
  CMD_ID = 522,
  UNRECOGNIZED = -1,
}

export enum ChooseConsignedRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  ITEM_NOT_EXIST = 3,
  UNRECOGNIZED = -1,
}

export interface ChooseReclaimGachaReq {
  itemId: number;
}

export enum ChooseReclaimGachaReq_CmdId {
  CMD_ID = 1179,
  UNRECOGNIZED = -1,
}

export interface ChooseReclaimGachaRsp {
  retcode: ChooseReclaimGachaRsp_Retcode;
  itemId: number;
}

export enum ChooseReclaimGachaRsp_CmdId {
  CMD_ID = 1180,
  UNRECOGNIZED = -1,
}

export enum ChooseReclaimGachaRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_CANDIDATE = 2,
  ITEM_ERROR = 3,
  UNRECOGNIZED = -1,
}

export interface ChooseStageBuffReq {
  activityBuffId: number;
  buffIdList: number[];
}

export enum ChooseStageBuffReq_CmdId {
  CMD_ID = 1530,
  UNRECOGNIZED = -1,
}

export interface ChooseStageBuffRsp {
  retcode: ChooseStageBuffRsp_Retcode;
  activityBuffId: number;
}

export enum ChooseStageBuffRsp_CmdId {
  CMD_ID = 1531,
  UNRECOGNIZED = -1,
}

export enum ChooseStageBuffRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ChooseVirtualDefaultAvatarNotify {
  groupId: number;
  candidateAvatarList: number[];
}

export enum ChooseVirtualDefaultAvatarNotify_CmdId {
  CMD_ID = 3516,
  UNRECOGNIZED = -1,
}

export interface ChooseVirtualTrainGachaItemReq {
  groupId: number;
  itemId: number;
}

export enum ChooseVirtualTrainGachaItemReq_CmdId {
  CMD_ID = 3514,
  UNRECOGNIZED = -1,
}

export interface ChooseVirtualTrainGachaItemRsp {
  retcode: ChooseVirtualTrainGachaItemRsp_Retcode;
  groupId: number;
  itemId: number;
}

export enum ChooseVirtualTrainGachaItemRsp_CmdId {
  CMD_ID = 3515,
  UNRECOGNIZED = -1,
}

export enum ChooseVirtualTrainGachaItemRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_CANDIDATE = 2,
  ITEM_ERROR = 3,
  UNRECOGNIZED = -1,
}

export interface CityActivityAffinityDropInfo {
  maxDailyAffinityDropInStage: number;
  todayAffinityDropInStage: number;
}

export interface CityActivityEvent {
  siteId: number;
  eventIdList: number[];
}

export interface CityActivityPhoneEvent {
  roleId: number;
  phoneEventId: number;
  status: PhoneEventStatus;
}

export interface CityActivityRole {
  roleId: number;
  affinity: number;
  affinityLevel: number;
  isLikeTypeGiftReceived: boolean;
  isFavouriteGiftReceived: boolean;
}

export interface CityActivitySite {
  siteId: number;
  siteBeginTime: number;
  siteEndTime: number;
  activityScheduleId: number;
  activityBeginTime: number;
  activityEndTime: number;
}

export interface ClaimScoinReq {
}

export enum ClaimScoinReq_CmdId {
  CMD_ID = 3910,
  UNRECOGNIZED = -1,
}

export interface ClaimScoinRsp {
  retcode: ClaimScoinRsp_Retcode;
  addScoin: number;
  isExtra: boolean;
}

export enum ClaimScoinRsp_CmdId {
  CMD_ID = 3911,
  UNRECOGNIZED = -1,
}

export enum ClaimScoinRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SCOIN_FULL = 2,
  UNRECOGNIZED = -1,
}

export interface ClaimStaminaReq {
  stamina: number;
}

export enum ClaimStaminaReq_CmdId {
  CMD_ID = 649,
  UNRECOGNIZED = -1,
}

export interface ClaimStaminaRsp {
  retcode: ClaimStaminaRsp_Retcode;
  stamina: number;
}

export enum ClaimStaminaRsp_CmdId {
  CMD_ID = 650,
  UNRECOGNIZED = -1,
}

export enum ClaimStaminaRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  FACILITY_LOCK = 2,
  STORE_LACK = 3,
  POWER_LACK = 4,
  STAMINA_EXCEED = 5,
  UNRECOGNIZED = -1,
}

export interface ClearStageActivity {
  beginTime: number;
  endTime: number;
  stageId: number;
  rewardId: number;
}

export interface ClientCheckNetworkEnvReq {
  tokenStr: string;
}

export enum ClientCheckNetworkEnvReq_CmdId {
  CMD_ID = 1626,
  UNRECOGNIZED = -1,
}

export interface ClientCheckNetworkEnvRsp {
  retcode: ClientCheckNetworkEnvRsp_Retcode;
  tokenStr: string;
}

export enum ClientCheckNetworkEnvRsp_CmdId {
  CMD_ID = 1627,
  UNRECOGNIZED = -1,
}

export enum ClientCheckNetworkEnvRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ClientData {
  type: ClientDataType;
  id: number;
  data: Buffer;
}

export interface ClientMail {
  key: ClientMailKey | undefined;
  title: string;
  content: string;
  sender: string;
  time: number;
  attachment: MailAttachment | undefined;
  isAttachmentGot: boolean;
  expireTime: number;
  contentParamList: string[];
  templateId: number;
  isRead: boolean;
  mailStyle: number;
  imgPath: string;
}

export interface ClientMailAttachmentItem {
  key: ClientMailKey | undefined;
  itemId: number;
}

export interface ClientMailInfo {
  totalNum: number;
  canFastDeleteNum: number;
  mailStyleInfoList: ClientMailStyleInfo[];
}

export interface ClientMailKey {
  type: ClientMailType;
  id: number;
}

export interface ClientMailStyleInfo {
  mailStyle: number;
  untakenNum: number;
}

export interface ClientReportBinReq {
  reportType: ClientReportBinType;
  reportBinList: Buffer[];
}

export enum ClientReportBinReq_CmdId {
  CMD_ID = 5012,
  UNRECOGNIZED = -1,
}

export interface ClientReportBinRsp {
  retcode: ClientReportBinRsp_Retcode;
}

export enum ClientReportBinRsp_CmdId {
  CMD_ID = 5013,
  UNRECOGNIZED = -1,
}

export enum ClientReportBinRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ClientReportReq {
  reportType: string;
  reportValue: string;
}

export enum ClientReportReq_CmdId {
  CMD_ID = 5008,
  UNRECOGNIZED = -1,
}

export interface ClientReportRsp {
  retcode: ClientReportRsp_Retcode;
}

export enum ClientReportRsp_CmdId {
  CMD_ID = 5009,
  UNRECOGNIZED = -1,
}

export enum ClientReportRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface CommandCDSwitchData {
  cmdId: number;
}

export interface CommentReportReq {
  comment: CommentType;
  times: number;
}

export enum CommentReportReq_CmdId {
  CMD_ID = 229,
  UNRECOGNIZED = -1,
}

export interface CommentReportRsp {
  retcode: CommentReportRsp_Retcode;
  nextEvaluateTime: number;
}

export enum CommentReportRsp_CmdId {
  CMD_ID = 230,
  UNRECOGNIZED = -1,
}

export enum CommentReportRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface CommonCdCheckNotify {
  endTime: number;
}

export enum CommonCdCheckNotify_CmdId {
  CMD_ID = 5003,
  UNRECOGNIZED = -1,
}

export interface CommonChatworldRedEnvelope {
  redEnvelopeId: number;
  expireTime: number;
  senderUid: number;
  itemId: number;
}

export interface CommonChatworldRedEnvelopeMsg {
  senderUid: number;
  channel: number;
  isSenderNpc: boolean;
  chatworldRedEnvelope: CommonChatworldRedEnvelope | undefined;
  msg: string;
}

export interface ConfirmRecommendGoodsReq {
  recommendId: number;
}

export enum ConfirmRecommendGoodsReq_CmdId {
  CMD_ID = 1539,
  UNRECOGNIZED = -1,
}

export interface ConfirmRecommendGoodsRsp {
  retcode: ConfirmRecommendGoodsRsp_Retcode;
  recommendId: number;
}

export enum ConfirmRecommendGoodsRsp_CmdId {
  CMD_ID = 1540,
  UNRECOGNIZED = -1,
}

export enum ConfirmRecommendGoodsRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ConsignedOrder {
  id: number;
  consignerUid: number;
  rewardId: number;
  progress: number;
  uniqueId: number;
  orderLevel: number;
  rewardList: RewardData[];
  dropItemList: DropItem[];
  orderCredit: number;
}

export interface ConsignedRewardLog {
  uid: number;
  rewardList: RewardData[];
  credit: number;
}

export interface ControllableBoxGachaItem {
  dropId: number;
  itemId: number;
  itemLevel: number;
  itemNum: number;
  isShining: boolean;
  isCore: boolean;
  displaySettingDict: SettingDict | undefined;
}

export interface ControllableBoxGachaItemData {
  itemList: ControllableBoxGachaItem[];
  hasGotItemList: number[];
}

export interface ControllableBoxGachaSelectableGroup {
  groupId: number;
  selectDropId: number;
  dropIdList: number[];
}

export interface CoupleTowerActivity {
  maxFloor: number;
  floorScoreList: CoupleTowerScore[];
  isSettled: boolean;
}

export interface CoupleTowerActivityFinishFloorReq {
  stageId: number;
  floor: number;
  score: number;
  cheatDataList: StageCheatData[];
}

export enum CoupleTowerActivityFinishFloorReq_CmdId {
  CMD_ID = 1371,
  UNRECOGNIZED = -1,
}

export interface CoupleTowerActivityFinishFloorRsp {
  retcode: CoupleTowerActivityFinishFloorRsp_Retcode;
}

export enum CoupleTowerActivityFinishFloorRsp_CmdId {
  CMD_ID = 1372,
  UNRECOGNIZED = -1,
}

export enum CoupleTowerActivityFinishFloorRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  JUMP_FLOOR = 2,
  UNRECOGNIZED = -1,
}

export interface CoupleTowerScore {
  floor: number;
  score: number;
}

export interface CreateAlipayOrderReq {
  productName: string;
  totalFee: string;
  notifyUrl: string;
  body: string;
  tradeType: CreateAlipayOrderReq_TradeType;
}

export enum CreateAlipayOrderReq_CmdId {
  CMD_ID = 1494,
  UNRECOGNIZED = -1,
}

export enum CreateAlipayOrderReq_TradeType {
  NONE = 0,
  APP = 1,
  QR_CODE = 2,
  HUA_BEI = 3,
  UNRECOGNIZED = -1,
}

export interface CreateAlipayOrderRsp {
  retcode: CreateAlipayOrderRsp_Retcode;
  qrCodeUrl: string;
  productName: string;
  orderString: string;
}

export enum CreateAlipayOrderRsp_CmdId {
  CMD_ID = 1495,
  UNRECOGNIZED = -1,
}

export enum CreateAlipayOrderRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface CreateArmadaReq {
  name: string;
  label: ArmadaLabel | undefined;
}

export enum CreateArmadaReq_CmdId {
  CMD_ID = 2603,
  UNRECOGNIZED = -1,
}

export interface CreateArmadaRsp {
  retcode: CreateArmadaRsp_Retcode;
  armadaId: number;
  armadaName: string;
  auditArmadaName: string;
}

export enum CreateArmadaRsp_CmdId {
  CMD_ID = 2604,
  UNRECOGNIZED = -1,
}

export enum CreateArmadaRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LEVEL_LACK = 2,
  SCOIN_LACK = 3,
  HCOIN_LACK = 4,
  IN_ARMADA = 5,
  IN_APPLYING = 6,
  NAME_REPEAT = 7,
  NAME_FORMAT_ERROR = 8,
  NAME_SENSITIVE_WORDS = 9,
  IN_CD_TIME = 10,
  ACCOUNT_NONE = 11,
  IN_LOW_POPL_CD_TIME = 12,
  LABEL_ERROR = 13,
  IN_AUDIT = 14,
  UNRECOGNIZED = -1,
}

export interface CreateChatgroupReq {
  name: string;
  notice: string;
  iconId: number;
  labelIdList: number[];
}

export enum CreateChatgroupReq_CmdId {
  CMD_ID = 2200,
  UNRECOGNIZED = -1,
}

export interface CreateChatgroupRsp {
  retcode: CreateChatgroupRsp_Retcode;
  chatgroup: Chatgroup | undefined;
  auditName: string;
  auditNotice: string;
}

export enum CreateChatgroupRsp_CmdId {
  CMD_ID = 2201,
  UNRECOGNIZED = -1,
}

export enum CreateChatgroupRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  CREATE_MAX = 2,
  JOIN_MAX = 3,
  SENSITIVE_WORD = 4,
  LEVEL_LACK = 5,
  LABEL_ERROR = 6,
  NAME_FORMAT_ERROR = 7,
  NOTICE_FORMAT_ERROR = 8,
  FEATURE_LIMIT = 9,
  IN_AUDIT = 10,
  UNRECOGNIZED = -1,
}

export interface CreateLobbyReq {
  stageId: number;
  minLevel: number;
  lobbyEnterType: LobbyEnterType;
  maxPlayerNum: number;
  cabinAttr: CabinTechAddAttr[];
  clientRtt: number;
  member: MpTeamMember | undefined;
  avatarTrialList: number[];
  isAllowCrossRegion: boolean;
  teamName: string;
  teamDescription: string;
  isTeamNameDefault: boolean;
  maxLevel: number;
}

export enum CreateLobbyReq_CmdId {
  CMD_ID = 301,
  UNRECOGNIZED = -1,
}

export interface CreateLobbyRsp {
  retcode: CreateLobbyRsp_Retcode;
  subRetcode: number;
  lobbyId: number;
  stageId: number;
  minLevel: number;
  lobbyEnterType: LobbyEnterType;
  maxLevel: number;
}

export enum CreateLobbyRsp_CmdId {
  CMD_ID = 302,
  UNRECOGNIZED = -1,
}

export enum CreateLobbyRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  STAGE_ERROR = 2,
  SERVER_BUSY = 3,
  BAD_NETWORK = 4,
  CLIENT_VERSION_ERROR = 5,
  NOT_ALLOWED = 6,
  NO_AVAILABLE_AVATAR = 7,
  TEAM_NAME_ERROR = 8,
  IN_SQUAD = 9,
  IN_SQUAD_MATCH = 10,
  IN_ROOM = 12,
  FEATURE_LIMIT = 13,
  MEMBER_LIMIT = 14,
  DEFAULT_TEAM_NAME_ERROR = 15,
  UNRECOGNIZED = -1,
}

export interface CreateRoomReq {
  roomMode: RoomMode;
  memberData: RoomMember | undefined;
  roomInfo: RoomInfo | undefined;
}

export enum CreateRoomReq_CmdId {
  CMD_ID = 3153,
  UNRECOGNIZED = -1,
}

export interface CreateRoomRsp {
  retcode: CreateRoomRsp_Retcode;
}

export enum CreateRoomRsp_CmdId {
  CMD_ID = 3154,
  UNRECOGNIZED = -1,
}

export enum CreateRoomRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SERVER_BUSY = 2,
  IS_IN_ROOM = 3,
  NO_SCHEDULE = 4,
  IS_IN_BATTLE = 5,
  TOO_FREQUENT = 6,
  PLAYER_LEVEL_LACK = 7,
  ALREADY_IN_MP = 8,
  EQUIPMENT_FULL = 9,
  EQUIPMENT_MATERIAL_LIMIT = 10,
  EQUIPMENT_FRAGMENT_LIMIT = 11,
  FEATURE_LIMIT = 12,
  TIMES_LACK = 13,
  STAGE_NOT_IN_SCHEDULE = 14,
  PUNISHED = 15,
  UNRECOGNIZED = -1,
}

export interface CreateSteamOrderReq {
  productName: string;
  productDesc: string;
  accountId: string;
  orderId: number;
}

export enum CreateSteamOrderReq_CmdId {
  CMD_ID = 1648,
  UNRECOGNIZED = -1,
}

export interface CreateSteamOrderRsp {
  retcode: CreateSteamOrderRsp_Retcode;
}

export enum CreateSteamOrderRsp_CmdId {
  CMD_ID = 1649,
  UNRECOGNIZED = -1,
}

export enum CreateSteamOrderRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface CreateWeiXinOrderReq {
  body: string;
  attach: string;
  totalFee: string;
  notifyUrl: string;
  tradeType: CreateWeiXinOrderReq_TradeType;
}

export enum CreateWeiXinOrderReq_CmdId {
  CMD_ID = 207,
  UNRECOGNIZED = -1,
}

export enum CreateWeiXinOrderReq_TradeType {
  NONE = 0,
  APP = 1,
  NATIVE = 2,
  UNRECOGNIZED = -1,
}

export interface CreateWeiXinOrderRsp {
  retcode: CreateWeiXinOrderRsp_Retcode;
  prepayId: string;
  partnerId: string;
  nonceStr: string;
  timestamp: string;
  sign: string;
  qrCodeUrl: string;
}

export enum CreateWeiXinOrderRsp_CmdId {
  CMD_ID = 208,
  UNRECOGNIZED = -1,
}

export enum CreateWeiXinOrderRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface CreditAccount {
  id: number;
  score: number;
}

export interface CreditAccountGetReq {
  id: number;
}

export enum CreditAccountGetReq_CmdId {
  CMD_ID = 6002,
  UNRECOGNIZED = -1,
}

export interface CreditAccountGetRsp {
  retcode: CreditAccountGetRsp_Retcode;
  account: CreditAccount | undefined;
}

export enum CreditAccountGetRsp_CmdId {
  CMD_ID = 6003,
  UNRECOGNIZED = -1,
}

export enum CreditAccountGetRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface CreditReportDataReq {
  type: CreditType;
  cheatDataList: StageCheatData[];
}

export enum CreditReportDataReq_CmdId {
  CMD_ID = 6000,
  UNRECOGNIZED = -1,
}

export interface CreditReportDataRsp {
  retcode: CreditReportDataRsp_Retcode;
}

export enum CreditReportDataRsp_CmdId {
  CMD_ID = 6001,
  UNRECOGNIZED = -1,
}

export enum CreditReportDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface CrisisModeActivity {
  stageGroupScheduleList: GeneralActivityStageGroupScheduleInfo[];
  stageRewardTakenList: number[];
}

export interface CrisisModeActivityTakeStageRewardReq {
  activityId: number;
  stageId: number;
}

export enum CrisisModeActivityTakeStageRewardReq_CmdId {
  CMD_ID = 4056,
  UNRECOGNIZED = -1,
}

export interface CrisisModeActivityTakeStageRewardRsp {
  retcode: CrisisModeActivityTakeStageRewardRsp_Retcode;
  activityId: number;
  stageId: number;
  rewardData: RewardData | undefined;
}

export enum CrisisModeActivityTakeStageRewardRsp_CmdId {
  CMD_ID = 4057,
  UNRECOGNIZED = -1,
}

export enum CrisisModeActivityTakeStageRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKEN = 2,
  UNRECOGNIZED = -1,
}

export interface CurRpgTaleStage {
  stageId: number;
  curFloor: number;
  avatarList: number[];
  clientData: string;
}

export interface CustomAvatarTeam {
  teamId: number;
  name: string;
  avatarIdList: number[];
  elfIdList: number[];
}

export enum CustomAvatarTeam_Enum {
  MIN_TEAM_ID = 1,
  MAX_TEAM_ID = 10,
  MAX_NAME_LEN = 24,
  UNRECOGNIZED = -1,
}

export interface CustomGachaData {
  ticketHcoinCost: number;
  ticketMaterialId: number;
  costMaterialId: number;
  costMaterialNum: number;
  isEnableBaodi: boolean;
  gachaType: GachaType;
  totalGachaTimes: number;
  gachaTimes: number;
  itemList: CustomGachaItemData[];
  displayMaxTimes: number;
  noProtectGachaTimes: number;
  protectDisplayType: CustomGachaData_ProtectDisplayType;
  displayKeyAvatar: number;
  displayVideoAvatar: number;
  dropedUpItemList: number[];
  shiningType: number;
  gachaPanelType: number;
  displayKeyItemList: number[];
  displayExtraPara: string;
  exId: number;
  exEnergy: number;
  exGachaNum: number;
  gachaExRewardInfo: GachaExRewardInfo | undefined;
  protectDisplayInfo: GachaProtectDisplayInfo | undefined;
}

export enum CustomGachaData_ProtectDisplayType {
  NO_DISPLAY = 0,
  AVATAR_DISPLAY = 1,
  EQUIP_DISPLAY = 2,
  UNRECOGNIZED = -1,
}

export interface CustomGachaItemData {
  id: number;
  totalNum: number;
  gachaNum: number;
}

export interface CustomHead {
  id: number;
  endTime: number;
}

export interface DanmakuBlacklistNotify {
  blacklistExpireTime: number;
}

export enum DanmakuBlacklistNotify_CmdId {
  CMD_ID = 1551,
  UNRECOGNIZED = -1,
}

export interface DanmakuContent {
  danmakuId: string;
  senderUid: number;
  nickname: string;
  sendTime: number;
  content: string;
  kingdomId: number;
}

export interface DanmakuSlotBriefInfo {
  danmakuSlot: number;
  danmakuSlotStatus: number;
  danmakuNum: number;
}

export interface DanmakuSwitchData {
}

export interface DealArmadaApplyReq {
  targetUid: number;
  agree: boolean;
}

export enum DealArmadaApplyReq_CmdId {
  CMD_ID = 2609,
  UNRECOGNIZED = -1,
}

export interface DealArmadaApplyRsp {
  retcode: DealArmadaApplyRsp_Retcode;
  targetUid: number;
  agree: boolean;
}

export enum DealArmadaApplyRsp_CmdId {
  CMD_ID = 2610,
  UNRECOGNIZED = -1,
}

export enum DealArmadaApplyRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  NOT_GRANTED = 3,
  NOT_TARGET = 4,
  ARMADA_FULL = 5,
  UNRECOGNIZED = -1,
}

export interface DealChatgroupInviteReq {
  chatgroupId: number;
  action: DealChatgroupInviteReq_InviteAction;
}

export enum DealChatgroupInviteReq_CmdId {
  CMD_ID = 2214,
  UNRECOGNIZED = -1,
}

export enum DealChatgroupInviteReq_InviteAction {
  INVITE_NONE = 0,
  INVITE_AGREE = 1,
  INVITE_REJECT = 2,
  UNRECOGNIZED = -1,
}

export interface DealChatgroupInviteRsp {
  retcode: DealChatgroupInviteRsp_Retcode;
  chatgroupId: number;
}

export enum DealChatgroupInviteRsp_CmdId {
  CMD_ID = 2215,
  UNRECOGNIZED = -1,
}

export enum DealChatgroupInviteRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  INVITE_NOT_EXIST = 2,
  ALREADY_IN = 3,
  JOIN_MAX = 4,
  CHATGROUP_FULL = 5,
  UNRECOGNIZED = -1,
}

export interface DealMasterPupilReq {
  uid: number;
  op: MasterPupilOpType;
  type: MasterPupilType;
  time: number;
  nickname: string;
}

export enum DealMasterPupilReq_CmdId {
  CMD_ID = 572,
  UNRECOGNIZED = -1,
}

export interface DealMasterPupilRsp {
  retcode: MasterPupilRetcode_Retcode;
  uid: number;
  op: MasterPupilOpType;
  type: MasterPupilType;
}

export enum DealMasterPupilRsp_CmdId {
  CMD_ID = 573,
  UNRECOGNIZED = -1,
}

export interface DebugHotPatchFileNotify {
  fileUrl: string;
}

export enum DebugHotPatchFileNotify_CmdId {
  CMD_ID = 1600,
  UNRECOGNIZED = -1,
}

export interface DelAvatarEquipSuiteReq {
  avatarId: number;
  suiteId: number;
}

export enum DelAvatarEquipSuiteReq_CmdId {
  CMD_ID = 1620,
  UNRECOGNIZED = -1,
}

export interface DelAvatarEquipSuiteRsp {
  retcode: DelAvatarEquipSuiteRsp_Retcode;
  avatarId: number;
  suiteId: number;
}

export enum DelAvatarEquipSuiteRsp_CmdId {
  CMD_ID = 1621,
  UNRECOGNIZED = -1,
}

export enum DelAvatarEquipSuiteRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_LOCK = 2,
  SUITE_NOT_EXIST = 3,
  SUITE_ID_LIMIT = 4,
  UNRECOGNIZED = -1,
}

export interface DelClientMailReq {
  mailKey: ClientMailKey | undefined;
  isOneClickDelete: boolean;
}

export enum DelClientMailReq_CmdId {
  CMD_ID = 3806,
  UNRECOGNIZED = -1,
}

export interface DelClientMailRsp {
  retcode: DelClientMailRsp_Retcode;
  mailKey: ClientMailKey | undefined;
  isOneClickDelete: boolean;
}

export enum DelClientMailRsp_CmdId {
  CMD_ID = 3807,
  UNRECOGNIZED = -1,
}

export enum DelClientMailRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MAIL_NOT_EXIST = 2,
  MAIL_NOT_DELETE = 3,
  UNRECOGNIZED = -1,
}

export interface DelEquipmentNotify {
  weaponUniqueIdList: number[];
  stigmataUniqueIdList: number[];
  mechaUniqueIdList: number[];
}

export enum DelEquipmentNotify_CmdId {
  CMD_ID = 28,
  UNRECOGNIZED = -1,
}

export interface DelFriendNotify {
  targetUid: number;
}

export enum DelFriendNotify_CmdId {
  CMD_ID = 80,
  UNRECOGNIZED = -1,
}

export interface DelFriendReq {
  targetUid: number;
}

export enum DelFriendReq_CmdId {
  CMD_ID = 68,
  UNRECOGNIZED = -1,
}

export interface DelFriendRsp {
  retcode: DelFriendRsp_Retcode;
  targetUid: number;
}

export enum DelFriendRsp_CmdId {
  CMD_ID = 69,
  UNRECOGNIZED = -1,
}

export enum DelFriendRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  TARGET_NOT_FRIEND = 2,
  REDIS_MULTI_ERROR = 3,
  MASTER_PUPIL = 4,
  UNRECOGNIZED = -1,
}

export interface DelFromBlackListReq {
  targetUid: number;
}

export enum DelFromBlackListReq_CmdId {
  CMD_ID = 1598,
  UNRECOGNIZED = -1,
}

export interface DelFromBlackListRsp {
  retcode: DelFromBlackListRsp_Retcode;
  targetUid: number;
}

export enum DelFromBlackListRsp_CmdId {
  CMD_ID = 1599,
  UNRECOGNIZED = -1,
}

export enum DelFromBlackListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_LIST = 2,
  UNRECOGNIZED = -1,
}

export interface DeliverRestaurantQuestReq {
  activityId: number;
  questId: number;
}

export enum DeliverRestaurantQuestReq_CmdId {
  CMD_ID = 5870,
  UNRECOGNIZED = -1,
}

export interface DeliverRestaurantQuestRsp {
  retcode: DeliverRestaurantQuestRsp_Retcode;
  activityId: number;
  questId: number;
}

export enum DeliverRestaurantQuestRsp_CmdId {
  CMD_ID = 5871,
  UNRECOGNIZED = -1,
}

export enum DeliverRestaurantQuestRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MATERIAL_LACK = 2,
  UNRECOGNIZED = -1,
}

export interface DelMissionNotify {
  missionId: number;
}

export enum DelMissionNotify_CmdId {
  CMD_ID = 116,
  UNRECOGNIZED = -1,
}

export interface DelPlayerCardMsgReq {
  targetUid: number;
  indexList: number[];
}

export enum DelPlayerCardMsgReq_CmdId {
  CMD_ID = 489,
  UNRECOGNIZED = -1,
}

export interface DepotFurniture {
  id: number;
  num: number;
}

export interface DevLevelChangeNotify {
  devLevelMsg: string;
}

export enum DevLevelChangeNotify_CmdId {
  CMD_ID = 1619,
  UNRECOGNIZED = -1,
}

export interface DiceyDungeonActivity {
  activityId: number;
  roleList: DiceyDungeonRole[];
  weaponList: DiceyDungeonWeapon[];
  storyDiceyDungeonInfo: DiceyDungeonInfo | undefined;
  scheduleDiceyDungeonInfo: DiceyDungeonInfo | undefined;
  endlessDiceyDungeonInfo: DiceyDungeonInfo | undefined;
  passedEndlessDungeonRoomIdList: number[];
  curScheduleId: number;
  refreshOrnamentRandom: number;
  hasGotDailyMaterialList: DiceyDungeonHasGotDailyMaterial[];
}

export interface DiceyDungeonActivityDungeonBeginReq {
  taleId: number;
  activityId: number;
  dungeonInfo: DiceyDungeonInfo | undefined;
  dungeonType: DiceyDungeonType;
}

export enum DiceyDungeonActivityDungeonBeginReq_CmdId {
  CMD_ID = 6504,
  UNRECOGNIZED = -1,
}

export interface DiceyDungeonActivityDungeonBeginRsp {
  retcode: DiceyDungeonActivityDungeonBeginRsp_Retcode;
  activityId: number;
  dungeonId: number;
}

export enum DiceyDungeonActivityDungeonBeginRsp_CmdId {
  CMD_ID = 6505,
  UNRECOGNIZED = -1,
}

export enum DiceyDungeonActivityDungeonBeginRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_EXIST = 2,
  ROLE_NOT_EXIST = 3,
  WEAPON_NOT_EXIST = 4,
  ROLE_RESTRICT = 5,
  TICKET_LACK = 6,
  DUNGEON_TYPE_ERROR = 7,
  SCHEDULE_ERROR = 8,
  ORNAMENT_NUM_ERROR = 9,
  ORNAMENT_ERROR = 10,
  UNRECOGNIZED = -1,
}

export interface DiceyDungeonActivityDungeonEndReq {
  taleId: number;
  activityId: number;
  dungeonInfo: DiceyDungeonInfo | undefined;
  dungeonType: DiceyDungeonType;
}

export enum DiceyDungeonActivityDungeonEndReq_CmdId {
  CMD_ID = 6506,
  UNRECOGNIZED = -1,
}

export interface DiceyDungeonActivityDungeonEndRsp {
  retcode: DiceyDungeonActivityDungeonEndRsp_Retcode;
  activityId: number;
  dungeonId: number;
  status: DiceyDungeonActivityDungeonEndRsp_Status;
  rewardData: RewardData | undefined;
  totalDiceyBattleScore: number;
  dailyDropItemList: DropItem[];
}

export enum DiceyDungeonActivityDungeonEndRsp_CmdId {
  CMD_ID = 6507,
  UNRECOGNIZED = -1,
}

export enum DiceyDungeonActivityDungeonEndRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_EXIST = 2,
  DUNGEON_NOT_BEGIN = 3,
  ROLE_ERROR = 4,
  WEAPON_ERROR = 5,
  DUNGEON_ROOM_ERROR = 6,
  UNRECOGNIZED = -1,
}

export enum DiceyDungeonActivityDungeonEndRsp_Status {
  WIN = 0,
  LOSE = 1,
  ABANDON = 2,
  UNRECOGNIZED = -1,
}

export interface DiceyDungeonActivityGetDailyScoreRankReq {
  taleId: number;
  activityId: number;
  dungeonId: number;
}

export enum DiceyDungeonActivityGetDailyScoreRankReq_CmdId {
  CMD_ID = 6520,
  UNRECOGNIZED = -1,
}

export interface DiceyDungeonActivityGetDailyScoreRankRsp {
  retcode: DiceyDungeonActivityGetDailyScoreRankRsp_Retcode;
  activityId: number;
  dungeonId: number;
  rankData: RankShowData | undefined;
  rankPercent: number;
}

export enum DiceyDungeonActivityGetDailyScoreRankRsp_CmdId {
  CMD_ID = 6521,
  UNRECOGNIZED = -1,
}

export enum DiceyDungeonActivityGetDailyScoreRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_EXIST = 2,
  SCHEDULE_ERROR = 3,
  UNRECOGNIZED = -1,
}

export interface DiceyDungeonActivityGetDataReq {
  taleId: number;
  activityId: number;
}

export enum DiceyDungeonActivityGetDataReq_CmdId {
  CMD_ID = 6500,
  UNRECOGNIZED = -1,
}

export interface DiceyDungeonActivityGetDataRsp {
  retcode: DiceyDungeonActivityGetDataRsp_Retcode;
  dungeonActivity: DiceyDungeonActivity | undefined;
}

export enum DiceyDungeonActivityGetDataRsp_CmdId {
  CMD_ID = 6501,
  UNRECOGNIZED = -1,
}

export enum DiceyDungeonActivityGetDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_EXIST = 2,
  UNRECOGNIZED = -1,
}

export interface DiceyDungeonActivityGetWeaponGachaDisplayReq {
  taleId: number;
  activityId: number;
}

export enum DiceyDungeonActivityGetWeaponGachaDisplayReq_CmdId {
  CMD_ID = 6512,
  UNRECOGNIZED = -1,
}

export interface DiceyDungeonActivityGetWeaponGachaDisplayRsp {
  retcode: DiceyDungeonActivityGetWeaponGachaDisplayRsp_Retcode;
  validPoolIdList: number[];
  gachaRandom: number;
  activityId: number;
}

export enum DiceyDungeonActivityGetWeaponGachaDisplayRsp_CmdId {
  CMD_ID = 6513,
  UNRECOGNIZED = -1,
}

export enum DiceyDungeonActivityGetWeaponGachaDisplayRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_EXIST = 2,
  UNRECOGNIZED = -1,
}

export interface DiceyDungeonActivityRefreshOrnamentReq {
  taleId: number;
  activityId: number;
  refreshOrnamentRandom: number;
  dungeonInfo: DiceyDungeonInfo | undefined;
  dungeonType: DiceyDungeonType;
}

export enum DiceyDungeonActivityRefreshOrnamentReq_CmdId {
  CMD_ID = 6518,
  UNRECOGNIZED = -1,
}

export interface DiceyDungeonActivityRefreshOrnamentRsp {
  retcode: DiceyDungeonActivityRefreshOrnamentRsp_Retcode;
  activityId: number;
}

export enum DiceyDungeonActivityRefreshOrnamentRsp_CmdId {
  CMD_ID = 6519,
  UNRECOGNIZED = -1,
}

export enum DiceyDungeonActivityRefreshOrnamentRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_EXIST = 2,
  DUNGEON_NOT_BEGIN = 3,
  SELECT_ROOM_ERROR = 4,
  ROLE_ERROR = 5,
  WEAPON_ERROR = 6,
  DUNGEON_ROOM_ERROR = 7,
  REFRESH_TIMES_LACK = 8,
  CANNOT_REFRESH = 9,
  UNRECOGNIZED = -1,
}

export interface DiceyDungeonActivityRoleLevelUpReq {
  taleId: number;
  activityId: number;
  roleId: number;
}

export enum DiceyDungeonActivityRoleLevelUpReq_CmdId {
  CMD_ID = 6502,
  UNRECOGNIZED = -1,
}

export interface DiceyDungeonActivityRoleLevelUpRsp {
  retcode: DiceyDungeonActivityRoleLevelUpRsp_Retcode;
  activityId: number;
}

export enum DiceyDungeonActivityRoleLevelUpRsp_CmdId {
  CMD_ID = 6503,
  UNRECOGNIZED = -1,
}

export enum DiceyDungeonActivityRoleLevelUpRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_EXIST = 2,
  ROLE_NOT_EXIST = 3,
  MATERIAL_LACK = 4,
  SITE_LOCK = 5,
  UNRECOGNIZED = -1,
}

export interface DiceyDungeonActivityRoomBeginReq {
  taleId: number;
  activityId: number;
  selectDungeonRoomId: number;
  dungeonType: DiceyDungeonType;
  dungeonInfo: DiceyDungeonInfo | undefined;
}

export enum DiceyDungeonActivityRoomBeginReq_CmdId {
  CMD_ID = 6508,
  UNRECOGNIZED = -1,
}

export interface DiceyDungeonActivityRoomBeginRsp {
  retcode: DiceyDungeonActivityRoomBeginRsp_Retcode;
  activityId: number;
  dungeonId: number;
  dungeonRoomId: number;
}

export enum DiceyDungeonActivityRoomBeginRsp_CmdId {
  CMD_ID = 6509,
  UNRECOGNIZED = -1,
}

export enum DiceyDungeonActivityRoomBeginRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_EXIST = 2,
  DUNGEON_NOT_BEGIN = 3,
  SELECT_ROOM_ERROR = 4,
  ROLE_ERROR = 5,
  WEAPON_ERROR = 6,
  DUNGEON_ROOM_ERROR = 7,
  UNRECOGNIZED = -1,
}

export interface DiceyDungeonActivityRoomEndReq {
  taleId: number;
  activityId: number;
  dungeonInfo: DiceyDungeonInfo | undefined;
  status: DiceyDungeonActivityRoomEndReq_Status;
  dungeonType: DiceyDungeonType;
  battleTime: number;
  battleRound: number;
}

export enum DiceyDungeonActivityRoomEndReq_Status {
  WIN = 0,
  LOSE = 1,
  SKIP = 2,
  UNRECOGNIZED = -1,
}

export enum DiceyDungeonActivityRoomEndReq_CmdId {
  CMD_ID = 6510,
  UNRECOGNIZED = -1,
}

export interface DiceyDungeonActivityRoomEndRsp {
  retcode: DiceyDungeonActivityRoomEndRsp_Retcode;
  activityId: number;
  dungeonId: number;
  dungeonRoomId: number;
}

export enum DiceyDungeonActivityRoomEndRsp_CmdId {
  CMD_ID = 6511,
  UNRECOGNIZED = -1,
}

export enum DiceyDungeonActivityRoomEndRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_EXIST = 2,
  DUNGEON_NOT_BEGIN = 3,
  DUNGEON_ROOM_ERROR = 4,
  ROLE_ERROR = 5,
  WEAPON_ERROR = 6,
  CHECK_EVENT_FAIL = 7,
  UNRECOGNIZED = -1,
}

export interface DiceyDungeonActivitySelectOrnamentReq {
  taleId: number;
  activityId: number;
  selectOrnamentId: number;
  replaceOrnamentId: number;
  isAbandon: boolean;
  dungeonInfo: DiceyDungeonInfo | undefined;
  dungeonType: DiceyDungeonType;
}

export enum DiceyDungeonActivitySelectOrnamentReq_CmdId {
  CMD_ID = 6516,
  UNRECOGNIZED = -1,
}

export interface DiceyDungeonActivitySelectOrnamentRsp {
  retcode: DiceyDungeonActivitySelectOrnamentRsp_Retcode;
  activityId: number;
  isAbandon: boolean;
}

export enum DiceyDungeonActivitySelectOrnamentRsp_CmdId {
  CMD_ID = 6517,
  UNRECOGNIZED = -1,
}

export enum DiceyDungeonActivitySelectOrnamentRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_EXIST = 2,
  SELECT_ORNAMENT_ERROR = 3,
  REPLACE_ORNAMENT_ERROR = 4,
  DUNGEON_NOT_BEGIN = 5,
  DUNGEON_ROOM_ERROR = 6,
  ROLE_ERROR = 7,
  WEAPON_ERROR = 8,
  NO_REPLACE_ORNAMENT = 9,
  UNRECOGNIZED = -1,
}

export interface DiceyDungeonActivityWeaponGachaReq {
  taleId: number;
  activityId: number;
  gachaRandom: number;
}

export enum DiceyDungeonActivityWeaponGachaReq_CmdId {
  CMD_ID = 6514,
  UNRECOGNIZED = -1,
}

export interface DiceyDungeonActivityWeaponGachaRsp {
  retcode: DiceyDungeonActivityWeaponGachaRsp_Retcode;
  weaponId: number;
  isNew: boolean;
  gachaRandom: number;
  activityId: number;
}

export enum DiceyDungeonActivityWeaponGachaRsp_CmdId {
  CMD_ID = 6515,
  UNRECOGNIZED = -1,
}

export enum DiceyDungeonActivityWeaponGachaRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_EXIST = 2,
  MATERIAL_LACK = 3,
  ALL_WEAPON_GETTED = 4,
  UNRECOGNIZED = -1,
}

export interface DiceyDungeonHasGotDailyMaterial {
  materialId: number;
  num: number;
}

export interface DiceyDungeonInfo {
  dungeonId: number;
  floor: number;
  dungeonRoomId: number;
  role: DiceyDungeonRole | undefined;
  health: number;
  weapon: DiceyDungeonWeapon | undefined;
  passedRoomIdList: number[];
  ornamentList: DiceyDungeonOrnament[];
  waitSelectOrnamentIdList: number[];
  randomDiceyNumList: number[];
  leftRefreshOrnamentTimes: number;
  diceyBattleScore: number;
  totalDiceyBattleScore: number;
}

export interface DiceyDungeonOrnament {
  ornamentId: number;
  level: number;
}

export interface DiceyDungeonRole {
  roleId: number;
  level: number;
}

export interface DiceyDungeonWeapon {
  weaponId: number;
  level: number;
}

export interface DisjoinFurnitureReq {
  furnitureList: DepotFurniture[];
}

export enum DisjoinFurnitureReq_CmdId {
  CMD_ID = 1134,
  UNRECOGNIZED = -1,
}

export interface DisjoinFurnitureRsp {
  retcode: DisjoinFurnitureRsp_Retcode;
  materialList: Material[];
}

export enum DisjoinFurnitureRsp_CmdId {
  CMD_ID = 1135,
  UNRECOGNIZED = -1,
}

export enum DisjoinFurnitureRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  FURNITURE_LACK = 2,
  UNRECOGNIZED = -1,
}

export interface DissolveArmadaReq {
}

export enum DissolveArmadaReq_CmdId {
  CMD_ID = 2625,
  UNRECOGNIZED = -1,
}

export interface DissolveArmadaRsp {
  retcode: DissolveArmadaRsp_Retcode;
}

export enum DissolveArmadaRsp_CmdId {
  CMD_ID = 2626,
  UNRECOGNIZED = -1,
}

export enum DissolveArmadaRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_GRANTED = 2,
  NOT_IN_ARMADA = 3,
  IN_DISSOLVE = 4,
  IN_ARMADA_WAR = 5,
  UNRECOGNIZED = -1,
}

export interface DLCAvatar {
  avatarId: number;
  talentList: DLCAvatarTalent[];
  equipTalentList: number[];
}

export interface DLCAvatarReviveReq {
  costType: DLCAvatarReviveCostType;
  mapId: number;
  avatarId: number;
  dropItemList: DropItem[];
}

export enum DLCAvatarReviveReq_CmdId {
  CMD_ID = 3569,
  UNRECOGNIZED = -1,
}

export interface DLCAvatarReviveRsp {
  retcode: DLCAvatarReviveRsp_Retcode;
  reviveTimes: number;
  costType: DLCAvatarReviveCostType;
}

export enum DLCAvatarReviveRsp_CmdId {
  CMD_ID = 3570,
  UNRECOGNIZED = -1,
}

export enum DLCAvatarReviveRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MATERIAL_LACK = 2,
  TIMES_LACK = 3,
  NOT_IN_STAGE = 4,
  MAP_ERROR = 5,
  AVATAR_ERROR = 6,
  UNRECOGNIZED = -1,
}

export interface DLCAvatarTalent {
  talentId: number;
  level: number;
  affixSetId: number;
  waitSelectAffixSetId: number;
  isMask: boolean;
}

export interface DLCSupportNPC {
  npcId: number;
  supportPoint: number;
  supportLevel: number;
}

export interface DLCTowerAvatarInfo {
  avatarId: number;
  hpPercent: number;
  spPercent: number;
}

export interface DLCTowerFloorMaxScore {
  floor: number;
  maxScore: number;
}

export interface DLCTowerStageBeginReq {
  avatarIdList: number[];
}

export enum DLCTowerStageBeginReq_CmdId {
  CMD_ID = 3563,
  UNRECOGNIZED = -1,
}

export interface DLCTowerStageBeginRsp {
  retcode: DLCTowerStageBeginRsp_Retcode;
  progress: number;
}

export enum DLCTowerStageBeginRsp_CmdId {
  CMD_ID = 3564,
  UNRECOGNIZED = -1,
}

export enum DLCTowerStageBeginRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_BEGIN = 2,
  PROGRESS_FULL = 3,
  AVATAR_ERROR = 4,
  AVATAR_DIE = 5,
  UNRECOGNIZED = -1,
}

export interface DLCTowerStageEndReq {
  endStatus: StageEndStatus;
  avatarInfoList: DLCTowerAvatarInfo[];
  progress: number;
  stagePassTime: number;
  dropItemList: DropItem[];
}

export enum DLCTowerStageEndReq_CmdId {
  CMD_ID = 3565,
  UNRECOGNIZED = -1,
}

export interface DLCTowerStageEndRsp {
  retcode: DLCTowerStageEndRsp_Retcode;
  progress: number;
  rewardData: RewardData | undefined;
  endProgress: number;
  score: number;
  isNewRecord: boolean;
}

export enum DLCTowerStageEndRsp_CmdId {
  CMD_ID = 3566,
  UNRECOGNIZED = -1,
}

export enum DLCTowerStageEndRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  NOT_BEGIN = 3,
  PROGRESS_ERROR = 4,
  PRODUCE_NUM_ERROR = 5,
  AVATAR_ERROR = 6,
  UNRECOGNIZED = -1,
}

export interface DonateWareHouseItemReq {
  item: EquipmentItem | undefined;
  targetUid: number;
  demandId: number;
}

export enum DonateWareHouseItemReq_CmdId {
  CMD_ID = 2653,
  UNRECOGNIZED = -1,
}

export interface DonateWareHouseItemRsp {
  retcode: DonateWareHouseItemRsp_Retcode;
  item: EquipmentItem | undefined;
  demandId: number;
  rewardList: RewardData[];
}

export enum DonateWareHouseItemRsp_CmdId {
  CMD_ID = 2654,
  UNRECOGNIZED = -1,
}

export enum DonateWareHouseItemRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  TARGET_NOT_IN_ARMADA = 3,
  STATUS_ERROR = 4,
  CONSUME_ITEM_NOT_EXIST = 5,
  CONSUME_ITEM_IN_USE = 6,
  CONSUME_ITEM_REPEAT = 7,
  CONSUME_ITEM_PROTECTED = 8,
  COST_GACHA_TICKET = 9,
  COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 10,
  COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 11,
  DONATE_ITEM_LACK = 12,
  DONATE_TIMES_LACK = 13,
  CONSUME_ITEM_IN_FACILITY = 14,
  CONSUME_ITEM_GRAND_KEY = 15,
  CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 16,
  UNRECOGNIZED = -1,
}

export interface DonateWareHouseNotify {
}

export enum DonateWareHouseNotify_CmdId {
  CMD_ID = 2677,
  UNRECOGNIZED = -1,
}

export interface DormEvent {
  avatarId: number;
  eventIdList: number[];
}

export interface DormFacility {
  type: number;
  level: number;
  id: number;
  beginTime: number;
}

export interface DormFacilityData {
  facilityList: DormFacility[];
  levelUpFacilityType: number;
  levelUpEndTime: number;
  storeStamina: number;
  isCanStoreStamina: boolean;
  power: number;
  powerRecoverLeftTime: number;
  powerRecoverConfigTime: number;
  powerLimit: number;
  basePowerLimit: number;
  limitBonusList: DormPowerBonus[];
  powerRecovery: number;
  basePowerRecovery: number;
  bonusPowerRecovery: number;
}

export interface DormHouse {
  id: number;
  name: string;
  roomList: DormRoom[];
  level: number;
}

export interface DormPowerBonus {
  houseId: number;
  bonus: number;
}

export interface DormRoom {
  id: number;
  name: string;
  furnitureList: Furniture[];
  avatarList: number[];
}

export interface DormRoomAvatar {
  roomId: number;
  avatarList: number[];
}

export interface DormVisitRecord {
  visitTime: number;
  visitUid: number;
  visitAvatar: number;
  level: number;
  name: string;
}

export interface DrawRaffleTicketReq {
  raffleId: number;
}

export enum DrawRaffleTicketReq_CmdId {
  CMD_ID = 3896,
  UNRECOGNIZED = -1,
}

export interface DrawRaffleTicketRsp {
  retcode: DrawRaffleTicketRsp_Retcode;
  raffleId: number;
  ticket: number;
  drawIdx: number;
}

export enum DrawRaffleTicketRsp_CmdId {
  CMD_ID = 3897,
  UNRECOGNIZED = -1,
}

export enum DrawRaffleTicketRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 3,
  CANNOT_DRAW = 4,
  TIMES_LIMIT = 5,
  MATERIAL_NOT_ENOUGH = 6,
  TOO_FREQUENT = 7,
  UNRECOGNIZED = -1,
}

export interface Dream {
  dreamId: number;
  unlockId: number;
  isOpen: boolean;
  selectedDreamRewardId: number;
  score: number;
  isRewardTaken: boolean;
  exchangeScoreTimes: number;
}

export interface DreamActivity {
  activityId: number;
  dreamList: Dream[];
}

export interface DreamExchangeScoreReq {
  activityId: number;
  dreamId: number;
  num: number;
}

export enum DreamExchangeScoreReq_CmdId {
  CMD_ID = 5756,
  UNRECOGNIZED = -1,
}

export interface DreamExchangeScoreRsp {
  retcode: DreamExchangeScoreRsp_Retcode;
}

export enum DreamExchangeScoreRsp_CmdId {
  CMD_ID = 5757,
  UNRECOGNIZED = -1,
}

export enum DreamExchangeScoreRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_EXIST = 2,
  DREAM_NOT_EXIST = 3,
  TIMES_NOT_ENOUGH = 4,
  HCOIN_NOT_ENOUGH = 5,
  SCORE_FULL = 6,
  UNRECOGNIZED = -1,
}

export interface DreamGetActivityReq {
  activityId: number;
}

export enum DreamGetActivityReq_CmdId {
  CMD_ID = 5750,
  UNRECOGNIZED = -1,
}

export interface DreamGetActivityRsp {
  retcode: DreamGetActivityRsp_Retcode;
  activity: DreamActivity | undefined;
}

export enum DreamGetActivityRsp_CmdId {
  CMD_ID = 5751,
  UNRECOGNIZED = -1,
}

export enum DreamGetActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface DreamGiveUpDreamReq {
  activityId: number;
  dreamId: number;
}

export enum DreamGiveUpDreamReq_CmdId {
  CMD_ID = 5754,
  UNRECOGNIZED = -1,
}

export interface DreamGiveUpDreamRsp {
  retcode: DreamGiveUpDreamRsp_Retcode;
}

export enum DreamGiveUpDreamRsp_CmdId {
  CMD_ID = 5755,
  UNRECOGNIZED = -1,
}

export enum DreamGiveUpDreamRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_EXIST = 2,
  DREAM_NOT_EXIST = 3,
  UNRECOGNIZED = -1,
}

export interface DreamOpenDreamReq {
  activityId: number;
  dreamId: number;
  selectDreamRewardId: number;
}

export enum DreamOpenDreamReq_CmdId {
  CMD_ID = 5752,
  UNRECOGNIZED = -1,
}

export interface DreamOpenDreamRsp {
  retcode: DreamOpenDreamRsp_Retcode;
  unlockId: number;
}

export enum DreamOpenDreamRsp_CmdId {
  CMD_ID = 5753,
  UNRECOGNIZED = -1,
}

export enum DreamOpenDreamRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_EXIST = 2,
  DREAM_NOT_EXIST = 3,
  REWARD_NOT_EXIST = 4,
  HAS_OPEN_DREAM = 5,
  LOCKED = 6,
  REWARD_TAKEN = 7,
  UNRECOGNIZED = -1,
}

export interface DreamTakeRewardReq {
  activityId: number;
  dreamId: number;
}

export enum DreamTakeRewardReq_CmdId {
  CMD_ID = 5758,
  UNRECOGNIZED = -1,
}

export interface DreamTakeRewardRsp {
  retcode: DreamTakeRewardRsp_Retcode;
  rewardData: RewardData | undefined;
}

export enum DreamTakeRewardRsp_CmdId {
  CMD_ID = 5759,
  UNRECOGNIZED = -1,
}

export enum DreamTakeRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_EXIST = 2,
  DREAM_NOT_EXIST = 3,
  SCORE_NOT_ENOUGH = 4,
  REWARD_TAKEN = 5,
  UNRECOGNIZED = -1,
}

export interface DressEquipmentReq {
  avatarId: number;
  slot: EquipmentSlot;
  uniqueId: number;
}

export enum DressEquipmentReq_CmdId {
  CMD_ID = 39,
  UNRECOGNIZED = -1,
}

export interface DressEquipmentRsp {
  retcode: DressEquipmentRsp_Retcode;
}

export enum DressEquipmentRsp_CmdId {
  CMD_ID = 40,
  UNRECOGNIZED = -1,
}

export enum DressEquipmentRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_NOT_EXIST = 2,
  EQUIPMENT_NOT_EXIST = 3,
  EQUIPMENT_DRESSED = 4,
  EQUIPMENT_SLOT_ERROR = 5,
  COST_LACK = 6,
  AFFIX_NOT_IDENTIFY = 7,
  UNRECOGNIZED = -1,
}

export interface DressReclaimEquipmentReq {
  reclaimAvatarId: number;
  slot: EquipmentSlot;
  reclaimEquipId: number;
}

export enum DressReclaimEquipmentReq_CmdId {
  CMD_ID = 1173,
  UNRECOGNIZED = -1,
}

export interface DressReclaimEquipmentRsp {
  retcode: DressReclaimEquipmentRsp_Retcode;
  reclaimAvatar: ReclaimAvatar | undefined;
}

export enum DressReclaimEquipmentRsp_CmdId {
  CMD_ID = 1174,
  UNRECOGNIZED = -1,
}

export enum DressReclaimEquipmentRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_NOT_EXIST = 2,
  EQUIP_NOT_EXIST = 3,
  HAVE_DRESSED = 4,
  UNRECOGNIZED = -1,
}

export interface DressToReturnMaterialNotify {
  dressId: number;
  num: number;
  scoin: number;
  returnMaterialId: number;
  returnMaterialNum: number;
}

export enum DressToReturnMaterialNotify_CmdId {
  CMD_ID = 250,
  UNRECOGNIZED = -1,
}

export interface DressVirtualEquipmentReq {
  groupId: number;
  virtualAvatarId: number;
  equipType: number;
  slot: number;
  virtualEquipId: number;
}

export enum DressVirtualEquipmentReq_CmdId {
  CMD_ID = 3506,
  UNRECOGNIZED = -1,
}

export interface DressVirtualEquipmentRsp {
  retcode: DressVirtualEquipmentRsp_Retcode;
  groupId: number;
  virtualAvatar: VirtualAvatar | undefined;
}

export enum DressVirtualEquipmentRsp_CmdId {
  CMD_ID = 3507,
  UNRECOGNIZED = -1,
}

export enum DressVirtualEquipmentRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_NOT_EXIST = 2,
  EQUIP_NOT_EXIST = 3,
  HAVE_DRESSED = 4,
  UNRECOGNIZED = -1,
}

export interface DropItem {
  itemId: number;
  level: number;
  num: number;
  rarity: number;
  isBaodi: boolean;
  isRareDrop: boolean;
  giftItemId: number;
  giftLevel: number;
  giftNum: number;
  isTreasure: boolean;
  isEquipDrop: boolean;
  isStageClearDrop: boolean;
  isAvatarDrop: boolean;
  isThemeWantedDoubleDrop: boolean;
}

export interface DropLimitActivity {
  activityId: number;
  beginTime: number;
  endTime: number;
  dropLimitGotNumList: DropLimitItem[];
}

export interface DropLimitItem {
  limitId: number;
  gotNum: number;
}

export interface EditAdventureRoomReq {
  decorationSlot: AdventureDecorationSlot | undefined;
}

export enum EditAdventureRoomReq_CmdId {
  CMD_ID = 3920,
  UNRECOGNIZED = -1,
}

export interface EditAdventureRoomRsp {
  retcode: EditAdventureRoomRsp_Retcode;
  slotId: number;
}

export enum EditAdventureRoomRsp_CmdId {
  CMD_ID = 3921,
  UNRECOGNIZED = -1,
}

export enum EditAdventureRoomRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SLOT_UNLOCK = 2,
  FURNITURE_LACK = 3,
  FURNITURE_TYPE_ERROR = 4,
  COLLECTION_TYPE_ERROR = 5,
  UNRECOGNIZED = -1,
}

export interface EditDormRoomReq {
  houseId: number;
  roomId: number;
  furnitureList: Furniture[];
}

export enum EditDormRoomReq_CmdId {
  CMD_ID = 605,
  UNRECOGNIZED = -1,
}

export interface EditDormRoomRsp {
  retcode: EditDormRoomRsp_Retcode;
}

export enum EditDormRoomRsp_CmdId {
  CMD_ID = 606,
  UNRECOGNIZED = -1,
}

export enum EditDormRoomRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ROOM_NOT_EXIST = 2,
  FURNITURE_LACK = 3,
  EFFECT_LACK = 4,
  UNRECOGNIZED = -1,
}

export interface EffectiveGiftGoodsData {
  goodsId: number;
  expireTime: number;
}

export interface Elf {
  elfId: number;
  star: number;
  level: number;
  exp: number;
  equipTalentIdList: number[];
  skillList: ElfSkill[];
  compensateLevel: number;
  totalCompensateExp: number;
}

export interface ElfBriefInfo {
  elfId: number;
  elfLevel: number;
  elfStar: number;
  equipTalentIdList: number[];
  skillList: ElfBriefInfo_Skill[];
}

export interface ElfBriefInfo_Skill {
  skillId: number;
  skillLevel: number;
}

export interface ElfDetailData {
  elfId: number;
  level: number;
  star: number;
  equipTalentList: ElfTalentDetailData[];
  skillList: ElfSkillDetailData[];
}

export interface ElfFragment {
  elfId: number;
  fragmentNum: number;
}

export interface ElfFragmentSwitchData {
  elfId: number;
}

export interface ElfFragmentTransformReq {
  elfFragmentId: number;
  elfFragmentNum: number;
}

export enum ElfFragmentTransformReq_CmdId {
  CMD_ID = 2121,
  UNRECOGNIZED = -1,
}

export interface ElfFragmentTransformRsp {
  retcode: ElfFragmentTransformRsp_Retcode;
  addMaterialId: number;
  addMaterialNum: number;
}

export enum ElfFragmentTransformRsp_CmdId {
  CMD_ID = 2122,
  UNRECOGNIZED = -1,
}

export enum ElfFragmentTransformRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  STAR_LACK = 2,
  FRAGMENT_LACK = 3,
  MATERIAL_FULL = 4,
  FEATURE_CLOSED = 5,
  UNRECOGNIZED = -1,
}

export interface ElfSkill {
  skillId: number;
  skillLevel: number;
}

export interface ElfSkillDetailData {
  elfSkillId: number;
  skillLevel: number;
}

export interface ElfSkillLevelUpReq {
  elfId: number;
  elfSkillId: number;
}

export enum ElfSkillLevelUpReq_CmdId {
  CMD_ID = 2123,
  UNRECOGNIZED = -1,
}

export interface ElfSkillLevelUpRsp {
  retcode: ElfSkillLevelUpRsp_Retcode;
  elfSkill: ElfSkill | undefined;
}

export enum ElfSkillLevelUpRsp_CmdId {
  CMD_ID = 2124,
  UNRECOGNIZED = -1,
}

export enum ElfSkillLevelUpRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ELF_LOCKED = 2,
  SCOIN_LACK = 3,
  MATERIAL_NOT_ENOUGH = 4,
  LEVEL_FULL = 5,
  ELF_STAR_NOT_ENOUGH = 6,
  PRE_SKILL_LEVEL_NOT_ENOUGH = 7,
  ELF_LEVEL_NOT_ENOUGH = 8,
  UNRECOGNIZED = -1,
}

export interface ElfStarUpReq {
  elfId: number;
}

export enum ElfStarUpReq_CmdId {
  CMD_ID = 2105,
  UNRECOGNIZED = -1,
}

export interface ElfStarUpRsp {
  retcode: ElfStarUpRsp_Retcode;
  elfId: number;
  isUnlock: boolean;
}

export enum ElfStarUpRsp_CmdId {
  CMD_ID = 2106,
  UNRECOGNIZED = -1,
}

export enum ElfStarUpRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ELF_NOT_EXIST = 2,
  FRAGMENT_LACK = 3,
  STAR_FULL = 4,
  LEVEL_LACK = 5,
  FEATURE_CLOSED = 6,
  UNRECOGNIZED = -1,
}

export interface ElfTakeCompensationReq {
}

export enum ElfTakeCompensationReq_CmdId {
  CMD_ID = 2125,
  UNRECOGNIZED = -1,
}

export interface ElfTakeCompensationRsp {
  retcode: ElfTakeCompensationRsp_Retcode;
  itemList: RewardItemData[];
}

export enum ElfTakeCompensationRsp_CmdId {
  CMD_ID = 2126,
  UNRECOGNIZED = -1,
}

export enum ElfTakeCompensationRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKE = 2,
  UNRECOGNIZED = -1,
}

export interface ElfTalent {
  talentId: number;
  talentLevel: number;
  equipElfId: number;
}

export interface ElfTalentDetailData {
  elfTalentId: number;
  talentLevel: number;
}

export interface ElfUpgradeLevelPeriodReq {
  elfId: number;
}

export enum ElfUpgradeLevelPeriodReq_CmdId {
  CMD_ID = 2109,
  UNRECOGNIZED = -1,
}

export interface ElfUpgradeLevelPeriodRsp {
  retcode: ElfUpgradeLevelPeriodRsp_Retcode;
}

export enum ElfUpgradeLevelPeriodRsp_CmdId {
  CMD_ID = 2110,
  UNRECOGNIZED = -1,
}

export enum ElfUpgradeLevelPeriodRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ELF_NOT_EXIST = 2,
  MATERIAL_NOT_ENOUGH = 3,
  EXP_NOT_ENOUGH = 4,
  LEVEL_CAN_NOT_UPGRADE_PERIOD = 5,
  PLAYER_LEVEL_NOT_ENOUGH = 6,
  UNRECOGNIZED = -1,
}

export interface EliteChapterActCompensation {
  actId: number;
  difficulty: number;
  challengeRewardIdList: number[];
}

export interface EliteChapterCompensationInfo {
  chapterId: number;
  stageCompensationList: EliteChapterStageCompensation[];
  actCompensationList: EliteChapterActCompensation[];
  hasTakenCompensation: boolean;
}

export interface EliteChapterStageCompensation {
  stageId: number;
  isFirstWin: boolean;
  challengeRewardIdList: number[];
}

export interface EndlessAvatar {
  avatarId: number;
  star: number;
  level: number;
  weaponId: number;
  stigmataId1: number;
  stigmataId2: number;
  stigmataId3: number;
  quantumWeaponId: number;
}

export interface EndlessAvatarGoodfeel {
  avatarId: number;
  goodfeelValue: number;
}

export interface EndlessAvatarHp {
  avatarId: number;
  hpPercent: number;
  nextRecoverTime: number;
  isDie: boolean;
  spPercent: number;
}

export interface EndlessElfStatus {
  elfId: number;
  spPercent: number;
}

export interface EndlessInSettleNotify {
}

export enum EndlessInSettleNotify_CmdId {
  CMD_ID = 3452,
  UNRECOGNIZED = -1,
}

export interface EndlessItem {
  itemId: number;
  num: number;
}

export interface EndlessItemFrozenInfo {
  targetUid: number;
  frozenTime: number;
}

export interface EndlessNtrAvatar {
  avatarId: number;
  targetUid: number;
}

export interface EndlessPlayerData {
  uid: number;
  progress: number;
  progressTime: number;
  waitEffectItemList: EndlessWaitEffectItem[];
  hiddenExpireTime: number;
  maxProgress: number;
  waitBurstBombList: EndlessWaitBurstBomb[];
  isJustBombBurst: boolean;
  hiddenItemId: number;
  rewardProgress: number;
  lastLineupInfo: LineupBriefInfo | undefined;
  groupLevel: number;
}

export interface EndlessSelectTypeReq {
  endlessType: EndlessType;
  level: number;
}

export enum EndlessSelectTypeReq_CmdId {
  CMD_ID = 3462,
  UNRECOGNIZED = -1,
}

export interface EndlessSelectTypeRsp {
  retcode: EndlessSelectTypeRsp_Retcode;
  endlessType: EndlessType;
}

export enum EndlessSelectTypeRsp_CmdId {
  CMD_ID = 3463,
  UNRECOGNIZED = -1,
}

export enum EndlessSelectTypeRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  IN_ULTRA = 2,
  NOT_IN_NEXT_SCHEDULE = 3,
  LACK_LEVEL = 4,
  UNRECOGNIZED = -1,
}

export interface EndlessSingleModeActivity {
  curFloor: number;
  floorScoreList: EndlessSingleModeScore[];
  isSettled: boolean;
  resetTimes: number;
  monsterRandomId: number;
  activityType: number;
  owMonsterScoreList: EndlessSingleModeMonsterScore[];
  owItemList: EndlessSingleModeItem[];
}

export interface EndlessSingleModeActivityBattleBeginReq {
  activityId: number;
  mapId: number;
  areaId: number;
  battleId: number;
  groupLevel: number;
  monsterGroupId: number;
  layerNumber: number;
}

export enum EndlessSingleModeActivityBattleBeginReq_CmdId {
  CMD_ID = 4042,
  UNRECOGNIZED = -1,
}

export interface EndlessSingleModeActivityBattleBeginRsp {
  retcode: EndlessSingleModeActivityBattleBeginRsp_Retcode;
}

export enum EndlessSingleModeActivityBattleBeginRsp_CmdId {
  CMD_ID = 4043,
  UNRECOGNIZED = -1,
}

export enum EndlessSingleModeActivityBattleBeginRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface EndlessSingleModeActivityBattleEndReq {
  activityId: number;
  mapId: number;
  areaId: number;
  battleId: number;
  monsterGroupId: number;
  score: number;
  costTime: number;
  endStatus: StageEndStatus;
  avatarList: StageInnerAvatarData[];
  environmentId: number;
  layerNumber: number;
  elfList: StageInnerElfData[];
}

export enum EndlessSingleModeActivityBattleEndReq_CmdId {
  CMD_ID = 4044,
  UNRECOGNIZED = -1,
}

export interface EndlessSingleModeActivityBattleEndRsp {
  retcode: EndlessSingleModeActivityBattleEndRsp_Retcode;
  activityId: number;
  mapId: number;
  areaId: number;
  battleId: number;
  monsterGroupId: number;
}

export enum EndlessSingleModeActivityBattleEndRsp_CmdId {
  CMD_ID = 4045,
  UNRECOGNIZED = -1,
}

export enum EndlessSingleModeActivityBattleEndRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface EndlessSingleModeActivityFinishFloorReq {
  stageId: number;
  floor: number;
  score: number;
  costTime: number;
  cheatDataList: StageCheatData[];
}

export enum EndlessSingleModeActivityFinishFloorReq_CmdId {
  CMD_ID = 4038,
  UNRECOGNIZED = -1,
}

export interface EndlessSingleModeActivityFinishFloorRsp {
  retcode: EndlessSingleModeActivityFinishFloorRsp_Retcode;
}

export enum EndlessSingleModeActivityFinishFloorRsp_CmdId {
  CMD_ID = 4039,
  UNRECOGNIZED = -1,
}

export enum EndlessSingleModeActivityFinishFloorRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_CUR_FLOOR = 2,
  UNRECOGNIZED = -1,
}

export interface EndlessSingleModeActivityResetReq {
  activityId: number;
}

export enum EndlessSingleModeActivityResetReq_CmdId {
  CMD_ID = 4040,
  UNRECOGNIZED = -1,
}

export interface EndlessSingleModeActivityResetRsp {
  retcode: EndlessSingleModeActivityResetRsp_Retcode;
  activityId: number;
}

export enum EndlessSingleModeActivityResetRsp_CmdId {
  CMD_ID = 4041,
  UNRECOGNIZED = -1,
}

export enum EndlessSingleModeActivityResetRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MATERIAL_LACK = 2,
  STAMINA_LACK = 3,
  UNRECOGNIZED = -1,
}

export interface EndlessSingleModeActivityTakeItemReq {
  activityId: number;
  itemId: number;
  itemNum: number;
}

export enum EndlessSingleModeActivityTakeItemReq_CmdId {
  CMD_ID = 4046,
  UNRECOGNIZED = -1,
}

export interface EndlessSingleModeActivityTakeItemRsp {
  retcode: EndlessSingleModeActivityTakeItemRsp_Retcode;
}

export enum EndlessSingleModeActivityTakeItemRsp_CmdId {
  CMD_ID = 4047,
  UNRECOGNIZED = -1,
}

export enum EndlessSingleModeActivityTakeItemRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ITEM_FULL = 2,
  UNRECOGNIZED = -1,
}

export interface EndlessSingleModeActivityUseItemReq {
  activityId: number;
  itemId: number;
  itemNum: number;
}

export enum EndlessSingleModeActivityUseItemReq_CmdId {
  CMD_ID = 4048,
  UNRECOGNIZED = -1,
}

export interface EndlessSingleModeActivityUseItemRsp {
  retcode: EndlessSingleModeActivityUseItemRsp_Retcode;
}

export enum EndlessSingleModeActivityUseItemRsp_CmdId {
  CMD_ID = 4049,
  UNRECOGNIZED = -1,
}

export enum EndlessSingleModeActivityUseItemRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ITEM_LACK = 2,
  UNRECOGNIZED = -1,
}

export interface EndlessSingleModeItem {
  itemId: number;
  itemNum: number;
}

export interface EndlessSingleModeMonsterScore {
  monsterGroupId: number;
  score: number;
}

export interface EndlessSingleModeScore {
  floor: number;
  score: number;
}

export interface EndlessStatus {
  endlessType: EndlessType;
  beginTime: number;
  endTime: number;
  closeTime: number;
  sinType: number;
  progressOrScore: number;
  groupLevel: number;
  lastLineupInfo: LineupBriefInfo | undefined;
  canJoinIn: boolean;
  preGeneralActivityId: number;
  replaceEndlessGroupList: number[];
  maxScoreLineupInfo: LineupBriefInfo | undefined;
  greedyMaxFinishFloor: number;
}

export interface EndlessSwitchData {
  endlessType: number;
  playerGroup: number;
}

export interface EndlessWaitBurstBomb {
  itemId: number;
  burstTime: number;
}

export interface EndlessWaitEffectItem {
  itemId: number;
  effectTimes: number;
  expireTime: number;
}

export interface EndlessWarInfo {
  uid: number;
  targetUid: number;
  itemId: number;
  type: EndlessWarInfo_Type;
}

export enum EndlessWarInfo_Type {
  USE_ITEM = 1,
  BOMB_CANCEL = 2,
  BOMB_BURST = 3,
  UNRECOGNIZED = -1,
}

export interface EnterArmadaChatroomReq {
}

export enum EnterArmadaChatroomReq_CmdId {
  CMD_ID = 2657,
  UNRECOGNIZED = -1,
}

export interface EnterArmadaChatroomRsp {
  retcode: EnterArmadaChatroomRsp_Retcode;
  hisChatMsgList: ChatMsg[];
  hisSystemChatMsgList: ArmadaSystemChatMsg[];
}

export enum EnterArmadaChatroomRsp_CmdId {
  CMD_ID = 2658,
  UNRECOGNIZED = -1,
}

export enum EnterArmadaChatroomRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  UNRECOGNIZED = -1,
}

export interface EnterCommonChatworldReq {
  chatworldId: number;
  playerInfo: ChatworldPlayerInfo | undefined;
  sceneId: number;
  sceneData: ChatworldPlayerScene | undefined;
  lastChatworldId: number;
  campTag: number;
  lastSceneId: number;
}

export enum EnterCommonChatworldReq_CmdId {
  CMD_ID = 2400,
  UNRECOGNIZED = -1,
}

export interface EnterCommonChatworldRsp {
  retcode: EnterCommonChatworldRsp_Retcode;
  chatworldId: number;
  playerInfoList: ChatworldEntity[];
  selfInfo: ChatworldEntity | undefined;
  npcRedEnvelopeList: CommonChatworldRedEnvelope[];
  time: number;
  sceneId: number;
}

export enum EnterCommonChatworldRsp_CmdId {
  CMD_ID = 2401,
  UNRECOGNIZED = -1,
}

export enum EnterCommonChatworldRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  CHATWORLD_ID_ERROR = 2,
  ENTER_ERROR = 3,
  CHATWORLD_FULL = 4,
  LACK_LEVEL = 5,
  NO_QAVATAR = 6,
  NOT_JOIN_ACTIVITY = 7,
  SCENE_NOT_EXIST = 8,
  NOT_OPEN = 9,
  IS_ENTERING = 10,
  NOT_IN_ARMADA = 11,
  UNRECOGNIZED = -1,
}

export interface EnterLobbyReq {
  stageId: number;
  lobbyId: number;
  isFriendInvitation: boolean;
  level: number;
  clientRtt: number;
  hasLeaderStamina: boolean;
  member: MpTeamMember | undefined;
  hasLeaderEnterTimes: boolean;
  deviceScore: number;
  reportNum: number;
  hasLeaderThemeWantedTicket: boolean;
}

export enum EnterLobbyReq_CmdId {
  CMD_ID = 303,
  UNRECOGNIZED = -1,
}

export interface EnterLobbyRsp {
  retcode: EnterLobbyRsp_Retcode;
  subRetcode: number;
  lobbyId: number;
  stageId: number;
  avatarId: number;
}

export enum EnterLobbyRsp_CmdId {
  CMD_ID = 304,
  UNRECOGNIZED = -1,
}

export enum EnterLobbyRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LOBBY_FULL = 2,
  LEVEL_NOT_SATISFY = 3,
  ALREADY_IN_LOBBY = 4,
  LOBBY_FIGHTING = 5,
  LOBBY_NOT_EXIST = 6,
  NO_LOBBY = 7,
  STAGE_ERROR = 8,
  SERVER_BUSY = 9,
  BAD_NETWORK = 10,
  CLIENT_VERSION_ERROR = 11,
  IN_MATCH_QUEUE = 12,
  MATCH_STAGE_EXCEED_MAX = 13,
  ALREADY_IN_MATCH = 14,
  NO_AVAILABLE_AVATAR = 15,
  NOT_ALLOW_CROSS_REGION = 16,
  IN_SQUAD = 17,
  IN_SQUAD_MATCH = 18,
  IN_ROOM = 19,
  FEATURE_LIMIT = 20,
  NOT_IN_SAME_ARMADA = 21,
  DATA_VERSION_CONFLICT = 22,
  FEATURE_CLOSED = 23,
  UNRECOGNIZED = -1,
}

export interface EnterRoomReq {
  roomMode: RoomMode;
  roomId: number;
  memberData: RoomMember | undefined;
  roomInfo: RoomInfo | undefined;
}

export enum EnterRoomReq_CmdId {
  CMD_ID = 3155,
  UNRECOGNIZED = -1,
}

export interface EnterRoomRsp {
  retcode: EnterRoomRsp_Retcode;
}

export enum EnterRoomRsp_CmdId {
  CMD_ID = 3156,
  UNRECOGNIZED = -1,
}

export enum EnterRoomRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SERVER_BUSY = 2,
  IS_IN_ROOM = 3,
  ROOM_NOT_EXIST = 4,
  ROOM_FULL = 5,
  ROOM_IN_MATCHING = 6,
  IS_IN_BATTLE = 7,
  TOO_FREQUENT = 8,
  NO_SCHEDULE = 9,
  PLAYER_LEVEL_LACK = 10,
  ALREADY_IN_MP = 11,
  EQUIPMENT_FULL = 12,
  EQUIPMENT_MATERIAL_LIMIT = 13,
  EQUIPMENT_FRAGMENT_LIMIT = 14,
  FEATURE_LIMIT = 15,
  PUNISHED = 16,
  UNRECOGNIZED = -1,
}

export interface EnterRpgTaleSiteReq {
  siteId: number;
  taleId: number;
}

export enum EnterRpgTaleSiteReq_CmdId {
  CMD_ID = 2303,
  UNRECOGNIZED = -1,
}

export interface EnterRpgTaleSiteRsp {
  retcode: EnterRpgTaleSiteRsp_Retcode;
  siteId: number;
  taleId: number;
}

export enum EnterRpgTaleSiteRsp_CmdId {
  CMD_ID = 2304,
  UNRECOGNIZED = -1,
}

export enum EnterRpgTaleSiteRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_PASS_CUR_SITE = 2,
  SITE_LOCKED = 3,
  UNRECOGNIZED = -1,
}

export interface EnterWorldChatroomReq {
  chatroomId: number;
  activityType: ActivityWorldChatroomType;
  para: number;
  playerLevel: number;
  playerRegion: string;
}

export enum EnterWorldChatroomReq_CmdId {
  CMD_ID = 2231,
  UNRECOGNIZED = -1,
}

export interface EnterWorldChatroomRsp {
  retcode: EnterWorldChatroomRsp_Retcode;
  chatroomId: number;
  hisChatMsgList: ChatMsg[];
  activityType: ActivityWorldChatroomType;
  playerNum: number;
}

export enum EnterWorldChatroomRsp_CmdId {
  CMD_ID = 2232,
  UNRECOGNIZED = -1,
}

export enum EnterWorldChatroomRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LEVEL_LACK = 2,
  CHATROOM_ID_ERROR = 3,
  CHATROOM_FULL = 4,
  NO_KINGDOM = 5,
  TOO_OFTEN = 6,
  FEATURE_CLOSED = 7,
  UNRECOGNIZED = -1,
}

export interface EquipDLCAvatarTalentReq {
  avatarId: number;
  equipTalentList: number[];
}

export enum EquipDLCAvatarTalentReq_CmdId {
  CMD_ID = 3554,
  UNRECOGNIZED = -1,
}

export interface EquipDLCAvatarTalentRsp {
  retcode: EquipDLCAvatarTalentRsp_Retcode;
}

export enum EquipDLCAvatarTalentRsp_CmdId {
  CMD_ID = 3555,
  UNRECOGNIZED = -1,
}

export enum EquipDLCAvatarTalentRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_NOT_EXIST = 2,
  TALENT_NOT_EXIST = 3,
  TALENT_TYPE_ERROR = 4,
  TALENT_TAG_REPEAT = 5,
  UNRECOGNIZED = -1,
}

export interface EquipForgeSwitchData {
  equipForgeId: number;
}

export interface EquipmentEvoReq {
  mainItem: EquipmentItem | undefined;
  consumeItemList: EquipmentItemList | undefined;
}

export enum EquipmentEvoReq_CmdId {
  CMD_ID = 37,
  UNRECOGNIZED = -1,
}

export interface EquipmentEvoRsp {
  retcode: EquipmentEvoRsp_Retcode;
  newItem: EquipmentItem | undefined;
}

export enum EquipmentEvoRsp_CmdId {
  CMD_ID = 38,
  UNRECOGNIZED = -1,
}

export enum EquipmentEvoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MAIN_ITEM_NOT_EXIST = 2,
  MAIN_ITEM_LEVEL_NOT_FULL = 3,
  CONSUME_ITEM_NOT_EXIST = 4,
  CONSUME_ITEM_IN_USE = 5,
  CONSUME_ITEM_REPEAT = 6,
  CONSUME_ITEM_UN_NECESSARY = 7,
  CONSUME_ITEM_LACK = 8,
  MAIN_ITEM_IN_CONSUME_ITEM_LIST = 9,
  SCOIN_LACK = 10,
  CONSUME_ITEM_PROTECTED = 11,
  MAIN_ITEM_AFFIX_NOT_IDENTIFY = 12,
  COST_GACHA_TICKET = 13,
  COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 14,
  COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 15,
  CONSUME_ITEM_GRAND_KEY = 16,
  CONSUME_ITEM_IN_FACILITY = 17,
  MAIN_ITEM_IN_FACILITY = 18,
  CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 19,
  UNRECOGNIZED = -1,
}

export interface EquipmentForge {
  forgeId: number;
  times: number;
}

export interface EquipmentForgeConsume {
  uniqueId: number;
  equipList: EquipmentForgeConsume_ConsumeEquip[];
  materialList: Material[];
}

export interface EquipmentForgeConsume_ConsumeEquip {
  id: number;
  level: number;
  exp: number;
}

export interface EquipmentItem {
  type: EquipmentType;
  idOrUniqueId: number;
  num: number;
}

export interface EquipmentItemList {
  itemList: EquipmentItem[];
}

export interface EquipmentPowerUpReq {
  mainItem: EquipmentItem | undefined;
  consumeItemList: EquipmentItemList | undefined;
}

export enum EquipmentPowerUpReq_CmdId {
  CMD_ID = 31,
  UNRECOGNIZED = -1,
}

export interface EquipmentPowerUpRsp {
  retcode: EquipmentPowerUpRsp_Retcode;
  mainItem: EquipmentItem | undefined;
  boostRate: number;
  returnMaterialList: Material[];
}

export enum EquipmentPowerUpRsp_CmdId {
  CMD_ID = 32,
  UNRECOGNIZED = -1,
}

export enum EquipmentPowerUpRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MAIN_ITEM_NOT_EXIST = 2,
  MAIN_ITEM_LEVEL_FULL = 3,
  CONSUME_ITEM_NOT_EXIST = 4,
  CONSUME_ITEM_IN_USE = 5,
  CONSUME_ITEM_REPEAT = 6,
  MAIN_ITEM_IN_CONSUME_ITEM_LIST = 7,
  SCOIN_LACK = 8,
  CONSUME_ITEM_PROTECTED = 9,
  MAIN_ITEM_AFFIX_NOT_IDENTIFY = 10,
  COST_GACHA_TICKET = 11,
  COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 12,
  COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 13,
  CONSUME_ITEM_IN_FACILITY = 14,
  CONSUME_ITEM_GRAND_KEY = 15,
  CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 16,
  UNRECOGNIZED = -1,
}

export interface EquipmentSellReq {
  sellItemList: EquipmentItemList | undefined;
}

export enum EquipmentSellReq_CmdId {
  CMD_ID = 33,
  UNRECOGNIZED = -1,
}

export interface EquipmentSellRsp {
  retcode: EquipmentSellRsp_Retcode;
  scoinAdd: number;
  purpleJadeAdd: number;
  costVitality: number;
}

export enum EquipmentSellRsp_CmdId {
  CMD_ID = 34,
  UNRECOGNIZED = -1,
}

export enum EquipmentSellRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  CONSUME_ITEM_NOT_EXIST = 2,
  CONSUME_ITEM_IN_USE = 3,
  CONSUME_ITEM_REPEAT = 4,
  CONSUME_ITEM_PROTECTED = 5,
  COST_GACHA_TICKET = 6,
  COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 7,
  COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 8,
  SELL_PRICE = 9,
  CONSUME_ITEM_GRAND_KEY = 10,
  CONSUME_ITEM_IN_FACILITY = 11,
  LACK_VITALITY = 12,
  CONTAINS_EQUIP_CAN_NOT_SELL = 13,
  GREEN_STONE_QUANTITY_LIMIT = 14,
  PURPLE_JADE_QUANTITY_LIMIT = 15,
  CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 16,
  UNRECOGNIZED = -1,
}

export interface EquipScDLCAvatarTalentReq {
  avatarId: number;
  equipTalentList: number[];
}

export enum EquipScDLCAvatarTalentReq_CmdId {
  CMD_ID = 6314,
  UNRECOGNIZED = -1,
}

export interface EquipScDLCAvatarTalentRsp {
  retcode: EquipScDLCAvatarTalentRsp_Retcode;
}

export enum EquipScDLCAvatarTalentRsp_CmdId {
  CMD_ID = 6315,
  UNRECOGNIZED = -1,
}

export enum EquipScDLCAvatarTalentRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_ERROR = 2,
  TALENT_ERROR = 3,
  TALENT_TAG_REPEAT = 4,
  UNRECOGNIZED = -1,
}

export interface EquipSynthesisReq {
  material: Material | undefined;
  equipItem: EquipmentItem | undefined;
}

export enum EquipSynthesisReq_CmdId {
  CMD_ID = 478,
  UNRECOGNIZED = -1,
}

export interface EquipSynthesisRsp {
  retcode: EquipSynthesisRsp_Retcode;
  equipList: EquipmentItemList | undefined;
}

export enum EquipSynthesisRsp_CmdId {
  CMD_ID = 479,
  UNRECOGNIZED = -1,
}

export enum EquipSynthesisRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  FRAG_ERROR = 2,
  BAG_FULL = 3,
  UNRECOGNIZED = -1,
}

export interface EvaluateExaminationReq {
  examinationId: number;
  isLike: boolean;
}

export enum EvaluateExaminationReq_CmdId {
  CMD_ID = 4329,
  UNRECOGNIZED = -1,
}

export interface EvaluateExaminationRsp {
  retcode: EvaluateExaminationRsp_Retcode;
}

export enum EvaluateExaminationRsp_CmdId {
  CMD_ID = 4330,
  UNRECOGNIZED = -1,
}

export enum EvaluateExaminationRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface EvoStigmataTitleReq {
  uniqueId: number;
}

export enum EvoStigmataTitleReq_CmdId {
  CMD_ID = 326,
  UNRECOGNIZED = -1,
}

export interface EvoStigmataTitleRsp {
  retcode: EvoStigmataTitleRsp_Retcode;
}

export enum EvoStigmataTitleRsp_CmdId {
  CMD_ID = 327,
  UNRECOGNIZED = -1,
}

export enum EvoStigmataTitleRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  STIGMATA_NOT_EXIST = 2,
  EXP_LACK = 3,
  MATERIAL_LACK = 4,
  LEVEL_ERROR = 5,
  LEVEL_LACK = 6,
  UNRECOGNIZED = -1,
}

export interface Examination {
  id: number;
  lastAnswer: number;
  isFinished: boolean;
  answerList: number[];
  isEvaluated: boolean;
}

export interface ExBossEnterSwitchData {
  exBossId: number;
}

export interface ExBossIdInfo {
  bossId: number;
  avatarIdList: number[];
  weaponIdList: number[];
  stigmataIdList: number[];
  score: number;
  lastAvatarIdList: number[];
  bossTimesScore: number;
}

export interface ExBossInfo {
  enterTimes: number;
  scheduleId: number;
  rankId: number;
  bossIdList: ExBossIdInfo[];
  nowScheduleId: number;
  exBossList: ExBossIdInfo[];
  maxSweepLevel: number;
  singleBossScoreRewardList: ExBossSingleBossScoreReward[];
}

export interface ExBossSingleBossScoreReward {
  bossId: number;
  maxSettleScore: number;
}

export interface ExBossStageBeginReq {
  avatarIdList: number[];
  bossId: number;
  isTraining: boolean;
  elfIdList: number[];
  isTurbo: boolean;
}

export enum ExBossStageBeginReq_CmdId {
  CMD_ID = 529,
  UNRECOGNIZED = -1,
}

export interface ExBossStageBeginRsp {
  retcode: ExBossStageBeginRsp_Retcode;
  stageTransactionStr: string;
}

export enum ExBossStageBeginRsp_CmdId {
  CMD_ID = 530,
  UNRECOGNIZED = -1,
}

export enum ExBossStageBeginRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_ERROR = 3,
  DUP_AVATAR = 4,
  ENTER_TIMES_LACK = 5,
  EX_BOSS_LACK_SCORE = 6,
  ELF_ERROR = 7,
  ELF_CARRY_LEVEL_LIMIT = 8,
  NEED_FINISH_NORMAL = 9,
  FEATURE_LIMIT = 10,
  FEATURE_CLOSED = 11,
  NOT_OPEN = 12,
  NOT_ALLOW_TURBO = 13,
  NO_AVAILABLE_BOSS = 14,
  LACK_LOCK_SLOT = 15,
  PRE_BOSS_NOT_FINISH = 16,
  UNRECOGNIZED = -1,
}

export interface ExBossStageEndReq {
  endStatus: StageEndStatus;
  cheatType: number;
  cheatDataList: StageCheatData[];
  bossId: number;
  score: number;
}

export enum ExBossStageEndReq_CmdId {
  CMD_ID = 531,
  UNRECOGNIZED = -1,
}

export interface ExBossStageEndRsp {
  retcode: ExBossStageEndRsp_Retcode;
  endStatus: StageEndStatus;
  bossId: number;
}

export enum ExBossStageEndRsp_CmdId {
  CMD_ID = 532,
  UNRECOGNIZED = -1,
}

export enum ExBossStageEndRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_BEGIN = 3,
  NOT_OPEN = 4,
  UNRECOGNIZED = -1,
}

export interface ExBossSweepReq {
  bossId: number;
}

export enum ExBossSweepReq_CmdId {
  CMD_ID = 1655,
  UNRECOGNIZED = -1,
}

export interface ExBossSweepRsp {
  retcode: ExBossSweepRsp_Retcode;
  bossId: number;
}

export enum ExBossSweepRsp_CmdId {
  CMD_ID = 1656,
  UNRECOGNIZED = -1,
}

export enum ExBossSweepRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LEVEL_LIMIT = 2,
  ENTER_TIMES_LACK = 3,
  FEATURE_LIMIT = 4,
  FEATURE_CLOSED = 5,
  FINISHED = 6,
  NOT_OPEN = 7,
  UNRECOGNIZED = -1,
}

export interface ExBossSwitchData {
  bossGroupId: number;
}

export interface ExBossTakeBossScoreRewardNotify {
  rewardList: RewardData[];
}

export enum ExBossTakeBossScoreRewardNotify_CmdId {
  CMD_ID = 1657,
  UNRECOGNIZED = -1,
}

export interface ExchangeAvatarWeaponReq {
  avatarId1: number;
  avatarId2: number;
}

export enum ExchangeAvatarWeaponReq_CmdId {
  CMD_ID = 135,
  UNRECOGNIZED = -1,
}

export interface ExchangeAvatarWeaponRsp {
  retcode: ExchangeAvatarWeaponRsp_Retcode;
}

export enum ExchangeAvatarWeaponRsp_CmdId {
  CMD_ID = 136,
  UNRECOGNIZED = -1,
}

export enum ExchangeAvatarWeaponRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_ERROR = 2,
  WEAPON_TYPE_ERROR = 3,
  COST_LACK = 4,
  UNRECOGNIZED = -1,
}

export interface ExchangeHcoinByMcoinReq {
  productName: string;
  mcoinPrice: number;
}

export enum ExchangeHcoinByMcoinReq_CmdId {
  CMD_ID = 834,
  UNRECOGNIZED = -1,
}

export interface ExchangeHcoinByMcoinRsp {
  retcode: ExchangeHcoinByMcoinRsp_Retcode;
  productName: string;
  payHcoin: number;
  freeHcoin: number;
}

export enum ExchangeHcoinByMcoinRsp_CmdId {
  CMD_ID = 835,
  UNRECOGNIZED = -1,
}

export enum ExchangeHcoinByMcoinRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LACK_MCOIN = 2,
  PRODUCT_INVALID = 3,
  UNRECOGNIZED = -1,
}

export interface ExchangePurpleJadeReq {
  hcoinNum: number;
  mcoinNum: number;
}

export enum ExchangePurpleJadeReq_CmdId {
  CMD_ID = 1367,
  UNRECOGNIZED = -1,
}

export interface ExchangePurpleJadeRsp {
  retcode: ExchangePurpleJadeRsp_Retcode;
  hcoinCost: number;
  purpleJadeAdded: number;
  mcoinCost: number;
}

export enum ExchangePurpleJadeRsp_CmdId {
  CMD_ID = 1368,
  UNRECOGNIZED = -1,
}

export enum ExchangePurpleJadeRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LACK_HCOIN = 2,
  CAN_NOT_EXCHANGE = 3,
  LIMIT_FOR_EXCHANGE = 4,
  LACK_EXCHANGE_NUM = 5,
  LACK_MCOIN = 6,
  UNRECOGNIZED = -1,
}

export interface ExchangeRaffleMaterialReq {
}

export enum ExchangeRaffleMaterialReq_CmdId {
  CMD_ID = 3890,
  UNRECOGNIZED = -1,
}

export interface ExchangeRaffleMaterialRsp {
  retcode: ExchangeRaffleMaterialRsp_Retcode;
  getMaterialList: Material[];
}

export enum ExchangeRaffleMaterialRsp_CmdId {
  CMD_ID = 3891,
  UNRECOGNIZED = -1,
}

export enum ExchangeRaffleMaterialRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MATERIAL_NOT_ENOUGH = 2,
  NOT_OPEN = 3,
  UNRECOGNIZED = -1,
}

export interface ExchangeRedeemCodeReq {
  redeemCode: string;
}

export enum ExchangeRedeemCodeReq_CmdId {
  CMD_ID = 213,
  UNRECOGNIZED = -1,
}

export interface ExchangeRedeemCodeRsp {
  retcode: ExchangeRedeemCodeRsp_Retcode;
  rewardList: RewardData[];
  redeemCode: string;
}

export enum ExchangeRedeemCodeRsp_CmdId {
  CMD_ID = 214,
  UNRECOGNIZED = -1,
}

export enum ExchangeRedeemCodeRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  REDEEM_CODE_ERROR = 2,
  REDEEM_CODE_NUM_LACK = 3,
  REDEEM_TAKE_NUM_LACK = 4,
  REDEEM_CODE_EXPIRED = 5,
  REDEEM_HAS_TAKEN = 6,
  NOT_PERMITTED = 7,
  EQUIPMENT_FULL = 8,
  REDEEM_FREQ_LIMIT = 9,
  UNRECOGNIZED = -1,
}

export interface ExchangeWeekDayActivityTimesReq {
  activityId: number;
  activityTimes: number;
}

export enum ExchangeWeekDayActivityTimesReq_CmdId {
  CMD_ID = 259,
  UNRECOGNIZED = -1,
}

export interface ExchangeWeekDayActivityTimesRsp {
  retcode: ExchangeWeekDayActivityTimesRsp_Retcode;
  coinCost: number;
}

export enum ExchangeWeekDayActivityTimesRsp_CmdId {
  CMD_ID = 260,
  UNRECOGNIZED = -1,
}

export enum ExchangeWeekDayActivityTimesRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_OPEN = 2,
  COIN_LACK = 3,
  TIMES_NOT_ZERO = 4,
  UNRECOGNIZED = -1,
}

export interface ExitRoomNotify {
  reason: RoomExitReason;
}

export enum ExitRoomNotify_CmdId {
  CMD_ID = 3159,
  UNRECOGNIZED = -1,
}

export interface ExitRoomReq {
}

export enum ExitRoomReq_CmdId {
  CMD_ID = 3157,
  UNRECOGNIZED = -1,
}

export interface ExitRoomRsp {
  retcode: ExitRoomRsp_Retcode;
}

export enum ExitRoomRsp_CmdId {
  CMD_ID = 3158,
  UNRECOGNIZED = -1,
}

export enum ExitRoomRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ROOM = 2,
  TOO_FREQUENT = 3,
  UNRECOGNIZED = -1,
}

export interface ExitTvtBattleNotify {
}

export enum ExitTvtBattleNotify_CmdId {
  CMD_ID = 3357,
  UNRECOGNIZED = -1,
}

export interface ExtraChatParam {
  roomChatParam: RoomChatParam | undefined;
  privateChatParam: PrivateChatParam | undefined;
  groupChatParam: GroupChatParam | undefined;
  battleChatParam: BattleChatParam | undefined;
}

export interface ExtractEquipmentActivity {
  extractWeaponList: ExtractEquipmentActivity_OpenExtractWeapon[];
  mainidBlackList: number[];
  isReforge: boolean;
  reforgeMainIdList: number[];
  reforgeTimes: number;
  powerupMaterialRatio: number;
  reforgeInitLevel: number;
  remainReforgeTimes: number;
}

export interface ExtractEquipmentActivity_OpenExtractWeapon {
  quality: number;
  baseType: number;
}

export interface ExtractEquipmentReq {
  type: EquipmentType;
  uniqueId: number;
  capsuleId: number;
}

export enum ExtractEquipmentReq_CmdId {
  CMD_ID = 3654,
  UNRECOGNIZED = -1,
}

export interface ExtractEquipmentRsp {
  retcode: ExtractEquipmentRsp_Retcode;
  uniqueId: number;
  materialList: Material[];
}

export enum ExtractEquipmentRsp_CmdId {
  CMD_ID = 3655,
  UNRECOGNIZED = -1,
}

export enum ExtractEquipmentRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  JUST_SUPPORT_WEAPON = 2,
  CONSUME_ITEM_NOT_EXIST = 3,
  CONSUME_ITEM_IN_USE = 4,
  CONSUME_ITEM_PROTECTED = 5,
  COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 6,
  COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 7,
  NOT_CULTIVATED = 8,
  ACTIVITY_NOT_OPEN = 9,
  EQUIP_NOT_OPEN = 10,
  MATERIAL_NOT_FITTED = 11,
  MATERIAL_LACK = 12,
  CONSUME_ITEM_IN_FACILITY = 13,
  CONSUME_ITEM_GRAND_KEY = 14,
  CONSUME_ITEM_REPEAT = 15,
  COST_GACHA_TICKET = 16,
  CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 17,
  UNRECOGNIZED = -1,
}

export interface ExtraStoryAchieve {
  achieveId: number;
  isTake: boolean;
}

export interface ExtraStoryAct {
  actId: number;
  beginTime: number;
  endTime: number;
}

export interface ExtraStoryArea {
  areaId: number;
  actList: ExtraStoryAct[];
  beginTime: number;
  endTime: number;
}

export interface ExtraStoryChapter {
  chapterId: number;
  minPlayerLevel: number;
  areaList: ExtraStoryArea[];
  beginTime: number;
  endTime: number;
  isNeedKey: boolean;
}

export interface FacilityLevel {
  facilityType: number;
  level: number;
}

export interface FarmActivityNotify {
  farmLevel: number;
  farmExp: number;
  slotDetailList: FarmSlotDetail[];
  produceMaterialList: FarmProduceMaterialDetail[];
}

export enum FarmActivityNotify_CmdId {
  CMD_ID = 1395,
  UNRECOGNIZED = -1,
}

export interface FarmProduceMaterialDetail {
  materialId: number;
  hasProduceTimesTotal: number;
}

export interface FarmSlotDetail {
  slotId: number;
  slotStatus: number;
  produceBeginTime: number;
  produceEndTime: number;
  produceMaterialId: number;
  hasProduceTimesDaily: number;
}

export interface FastPassParaOw {
  mapId: number;
  questId: number;
  finishChallengeList: number[];
}

export interface FastPassParaWeekday {
  stageId: number;
}

export interface FeverSkillSuite {
  suiteId: number;
  suiteName: string;
  skillChipIdList: number[];
}

export interface FinishClearStageActivityNotify {
  stageId: number;
  rewardList: RewardData[];
}

export enum FinishClearStageActivityNotify_CmdId {
  CMD_ID = 455,
  UNRECOGNIZED = -1,
}

export interface FinishConsignedOrderReq {
  item: EquipmentItem | undefined;
  uniqueId: number;
  consignId: number;
  progress: number;
  orderLevel: number;
  order: ConsignedOrder | undefined;
  nextOrder: ConsignedOrder | undefined;
  reliableId: number;
}

export enum FinishConsignedOrderReq_CmdId {
  CMD_ID = 2643,
  UNRECOGNIZED = -1,
}

export interface FinishConsignedOrderRsp {
  retcode: FinishConsignedOrderRsp_Retcode;
  rewardList: RewardData[];
  dropItemList: DropItem[];
  item: EquipmentItem | undefined;
  consignId: number;
  reliableId: number;
  progress: number;
  finishOrderTimes: number;
}

export enum FinishConsignedOrderRsp_CmdId {
  CMD_ID = 2644,
  UNRECOGNIZED = -1,
}

export enum FinishConsignedOrderRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  IN_CD_TIME = 3,
  TIMES_LACK = 4,
  CONSUME_ITEM_NOT_EXIST = 5,
  CONSUME_ITEM_IN_USE = 6,
  CONSUME_ITEM_REPEAT = 7,
  CONSUME_ITEM_PROTECTED = 8,
  COST_GACHA_TICKET = 9,
  COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 10,
  COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 11,
  ITEM_LACK = 12,
  STATUS_ERROR = 13,
  ORDER_FINISHED = 14,
  ORDER_PROGRESS_CHANGE = 15,
  CONSUME_ITEM_IN_FACILITY = 16,
  CONSUME_ITEM_GRAND_KEY = 17,
  CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 18,
  UNRECOGNIZED = -1,
}

export interface FinishDLCDialogReq {
  dialogId: number;
}

export enum FinishDLCDialogReq_CmdId {
  CMD_ID = 3578,
  UNRECOGNIZED = -1,
}

export interface FinishDLCDialogRsp {
  retcode: FinishDLCDialogRsp_Retcode;
  dialogId: number;
  addSupportPoint: number;
}

export enum FinishDLCDialogRsp_CmdId {
  CMD_ID = 3579,
  UNRECOGNIZED = -1,
}

export enum FinishDLCDialogRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_SUPPORT_DIALOG = 2,
  ALREADY_TAKEN = 3,
  UNRECOGNIZED = -1,
}

export interface FinishDormEventReq {
  eventId: number;
  avatarId: number;
}

export enum FinishDormEventReq_CmdId {
  CMD_ID = 617,
  UNRECOGNIZED = -1,
}

export interface FinishDormEventRsp {
  retcode: FinishDormEventRsp_Retcode;
  rewardList: RewardData[];
  dropItemList: DropItem[];
}

export enum FinishDormEventRsp_CmdId {
  CMD_ID = 618,
  UNRECOGNIZED = -1,
}

export enum FinishDormEventRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  CONDITION_LIMIT = 2,
  UNRECOGNIZED = -1,
}

export interface FinishDormTalkReq {
  plotId: number;
  avatarIdList: number[];
}

export enum FinishDormTalkReq_CmdId {
  CMD_ID = 641,
  UNRECOGNIZED = -1,
}

export interface FinishDormTalkRsp {
  retcode: FinishDormTalkRsp_Retcode;
  rewardList: RewardData[];
  dropItemList: DropItem[];
}

export enum FinishDormTalkRsp_CmdId {
  CMD_ID = 642,
  UNRECOGNIZED = -1,
}

export enum FinishDormTalkRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  PLOT_ERROR = 2,
  PLOT_FINISHED = 3,
  UNRECOGNIZED = -1,
}

export interface FinishedExBossInfo {
  bossId: number;
  score: number;
  avatarInfoList: AvatarBriefInfo[];
  elfInfoList: ElfBriefInfo[];
}

export interface FinishExaminationReq {
  examinationId: number;
  answerIndex: number;
}

export enum FinishExaminationReq_CmdId {
  CMD_ID = 4325,
  UNRECOGNIZED = -1,
}

export interface FinishExaminationRsp {
  retcode: FinishExaminationRsp_Retcode;
  examinationId: number;
  isFinished: boolean;
  rewardData: RewardData | undefined;
}

export enum FinishExaminationRsp_CmdId {
  CMD_ID = 4326,
  UNRECOGNIZED = -1,
}

export enum FinishExaminationRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_FINISHED = 2,
  NOT_CUR_EXAMINATION = 3,
  UNRECOGNIZED = -1,
}

export interface FinishFarmProduceReq {
  slotId: number;
  isFinishAll: boolean;
}

export enum FinishFarmProduceReq_CmdId {
  CMD_ID = 1391,
  UNRECOGNIZED = -1,
}

export interface FinishFarmProduceRsp {
  retcode: FinishFarmProduceRsp_Retcode;
  slotId: number;
  isFinishAll: boolean;
  rewardFarmExp: number;
  produceMaterialList: Material[];
  rewardData: RewardData | undefined;
}

export enum FinishFarmProduceRsp_CmdId {
  CMD_ID = 1392,
  UNRECOGNIZED = -1,
}

export enum FinishFarmProduceRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SLOT_LOCKED = 2,
  NOT_IN_PRODUCE = 3,
  NOT_FINISH = 4,
  UNRECOGNIZED = -1,
}

export interface FinishFastPassReq {
  fastPassType: number;
  fastPassParaOw: FastPassParaOw | undefined;
  fastPassParaWeekday: FastPassParaWeekday | undefined;
}

export enum FinishFastPassReq_CmdId {
  CMD_ID = 1490,
  UNRECOGNIZED = -1,
}

export interface FinishFastPassRsp {
  retcode: FinishFastPassRsp_Retcode;
  fastPassType: number;
  dropItemList: DropItem[];
  fastPassParaOw: FastPassParaOw | undefined;
  fastPassParaWeekday: FastPassParaWeekday | undefined;
  playerExpReward: number;
  scoinReward: number;
  expConvertScoin: number;
}

export enum FinishFastPassRsp_CmdId {
  CMD_ID = 1491,
  UNRECOGNIZED = -1,
}

export enum FinishFastPassRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_SCHEDULE = 2,
  MATERIAL_LACK = 3,
  QUEST_NOT_EXIST = 4,
  QUEST_NOT_DOING = 5,
  MAP_NOT_FOUND = 6,
  NO_USE_TIMES = 7,
  STAGE_NOT_EXIST = 8,
  STAGE_CANT_FAST_PASS = 9,
  NO_ENTER_TIMES = 10,
  STAMINA_LACK = 11,
  EQUIPMENT_FULL = 12,
  GENERATE_DROP_FAILED = 13,
  UNRECOGNIZED = -1,
}

export interface FinishGuideReportReq {
  guideIdList: number[];
  isForceFinish: boolean;
}

export enum FinishGuideReportReq_CmdId {
  CMD_ID = 129,
  UNRECOGNIZED = -1,
}

export interface FinishGuideReportRsp {
  retcode: FinishGuideReportRsp_Retcode;
  guideIdList: number[];
  isFinish: boolean;
}

export enum FinishGuideReportRsp_CmdId {
  CMD_ID = 130,
  UNRECOGNIZED = -1,
}

export enum FinishGuideReportRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface FinishIslandEventReq {
  eventId: number;
  nodeNum: number;
  isGetReward: boolean;
}

export enum FinishIslandEventReq_CmdId {
  CMD_ID = 243,
  UNRECOGNIZED = -1,
}

export interface FinishIslandEventRsp {
  retcode: FinishIslandEventRsp_Retcode;
  rewardList: RewardData[];
}

export enum FinishIslandEventRsp_CmdId {
  CMD_ID = 244,
  UNRECOGNIZED = -1,
}

export enum FinishIslandEventRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface FinishMatrixEventPlotReq {
  plotId: number;
  dialogId: number;
}

export enum FinishMatrixEventPlotReq_CmdId {
  CMD_ID = 2336,
  UNRECOGNIZED = -1,
}

export interface FinishMatrixEventPlotRsp {
  retcode: FinishMatrixEventPlotRsp_Retcode;
  plotId: number;
  dialogId: number;
}

export enum FinishMatrixEventPlotRsp_CmdId {
  CMD_ID = 2337,
  UNRECOGNIZED = -1,
}

export enum FinishMatrixEventPlotRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface FinishOpenworldEndlessInvasionMonsterReq {
  id: number;
  battleId: number;
  transactionStr: string;
}

export enum FinishOpenworldEndlessInvasionMonsterReq_CmdId {
  CMD_ID = 3430,
  UNRECOGNIZED = -1,
}

export interface FinishOpenworldEndlessInvasionMonsterRsp {
  retcode: FinishOpenworldEndlessInvasionMonsterRsp_Retcode;
  subScore: number;
  id: number;
  clearItemList: OpenworldEndlessItem[];
  score: number;
  battleId: number;
  transactionStr: string;
}

export enum FinishOpenworldEndlessInvasionMonsterRsp_CmdId {
  CMD_ID = 3431,
  UNRECOGNIZED = -1,
}

export enum FinishOpenworldEndlessInvasionMonsterRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ENDLESS_STATUS_ERROR = 2,
  NOT_JOIN = 3,
  NO_INVASION = 4,
  UNRECOGNIZED = -1,
}

export interface FinishOpenworldEndlessMonsterGroupReq {
  groupId: number;
  lineupInfo: LineupBriefInfo | undefined;
  extraScore: number;
  battleId: number;
  costTime: number;
  cheatDataList: StageCheatData[];
  stageId: number;
  transactionStr: string;
  type: EndlessType;
  quantumMonsterProgress: number;
  isSkipLevel: boolean;
  finalBossId: number;
}

export enum FinishOpenworldEndlessMonsterGroupReq_CmdId {
  CMD_ID = 3424,
  UNRECOGNIZED = -1,
}

export interface FinishOpenworldEndlessMonsterGroupRsp {
  retcode: FinishOpenworldEndlessMonsterGroupRsp_Retcode;
  finishMonsterGroupList: number[];
  groupId: number;
  clearItemList: OpenworldEndlessItem[];
  score: number;
  battleId: number;
  oldScore: number;
  isBoss: boolean;
  transactionStr: string;
  monsterGroupList: OpenworldEndlessMonsterGroup[];
  groupLevel: number;
  lineupInfo: LineupBriefInfo | undefined;
  type: EndlessType;
  quantumEndless: QuantumEndless | undefined;
  isSkipLevel: boolean;
  finalBossId: number;
  maxScoreLineupInfo: LineupBriefInfo | undefined;
}

export enum FinishOpenworldEndlessMonsterGroupRsp_CmdId {
  CMD_ID = 3425,
  UNRECOGNIZED = -1,
}

export enum FinishOpenworldEndlessMonsterGroupRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface FinishPlotReq {
  plotType: number;
  plotId: number;
  dialogId: number;
  avatarIdList: number[];
  visualNovelId: number;
}

export enum FinishPlotReq_CmdId {
  CMD_ID = 1378,
  UNRECOGNIZED = -1,
}

export interface FinishPlotRsp {
  retcode: FinishPlotRsp_Retcode;
  plotType: number;
  plotId: number;
  dialogId: number;
  rewardList: RewardData[];
  dropItemList: DropItem[];
}

export enum FinishPlotRsp_CmdId {
  CMD_ID = 1379,
  UNRECOGNIZED = -1,
}

export enum FinishPlotRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  PLOT_ERROR = 2,
  PLOT_FINISHED = 3,
  UNRECOGNIZED = -1,
}

export interface FinishRpgTalePlotReq {
  plotId: number;
  dialogId: number;
  taleId: number;
}

export enum FinishRpgTalePlotReq_CmdId {
  CMD_ID = 2305,
  UNRECOGNIZED = -1,
}

export interface FinishRpgTalePlotRsp {
  retcode: FinishRpgTalePlotRsp_Retcode;
  plotId: number;
  dialogId: number;
  taleId: number;
}

export enum FinishRpgTalePlotRsp_CmdId {
  CMD_ID = 2306,
  UNRECOGNIZED = -1,
}

export enum FinishRpgTalePlotRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface FinishRpgTaleStagePlotReq {
  plotId: number;
  dialogId: number;
  taleId: number;
}

export enum FinishRpgTaleStagePlotReq_CmdId {
  CMD_ID = 2370,
  UNRECOGNIZED = -1,
}

export interface FinishRpgTaleStagePlotRsp {
  retcode: FinishRpgTaleStagePlotRsp_Retcode;
  plotId: number;
  dialogId: number;
  taleId: number;
}

export enum FinishRpgTaleStagePlotRsp_CmdId {
  CMD_ID = 2371,
  UNRECOGNIZED = -1,
}

export enum FinishRpgTaleStagePlotRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface FinishScDLCDailyQuestReq {
  questId: number;
  costTime: number;
  finishChallengeList: number[];
}

export enum FinishScDLCDailyQuestReq_CmdId {
  CMD_ID = 6322,
  UNRECOGNIZED = -1,
}

export interface FinishScDLCDailyQuestRsp {
  retcode: FinishScDLCDailyQuestRsp_Retcode;
  questId: number;
  costTime: number;
  finishChallengeList: number[];
}

export enum FinishScDLCDailyQuestRsp_CmdId {
  CMD_ID = 6323,
  UNRECOGNIZED = -1,
}

export enum FinishScDLCDailyQuestRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  QUEST_NOT_EXIST = 2,
  QUEST_NOT_DOING = 3,
  UNRECOGNIZED = -1,
}

export interface FinishScDLCPlotReq {
  id: number;
}

export enum FinishScDLCPlotReq_CmdId {
  CMD_ID = 6330,
  UNRECOGNIZED = -1,
}

export interface FinishScDLCPlotRsp {
  retcode: FinishScDLCPlotRsp_Retcode;
}

export enum FinishScDLCPlotRsp_CmdId {
  CMD_ID = 6331,
  UNRECOGNIZED = -1,
}

export enum FinishScDLCPlotRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface FinishSurveyNotify {
  surveyId: number;
}

export enum FinishSurveyNotify_CmdId {
  CMD_ID = 4243,
  UNRECOGNIZED = -1,
}

export interface FlopActivityCardData {
  id: number;
  state: number;
  cardNumber: number;
}

export interface FlopActivityData {
  activityId: number;
  cardList: FlopActivityCardData[];
  hasTakeRewardList: number[];
  flopTimes: number;
  curFrontCard: number;
  showId: number;
  totalFlopTimes: number;
}

export interface FlopActivityFlopCardReq {
  activityId: number;
  cardId: number;
}

export enum FlopActivityFlopCardReq_CmdId {
  CMD_ID = 4175,
  UNRECOGNIZED = -1,
}

export interface FlopActivityFlopCardRsp {
  retcode: FlopActivityFlopCardRsp_Retcode;
  activityData: FlopActivityData | undefined;
  rewardIndex: number;
  rewardList: RewardData[];
}

export enum FlopActivityFlopCardRsp_CmdId {
  CMD_ID = 4176,
  UNRECOGNIZED = -1,
}

export enum FlopActivityFlopCardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  HAS_FLOP = 3,
  HAS_UNLOCK = 4,
  NO_TIMES = 5,
  ITEMS_LACK = 6,
  UNRECOGNIZED = -1,
}

export interface FlopActivityRewardData {
  index: number;
  state: number;
}

export interface ForgeEquipmentReq {
  forgeId: number;
  consumeItemList: EquipmentItemList | undefined;
  keepRuneEquipUniqueId: number;
  keepRuneCostItemList: EquipmentItemList | undefined;
}

export enum ForgeEquipmentReq_CmdId {
  CMD_ID = 3652,
  UNRECOGNIZED = -1,
}

export interface ForgeEquipmentRsp {
  retcode: ForgeEquipmentRsp_Retcode;
  forgeId: number;
  returnMaterialList: Material[];
}

export enum ForgeEquipmentRsp_CmdId {
  CMD_ID = 3653,
  UNRECOGNIZED = -1,
}

export enum ForgeEquipmentRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LEVEL_LIMIT = 2,
  NO_TIMES = 3,
  CONSUME_ITEM_NOT_EXIST = 4,
  CONSUME_ITEM_IN_USE = 5,
  CONSUME_ITEM_REPEAT = 6,
  CONSUME_ITEM_PROTECTED = 7,
  COST_GACHA_TICKET = 8,
  COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 9,
  COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 10,
  CONSUME_ITEM_GRAND_KEY = 11,
  CONSUME_ITEM_IN_FACILITY = 12,
  CURRENCY_LACK = 13,
  CONSUME_ITEM_MATCHING_REDUNDANT = 14,
  CONSUME_ITEM_MATCHING_LACK = 15,
  CONSUME_WEAPON_LOCKED = 16,
  QUANTUM_WEAPON_NUM_LIMIT = 17,
  QUANTUM_FORGE_CLOSED = 18,
  WAIT_SELECTED_RUNE = 19,
  NO_RUNE = 20,
  CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 21,
  FEATURE_CLOSED = 22,
  UNRECOGNIZED = -1,
}

export interface FoundationData {
  productName: string;
  hasTakeRewardLevelList: number[];
}

export interface FrameData {
  id: number;
  expireTime: number;
}

export enum FrameData_EvaluationType {
  Evaluate = 0,
  Playback = 1,
  UNRECOGNIZED = -1,
}

export interface FriendAskAddData {
  brief: PlayerFriendBriefData | undefined;
  askTime: number;
}

export interface FriendBondNotify {
  friendUid: number;
  bond: number;
}

export enum FriendBondNotify_CmdId {
  CMD_ID = 394,
  UNRECOGNIZED = -1,
}

export interface FriendCabin {
  type: number;
  level: number;
  extendGrade: number;
}

export interface FriendRemark {
  uid: number;
  remark: string;
}

export interface FriendsPointGachaData {
  friendsPointCost: number;
}

export interface FrontEndlessActivity {
  curFloor: number;
  floorScoreList: FrontEndlessActivity_FloorScore[];
}

export interface FrontEndlessActivity_FloorScore {
  floor: number;
  score: number;
}

export interface FrontEndlessActivityBattleBeginReq {
  activityId: number;
  stageId: number;
  floor: number;
}

export enum FrontEndlessActivityBattleBeginReq_CmdId {
  CMD_ID = 4064,
  UNRECOGNIZED = -1,
}

export interface FrontEndlessActivityBattleBeginRsp {
  retcode: FrontEndlessActivityBattleBeginRsp_Retcode;
}

export enum FrontEndlessActivityBattleBeginRsp_CmdId {
  CMD_ID = 4065,
  UNRECOGNIZED = -1,
}

export enum FrontEndlessActivityBattleBeginRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface FrontEndlessActivityBattleEndReq {
  activityId: number;
  stageId: number;
  floor: number;
  score: number;
  endStatus: StageEndStatus;
  costTime: number;
}

export enum FrontEndlessActivityBattleEndReq_CmdId {
  CMD_ID = 4066,
  UNRECOGNIZED = -1,
}

export interface FrontEndlessActivityBattleEndRsp {
  retcode: FrontEndlessActivityBattleEndRsp_Retcode;
  curFloor: number;
  rewardData: RewardData | undefined;
}

export enum FrontEndlessActivityBattleEndRsp_CmdId {
  CMD_ID = 4067,
  UNRECOGNIZED = -1,
}

export enum FrontEndlessActivityBattleEndRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_CUR_FLOOR = 2,
  UNRECOGNIZED = -1,
}

export interface Furniture {
  id: number;
  posX: number;
  posY: number;
  direction: number;
  location: number;
}

export interface GachaCoinTransferData {
  gachaType: number;
}

export interface GachaDailyTimesLimitSwitchData {
}

export interface GachaDetailProb {
  name: string;
  star: string;
  content: string;
  prob: string;
  isUp: boolean;
  orderValue: number;
}

export interface GachaDisplayCommonData {
  titleImage: string;
  supplyImage: string;
  title: string;
  content: string;
  upAvatarList: number[];
  upWeaponList: WeaponDetailData[];
  upStigmataList: StigmataDetailData[];
  rule: string;
  contentDetail: string;
  upItemList: number[];
  contentUrl: string;
  btnImagePath: string;
  sortItemList: GachaSortItem[];
  isEnablePrompt: boolean;
  gachaId: number;
  dataBeginTime: number;
  dataEndTime: number;
  upElfList: number[];
  displayExt: string;
  freeGachaTimes: number;
}

export interface GachaExRewardInfo {
  exRewardList: GachaExRewardInfo_ExReward[];
  displayExRewardItem: number;
  displayExRewardType: number;
  displayExRewardDetailList: GachaExRewardInfo_ExRewardDisplayDetail[];
}

export interface GachaExRewardInfo_ExReward {
  needGachaTimes: number;
  rewardId: number;
  isTaken: boolean;
}

export interface GachaExRewardInfo_ExRewardDisplayDetail {
  needGachaTimes: number;
  itemId: number;
  itemNum: number;
  isTaken: boolean;
  isDisplayShining: boolean;
}

export interface GachaItem {
  itemId: number;
  level: number;
  num: number;
  splitFragmentNum: number;
  isRareDrop: boolean;
  giftItemId: number;
  giftLevel: number;
  giftNum: number;
  transferItemList: GenericItemNum[];
  isClientDisplayTransfer: boolean;
}

export interface GachaLog {
  time: number;
  item: GachaItem | undefined;
}

export interface GachaProtectDisplayInfo {
  protectDisplayType: GachaProtectDisplayInfo_ProtectDisplayType;
  displayKeyAvatar: number;
  displayKeyItemList: number[];
  dropedUpItemList: number[];
  noProtectGachaTimes: number;
}

export enum GachaProtectDisplayInfo_ProtectDisplayType {
  NO_DISPLAY = 0,
  AVATAR_DISPLAY = 1,
  EQUIP_DISPLAY = 2,
  UNRECOGNIZED = -1,
}

export interface GachaSortItem {
  itemId: number;
  level: number;
  num: number;
}

export interface GachaSwitchData {
  gachaId: number;
  gachaType: number;
}

export interface GachaTotalProb {
  name: string;
  prob: string;
  orderValue: number;
}

export interface GardenActivityData {
  gardenId: number;
  siteList: GardenSite[];
  cropList: GardenCrop[];
  dailyHarvestNum: number;
  lastGrowTime: number;
}

export interface GardenCrop {
  cropId: number;
  harvestNum: number;
}

export interface GardenHarvestReq {
  siteList: number[];
}

export enum GardenHarvestReq_CmdId {
  CMD_ID = 4289,
  UNRECOGNIZED = -1,
}

export interface GardenHarvestRsp {
  retcode: GardenHarvestRsp_Retcode;
  garden: GardenActivityData | undefined;
}

export enum GardenHarvestRsp_CmdId {
  CMD_ID = 4290,
  UNRECOGNIZED = -1,
}

export enum GardenHarvestRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  DAILY_HARVEST_LIMIT = 3,
  UNRECOGNIZED = -1,
}

export interface GardenRefreshSiteReq {
}

export enum GardenRefreshSiteReq_CmdId {
  CMD_ID = 4293,
  UNRECOGNIZED = -1,
}

export interface GardenRefreshSiteRsp {
  retcode: GardenRefreshSiteRsp_Retcode;
  gardenId: number;
  siteList: GardenSite[];
  lastGrowTime: number;
}

export enum GardenRefreshSiteRsp_CmdId {
  CMD_ID = 4294,
  UNRECOGNIZED = -1,
}

export enum GardenRefreshSiteRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GardenSite {
  siteId: number;
  cropId: number;
  delayBeginTime: number;
}

export interface GardenSpeedUpWithMaterialReq {
}

export enum GardenSpeedUpWithMaterialReq_CmdId {
  CMD_ID = 4291,
  UNRECOGNIZED = -1,
}

export interface GardenSpeedUpWithMaterialRsp {
  retcode: GardenSpeedUpWithMaterialRsp_Retcode;
  garden: GardenActivityData | undefined;
}

export enum GardenSpeedUpWithMaterialRsp_CmdId {
  CMD_ID = 4292,
  UNRECOGNIZED = -1,
}

export enum GardenSpeedUpWithMaterialRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  MATERIAL_NOT_ENOUGH = 3,
  SITE_FULL = 4,
  UNRECOGNIZED = -1,
}

export interface GeneralActivity {
  generalBasicInfo: GeneralActivityBasicInfo | undefined;
  settleInfo: GeneralActivitySettleInfo | undefined;
  pushTowerInfo: PushTowerActivityInfo | undefined;
  teamAssaultInfo: TeamAssaultActivityInfo | undefined;
  activityStage: GeneralActivityStage | undefined;
  coupleTower: CoupleTowerActivity | undefined;
  endlessSingle: EndlessSingleModeActivity | undefined;
  singleRaid: SingleRaidActivity | undefined;
  optionalBuff: OptionalBuffActivity | undefined;
  challengeWar: ChallengeWarActivity | undefined;
  crisisMode: CrisisModeActivity | undefined;
  scheduledMapSite: ScheduledMapSiteActivity | undefined;
  bossChallenge: BossChallengeActivity | undefined;
  frontEndless: FrontEndlessActivity | undefined;
}

export interface GeneralActivityBasicInfo {
  activityId: number;
  curScore: number;
  seriesActivityId: number[];
  scoreRewardTakenList: number[];
  scheduleId: number;
}

export interface GeneralActivityGetMainInfoReq {
  activityIdList: number[];
}

export enum GeneralActivityGetMainInfoReq_CmdId {
  CMD_ID = 4005,
  UNRECOGNIZED = -1,
}

export interface GeneralActivityGetMainInfoRsp {
  retcode: GeneralActivityGetMainInfoRsp_Retcode;
  activityList: GeneralActivity[];
}

export enum GeneralActivityGetMainInfoRsp_CmdId {
  CMD_ID = 4006,
  UNRECOGNIZED = -1,
}

export enum GeneralActivityGetMainInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GeneralActivityGetRankReq {
  activityId: number;
}

export enum GeneralActivityGetRankReq_CmdId {
  CMD_ID = 4007,
  UNRECOGNIZED = -1,
}

export interface GeneralActivityGetRankRsp {
  retcode: GeneralActivityGetRankRsp_Retcode;
  activityId: number;
  rankData: RankShowData | undefined;
}

export enum GeneralActivityGetRankRsp_CmdId {
  CMD_ID = 4008,
  UNRECOGNIZED = -1,
}

export enum GeneralActivityGetRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GeneralActivityGetScheduleReq {
}

export enum GeneralActivityGetScheduleReq_CmdId {
  CMD_ID = 4003,
  UNRECOGNIZED = -1,
}

export interface GeneralActivityGetScheduleRsp {
  retcode: GeneralActivityGetScheduleRsp_Retcode;
  scheduleList: GeneralActivityScheduleInfo[];
}

export enum GeneralActivityGetScheduleRsp_CmdId {
  CMD_ID = 4004,
  UNRECOGNIZED = -1,
}

export enum GeneralActivityGetScheduleRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GeneralActivityGetScoreRewardInfoReq {
  activityIdList: number[];
}

export enum GeneralActivityGetScoreRewardInfoReq_CmdId {
  CMD_ID = 4001,
  UNRECOGNIZED = -1,
}

export interface GeneralActivityGetScoreRewardInfoRsp {
  retcode: GeneralActivityGetScoreRewardInfoRsp_Retcode;
  scoreInfoList: GeneralActivityScoreRewardInfo[];
}

export enum GeneralActivityGetScoreRewardInfoRsp_CmdId {
  CMD_ID = 4002,
  UNRECOGNIZED = -1,
}

export enum GeneralActivityGetScoreRewardInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GeneralActivityGetStageRankReq {
  stageId: number;
  rankId: number;
}

export enum GeneralActivityGetStageRankReq_CmdId {
  CMD_ID = 4052,
  UNRECOGNIZED = -1,
}

export interface GeneralActivityGetStageRankRsp {
  retcode: GeneralActivityGetStageRankRsp_Retcode;
  stageId: number;
  rankData: RankShowData | undefined;
}

export enum GeneralActivityGetStageRankRsp_CmdId {
  CMD_ID = 4053,
  UNRECOGNIZED = -1,
}

export enum GeneralActivityGetStageRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GeneralActivityScheduleInfo {
  activityId: number;
  showTime: number;
  beginTime: number;
  settleTime: number;
  endTime: number;
  beginDayTime: number;
  endDayTime: number;
  leftTimes: number;
  scheduleId: number;
}

export interface GeneralActivityScoreRewardInfo {
  activityId: number;
  curScore: number;
  scoreRewardTakenList: number[];
}

export interface GeneralActivityScoreRewardNotify {
  activityId: number;
  id: number;
  rewardList: RewardData[];
}

export enum GeneralActivityScoreRewardNotify_CmdId {
  CMD_ID = 4000,
  UNRECOGNIZED = -1,
}

export interface GeneralActivitySettleInfo {
  activityId: number;
  rankType: number;
  rank: number;
  rewardList: RewardData[];
}

export interface GeneralActivityStage {
  enterTimes: number;
  exchangeTimes: number;
  curScore: number;
  stageRewardTakenList: number[];
  bonusScoreTimes: number;
  stageGroupScheduleList: GeneralActivityStageGroupScheduleInfo[];
  stageGroupRewardTakenList: number[];
}

export interface GeneralActivityStageExchangeEnterTimesReq {
  activityId: number;
}

export enum GeneralActivityStageExchangeEnterTimesReq_CmdId {
  CMD_ID = 4030,
  UNRECOGNIZED = -1,
}

export interface GeneralActivityStageExchangeEnterTimesRsp {
  retcode: GeneralActivityStageExchangeEnterTimesRsp_Retcode;
  activityId: number;
  enterTimes: number;
  exchangeTimes: number;
}

export enum GeneralActivityStageExchangeEnterTimesRsp_CmdId {
  CMD_ID = 4031,
  UNRECOGNIZED = -1,
}

export enum GeneralActivityStageExchangeEnterTimesRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MATERIAL_LACK = 2,
  RESET_TIMES_LACK = 3,
  UNRECOGNIZED = -1,
}

export interface GeneralActivityStageGroupScheduleInfo {
  stageGroupId: number;
  beginTime: number;
  endTime: number;
}

export interface GeneralActivityStageTakeStageGroupRewardReq {
  activityId: number;
  activityStageGroupId: number;
}

export enum GeneralActivityStageTakeStageGroupRewardReq_CmdId {
  CMD_ID = 4036,
  UNRECOGNIZED = -1,
}

export interface GeneralActivityStageTakeStageGroupRewardRsp {
  retcode: GeneralActivityStageTakeStageGroupRewardRsp_Retcode;
  rewardData: RewardData | undefined;
  activityId: number;
  activityStageGroupId: number;
}

export enum GeneralActivityStageTakeStageGroupRewardRsp_CmdId {
  CMD_ID = 4037,
  UNRECOGNIZED = -1,
}

export enum GeneralActivityStageTakeStageGroupRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKEN = 2,
  NOT_REACH = 3,
  UNRECOGNIZED = -1,
}

export interface GeneralActivityStageTakeStageRewardReq {
  activityId: number;
  stageId: number;
}

export enum GeneralActivityStageTakeStageRewardReq_CmdId {
  CMD_ID = 4032,
  UNRECOGNIZED = -1,
}

export interface GeneralActivityStageTakeStageRewardRsp {
  retcode: GeneralActivityStageTakeStageRewardRsp_Retcode;
  activityId: number;
  stageId: number;
  rewardDataList: RewardData[];
}

export enum GeneralActivityStageTakeStageRewardRsp_CmdId {
  CMD_ID = 4033,
  UNRECOGNIZED = -1,
}

export enum GeneralActivityStageTakeStageRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GeneralActivityTakeTicketReq {
  activityId: number;
}

export enum GeneralActivityTakeTicketReq_CmdId {
  CMD_ID = 4060,
  UNRECOGNIZED = -1,
}

export interface GeneralActivityTakeTicketRsp {
  retcode: GeneralActivityTakeTicketRsp_Retcode;
  activityId: number;
  ticketList: GeneralActivityTicket[];
}

export enum GeneralActivityTakeTicketRsp_CmdId {
  CMD_ID = 4061,
  UNRECOGNIZED = -1,
}

export enum GeneralActivityTakeTicketRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GeneralActivityTicket {
  materialId: number;
  addNum: number;
}

export interface GenericItemNum {
  id: number;
  num: number;
  level: number;
}

export interface GetActivityRewardStatisticDataReq {
  id: number;
}

export enum GetActivityRewardStatisticDataReq_CmdId {
  CMD_ID = 4312,
  UNRECOGNIZED = -1,
}

export interface GetActivityRewardStatisticDataRsp {
  retcode: GetActivityRewardStatisticDataRsp_Retcode;
  id: number;
  activityRewardData: ActivityRewardStatisticData | undefined;
}

export enum GetActivityRewardStatisticDataRsp_CmdId {
  CMD_ID = 4313,
  UNRECOGNIZED = -1,
}

export enum GetActivityRewardStatisticDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetAdventureGroupReq {
}

export enum GetAdventureGroupReq_CmdId {
  CMD_ID = 3900,
  UNRECOGNIZED = -1,
}

export interface GetAdventureGroupRsp {
  retcode: GetAdventureGroupRsp_Retcode;
  level: number;
  badge: number;
  lastExamination: number;
  avatarList: AdventureGroupAvatar[];
  questList: AdventureGroupQuest[];
  availableQuestList: AdventureGroupAvailableQuest[];
  grain: number;
  hasTakeRewardLevel: number;
  nextScoinAddTime: number;
  storageScoin: number;
  storageStamina: number;
  hasTakeCompensationList: number[];
  cabinLevelList: CabinLevel[];
  decorationSlotList: AdventureDecorationSlot[];
  facilityLevelList: FacilityLevel[];
  todayResetQuestNum: number;
}

export enum GetAdventureGroupRsp_CmdId {
  CMD_ID = 3901,
  UNRECOGNIZED = -1,
}

export enum GetAdventureGroupRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetAdventureStorySweepInfoReq {
}

export enum GetAdventureStorySweepInfoReq_CmdId {
  CMD_ID = 3914,
  UNRECOGNIZED = -1,
}

export interface GetAdventureStorySweepInfoRsp {
  retcode: GetAdventureStorySweepInfoRsp_Retcode;
  storySweepList: IslandStorySweepData[];
  usedStamina: number;
}

export enum GetAdventureStorySweepInfoRsp_CmdId {
  CMD_ID = 3915,
  UNRECOGNIZED = -1,
}

export enum GetAdventureStorySweepInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetArmadaActivityListReq {
}

export enum GetArmadaActivityListReq_CmdId {
  CMD_ID = 2825,
  UNRECOGNIZED = -1,
}

export interface GetArmadaActivityListRsp {
  retcode: GetArmadaActivityListRsp_Retcode;
  activityList: ArmadaActivity[];
}

export enum GetArmadaActivityListRsp_CmdId {
  CMD_ID = 2826,
  UNRECOGNIZED = -1,
}

export enum GetArmadaActivityListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetArmadaBuildOwnershipReq {
}

export enum GetArmadaBuildOwnershipReq_CmdId {
  CMD_ID = 2685,
  UNRECOGNIZED = -1,
}

export interface GetArmadaBuildOwnershipRsp {
  retcode: GetArmadaBuildOwnershipRsp_Retcode;
  buildOwner: number;
  buildOwnershipTime: number;
}

export enum GetArmadaBuildOwnershipRsp_CmdId {
  CMD_ID = 2686,
  UNRECOGNIZED = -1,
}

export enum GetArmadaBuildOwnershipRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_GRANTED = 2,
  NOT_IN_ARMADA = 3,
  UNRECOGNIZED = -1,
}

export interface GetArmadaDataReq {
  level: number;
}

export enum GetArmadaDataReq_CmdId {
  CMD_ID = 2601,
  UNRECOGNIZED = -1,
}

export interface GetArmadaDataRsp {
  retcode: GetArmadaDataRsp_Retcode;
  status: ArmadaPlayerStatus;
  armada: ArmadaData | undefined;
  applyList: ArmadaBriefData[];
  joinCdFinishTime: number;
  isNeedRecommend: boolean;
  lastMailTime: number;
  recommendArmada: ArmadaBriefData | undefined;
  isNew: boolean;
}

export enum GetArmadaDataRsp_CmdId {
  CMD_ID = 2602,
  UNRECOGNIZED = -1,
}

export enum GetArmadaDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LEVEL_LACK = 2,
  UNRECOGNIZED = -1,
}

export interface GetArmadaDiscoveryReq {
}

export enum GetArmadaDiscoveryReq_CmdId {
  CMD_ID = 2663,
  UNRECOGNIZED = -1,
}

export interface GetArmadaDiscoveryRsp {
  retcode: GetArmadaDiscoveryRsp_Retcode;
  armadaWeekDiscovery: number;
  selfWeekDiscovery: number;
  nextRefreshTime: number;
  curTime: number;
  joinTime: number;
  joinArmadaWeekDiscovery: number;
}

export enum GetArmadaDiscoveryRsp_CmdId {
  CMD_ID = 2664,
  UNRECOGNIZED = -1,
}

export enum GetArmadaDiscoveryRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  UNRECOGNIZED = -1,
}

export interface GetArmadaManageDataReq {
}

export enum GetArmadaManageDataReq_CmdId {
  CMD_ID = 2611,
  UNRECOGNIZED = -1,
}

export interface GetArmadaManageDataRsp {
  retcode: GetArmadaManageDataRsp_Retcode;
  applyList: ArmadaApply[];
  applyResultList: ArmadaApplyResult[];
  applyLevel: number;
  autoPass: boolean;
  autoPassLevel: number;
  buildOwner: number;
  buildOwnershipTime: number;
}

export enum GetArmadaManageDataRsp_CmdId {
  CMD_ID = 2612,
  UNRECOGNIZED = -1,
}

export enum GetArmadaManageDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_GRANTED = 2,
  NOT_IN_ARMADA = 3,
  UNRECOGNIZED = -1,
}

export interface GetArmadaMemberDiscoveryListReq {
}

export enum GetArmadaMemberDiscoveryListReq_CmdId {
  CMD_ID = 2665,
  UNRECOGNIZED = -1,
}

export interface GetArmadaMemberDiscoveryListRsp {
  retcode: GetArmadaMemberDiscoveryListRsp_Retcode;
  armadaWeekDiscovery: number;
  memberDiscoveryList: ArmadaMemberDiscovery[];
}

export enum GetArmadaMemberDiscoveryListRsp_CmdId {
  CMD_ID = 2666,
  UNRECOGNIZED = -1,
}

export enum GetArmadaMemberDiscoveryListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  UNRECOGNIZED = -1,
}

export interface GetArmadaReunionActivityReq {
}

export enum GetArmadaReunionActivityReq_CmdId {
  CMD_ID = 2834,
  UNRECOGNIZED = -1,
}

export interface GetArmadaReunionActivityRsp {
  retcode: GetArmadaReunionActivityRsp_Retcode;
  curScheduleId: number;
  missionList: ArmadaReunionMission[];
  playerList: ArmadaReunionPlayer[];
  rewardList: ChatworldDishReward[];
}

export enum GetArmadaReunionActivityRsp_CmdId {
  CMD_ID = 2835,
  UNRECOGNIZED = -1,
}

export enum GetArmadaReunionActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  NOT_IN_ARMADA = 3,
  UNRECOGNIZED = -1,
}

export interface GetArmadaStageReq {
}

export enum GetArmadaStageReq_CmdId {
  CMD_ID = 2667,
  UNRECOGNIZED = -1,
}

export interface GetArmadaStageRewardReq {
}

export enum GetArmadaStageRewardReq_CmdId {
  CMD_ID = 2673,
  UNRECOGNIZED = -1,
}

export interface GetArmadaStageRewardRsp {
  retcode: GetArmadaStageRewardRsp_Retcode;
  hp1Percent: number;
  hp2Percent: number;
  hp3Percent: number;
  isTake: boolean;
  killRewardMaterialId: number;
  killRewardMaterialNum: number;
  lastDamageRate: number;
}

export enum GetArmadaStageRewardRsp_CmdId {
  CMD_ID = 2674,
  UNRECOGNIZED = -1,
}

export enum GetArmadaStageRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  UNRECOGNIZED = -1,
}

export interface GetArmadaStageRsp {
  retcode: GetArmadaStageRsp_Retcode;
  hardGrade: number;
  hardLevel: number;
  summonProgress: number;
  bossId: number;
  bossBeginTime: number;
  bossEndTime: number;
  bossTotalHp: number;
  bossLeftHp: number;
  nextFightTime: number;
  hp1Percent: number;
  hp2Percent: number;
  hp3Percent: number;
  isTake: boolean;
  openBeginTime: number;
  openEndTime: number;
  fightList: ArmadaStageFightInfo[];
  leftFightTimes: number;
  maxHardLevel: number;
  killRewardMaterialId: number;
  lastDamageRate: number;
}

export enum GetArmadaStageRsp_CmdId {
  CMD_ID = 2668,
  UNRECOGNIZED = -1,
}

export enum GetArmadaStageRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  UNRECOGNIZED = -1,
}

export interface GetArmadaStageScoreActivityReq {
}

export enum GetArmadaStageScoreActivityReq_CmdId {
  CMD_ID = 2821,
  UNRECOGNIZED = -1,
}

export interface GetArmadaStageScoreActivityRsp {
  retcode: GetArmadaStageScoreActivityRsp_Retcode;
  activityId: number;
  hasTakeSelfScore: number;
  hasTakeArmadaScore: number;
  stageScoreList: ArmadaStageScore[];
  armadaScoreList: ArmadaStageScorePlayerScore[];
}

export enum GetArmadaStageScoreActivityRsp_CmdId {
  CMD_ID = 2822,
  UNRECOGNIZED = -1,
}

export enum GetArmadaStageScoreActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  NOT_OPEN = 3,
  UNRECOGNIZED = -1,
}

export interface GetArmadaStageScoreRankReq {
  stageId: number;
}

export enum GetArmadaStageScoreRankReq_CmdId {
  CMD_ID = 2842,
  UNRECOGNIZED = -1,
}

export interface GetArmadaStageScoreRankRsp {
  retcode: GetArmadaStageScoreRankRsp_Retcode;
  stageId: number;
  rankData: RankShowData | undefined;
}

export enum GetArmadaStageScoreRankRsp_CmdId {
  CMD_ID = 2843,
  UNRECOGNIZED = -1,
}

export enum GetArmadaStageScoreRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  STAGE_ERROR = 3,
  UNRECOGNIZED = -1,
}

export interface GetAskAddFriendListReq {
}

export enum GetAskAddFriendListReq_CmdId {
  CMD_ID = 70,
  UNRECOGNIZED = -1,
}

export interface GetAskAddFriendListRsp {
  retcode: GetAskAddFriendListRsp_Retcode;
  askList: FriendAskAddData[];
}

export enum GetAskAddFriendListRsp_CmdId {
  CMD_ID = 71,
  UNRECOGNIZED = -1,
}

export enum GetAskAddFriendListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetAssistantFrozenListReq {
}

export enum GetAssistantFrozenListReq_CmdId {
  CMD_ID = 100,
  UNRECOGNIZED = -1,
}

export interface GetAssistantFrozenListRsp {
  retcode: GetAssistantFrozenListRsp_Retcode;
  frozenList: AssistantFrozen[];
}

export enum GetAssistantFrozenListRsp_CmdId {
  CMD_ID = 101,
  UNRECOGNIZED = -1,
}

export enum GetAssistantFrozenListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetAuthkeyReq {
  authAppid: string;
  signType: number;
  authkeyVer: number;
}

export enum GetAuthkeyReq_CmdId {
  CMD_ID = 5010,
  UNRECOGNIZED = -1,
}

export interface GetAuthkeyRsp {
  retcode: GetAuthkeyRsp_Retcode;
  authkey: string;
  authAppid: string;
  signType: number;
  authkeyVer: number;
}

export enum GetAuthkeyRsp_CmdId {
  CMD_ID = 5011,
  UNRECOGNIZED = -1,
}

export enum GetAuthkeyRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SIGN_TYPE_ERROR = 2,
  AUTHKEY_VER_ERROR = 3,
  UNRECOGNIZED = -1,
}

export interface GetAvatarBindEquipInChallengeModeReq {
  avatarIdList: number[];
}

export enum GetAvatarBindEquipInChallengeModeReq_CmdId {
  CMD_ID = 809,
  UNRECOGNIZED = -1,
}

export interface GetAvatarBindEquipInChallengeModeRsp {
  retcode: GetAvatarBindEquipInChallengeModeRsp_Retcode;
  avatarEquipList: AvatarBindEquipData[];
}

export enum GetAvatarBindEquipInChallengeModeRsp_CmdId {
  CMD_ID = 810,
  UNRECOGNIZED = -1,
}

export enum GetAvatarBindEquipInChallengeModeRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetAvatarDataReq {
  avatarIdList: number[];
}

export enum GetAvatarDataReq_CmdId {
  CMD_ID = 24,
  UNRECOGNIZED = -1,
}

export interface GetAvatarDataRsp {
  retcode: GetAvatarDataRsp_Retcode;
  avatarList: Avatar[];
  isAll: boolean;
}

export enum GetAvatarDataRsp_CmdId {
  CMD_ID = 25,
  UNRECOGNIZED = -1,
}

export enum GetAvatarDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_NOT_EXIST = 2,
  UNRECOGNIZED = -1,
}

export interface GetAvatarEquipSuiteReq {
  avatarId: number;
}

export enum GetAvatarEquipSuiteReq_CmdId {
  CMD_ID = 1454,
  UNRECOGNIZED = -1,
}

export interface GetAvatarEquipSuiteRsp {
  retcode: GetAvatarEquipSuiteRsp_Retcode;
  avatarId: number;
  equipSuiteList: AvatarEquipSuite[];
}

export enum GetAvatarEquipSuiteRsp_CmdId {
  CMD_ID = 1455,
  UNRECOGNIZED = -1,
}

export enum GetAvatarEquipSuiteRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetAvatarMissionActivityReq {
}

export enum GetAvatarMissionActivityReq_CmdId {
  CMD_ID = 3000,
  UNRECOGNIZED = -1,
}

export interface GetAvatarMissionActivityRsp {
  retcode: GetAvatarMissionActivityRsp_Retcode;
  activityId: number;
  avatarSampleId: number;
  chooseAvatarTime: number;
  resetChooseTimes: number;
  lastRefreshTime: number;
  dailyContractPoint: number;
  isDailyRewardTaken: boolean;
  activityFinishDays: number;
  takenRewardDaysList: number[];
  dailyRewardNum: number;
}

export enum GetAvatarMissionActivityRsp_CmdId {
  CMD_ID = 3001,
  UNRECOGNIZED = -1,
}

export enum GetAvatarMissionActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetAvatarRollDataReq {
  avatarIdList: number[];
}

export enum GetAvatarRollDataReq_CmdId {
  CMD_ID = 643,
  UNRECOGNIZED = -1,
}

export interface GetAvatarRollDataRsp {
  retcode: GetAvatarRollDataRsp_Retcode;
  rollList: AvatarRoll[];
  isAll: boolean;
}

export enum GetAvatarRollDataRsp_CmdId {
  CMD_ID = 644,
  UNRECOGNIZED = -1,
}

export enum GetAvatarRollDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_NOT_EXIST = 2,
  UNRECOGNIZED = -1,
}

export interface GetAvatarTeamDataReq {
}

export enum GetAvatarTeamDataReq_CmdId {
  CMD_ID = 47,
  UNRECOGNIZED = -1,
}

export interface GetAvatarTeamDataRsp {
  retcode: GetAvatarTeamDataRsp_Retcode;
  avatarTeamList: AvatarTeam[];
  customAvatarTeamList: CustomAvatarTeam[];
}

export enum GetAvatarTeamDataRsp_CmdId {
  CMD_ID = 48,
  UNRECOGNIZED = -1,
}

export enum GetAvatarTeamDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetBattlePassReq {
}

export enum GetBattlePassReq_CmdId {
  CMD_ID = 3750,
  UNRECOGNIZED = -1,
}

export interface GetBattlePassRsp {
  retcode: GetBattlePassRsp_Retcode;
  scheduleId: number;
  level: number;
  exp: number;
  hasTakeRewardLevel: number;
  hasGotTicketList: number[];
  phaseMaxExp: number;
  phaseExp: number;
  isTakePhaseFreeExp: boolean;
  battlePassMissionList: BattlePassMission[];
  phaseEndTime: number;
}

export enum GetBattlePassRsp_CmdId {
  CMD_ID = 3751,
  UNRECOGNIZED = -1,
}

export enum GetBattlePassRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetBattlePassThemeReq {
}

export enum GetBattlePassThemeReq_CmdId {
  CMD_ID = 3760,
  UNRECOGNIZED = -1,
}

export interface GetBattlePassThemeRsp {
  retcode: GetBattlePassThemeRsp_Retcode;
  id: number;
  level: number;
  exp: number;
  hasTakeRewardLevel: number;
  beginTime: number;
  endTime: number;
}

export enum GetBattlePassThemeRsp_CmdId {
  CMD_ID = 3761,
  UNRECOGNIZED = -1,
}

export enum GetBattlePassThemeRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetBbqActivityDataReq {
  activityId: number;
}

export enum GetBbqActivityDataReq_CmdId {
  CMD_ID = 4250,
  UNRECOGNIZED = -1,
}

export interface GetBbqActivityDataRsp {
  retcode: GetBbqActivityDataRsp_Retcode;
  activityId: number;
  bbqLevel: number;
  bbqExp: number;
  maxRewardTakenLevel: number;
  canUseBbqCount: number;
}

export enum GetBbqActivityDataRsp_CmdId {
  CMD_ID = 4251,
  UNRECOGNIZED = -1,
}

export enum GetBbqActivityDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetBingoActivityDataReq {
  activityId: number;
}

export enum GetBingoActivityDataReq_CmdId {
  CMD_ID = 4157,
  UNRECOGNIZED = -1,
}

export interface GetBingoActivityDataRsp {
  retcode: GetBingoActivityDataRsp_Retcode;
  activityId: number;
  bingoDataList: BingoData[];
}

export enum GetBingoActivityDataRsp_CmdId {
  CMD_ID = 4158,
  UNRECOGNIZED = -1,
}

export enum GetBingoActivityDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetBlackListReq {
  isOnlyUid: boolean;
}

export enum GetBlackListReq_CmdId {
  CMD_ID = 1594,
  UNRECOGNIZED = -1,
}

export interface GetBlackListRsp {
  retcode: GetBlackListRsp_Retcode;
  blackList: PlayerFriendBriefData[];
  isWholeData: boolean;
  isOnlyUid: boolean;
}

export enum GetBlackListRsp_CmdId {
  CMD_ID = 1595,
  UNRECOGNIZED = -1,
}

export enum GetBlackListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetBlockZoneActivityReq {
}

export enum GetBlockZoneActivityReq_CmdId {
  CMD_ID = 4344,
  UNRECOGNIZED = -1,
}

export interface GetBlockZoneActivityRsp {
  retcode: GetBlockZoneActivityRsp_Retcode;
  seasonId: number;
  taleId: number;
}

export enum GetBlockZoneActivityRsp_CmdId {
  CMD_ID = 4345,
  UNRECOGNIZED = -1,
}

export enum GetBlockZoneActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetBossRushActivityReq {
  activityId: number;
}

export enum GetBossRushActivityReq_CmdId {
  CMD_ID = 496,
  UNRECOGNIZED = -1,
}

export interface GetBossRushActivityRsp {
  retcode: GetBossRushActivityRsp_Retcode;
  activityId: number;
  phaseId: number;
  buffList: BossRushBuff[];
}

export enum GetBossRushActivityRsp_CmdId {
  CMD_ID = 497,
  UNRECOGNIZED = -1,
}

export enum GetBossRushActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_OPEN = 2,
  ACTIVITY_ERROR = 3,
  UNRECOGNIZED = -1,
}

export interface GetBriefDataListReq {
  uidList: number[];
}

export enum GetBriefDataListReq_CmdId {
  CMD_ID = 1374,
  UNRECOGNIZED = -1,
}

export interface GetBriefDataListRsp {
  retcode: GetBriefDataListRsp_Retcode;
  uidBriefDataList: PlayerFriendBriefData[];
}

export enum GetBriefDataListRsp_CmdId {
  CMD_ID = 1375,
  UNRECOGNIZED = -1,
}

export enum GetBriefDataListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UID_NUM_LIMIT = 2,
  TOO_FREQUENT = 3,
  UNRECOGNIZED = -1,
}

export interface GetBuffEffectReq {
  effectIdList: number[];
}

export enum GetBuffEffectReq_CmdId {
  CMD_ID = 476,
  UNRECOGNIZED = -1,
}

export interface GetBuffEffectRsp {
  retcode: GetBuffEffectRsp_Retcode;
  effectList: BuffEffect[];
  auraEffectList: number[];
}

export enum GetBuffEffectRsp_CmdId {
  CMD_ID = 477,
  UNRECOGNIZED = -1,
}

export enum GetBuffEffectRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ADD_FAIL = 2,
  UNRECOGNIZED = -1,
}

export interface GetBulletinActivityMissionReq {
  activityIdList: number[];
}

export enum GetBulletinActivityMissionReq_CmdId {
  CMD_ID = 4321,
  UNRECOGNIZED = -1,
}

export interface GetBulletinActivityMissionRsp {
  retcode: GetBulletinActivityMissionRsp_Retcode;
  missionGroupList: BulletinMissionGroup[];
}

export enum GetBulletinActivityMissionRsp_CmdId {
  CMD_ID = 4322,
  UNRECOGNIZED = -1,
}

export enum GetBulletinActivityMissionRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetBulletinReq {
  type: GetBulletinReq_ReqBulletinType;
  bulletinIdList: number[];
}

export enum GetBulletinReq_CmdId {
  CMD_ID = 137,
  UNRECOGNIZED = -1,
}

export enum GetBulletinReq_ReqBulletinType {
  BULLETIN_ALL = 0,
  BULLETIN_UPDATE_TIME = 1,
  BULLETIN_TITLE = 2,
  BULLETIN_CONTENT = 3,
  UNRECOGNIZED = -1,
}

export interface GetBulletinRsp {
  retcode: GetBulletinRsp_Retcode;
  bulletinList: Bulletin[];
  isAll: boolean;
}

export enum GetBulletinRsp_CmdId {
  CMD_ID = 138,
  UNRECOGNIZED = -1,
}

export enum GetBulletinRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetBulletinScoreActivityReq {
  activityId: number;
}

export enum GetBulletinScoreActivityReq_CmdId {
  CMD_ID = 4163,
  UNRECOGNIZED = -1,
}

export interface GetBulletinScoreActivityRsp {
  retcode: GetBulletinScoreActivityRsp_Retcode;
  activityList: BulletinScoreActivity[];
}

export enum GetBulletinScoreActivityRsp_CmdId {
  CMD_ID = 4164,
  UNRECOGNIZED = -1,
}

export enum GetBulletinScoreActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetBurdenAlleviationReq {
}

export enum GetBurdenAlleviationReq_CmdId {
  CMD_ID = 4352,
  UNRECOGNIZED = -1,
}

export interface GetBurdenAlleviationRsp {
  retcode: GetBurdenAlleviationRsp_Retcode;
  activityData: BurdenAlleviationActivity | undefined;
}

export enum GetBurdenAlleviationRsp_CmdId {
  CMD_ID = 4353,
  UNRECOGNIZED = -1,
}

export enum GetBurdenAlleviationRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetCardProductInfoReq {
}

export enum GetCardProductInfoReq_CmdId {
  CMD_ID = 1142,
  UNRECOGNIZED = -1,
}

export interface GetCardProductInfoRsp {
  retcode: GetCardProductInfoRsp_Retcode;
  cardProductInfoList: CardProductInfo[];
}

export enum GetCardProductInfoRsp_CmdId {
  CMD_ID = 1143,
  UNRECOGNIZED = -1,
}

export enum GetCardProductInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetChallengeStepBonusReq {
  stepId: number;
}

export enum GetChallengeStepBonusReq_CmdId {
  CMD_ID = 1043,
  UNRECOGNIZED = -1,
}

export interface GetChallengeStepBonusRsp {
  retcode: GetChallengeStepBonusRsp_Retcode;
  rewardList: RewardData[];
}

export enum GetChallengeStepBonusRsp_CmdId {
  CMD_ID = 1044,
  UNRECOGNIZED = -1,
}

export enum GetChallengeStepBonusRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  STEP_ID_ERROR = 2,
  BONUS_HAS_TAKEN = 3,
  STEP_NOT_FINISH = 4,
  EQUIPMENT_FULL = 5,
  EQUIPMENT_MATERIAL_LIMIT = 6,
  EQUIPMENT_FRAGMENT_LIMIT = 7,
  EQUIPMENT_ELF_FRAGMENT_LIMIT = 8,
  UNRECOGNIZED = -1,
}

export interface GetChallengeStepCompensationInfoReq {
}

export enum GetChallengeStepCompensationInfoReq_CmdId {
  CMD_ID = 1676,
  UNRECOGNIZED = -1,
}

export interface GetChallengeStepCompensationInfoRsp {
  retcode: GetChallengeStepCompensationInfoRsp_Retcode;
  compensationList: ChallengeStepCompensation[];
}

export enum GetChallengeStepCompensationInfoRsp_CmdId {
  CMD_ID = 1677,
  UNRECOGNIZED = -1,
}

export enum GetChallengeStepCompensationInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetChallengeStepRewardReq {
  stepId: number;
}

export enum GetChallengeStepRewardReq_CmdId {
  CMD_ID = 536,
  UNRECOGNIZED = -1,
}

export interface GetChallengeStepRewardRsp {
  retcode: GetChallengeStepRewardRsp_Retcode;
  rewardList: RewardData[];
}

export enum GetChallengeStepRewardRsp_CmdId {
  CMD_ID = 537,
  UNRECOGNIZED = -1,
}

export enum GetChallengeStepRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  STEP_ID_ERROR = 2,
  STEP_STATUS_ERROR = 3,
  EQUIPMENT_FULL = 4,
  EQUIPMENT_MATERIAL_LIMIT = 5,
  EQUIPMENT_FRAGMENT_LIMIT = 6,
  EQUIPMENT_ELF_FRAGMENT_LIMIT = 7,
  UNRECOGNIZED = -1,
}

export interface GetChapterActivityDataReq {
}

export enum GetChapterActivityDataReq_CmdId {
  CMD_ID = 4200,
  UNRECOGNIZED = -1,
}

export interface GetChapterActivityDataRsp {
  retcode: GetChapterActivityDataRsp_Retcode;
  chapterActivityList: ChapterActivity[];
}

export enum GetChapterActivityDataRsp_CmdId {
  CMD_ID = 4201,
  UNRECOGNIZED = -1,
}

export enum GetChapterActivityDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetChapterCompensationInfoReq {
  chapterId: number;
}

export enum GetChapterCompensationInfoReq_CmdId {
  CMD_ID = 1672,
  UNRECOGNIZED = -1,
}

export interface GetChapterCompensationInfoRsp {
  retcode: GetChapterCompensationInfoRsp_Retcode;
  isAll: boolean;
  compensateList: ChapterCompensationInfo[];
}

export enum GetChapterCompensationInfoRsp_CmdId {
  CMD_ID = 1673,
  UNRECOGNIZED = -1,
}

export enum GetChapterCompensationInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetChatgroupHistoryChatMsgReq {
  chatgroupId: number;
}

export enum GetChatgroupHistoryChatMsgReq_CmdId {
  CMD_ID = 2218,
  UNRECOGNIZED = -1,
}

export interface GetChatgroupHistoryChatMsgRsp {
  retcode: GetChatgroupHistoryChatMsgRsp_Retcode;
  chatgroupId: number;
  chatMsgList: ChatMsg[];
}

export enum GetChatgroupHistoryChatMsgRsp_CmdId {
  CMD_ID = 2219,
  UNRECOGNIZED = -1,
}

export enum GetChatgroupHistoryChatMsgRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetChatgroupListReq {
  isAll: boolean;
  chatgroupIdList: number[];
}

export enum GetChatgroupListReq_CmdId {
  CMD_ID = 2204,
  UNRECOGNIZED = -1,
}

export interface GetChatgroupListRsp {
  retcode: GetChatgroupListRsp_Retcode;
  isAll: boolean;
  chatgroupList: Chatgroup[];
  inviteList: ChatgroupInvite[];
}

export enum GetChatgroupListRsp_CmdId {
  CMD_ID = 2205,
  UNRECOGNIZED = -1,
}

export enum GetChatgroupListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetChatRedEnvelopeInfoReq {
  senderUid: number;
  redEnvelopeId: number;
}

export enum GetChatRedEnvelopeInfoReq_CmdId {
  CMD_ID = 1502,
  UNRECOGNIZED = -1,
}

export interface GetChatRedEnvelopeInfoRsp {
  retcode: GetChatRedEnvelopeInfoRsp_Retcode;
  senderUid: number;
  redEnvelopeId: number;
  takenNum: number;
  expireTime: number;
  takeRedEnvelopeList: TakeChatRedEnvelopePlayer[];
}

export enum GetChatRedEnvelopeInfoRsp_CmdId {
  CMD_ID = 1503,
  UNRECOGNIZED = -1,
}

export enum GetChatRedEnvelopeInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetChatReportInfoReq {
}

export enum GetChatReportInfoReq_CmdId {
  CMD_ID = 1159,
  UNRECOGNIZED = -1,
}

export interface GetChatReportInfoRsp {
  retcode: GetChatReportInfoRsp_Retcode;
  chatForbidFinishTime: number;
  chatForbidTimes: number;
  lostChatCredit: number;
}

export enum GetChatReportInfoRsp_CmdId {
  CMD_ID = 1160,
  UNRECOGNIZED = -1,
}

export enum GetChatReportInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetChatworldListReq {
  startId: number;
  endId: number;
  sceneId: number;
}

export enum GetChatworldListReq_CmdId {
  CMD_ID = 2411,
  UNRECOGNIZED = -1,
}

export interface GetChatworldListRsp {
  retcode: GetChatworldListRsp_Retcode;
  chatworldList: ChatworldBrief[];
  showMaxId: number;
  sceneId: number;
  redisChatworldList: number[];
}

export enum GetChatworldListRsp_CmdId {
  CMD_ID = 2412,
  UNRECOGNIZED = -1,
}

export enum GetChatworldListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetChatworldTreasureDataReq {
  chatworldId: number;
  curTreasureScheduleId: number;
}

export enum GetChatworldTreasureDataReq_CmdId {
  CMD_ID = 2415,
  UNRECOGNIZED = -1,
}

export interface GetChatworldTreasureDataRsp {
  retcode: GetChatworldTreasureDataRsp_Retcode;
  chatworldId: number;
  chatworldTreasureList: ChatworldTreasure[];
}

export enum GetChatworldTreasureDataRsp_CmdId {
  CMD_ID = 2416,
  UNRECOGNIZED = -1,
}

export enum GetChatworldTreasureDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_CHATWORLD = 2,
  UNRECOGNIZED = -1,
}

export interface GetClearStageActivityReq {
}

export enum GetClearStageActivityReq_CmdId {
  CMD_ID = 453,
  UNRECOGNIZED = -1,
}

export interface GetClearStageActivityRsp {
  retcode: GetClearStageActivityRsp_Retcode;
  activity: ClearStageActivity | undefined;
}

export enum GetClearStageActivityRsp_CmdId {
  CMD_ID = 454,
  UNRECOGNIZED = -1,
}

export enum GetClearStageActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetClientDataReq {
  type: ClientDataType;
  id: number;
}

export enum GetClientDataReq_CmdId {
  CMD_ID = 1586,
  UNRECOGNIZED = -1,
}

export interface GetClientDataRsp {
  retcode: GetClientDataRsp_Retcode;
  type: ClientDataType;
  id: number;
  clientDataList: ClientData[];
}

export enum GetClientDataRsp_CmdId {
  CMD_ID = 1587,
  UNRECOGNIZED = -1,
}

export enum GetClientDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_FOUND = 2,
  UNRECOGNIZED = -1,
}

export interface GetClientMailDataReq {
  start: number;
  stop: number;
  filterType: ClientMailFilterType;
}

export enum GetClientMailDataReq_CmdId {
  CMD_ID = 3800,
  UNRECOGNIZED = -1,
}

export interface GetClientMailDataRsp {
  retcode: GetClientMailDataRsp_Retcode;
  mailList: ClientMail[];
  isEnd: boolean;
  start: number;
  noticeMailList: ClientMail[];
  filterType: ClientMailFilterType;
  clientMailInfo: ClientMailInfo | undefined;
}

export enum GetClientMailDataRsp_CmdId {
  CMD_ID = 3801,
  UNRECOGNIZED = -1,
}

export enum GetClientMailDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  POS_INVALID = 2,
  REPEATED_REQ = 3,
  UNRECOGNIZED = -1,
}

export interface GetClientSettingReq {
  clientSettingType: number;
}

export enum GetClientSettingReq_CmdId {
  CMD_ID = 1270,
  UNRECOGNIZED = -1,
}

export interface GetClientSettingRsp {
  retcode: GetClientSettingRsp_Retcode;
  clientSettingType: number;
  isWeeklyGuideSwitchOn: boolean;
  snsShowPriviledgeList: SnsShowPriviledge[];
  avatarArtifactSwitchList: AvatarArtifactSwitch[];
  masterPupilTagSwitchList: MasterPupilTagSwitch[];
}

export enum GetClientSettingRsp_CmdId {
  CMD_ID = 1272,
  UNRECOGNIZED = -1,
}

export enum GetClientSettingRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetCollaborationScheduleReq {
}

export enum GetCollaborationScheduleReq_CmdId {
  CMD_ID = 5831,
  UNRECOGNIZED = -1,
}

export interface GetCollaborationScheduleRsp {
  retcode: GetCollaborationScheduleRsp_Retcode;
  scheduleList: GetCollaborationScheduleRsp_Schedule[];
}

export enum GetCollaborationScheduleRsp_CmdId {
  CMD_ID = 5832,
  UNRECOGNIZED = -1,
}

export enum GetCollaborationScheduleRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetCollaborationScheduleRsp_Schedule {
  id: number;
  beginTime: number;
  endTime: number;
}

export interface GetConfigReq {
}

export enum GetConfigReq_CmdId {
  CMD_ID = 110,
  UNRECOGNIZED = -1,
}

export interface GetConfigRsp {
  retcode: GetConfigRsp_Retcode;
  staminaRecoverConfigTime: number;
  avatarReviveHcoinCost: number;
  sameTypePowerUpRate: number;
  dayTimeOffset: number;
  serverCurTime: number;
  powerUpScoinCostRate: number;
  maxFriendNum: number;
  endlessMinPlayerLevel: number;
  avatarMaxAddGoodfeel: number;
  avatarCostPlusConfigList: AvatarCostPlusConfig[];
  endlessUseItemCdTime: number;
  disjoinEquipmentBackExpPercent: number;
  gachaTicketList: GetConfigRsp_GachaTicket[];
  regionName: string;
  minInviteLevel: number;
  discountScheduleConfigList: GetConfigRsp_DiscountScheduleConfig[];
  islandEventRefreshInterval: number;
  spaceshipBeginTime: number;
  spaceshipEndTime: number;
  spaceshipId: number;
  isRandomBoxProductOpen: boolean;
  scoinLimit: number;
  friendsPointLimit: number;
  productRandomBoxBeginTime: number;
  productRandomBoxEndTime: number;
  weekDayActivityCoinItemId: number;
  islandVisitMaxHelpNum: number;
  costSeniorEquipAfterCancelProtectMinTimeDiff: number;
  rogueStageCostItemId: number;
  rogueStageMaxProgress: number;
  bulletinActivityList: BulletinActivityConfig[];
  armadaDiscoveryRewardList: ArmadaDiscoveryRewardConfig[];
  rogueStageOpenLevel: number;
  armadaBeginTime: number;
  armadaEndTime: number;
  armadaCustomContent: string;
  stigmataRuneOpenLevel: number;
  stigmataTitleOpenLevel: number;
  stigmataDisjoinTitleBackExpPercent: number;
  stigmataPromoteMaxTimes: number;
  stigmataRuneCombatRatio: number;
  stigmataDisjoinBackExpPercent: number;
  stigmataRefineValueBackPercent: number;
  stigmataTitleExpMaterialList: number[];
  scoinConvertPerExp: number;
  mpResetSkillHcoinCost: number;
  mpMemberMaxTimesForAllAct: number;
  mpMemberExhaustedDropRatio: number;
  friendBondLevelConfigList: GetConfigRsp_FriendBondLevelConfig[];
  mpPunishMpExpReduceRate: number;
  friendAssistantAddBond: number;
  armadaManageMailLength: number;
  armadaContactLength: number;
  armadaManageMailCd: number;
  armadaBulletinLength: number;
  openworldJudgeParaType1: number;
  openworldJudgeParaType2: number;
  openworldJudgeParaType3: number;
  openworldJudgeParaType4: number;
  trialAvatarPlayerMinLevel: number;
  disjoinEquipmentMaxBatchNum: number;
  equipDisjointUnlockLevel: number;
  stageTypeLimitAvatarFightInVentureList: number[];
  armadaBossStageOpenLevel: number;
  antiCheatStageCheckConfig: GetConfigRsp_AntiCheatStageCheckConfig | undefined;
  isCanGalTouch: boolean;
  isResistanceOpen: boolean;
  nextDayBeginTime: number;
}

export enum GetConfigRsp_CmdId {
  CMD_ID = 111,
  UNRECOGNIZED = -1,
}

export enum GetConfigRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetConfigRsp_GachaTicket {
  materialId: number;
  hcoinCost: number;
}

export interface GetConfigRsp_DiscountScheduleConfig {
  type: number;
  discount: number;
  beginTime: number;
  endTime: number;
  paraIntList: number[];
}

export interface GetConfigRsp_FriendBondLevelConfig {
  level: number;
  minBond: number;
  assistCdReduceRate: number;
  inviteAddFriendsPoint: number;
  extraAddMpExpRate: number;
  extraMpAddFriendsPoint: number;
}

export interface GetConfigRsp_AntiCheatStageCheckConfig {
  checkStageIdList: number[];
  checkStageTypeList: number[];
}

export interface GetConsignedOrderDataReq {
}

export enum GetConsignedOrderDataReq_CmdId {
  CMD_ID = 2639,
  UNRECOGNIZED = -1,
}

export interface GetConsignedOrderDataRsp {
  retcode: GetConsignedOrderDataRsp_Retcode;
  progress: number;
  orderList: ConsignedOrder[];
  cdFinishTime: number;
  finishOrderTimes: number;
  totalOrderTimes: number;
  armadaFinishTimes: number;
  applyOrderTimes: number;
  totalApplyTimes: number;
  myCredit: number;
  isRewardTaken: boolean;
}

export enum GetConsignedOrderDataRsp_CmdId {
  CMD_ID = 2640,
  UNRECOGNIZED = -1,
}

export enum GetConsignedOrderDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  UNRECOGNIZED = -1,
}

export interface GetConsignedRewardLogReq {
}

export enum GetConsignedRewardLogReq_CmdId {
  CMD_ID = 525,
  UNRECOGNIZED = -1,
}

export interface GetConsignedRewardLogRsp {
  retcode: GetConsignedRewardLogRsp_Retcode;
  rewardLogList: ConsignedRewardLog[];
}

export enum GetConsignedRewardLogRsp_CmdId {
  CMD_ID = 526,
  UNRECOGNIZED = -1,
}

export enum GetConsignedRewardLogRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  UNRECOGNIZED = -1,
}

export interface GetConsignedRewardReq {
}

export enum GetConsignedRewardReq_CmdId {
  CMD_ID = 519,
  UNRECOGNIZED = -1,
}

export interface GetConsignedRewardRsp {
  retcode: GetConsignedRewardRsp_Retcode;
  requiredRewardList: RewardData[];
  optionalRewardList: RewardData[];
  myCredit: number;
  totalCredit: number;
  myOptionalRewardList: number[];
}

export enum GetConsignedRewardRsp_CmdId {
  CMD_ID = 520,
  UNRECOGNIZED = -1,
}

export enum GetConsignedRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  UNRECOGNIZED = -1,
}

export interface GetContinuousRechargeActivityReq {
}

export enum GetContinuousRechargeActivityReq_CmdId {
  CMD_ID = 4167,
  UNRECOGNIZED = -1,
}

export interface GetContinuousRechargeActivityRsp {
  retcode: GetContinuousRechargeActivityRsp_Retcode;
  activityId: number;
  progress: number;
  todayVipPoint: number;
  hasTakeRewardProgressList: number[];
  lastRefreshTime: number;
}

export enum GetContinuousRechargeActivityRsp_CmdId {
  CMD_ID = 4168,
  UNRECOGNIZED = -1,
}

export enum GetContinuousRechargeActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetCurrencyExchangeInfoReq {
}

export enum GetCurrencyExchangeInfoReq_CmdId {
  CMD_ID = 1480,
  UNRECOGNIZED = -1,
}

export interface GetCurrencyExchangeInfoRsp {
  retcode: GetCurrencyExchangeInfoRsp_Retcode;
  purpleJadeExchangedNum: number;
}

export enum GetCurrencyExchangeInfoRsp_CmdId {
  CMD_ID = 1481,
  UNRECOGNIZED = -1,
}

export enum GetCurrencyExchangeInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetCustomHeadDataReq {
}

export enum GetCustomHeadDataReq_CmdId {
  CMD_ID = 1523,
  UNRECOGNIZED = -1,
}

export interface GetCustomHeadDataRsp {
  retcode: GetCustomHeadDataRsp_Retcode;
  isAll: boolean;
  customHeadList: CustomHead[];
}

export enum GetCustomHeadDataRsp_CmdId {
  CMD_ID = 1524,
  UNRECOGNIZED = -1,
}

export enum GetCustomHeadDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetDanmakuBriefInfoReq {
  danmakuSlot: number;
}

export enum GetDanmakuBriefInfoReq_CmdId {
  CMD_ID = 1547,
  UNRECOGNIZED = -1,
}

export interface GetDanmakuBriefInfoRsp {
  retcode: GetDanmakuBriefInfoRsp_Retcode;
  danmakuSlot: number;
  briefInfo: DanmakuSlotBriefInfo | undefined;
}

export enum GetDanmakuBriefInfoRsp_CmdId {
  CMD_ID = 1548,
  UNRECOGNIZED = -1,
}

export enum GetDanmakuBriefInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  DANMAKU_CLOSED = 2,
  UNRECOGNIZED = -1,
}

export interface GetDanmakuListReq {
  danmakuSlot: number;
  startIdx: number;
  endIdx: number;
}

export enum GetDanmakuListReq_CmdId {
  CMD_ID = 1545,
  UNRECOGNIZED = -1,
}

export interface GetDanmakuListRsp {
  retcode: GetDanmakuListRsp_Retcode;
  danmakuSlot: number;
  danmakuSlotStatus: number;
  startIdx: number;
  endIdx: number;
  danmakuList: DanmakuContent[];
}

export enum GetDanmakuListRsp_CmdId {
  CMD_ID = 1546,
  UNRECOGNIZED = -1,
}

export enum GetDanmakuListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  DANMAKU_CLOSED = 2,
  UNRECOGNIZED = -1,
}

export interface GetDeleteMaterialReq {
}

export enum GetDeleteMaterialReq_CmdId {
  CMD_ID = 500,
  UNRECOGNIZED = -1,
}

export interface GetDeleteMaterialRsp {
  retcode: GetDeleteMaterialRsp_Retcode;
  materials: Material[];
  returnItemList: GenericItemNum[];
}

export enum GetDeleteMaterialRsp_CmdId {
  CMD_ID = 501,
  UNRECOGNIZED = -1,
}

export enum GetDeleteMaterialRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetDepotFurnitureReq {
  furnitureIdList: number[];
}

export enum GetDepotFurnitureReq_CmdId {
  CMD_ID = 607,
  UNRECOGNIZED = -1,
}

export interface GetDepotFurnitureRsp {
  retcode: GetDepotFurnitureRsp_Retcode;
  depotFurnitureList: DepotFurniture[];
}

export enum GetDepotFurnitureRsp_CmdId {
  CMD_ID = 608,
  UNRECOGNIZED = -1,
}

export enum GetDepotFurnitureRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetDispatchReq {
}

export enum GetDispatchReq_CmdId {
  CMD_ID = 133,
  UNRECOGNIZED = -1,
}

export interface GetDispatchRsp {
}

export enum GetDispatchRsp_CmdId {
  CMD_ID = 134,
  UNRECOGNIZED = -1,
}

export enum GetDispatchRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  CLIENT_VERSION_ERROR = 2,
  UNRECOGNIZED = -1,
}

export interface GetDLCAvatarReq {
}

export enum GetDLCAvatarReq_CmdId {
  CMD_ID = 3559,
  UNRECOGNIZED = -1,
}

export interface GetDLCAvatarRsp {
  retcode: GetDLCAvatarRsp_Retcode;
  avatarList: DLCAvatar[];
}

export enum GetDLCAvatarRsp_CmdId {
  CMD_ID = 3560,
  UNRECOGNIZED = -1,
}

export enum GetDLCAvatarRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetDLCReq {
}

export enum GetDLCReq_CmdId {
  CMD_ID = 3550,
  UNRECOGNIZED = -1,
}

export interface GetDLCRsp {
  retcode: GetDLCRsp_Retcode;
  name: string;
  level: number;
  exp: number;
  hasTakeRewardLevel: number;
  supportNpcList: DLCSupportNPC[];
  finishedDialogIdList: number[];
}

export enum GetDLCRsp_CmdId {
  CMD_ID = 3551,
  UNRECOGNIZED = -1,
}

export enum GetDLCRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetDLCTowerRankReq {
}

export enum GetDLCTowerRankReq_CmdId {
  CMD_ID = 3571,
  UNRECOGNIZED = -1,
}

export interface GetDLCTowerRankRsp {
  retcode: GetDLCTowerRankRsp_Retcode;
  rankData: RankShowData | undefined;
}

export enum GetDLCTowerRankRsp_CmdId {
  CMD_ID = 3572,
  UNRECOGNIZED = -1,
}

export enum GetDLCTowerRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetDLCTowerReq {
}

export enum GetDLCTowerReq_CmdId {
  CMD_ID = 3574,
  UNRECOGNIZED = -1,
}

export interface GetDLCTowerRsp {
  retcode: GetDLCTowerRsp_Retcode;
  scheduleId: number;
  progress: number;
  avatarInfoList: DLCTowerAvatarInfo[];
  towerCostTime: number;
  maxProgress: number;
  avatarReviveTimes: number;
  floorMaxScoreList: DLCTowerFloorMaxScore[];
}

export enum GetDLCTowerRsp_CmdId {
  CMD_ID = 3575,
  UNRECOGNIZED = -1,
}

export enum GetDLCTowerRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetDormDataReq {
  dataType: DormDataType;
}

export enum GetDormDataReq_CmdId {
  CMD_ID = 601,
  UNRECOGNIZED = -1,
}

export interface GetDormDataRsp {
  retcode: GetDormDataRsp_Retcode;
  dataType: DormDataType;
  houseList: DormHouse[];
  finishTalkPlotIdList: number[];
  depotFurnitureList: DepotFurniture[];
  levelUpHouseId: number;
  levelUpEndTime: number;
  levelUpEndHouseId: number;
  facilityData: DormFacilityData | undefined;
  eventList: DormEvent[];
  showHouse: number;
  showRoom: number;
  visitAvatar: number;
  isAllowVisit: boolean;
  lastTakeDormDailyStaminaTime: number;
  unlockAvatarList: number[];
}

export enum GetDormDataRsp_CmdId {
  CMD_ID = 602,
  UNRECOGNIZED = -1,
}

export enum GetDormDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetDormHouseReq {
  houseIdList: number[];
}

export enum GetDormHouseReq_CmdId {
  CMD_ID = 603,
  UNRECOGNIZED = -1,
}

export interface GetDormHouseRsp {
  retcode: GetDormHouseRsp_Retcode;
  houseList: DormHouse[];
}

export enum GetDormHouseRsp_CmdId {
  CMD_ID = 604,
  UNRECOGNIZED = -1,
}

export enum GetDormHouseRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HOUSE_NOT_EXIST = 2,
  UNRECOGNIZED = -1,
}

export interface GetDormSnsDataReq {
}

export enum GetDormSnsDataReq_CmdId {
  CMD_ID = 637,
  UNRECOGNIZED = -1,
}

export interface GetDormSnsDataRsp {
  retcode: GetDormSnsDataRsp_Retcode;
  beLikedNum: number;
  recordList: DormVisitRecord[];
  beVisitNum: number;
}

export enum GetDormSnsDataRsp_CmdId {
  CMD_ID = 638,
  UNRECOGNIZED = -1,
}

export enum GetDormSnsDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LEVEL_LIMIT = 2,
  UNRECOGNIZED = -1,
}

export interface GetDormVoteDataReq {
}

export enum GetDormVoteDataReq_CmdId {
  CMD_ID = 1138,
  UNRECOGNIZED = -1,
}

export interface GetDormVoteDataRsp {
  retcode: GetDormVoteDataRsp_Retcode;
  activityId: number;
  status: GetDormVoteDataRsp_Status;
  endTime: number;
  url: string;
}

export enum GetDormVoteDataRsp_CmdId {
  CMD_ID = 1139,
  UNRECOGNIZED = -1,
}

export enum GetDormVoteDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export enum GetDormVoteDataRsp_Status {
  NOT_START = 0,
  VOTING = 1,
  REVIEWING = 2,
  DISPLAYING = 3,
  UNRECOGNIZED = -1,
}

export interface GetDropLimitActivityReq {
}

export enum GetDropLimitActivityReq_CmdId {
  CMD_ID = 4297,
  UNRECOGNIZED = -1,
}

export interface GetDropLimitActivityRsp {
  retcode: GetDropLimitActivityRsp_Retcode;
  dropLimitActivityList: DropLimitActivity[];
}

export enum GetDropLimitActivityRsp_CmdId {
  CMD_ID = 4298,
  UNRECOGNIZED = -1,
}

export enum GetDropLimitActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetElfDataReq {
}

export enum GetElfDataReq_CmdId {
  CMD_ID = 2100,
  UNRECOGNIZED = -1,
}

export interface GetElfDataRsp {
  retcode: GetElfDataRsp_Retcode;
  elfList: Elf[];
  elfFragmentList: ElfFragment[];
  elfTalentList: ElfTalent[];
  isTakeCompensation: boolean;
}

export enum GetElfDataRsp_CmdId {
  CMD_ID = 2101,
  UNRECOGNIZED = -1,
}

export enum GetElfDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetEliteChapterCompensationInfoReq {
  chapterId: number;
}

export enum GetEliteChapterCompensationInfoReq_CmdId {
  CMD_ID = 1636,
  UNRECOGNIZED = -1,
}

export interface GetEliteChapterCompensationInfoRsp {
  retcode: GetEliteChapterCompensationInfoRsp_Retcode;
  chapterList: EliteChapterCompensationInfo[];
}

export enum GetEliteChapterCompensationInfoRsp_CmdId {
  CMD_ID = 1637,
  UNRECOGNIZED = -1,
}

export enum GetEliteChapterCompensationInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetEmojiDataReq {
}

export enum GetEmojiDataReq_CmdId {
  CMD_ID = 1245,
  UNRECOGNIZED = -1,
}

export interface GetEmojiDataRsp {
  retcode: GetEmojiDataRsp_Retcode;
  emojiIdList: number[];
  isAll: boolean;
}

export enum GetEmojiDataRsp_CmdId {
  CMD_ID = 1246,
  UNRECOGNIZED = -1,
}

export enum GetEmojiDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetEndlessDataReq {
  level: number;
}

export enum GetEndlessDataReq_CmdId {
  CMD_ID = 3400,
  UNRECOGNIZED = -1,
}

export interface GetEndlessDataRsp {
  retcode: GetEndlessDataRsp_Retcode;
  groupId: number;
  groupLevel: number;
  beginTime: number;
  endTime: number;
  closeTime: number;
  endlessDataList: EndlessPlayerData[];
  briefDataList: PlayerFriendBriefData[];
  itemList: EndlessItem[];
  itemFrozenList: EndlessItemFrozenInfo[];
  warInfoList: EndlessWarInfo[];
  uid: number;
  nodeserverSessionId: number;
  isJustJoin: number;
  curProgressAvatarIdList: number[];
  curProgressItemIdList: number[];
  randomSeed: number;
  curTopGroupLevel: number;
  topGroupPlayerNum: number;
  topGroupPromoteUnlockPlayerNum: number;
  sinType: number;
  burstBombNum: number;
  bombedNum: number;
  targetItemList: EndlessItem[];
  avgPlayerLevel: number;
  hardLevel: number;
}

export enum GetEndlessDataRsp_CmdId {
  CMD_ID = 3401,
  UNRECOGNIZED = -1,
}

export enum GetEndlessDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LEVEL_LACK = 2,
  NO_ENDLESS = 3,
  URGENCY_STOP = 4,
  UNRECOGNIZED = -1,
}

export interface GetEndlessStatusReq {
  level: number;
  isFinishFront: boolean;
}

export enum GetEndlessStatusReq_CmdId {
  CMD_ID = 3432,
  UNRECOGNIZED = -1,
}

export interface GetEndlessStatusRsp {
  retcode: GetEndlessStatusRsp_Retcode;
  curStatus: EndlessStatus | undefined;
  nextStatusList: EndlessStatus[];
  selectedEndlessType: number;
}

export enum GetEndlessStatusRsp_CmdId {
  CMD_ID = 3433,
  UNRECOGNIZED = -1,
}

export enum GetEndlessStatusRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetEquipmentBackReq {
}

export enum GetEquipmentBackReq_CmdId {
  CMD_ID = 3661,
  UNRECOGNIZED = -1,
}

export interface GetEquipmentBackRsp {
  retcode: GetEquipmentBackRsp_Retcode;
  consumeEquipList: EquipmentForgeConsume[];
}

export enum GetEquipmentBackRsp_CmdId {
  CMD_ID = 3662,
  UNRECOGNIZED = -1,
}

export enum GetEquipmentBackRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetEquipmentDataReq {
  weaponUniqueIdList: number[];
  stigmataUniqueIdList: number[];
  materialIdList: number[];
  mechaUniqueIdList: number[];
}

export enum GetEquipmentDataReq_CmdId {
  CMD_ID = 26,
  UNRECOGNIZED = -1,
}

export interface GetEquipmentDataRsp {
  retcode: GetEquipmentDataRsp_Retcode;
  weaponList: Weapon[];
  stigmataList: Stigmata[];
  materialList: Material[];
  isAll: boolean;
  mechaList: Mecha[];
  vitalityValue: number;
}

export enum GetEquipmentDataRsp_CmdId {
  CMD_ID = 27,
  UNRECOGNIZED = -1,
}

export enum GetEquipmentDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetEquipmentForgeDataReq {
}

export enum GetEquipmentForgeDataReq_CmdId {
  CMD_ID = 3650,
  UNRECOGNIZED = -1,
}

export interface GetEquipmentForgeDataRsp {
  retcode: GetEquipmentForgeDataRsp_Retcode;
  scheduleId: number;
  hasForgeList: EquipmentForge[];
  forgeList: number[];
}

export enum GetEquipmentForgeDataRsp_CmdId {
  CMD_ID = 3651,
  UNRECOGNIZED = -1,
}

export enum GetEquipmentForgeDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetExaminationActivityReq {
}

export enum GetExaminationActivityReq_CmdId {
  CMD_ID = 4323,
  UNRECOGNIZED = -1,
}

export interface GetExaminationActivityRsp {
  retcode: GetExaminationActivityRsp_Retcode;
  scheduleId: number;
  curExaminationIdx: number;
  finishedRound: number;
  examinationList: Examination[];
  examinationStageId: number;
}

export enum GetExaminationActivityRsp_CmdId {
  CMD_ID = 4324,
  UNRECOGNIZED = -1,
}

export enum GetExaminationActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetExBossInfoReq {
}

export enum GetExBossInfoReq_CmdId {
  CMD_ID = 510,
  UNRECOGNIZED = -1,
}

export interface GetExBossInfoRsp {
  retcode: GetExBossInfoRsp_Retcode;
  bossInfo: ExBossInfo | undefined;
}

export enum GetExBossInfoRsp_CmdId {
  CMD_ID = 511,
  UNRECOGNIZED = -1,
}

export enum GetExBossInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  FEATURE_CLOSED = 3,
  UNRECOGNIZED = -1,
}

export interface GetExBossRankReq {
  rankId: number;
  bossId: number;
}

export enum GetExBossRankReq_CmdId {
  CMD_ID = 527,
  UNRECOGNIZED = -1,
}

export interface GetExBossRankRsp {
  retcode: GetExBossRankRsp_Retcode;
  rankData: RankShowData | undefined;
  rankId: number;
  isFiltered: boolean;
  bossId: number;
}

export enum GetExBossRankRsp_CmdId {
  CMD_ID = 528,
  UNRECOGNIZED = -1,
}

export enum GetExBossRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  RANK_ERROR = 3,
  NOT_JOIN = 4,
  SCHEDULE_DISMATCH = 5,
  FEATURE_CLOSED = 6,
  UNRECOGNIZED = -1,
}

export interface GetExBossScheduleReq {
}

export enum GetExBossScheduleReq_CmdId {
  CMD_ID = 508,
  UNRECOGNIZED = -1,
}

export interface GetExBossScheduleRsp {
  retcode: GetExBossScheduleRsp_Retcode;
  beginTime: number;
  endTime: number;
  minLevel: number;
  imagePath: string;
  scheduleId: number;
  rankId: number;
}

export enum GetExBossScheduleRsp_CmdId {
  CMD_ID = 509,
  UNRECOGNIZED = -1,
}

export enum GetExBossScheduleRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  FEATURE_CLOSED = 2,
  UNRECOGNIZED = -1,
}

export interface GetExtractReforgeActivityReq {
}

export enum GetExtractReforgeActivityReq_CmdId {
  CMD_ID = 3659,
  UNRECOGNIZED = -1,
}

export interface GetExtractReforgeActivityRsp {
  retcode: GetExtractReforgeActivityRsp_Retcode;
  beginTime: number;
  endTime: number;
  extractEquipmentActivity: ExtractEquipmentActivity | undefined;
  backEquipmentActivity: BackEquipmentActivity | undefined;
}

export enum GetExtractReforgeActivityRsp_CmdId {
  CMD_ID = 3660,
  UNRECOGNIZED = -1,
}

export enum GetExtractReforgeActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetExtraStoryAchieveDataReq {
  chapterId: number;
}

export enum GetExtraStoryAchieveDataReq_CmdId {
  CMD_ID = 235,
  UNRECOGNIZED = -1,
}

export interface GetExtraStoryAchieveDataRsp {
  retcode: GetExtraStoryAchieveDataRsp_Retcode;
  achieveList: ExtraStoryAchieve[];
}

export enum GetExtraStoryAchieveDataRsp_CmdId {
  CMD_ID = 236,
  UNRECOGNIZED = -1,
}

export enum GetExtraStoryAchieveDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  CHAPTER_NOT_EXIST = 2,
  UNRECOGNIZED = -1,
}

export interface GetExtraStoryAchieveRewardReq {
  achieveId: number;
}

export enum GetExtraStoryAchieveRewardReq_CmdId {
  CMD_ID = 237,
  UNRECOGNIZED = -1,
}

export interface GetExtraStoryAchieveRewardRsp {
  retcode: GetExtraStoryAchieveRewardRsp_Retcode;
  achieveId: number;
  rewardList: RewardData[];
}

export enum GetExtraStoryAchieveRewardRsp_CmdId {
  CMD_ID = 238,
  UNRECOGNIZED = -1,
}

export enum GetExtraStoryAchieveRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACHIEVE_NOT_EXIST = 2,
  ACHIEVE_NOT_FINISH = 3,
  ACHIEVE_HAS_TAKEN = 4,
  UNRECOGNIZED = -1,
}

export interface GetExtraStoryActivityActReq {
  chapterId: number;
}

export enum GetExtraStoryActivityActReq_CmdId {
  CMD_ID = 233,
  UNRECOGNIZED = -1,
}

export interface GetExtraStoryActivityActRsp {
  retcode: GetExtraStoryActivityActRsp_Retcode;
  actList: ExtraStoryAct[];
}

export enum GetExtraStoryActivityActRsp_CmdId {
  CMD_ID = 234,
  UNRECOGNIZED = -1,
}

export enum GetExtraStoryActivityActRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  CHAPTER_NOT_EXIST = 2,
  UNRECOGNIZED = -1,
}

export interface GetExtraStoryChallengeModeDataReq {
  chapterId: number;
}

export enum GetExtraStoryChallengeModeDataReq_CmdId {
  CMD_ID = 502,
  UNRECOGNIZED = -1,
}

export interface GetExtraStoryChallengeModeDataRsp {
  retcode: GetExtraStoryChallengeModeDataRsp_Retcode;
  chooseDifficulty: number;
  isCanReset: boolean;
  challengeAreaList: ChallengeModeArea[];
  chapterId: number;
}

export enum GetExtraStoryChallengeModeDataRsp_CmdId {
  CMD_ID = 503,
  UNRECOGNIZED = -1,
}

export enum GetExtraStoryChallengeModeDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  EXTRA_STORY_NOT_OPEN = 3,
  UNRECOGNIZED = -1,
}

export interface GetExtraStoryDataReq {
}

export enum GetExtraStoryDataReq_CmdId {
  CMD_ID = 231,
  UNRECOGNIZED = -1,
}

export interface GetExtraStoryDataRsp {
  retcode: GetExtraStoryDataRsp_Retcode;
  chapterList: ExtraStoryChapter[];
  isDynamicHardLv: boolean;
  chapterKeyList: number[];
  takenRewardLineIdList: number[];
  isOpenEnhance: boolean;
  takenEnhanceRewardActIdList: number[];
}

export enum GetExtraStoryDataRsp_CmdId {
  CMD_ID = 232,
  UNRECOGNIZED = -1,
}

export enum GetExtraStoryDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetFarmActivityDataReq {
}

export enum GetFarmActivityDataReq_CmdId {
  CMD_ID = 1385,
  UNRECOGNIZED = -1,
}

export interface GetFarmActivityDataRsp {
  retcode: GetFarmActivityDataRsp_Retcode;
  scheduleId: number;
  farmLevel: number;
  farmExp: number;
  slotDetailList: FarmSlotDetail[];
  produceMaterialList: FarmProduceMaterialDetail[];
}

export enum GetFarmActivityDataRsp_CmdId {
  CMD_ID = 1386,
  UNRECOGNIZED = -1,
}

export enum GetFarmActivityDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_SCHEDULE = 2,
  UNRECOGNIZED = -1,
}

export interface GetFastPassDataReq {
  fastPassType: number;
}

export enum GetFastPassDataReq_CmdId {
  CMD_ID = 1555,
  UNRECOGNIZED = -1,
}

export interface GetFastPassDataRsp {
  retcode: GetFastPassDataRsp_Retcode;
  fastPassType: number;
  useTimes: number;
}

export enum GetFastPassDataRsp_CmdId {
  CMD_ID = 1556,
  UNRECOGNIZED = -1,
}

export enum GetFastPassDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_EXIST = 2,
  UNRECOGNIZED = -1,
}

export interface GetFinishGuideDataReq {
}

export enum GetFinishGuideDataReq_CmdId {
  CMD_ID = 127,
  UNRECOGNIZED = -1,
}

export interface GetFinishGuideDataRsp {
  retcode: GetFinishGuideDataRsp_Retcode;
  guideIdList: number[];
}

export enum GetFinishGuideDataRsp_CmdId {
  CMD_ID = 128,
  UNRECOGNIZED = -1,
}

export enum GetFinishGuideDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetFlopActivityDataReq {
  activityId: number;
}

export enum GetFlopActivityDataReq_CmdId {
  CMD_ID = 4173,
  UNRECOGNIZED = -1,
}

export interface GetFlopActivityDataRsp {
  retcode: GetFlopActivityDataRsp_Retcode;
  activityData: FlopActivityData | undefined;
}

export enum GetFlopActivityDataRsp_CmdId {
  CMD_ID = 4174,
  UNRECOGNIZED = -1,
}

export enum GetFlopActivityDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetFrameDataReq {
}

export enum GetFrameDataReq_CmdId {
  CMD_ID = 590,
  UNRECOGNIZED = -1,
}

export interface GetFrameDataRsp {
  retcode: GetFrameDataRsp_Retcode;
  frameList: FrameData[];
  isAll: boolean;
}

export enum GetFrameDataRsp_CmdId {
  CMD_ID = 591,
  UNRECOGNIZED = -1,
}

export enum GetFrameDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetFriendListReq {
}

export enum GetFriendListReq_CmdId {
  CMD_ID = 64,
  UNRECOGNIZED = -1,
}

export interface GetFriendListRsp {
  retcode: GetFriendListRsp_Retcode;
  friendList: PlayerFriendBriefData[];
  isWholeData: boolean;
  assistantNum: number;
}

export enum GetFriendListRsp_CmdId {
  CMD_ID = 65,
  UNRECOGNIZED = -1,
}

export enum GetFriendListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetFriendRemarkListReq {
}

export enum GetFriendRemarkListReq_CmdId {
  CMD_ID = 974,
  UNRECOGNIZED = -1,
}

export interface GetFriendRemarkListRsp {
  retcode: GetFriendRemarkListRsp_Retcode;
  friendRemarkList: FriendRemark[];
}

export enum GetFriendRemarkListRsp_CmdId {
  CMD_ID = 975,
  UNRECOGNIZED = -1,
}

export enum GetFriendRemarkListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetGalInteractTriggerEventReq {
  avatarId: number;
  eventIdList: number[];
}

export enum GetGalInteractTriggerEventReq_CmdId {
  CMD_ID = 813,
  UNRECOGNIZED = -1,
}

export interface GetGalInteractTriggerEventRsp {
  retcode: GetGalInteractTriggerEventRsp_Retcode;
  eventId: number;
  avatarId: number;
}

export enum GetGalInteractTriggerEventRsp_CmdId {
  CMD_ID = 814,
  UNRECOGNIZED = -1,
}

export enum GetGalInteractTriggerEventRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_SUCH_AVATAR = 2,
  UNRECOGNIZED = -1,
}

export interface GetGameserverReq {
}

export enum GetGameserverReq_CmdId {
  CMD_ID = 2,
  UNRECOGNIZED = -1,
}

export interface GetGameserverRsp {
}

export enum GetGameserverRsp_CmdId {
  CMD_ID = 3,
  UNRECOGNIZED = -1,
}

export enum GetGameserverRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SERVER_STOP = 2,
  VERSION_ERROR = 3,
  FORCE_UPDATE = 4,
  UNRECOGNIZED = -1,
}

export interface GetGardenActivityReq {
}

export enum GetGardenActivityReq_CmdId {
  CMD_ID = 4287,
  UNRECOGNIZED = -1,
}

export interface GetGardenActivityRsp {
  retcode: GetGardenActivityRsp_Retcode;
  garden: GardenActivityData | undefined;
}

export enum GetGardenActivityRsp_CmdId {
  CMD_ID = 4288,
  UNRECOGNIZED = -1,
}

export enum GetGardenActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetGardenScheduleReq {
}

export enum GetGardenScheduleReq_CmdId {
  CMD_ID = 4295,
  UNRECOGNIZED = -1,
}

export interface GetGardenScheduleRsp {
  retcode: GetGardenScheduleRsp_Retcode;
  gardenId: number;
  beginTime: number;
  endTime: number;
  isGardenOpened: boolean;
}

export enum GetGardenScheduleRsp_CmdId {
  CMD_ID = 4296,
  UNRECOGNIZED = -1,
}

export enum GetGardenScheduleRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetGlobalWarActivityReq {
}

export enum GetGlobalWarActivityReq_CmdId {
  CMD_ID = 3950,
  UNRECOGNIZED = -1,
}

export interface GetGlobalWarActivityRsp {
  retcode: GetGlobalWarActivityRsp_Retcode;
  globalWarActivity: GlobalWarActivity | undefined;
}

export enum GetGlobalWarActivityRsp_CmdId {
  CMD_ID = 3951,
  UNRECOGNIZED = -1,
}

export enum GetGlobalWarActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetGobackReq {
}

export enum GetGobackReq_CmdId {
  CMD_ID = 364,
  UNRECOGNIZED = -1,
}

export interface GetGobackRsp {
  retcode: GetGobackRsp_Retcode;
  gobackEndTime: number;
  loginDays: number;
  hasTakeDaysRewardList: number[];
  hasTakeDaysBonusRewardList: number[];
  gobackActivityList: GobackActivity[];
  score: number;
  hasTakeScoreRewardList: number[];
  scheduleId: number;
  loginRewardList: GobackActivityLoginReward[];
  fund: GobackFund | undefined;
  gobackGrowUpActivity: GobackGrowUpActivity | undefined;
}

export enum GetGobackRsp_CmdId {
  CMD_ID = 365,
  UNRECOGNIZED = -1,
}

export enum GetGobackRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetGodWarReq {
  godWarId: number;
}

export enum GetGodWarReq_CmdId {
  CMD_ID = 6150,
  UNRECOGNIZED = -1,
}

export interface GetGodWarRsp {
  retcode: GetGodWarRsp_Retcode;
  godWarList: GodWar[];
}

export enum GetGodWarRsp_CmdId {
  CMD_ID = 6151,
  UNRECOGNIZED = -1,
}

export enum GetGodWarRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetGrandKeyReq {
  keyIdList: number[];
}

export enum GetGrandKeyReq_CmdId {
  CMD_ID = 506,
  UNRECOGNIZED = -1,
}

export interface GetGrandKeyRsp {
  retcode: GetGrandKeyRsp_Retcode;
  keyList: GrandKey[];
  isAll: boolean;
}

export enum GetGrandKeyRsp_CmdId {
  CMD_ID = 507,
  UNRECOGNIZED = -1,
}

export enum GetGrandKeyRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetGratuityActivityReq {
  stageUniqueIdList: number[];
  inviteStageUniqueIdList: number[];
}

export enum GetGratuityActivityReq_CmdId {
  CMD_ID = 4100,
  UNRECOGNIZED = -1,
}

export interface GetGratuityActivityRsp {
  retcode: GetGratuityActivityRsp_Retcode;
  curScheduleId: number;
  stageList: GratuityStage[];
  todayLeftFreeStageNum: number;
  inviteStageList: GratuityStage[];
}

export enum GetGratuityActivityRsp_CmdId {
  CMD_ID = 4101,
  UNRECOGNIZED = -1,
}

export enum GetGratuityActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetGratuityBattleHistoryReq {
  stageUniqueIdList: number[];
}

export enum GetGratuityBattleHistoryReq_CmdId {
  CMD_ID = 4108,
  UNRECOGNIZED = -1,
}

export interface GetGratuityBattleHistoryRsp {
  retcode: GetGratuityBattleHistoryRsp_Retcode;
  battleList: GratuityBattle[];
}

export enum GetGratuityBattleHistoryRsp_CmdId {
  CMD_ID = 4109,
  UNRECOGNIZED = -1,
}

export enum GetGratuityBattleHistoryRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetGratuityStageListReq {
  stageUniqueIdList: number[];
  stageGroupList: number[];
}

export enum GetGratuityStageListReq_CmdId {
  CMD_ID = 4116,
  UNRECOGNIZED = -1,
}

export interface GetGratuityStageListRsp {
  retcode: GetGratuityStageListRsp_Retcode;
  stageList: GratuityStage[];
}

export enum GetGratuityStageListRsp_CmdId {
  CMD_ID = 4117,
  UNRECOGNIZED = -1,
}

export enum GetGratuityStageListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_STAGE = 2,
  UNRECOGNIZED = -1,
}

export interface GetGuideRewardReq {
  guideId: number;
}

export enum GetGuideRewardReq_CmdId {
  CMD_ID = 185,
  UNRECOGNIZED = -1,
}

export interface GetGuideRewardRsp {
  retcode: GetGuideRewardRsp_Retcode;
  rewardList: RewardData[];
}

export enum GetGuideRewardRsp_CmdId {
  CMD_ID = 186,
  UNRECOGNIZED = -1,
}

export enum GetGuideRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  GUIDE_ERROR = 2,
  REWARD_EMPTY = 3,
  UNRECOGNIZED = -1,
}

export interface GetHasGotFurnitureIdListReq {
}

export enum GetHasGotFurnitureIdListReq_CmdId {
  CMD_ID = 619,
  UNRECOGNIZED = -1,
}

export interface GetHasGotFurnitureIdListRsp {
  retcode: GetHasGotFurnitureIdListRsp_Retcode;
  furnitureIdList: number[];
  hasUnlockFurnitureIdList: number[];
}

export enum GetHasGotFurnitureIdListRsp_CmdId {
  CMD_ID = 620,
  UNRECOGNIZED = -1,
}

export enum GetHasGotFurnitureIdListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetHasGotItemIdListReq {
}

export enum GetHasGotItemIdListReq_CmdId {
  CMD_ID = 104,
  UNRECOGNIZED = -1,
}

export interface GetHasGotItemIdListRsp {
  retcode: GetHasGotItemIdListRsp_Retcode;
  itemIdList: number[];
}

export enum GetHasGotItemIdListRsp_CmdId {
  CMD_ID = 105,
  UNRECOGNIZED = -1,
}

export enum GetHasGotItemIdListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetHaveTakenShareRewardReq {
}

export enum GetHaveTakenShareRewardReq_CmdId {
  CMD_ID = 4239,
  UNRECOGNIZED = -1,
}

export interface GetHaveTakenShareRewardRsp {
  retcode: GetHaveTakenShareRewardRsp_Retcode;
  shareRewardRecordList: ShareRewardRecord[];
}

export enum GetHaveTakenShareRewardRsp_CmdId {
  CMD_ID = 4240,
  UNRECOGNIZED = -1,
}

export enum GetHaveTakenShareRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetInviteActivityInviteeDataReq {
}

export enum GetInviteActivityInviteeDataReq_CmdId {
  CMD_ID = 1694,
  UNRECOGNIZED = -1,
}

export interface GetInviteActivityInviteeDataRsp {
  retcode: GetInviteActivityInviteeDataRsp_Retcode;
  inviteeActivityInfoList: InviteeActivity[];
}

export enum GetInviteActivityInviteeDataRsp_CmdId {
  CMD_ID = 1695,
  UNRECOGNIZED = -1,
}

export enum GetInviteActivityInviteeDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  FEATURE_CLOSED = 2,
  UNRECOGNIZED = -1,
}

export interface GetInviteActivityInviterDataReq {
}

export enum GetInviteActivityInviterDataReq_CmdId {
  CMD_ID = 1690,
  UNRECOGNIZED = -1,
}

export interface GetInviteActivityInviterDataRsp {
  retcode: GetInviteActivityInviterDataRsp_Retcode;
  myInviteCode: string;
  inviterActivityInfoList: InviterActivity[];
}

export enum GetInviteActivityInviterDataRsp_CmdId {
  CMD_ID = 1691,
  UNRECOGNIZED = -1,
}

export enum GetInviteActivityInviterDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LEVEL_LACK = 2,
  FEATURE_CLOSED = 3,
  UNRECOGNIZED = -1,
}

export interface GetInviteeFriendReq {
}

export enum GetInviteeFriendReq_CmdId {
  CMD_ID = 225,
  UNRECOGNIZED = -1,
}

export interface GetInviteeFriendRsp {
  retcode: GetInviteeFriendRsp_Retcode;
  inviteeCode: string;
  inviteeRewardList: InviteeFriendRewardData[];
}

export enum GetInviteeFriendRsp_CmdId {
  CMD_ID = 226,
  UNRECOGNIZED = -1,
}

export enum GetInviteeFriendRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LEVEL_LACK = 2,
  UNRECOGNIZED = -1,
}

export interface GetInviteFriendReq {
}

export enum GetInviteFriendReq_CmdId {
  CMD_ID = 223,
  UNRECOGNIZED = -1,
}

export interface GetInviteFriendRsp {
  retcode: GetInviteFriendRsp_Retcode;
  myInviteCode: string;
  hasInviteNum: number;
  myInviteRewardList: InviteFriendRewardData[];
  inviteActivity: InviteActivityData | undefined;
}

export enum GetInviteFriendRsp_CmdId {
  CMD_ID = 224,
  UNRECOGNIZED = -1,
}

export enum GetInviteFriendRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LEVEL_LACK = 2,
  UNRECOGNIZED = -1,
}

export interface GetIslandEventReq {
}

export enum GetIslandEventReq_CmdId {
  CMD_ID = 241,
  UNRECOGNIZED = -1,
}

export interface GetIslandEventRsp {
  retcode: GetIslandEventRsp_Retcode;
  avatarPosList: IslandAvatarPos[];
}

export enum GetIslandEventRsp_CmdId {
  CMD_ID = 242,
  UNRECOGNIZED = -1,
}

export enum GetIslandEventRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetJigsawActivityReq {
  activityId: number;
}

export enum GetJigsawActivityReq_CmdId {
  CMD_ID = 4273,
  UNRECOGNIZED = -1,
}

export interface GetJigsawActivityRsp {
  retcode: GetJigsawActivityRsp_Retcode;
  activityId: number;
  jigsawList: JigsawData[];
}

export enum GetJigsawActivityRsp_CmdId {
  CMD_ID = 4274,
  UNRECOGNIZED = -1,
}

export enum GetJigsawActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetKingdomWarReq {
  joinData: KingdomWarJoinData | undefined;
}

export enum GetKingdomWarReq_CmdId {
  CMD_ID = 3050,
  UNRECOGNIZED = -1,
}

export interface GetKingdomWarRsp {
  retcode: GetKingdomWarRsp_Retcode;
  scheduleId: number;
  displayBeginTime: number;
  displayEndTime: number;
  beginTime: number;
  endTime: number;
  kingdomWar: KingdomWarData | undefined;
  kingdomId: number;
  activityStamina: number;
  lastRecoverStaminaTime: number;
}

export enum GetKingdomWarRsp_CmdId {
  CMD_ID = 3051,
  UNRECOGNIZED = -1,
}

export enum GetKingdomWarRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetLastEndlessRewardDataReq {
}

export enum GetLastEndlessRewardDataReq_CmdId {
  CMD_ID = 3406,
  UNRECOGNIZED = -1,
}

export interface GetLastEndlessRewardDataRsp {
  retcode: GetLastEndlessRewardDataRsp_Retcode;
  beginTime: number;
  groupLevel: number;
  rank: number;
  progressOrScore: number;
  rewardType: EndlessRewardType;
  rewardId: number;
  rewardList: RewardData[];
  curGroupLevel: number;
  type: number;
}

export enum GetLastEndlessRewardDataRsp_CmdId {
  CMD_ID = 3407,
  UNRECOGNIZED = -1,
}

export enum GetLastEndlessRewardDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_JOIN = 2,
  UNRECOGNIZED = -1,
}

export interface GetLobbyStatReq {
  stageIdList: number[];
}

export enum GetLobbyStatReq_CmdId {
  CMD_ID = 1102,
  UNRECOGNIZED = -1,
}

export interface GetLobbyStatRsp {
  retcode: GetLobbyStatRsp_Retcode;
  lobbyStatList: LobbyStat[];
  lobbyTotalStat: LobbyStat | undefined;
}

export enum GetLobbyStatRsp_CmdId {
  CMD_ID = 1103,
  UNRECOGNIZED = -1,
}

export enum GetLobbyStatRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetLoginActivityReq {
}

export enum GetLoginActivityReq_CmdId {
  CMD_ID = 4192,
  UNRECOGNIZED = -1,
}

export interface GetLoginActivityRsp {
  retcode: GetLoginActivityRsp_Retcode;
  loginList: LoginActivityData[];
}

export enum GetLoginActivityRsp_CmdId {
  CMD_ID = 4193,
  UNRECOGNIZED = -1,
}

export enum GetLoginActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_BEGIN = 2,
  LEVEL_LACK = 3,
  UNRECOGNIZED = -1,
}

export interface GetLoginMissionActivityReq {
}

export enum GetLoginMissionActivityReq_CmdId {
  CMD_ID = 4299,
  UNRECOGNIZED = -1,
}

export interface GetLoginMissionActivityRsp {
  retcode: GetLoginMissionActivityRsp_Retcode;
  hasFinishedActivityList: number[];
  activityList: LoginMissionActivity[];
}

export enum GetLoginMissionActivityRsp_CmdId {
  CMD_ID = 4300,
  UNRECOGNIZED = -1,
}

export enum GetLoginMissionActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetLotteryActivityReq {
}

export enum GetLotteryActivityReq_CmdId {
  CMD_ID = 4177,
  UNRECOGNIZED = -1,
}

export interface GetLotteryActivityRsp {
  retcode: GetLotteryActivityRsp_Retcode;
  curGroupId: number;
  lotteryDataList: LotteryData[];
}

export enum GetLotteryActivityRsp_CmdId {
  CMD_ID = 4178,
  UNRECOGNIZED = -1,
}

export enum GetLotteryActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetMailAttachmentReq {
  mailKeyList: MailKey[];
  isShowAttachment: boolean;
}

export enum GetMailAttachmentReq_CmdId {
  CMD_ID = 86,
  UNRECOGNIZED = -1,
}

export interface GetMailAttachmentRsp {
  retcode: GetMailAttachmentRsp_Retcode;
  succMailKeyList: MailKey[];
  isShowAttachment: boolean;
  mailAttachment: MailAttachment | undefined;
}

export enum GetMailAttachmentRsp_CmdId {
  CMD_ID = 87,
  UNRECOGNIZED = -1,
}

export enum GetMailAttachmentRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetMailDataReq {
}

export enum GetMailDataReq_CmdId {
  CMD_ID = 84,
  UNRECOGNIZED = -1,
}

export interface GetMailDataRsp {
  retcode: GetMailDataRsp_Retcode;
  mailList: Mail[];
  isAll: boolean;
}

export enum GetMailDataRsp_CmdId {
  CMD_ID = 85,
  UNRECOGNIZED = -1,
}

export enum GetMailDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetMainDataReq {
  typeList: GetMainDataReq_DataType[];
}

export enum GetMainDataReq_CmdId {
  CMD_ID = 10,
  UNRECOGNIZED = -1,
}

export enum GetMainDataReq_DataType {
  ALL = 0,
  NICKNAME = 2,
  LEVEL = 3,
  EXP = 4,
  HCOIN = 5,
  SCOIN = 6,
  STAMINA = 7,
  STAMINA_RECOVER_LEFT_TIME = 8,
  STAMINA_RECOVER_CONFIG_TIME = 9,
  EQUIPMENT_SIZE_LIMIT = 14,
  SELF_DESC = 16,
  PAY_HCOIN = 17,
  FREE_HCOIN = 18,
  ASSISTANT_AVATAR_ID = 19,
  IS_ALLOW_COST_SENIOR_EQUIP_ON_CUR_DEVICE = 20,
  BIRTHDAY = 21,
  RECHARGE_PRICE = 22,
  WAIT_DEL_HCOIN = 23,
  ON_MEDAL_ID = 24,
  ANTI_ADDICT = 25,
  USE_FRAME_ID = 26,
  MCOIN = 27,
  PANEL_ACTIVITY = 28,
  VIDEO_POPUP = 29,
  ON_PHONE_PENDANT_ID = 30,
  STORE_EVALUATE = 31,
  CHATWORLD_ACTIVITY = 32,
  LEVEL_LOCK = 33,
  WARSHIP_AVATAR = 35,
  USE_CUSTOM_HEAD = 36,
  TOTAL_LOGIN_DAYS = 37,
  WARSHIP_THEME = 38,
  WAIT_DEL_MATERIAL = 39,
  UNRECOGNIZED = -1,
}

export interface GetMainDataRsp {
  retcode: GetMainDataRsp_Retcode;
  nickname: string;
  level: number;
  exp: number;
  hcoin: number;
  scoin: number;
  stamina: number;
  staminaRecoverLeftTime: number;
  staminaRecoverConfigTime: number;
  equipmentSizeLimit: number;
  selfDesc: string;
  payHcoin: number;
  freeHcoin: number;
  assistantAvatarId: number;
  isAllowCostSeniorEquipOnCurDevice: boolean;
  birthday: number;
  monthRechargePrice: number;
  waitDelHcoin: number;
  onMedalId: number;
  antiAddict: AntiAddict | undefined;
  todayRechargePrice: number;
  useFrameId: number;
  isAll: boolean;
  mcoin: number;
  openPanelActivityList: number[];
  videoPopupList: VideoPopupData[];
  onPhonePendantId: number;
  nextEvaluateTime: number;
  chatworldActivityInfo: ChatworldActivityInfo | undefined;
  levelLockId: number;
  warshipAvatar: WarshipAvatarData | undefined;
  customHeadId: number;
  totalLoginDays: number;
  registerTime: number;
  warshipTheme: WarshipThemeData | undefined;
  waitDelMaterialList: WaitDelMaterialData[];
  onMedal: Medal | undefined;
}

export enum GetMainDataRsp_CmdId {
  CMD_ID = 11,
  UNRECOGNIZED = -1,
}

export enum GetMainDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetMasterFameRewardReq {
  level: number;
}

export enum GetMasterFameRewardReq_CmdId {
  CMD_ID = 576,
  UNRECOGNIZED = -1,
}

export interface GetMasterFameRewardRsp {
  retcode: MasterPupilRetcode_Retcode;
  level: number;
  rewardList: RewardData[];
}

export enum GetMasterFameRewardRsp_CmdId {
  CMD_ID = 577,
  UNRECOGNIZED = -1,
}

export interface GetMasterPupilApplyReq {
  type: MasterPupilType;
  time: number;
}

export enum GetMasterPupilApplyReq_CmdId {
  CMD_ID = 653,
  UNRECOGNIZED = -1,
}

export interface GetMasterPupilApplyRsp {
  retcode: MasterPupilRetcode_Retcode;
  type: MasterPupilType;
  msgList: MasterPupilApplyMsg[];
  sendMsgList: MasterPupilApplyMsg[];
}

export enum GetMasterPupilApplyRsp_CmdId {
  CMD_ID = 654,
  UNRECOGNIZED = -1,
}

export interface GetMasterPupilCardReq {
}

export enum GetMasterPupilCardReq_CmdId {
  CMD_ID = 587,
  UNRECOGNIZED = -1,
}

export interface GetMasterPupilCardRsp {
  retcode: MasterPupilRetcode_Retcode;
  card: MasterPupilCard | undefined;
}

export enum GetMasterPupilCardRsp_CmdId {
  CMD_ID = 588,
  UNRECOGNIZED = -1,
}

export interface GetMasterPupilDataReq {
  type: number;
  time: number;
}

export enum GetMasterPupilDataReq_CmdId {
  CMD_ID = 568,
  UNRECOGNIZED = -1,
}

export interface GetMasterPupilDataRsp {
  retcode: MasterPupilRetcode_Retcode;
  type: number;
  dataList: MasterPupilData[];
}

export enum GetMasterPupilDataRsp_CmdId {
  CMD_ID = 569,
  UNRECOGNIZED = -1,
}

export interface GetMasterPupilMainDataReq {
  type: MasterPupilType;
}

export enum GetMasterPupilMainDataReq_CmdId {
  CMD_ID = 657,
  UNRECOGNIZED = -1,
}

export interface GetMasterPupilMainDataRsp {
  retcode: MasterPupilRetcode_Retcode;
  type: MasterPupilType;
  master: MasterMainData | undefined;
  pupil: PupilMainData | undefined;
}

export enum GetMasterPupilMainDataRsp_CmdId {
  CMD_ID = 658,
  UNRECOGNIZED = -1,
}

export interface GetMasterRankReq {
}

export enum GetMasterRankReq_CmdId {
  CMD_ID = 662,
  UNRECOGNIZED = -1,
}

export interface GetMasterRankRsp {
  retcode: MasterPupilRetcode_Retcode;
  rankData: RankShowData | undefined;
  refreshTime: number;
}

export enum GetMasterRankRsp_CmdId {
  CMD_ID = 663,
  UNRECOGNIZED = -1,
}

export interface GetMatrixFloorReq {
  floorId: number;
}

export enum GetMatrixFloorReq_CmdId {
  CMD_ID = 2322,
  UNRECOGNIZED = -1,
}

export interface GetMatrixFloorRsp {
  retcode: GetMatrixFloorRsp_Retcode;
  floorBriefInfo: MatrixFloorBriefInfo | undefined;
  floorMapInfo: MatrixFloorMapInfo | undefined;
}

export enum GetMatrixFloorRsp_CmdId {
  CMD_ID = 2323,
  UNRECOGNIZED = -1,
}

export enum GetMatrixFloorRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetMatrixReq {
}

export enum GetMatrixReq_CmdId {
  CMD_ID = 2320,
  UNRECOGNIZED = -1,
}

export interface GetMatrixRsp {
  retcode: GetMatrixRsp_Retcode;
  floorBriefInfoList: MatrixFloorBriefInfo[];
  curFloorId: number;
}

export enum GetMatrixRsp_CmdId {
  CMD_ID = 2321,
  UNRECOGNIZED = -1,
}

export enum GetMatrixRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetMedalDataReq {
  medalIdList: number[];
}

export enum GetMedalDataReq_CmdId {
  CMD_ID = 449,
  UNRECOGNIZED = -1,
}

export interface GetMedalDataRsp {
  retcode: GetMedalDataRsp_Retcode;
  medalList: Medal[];
  isAll: boolean;
}

export enum GetMedalDataRsp_CmdId {
  CMD_ID = 450,
  UNRECOGNIZED = -1,
}

export enum GetMedalDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetMiniRankReq {
  type: number;
  stageId: number;
  activityId: number;
  avatarId: number;
  rankId: number;
  challengeId: number;
}

export enum GetMiniRankReq_CmdId {
  CMD_ID = 1603,
  UNRECOGNIZED = -1,
}

export interface GetMiniRankRsp {
  retcode: GetMiniRankRsp_Retcode;
  type: number;
  stageId: number;
  rankData: RankShowData | undefined;
  activityId: number;
  avatarId: number;
  challengeId: number;
}

export enum GetMiniRankRsp_CmdId {
  CMD_ID = 1604,
  UNRECOGNIZED = -1,
}

export enum GetMiniRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetMinuteStageReq {
}

export enum GetMinuteStageReq_CmdId {
  CMD_ID = 542,
  UNRECOGNIZED = -1,
}

export interface GetMinuteStageRsp {
  retcode: GetMinuteStageRsp_Retcode;
  isOpen: boolean;
  stageList: MinuteStage[];
}

export enum GetMinuteStageRsp_CmdId {
  CMD_ID = 543,
  UNRECOGNIZED = -1,
}

export enum GetMinuteStageRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetMinuteTimesReq {
}

export enum GetMinuteTimesReq_CmdId {
  CMD_ID = 544,
  UNRECOGNIZED = -1,
}

export interface GetMinuteTimesRsp {
  retcode: GetMinuteTimesRsp_Retcode;
  leftTimes: number;
  recoverTime: number;
}

export enum GetMinuteTimesRsp_CmdId {
  CMD_ID = 545,
  UNRECOGNIZED = -1,
}

export enum GetMinuteTimesRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetMissionDataReq {
}

export enum GetMissionDataReq_CmdId {
  CMD_ID = 112,
  UNRECOGNIZED = -1,
}

export interface GetMissionDataRsp {
  retcode: GetMissionDataRsp_Retcode;
  missionList: Mission[];
  isAll: boolean;
  isInActivity: boolean;
  challengeMission: ChallengeMissionData | undefined;
  closeMissionList: number[];
  mainlineStep: MainlineStepMission | undefined;
}

export enum GetMissionDataRsp_CmdId {
  CMD_ID = 113,
  UNRECOGNIZED = -1,
}

export enum GetMissionDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetMissionGroupMainInfoReq {
}

export enum GetMissionGroupMainInfoReq_CmdId {
  CMD_ID = 4346,
  UNRECOGNIZED = -1,
}

export interface GetMissionGroupMainInfoRsp {
  retcode: GetMissionGroupMainInfoRsp_Retcode;
  hasTakeRewardMissionGroupList: number[];
}

export enum GetMissionGroupMainInfoRsp_CmdId {
  CMD_ID = 4347,
  UNRECOGNIZED = -1,
}

export enum GetMissionGroupMainInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetMissionRewardReq {
  missionIdList: number[];
}

export enum GetMissionRewardReq_CmdId {
  CMD_ID = 114,
  UNRECOGNIZED = -1,
}

export interface GetMissionRewardRsp {
  retcode: GetMissionRewardRsp_Retcode;
  rewardData: RewardData | undefined;
  missionIdList: number[];
  rewardUnlockTime: number;
}

export enum GetMissionRewardRsp_CmdId {
  CMD_ID = 115,
  UNRECOGNIZED = -1,
}

export enum GetMissionRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MISSION_ID_ERROR = 2,
  MISSION_STATUS_ERROR = 3,
  EQUIPMENT_FULL = 4,
  EQUIPMENT_MATERIAL_LIMIT = 5,
  EQUIPMENT_FRAGMENT_LIMIT = 6,
  FEATURE_CLOSED = 7,
  EQUIPMENT_ELF_FRAGMENT_LIMIT = 8,
  TIME_LIMIT = 9,
  UNRECOGNIZED = -1,
}

export interface GetMissionStepCompensationInfoReq {
}

export enum GetMissionStepCompensationInfoReq_CmdId {
  CMD_ID = 1632,
  UNRECOGNIZED = -1,
}

export interface GetMissionStepCompensationInfoRsp {
  retcode: GetMissionStepCompensationInfoRsp_Retcode;
  challengeMissionCompensationList: MissionStepCompensation[];
  mainlineMisssionCompensation: MissionStepCompensation | undefined;
  hasTakeReward: boolean;
}

export enum GetMissionStepCompensationInfoRsp_CmdId {
  CMD_ID = 1633,
  UNRECOGNIZED = -1,
}

export enum GetMissionStepCompensationInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_REWARD = 2,
  UNRECOGNIZED = -1,
}

export interface GetMissionThemeDataReq {
  themeId: number;
  isGetAll: boolean;
}

export enum GetMissionThemeDataReq_CmdId {
  CMD_ID = 4205,
  UNRECOGNIZED = -1,
}

export interface GetMissionThemeDataRsp {
  retcode: GetMissionThemeDataRsp_Retcode;
  themeId: number;
  isGetAll: boolean;
  missionThemeList: MissionThemeData[];
}

export enum GetMissionThemeDataRsp_CmdId {
  CMD_ID = 4206,
  UNRECOGNIZED = -1,
}

export enum GetMissionThemeDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetMonopolyActivityReq {
  monopolyId: number;
}

export enum GetMonopolyActivityReq_CmdId {
  CMD_ID = 3850,
  UNRECOGNIZED = -1,
}

export interface GetMonopolyActivityRsp {
  retcode: GetMonopolyActivityRsp_Retcode;
  monopolyId: number;
  areaList: MonopolyArea[];
  goodsList: MonopolyShopGoods[];
}

export enum GetMonopolyActivityRsp_CmdId {
  CMD_ID = 3851,
  UNRECOGNIZED = -1,
}

export enum GetMonopolyActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetMosaicActivityReq {
}

export enum GetMosaicActivityReq_CmdId {
  CMD_ID = 4340,
  UNRECOGNIZED = -1,
}

export interface GetMosaicActivityRsp {
  retcode: GetMosaicActivityRsp_Retcode;
  activityList: MosaicActivity[];
}

export enum GetMosaicActivityRsp_CmdId {
  CMD_ID = 4341,
  UNRECOGNIZED = -1,
}

export enum GetMosaicActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetMpDataReq {
  dataType: MpDataType;
}

export enum GetMpDataReq_CmdId {
  CMD_ID = 340,
  UNRECOGNIZED = -1,
}

export interface GetMpDataRsp {
  retcode: GetMpDataRsp_Retcode;
  dataType: MpDataType;
  opType: GetMpDataRsp_OpType;
  mpLevel: number;
  mpExp: number;
  skillPointList: MpSkillPoint[];
  skillList: MpSkill[];
  teamAvatarId: number;
  punishEndTime: number;
}

export enum GetMpDataRsp_CmdId {
  CMD_ID = 341,
  UNRECOGNIZED = -1,
}

export enum GetMpDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export enum GetMpDataRsp_OpType {
  INIT_DATA = 0,
  ADD_DATA = 1,
  UPDATE_DATA = 2,
  UNRECOGNIZED = -1,
}

export interface GetMpRaidRankReq {
  activityId: number;
}

export enum GetMpRaidRankReq_CmdId {
  CMD_ID = 549,
  UNRECOGNIZED = -1,
}

export interface GetMpRaidRankRsp {
  retcode: GetMpRaidRankRsp_Retcode;
  activityId: number;
  rankData: RankShowData | undefined;
}

export enum GetMpRaidRankRsp_CmdId {
  CMD_ID = 550,
  UNRECOGNIZED = -1,
}

export enum GetMpRaidRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetMpRaidSpecialRewardReq {
  activityId: number;
}

export enum GetMpRaidSpecialRewardReq_CmdId {
  CMD_ID = 551,
  UNRECOGNIZED = -1,
}

export interface GetMpRaidSpecialRewardRsp {
  retcode: GetMpRaidSpecialRewardRsp_Retcode;
  activityId: number;
  rewardList: RewardData[];
}

export enum GetMpRaidSpecialRewardRsp_CmdId {
  CMD_ID = 552,
  UNRECOGNIZED = -1,
}

export enum GetMpRaidSpecialRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  REWARD_REPEAT = 2,
  STAGE_NOT_FINISH = 3,
  UNRECOGNIZED = -1,
}

export interface GetMpStageRecordReq {
}

export enum GetMpStageRecordReq_CmdId {
  CMD_ID = 1018,
  UNRECOGNIZED = -1,
}

export interface GetMpStageRecordRsp {
  retcode: GetMpStageRecordRsp_Retcode;
  recordList: MpStageRecord[];
}

export enum GetMpStageRecordRsp_CmdId {
  CMD_ID = 1019,
  UNRECOGNIZED = -1,
}

export enum GetMpStageRecordRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetMyCardAuthCodeReq {
  facTradeSeq: string;
  productName: string;
  amount: string;
}

export enum GetMyCardAuthCodeReq_CmdId {
  CMD_ID = 368,
  UNRECOGNIZED = -1,
}

export interface GetMyCardAuthCodeRsp {
  retcode: GetMyCardAuthCodeRsp_Retcode;
  authCode: string;
  tradeSeq: string;
  productName: string;
}

export enum GetMyCardAuthCodeRsp_CmdId {
  CMD_ID = 369,
  UNRECOGNIZED = -1,
}

export enum GetMyCardAuthCodeRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetNewbieActivityReq {
}

export enum GetNewbieActivityReq_CmdId {
  CMD_ID = 4248,
  UNRECOGNIZED = -1,
}

export interface GetNewbieActivityRsp {
  retcode: GetNewbieActivityRsp_Retcode;
  scheduleId: number;
  endTime: number;
  takenRewardLevelList: number[];
  challenge: NewbieActivityChallenge | undefined;
  privilege: NewbiePrivilegeInfo | undefined;
  levelRush: NewbieLevelRush | undefined;
}

export enum GetNewbieActivityRsp_CmdId {
  CMD_ID = 4249,
  UNRECOGNIZED = -1,
}

export enum GetNewbieActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_NEWBIE = 2,
  UNRECOGNIZED = -1,
}

export interface GetNewConsignedOrderDataReq {
}

export enum GetNewConsignedOrderDataReq_CmdId {
  CMD_ID = 517,
  UNRECOGNIZED = -1,
}

export interface GetNewConsignedOrderDataRsp {
  retcode: GetNewConsignedOrderDataRsp_Retcode;
  progress: number;
  orderList: ConsignedOrder[];
  cdFinishTime: number;
  finishOrderTimes: number;
  totalOrderTimes: number;
}

export enum GetNewConsignedOrderDataRsp_CmdId {
  CMD_ID = 518,
  UNRECOGNIZED = -1,
}

export enum GetNewConsignedOrderDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  UNRECOGNIZED = -1,
}

export interface GetNinjaActivityReq {
}

export enum GetNinjaActivityReq_CmdId {
  CMD_ID = 4400,
  UNRECOGNIZED = -1,
}

export interface GetNinjaActivityRsp {
  retcode: GetNinjaActivityRsp_Retcode;
  ninjaData: NinjaActivityData | undefined;
}

export enum GetNinjaActivityRsp_CmdId {
  CMD_ID = 4401,
  UNRECOGNIZED = -1,
}

export enum GetNinjaActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetOfflineFriendsPointNotify {
  friendsPoint: number;
}

export enum GetOfflineFriendsPointNotify_CmdId {
  CMD_ID = 81,
  UNRECOGNIZED = -1,
}

export interface GetOfflineResourceDataReq {
}

export enum GetOfflineResourceDataReq_CmdId {
  CMD_ID = 4211,
  UNRECOGNIZED = -1,
}

export interface GetOfflineResourceDataRsp {
  retcode: GetOfflineResourceDataRsp_Retcode;
  curScheduleId: number;
  offlineResourceList: OfflineResource[];
}

export enum GetOfflineResourceDataRsp_CmdId {
  CMD_ID = 4212,
  UNRECOGNIZED = -1,
}

export enum GetOfflineResourceDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_SCHEDULE = 2,
  UNRECOGNIZED = -1,
}

export interface GetOnlineRewardActivityReq {
}

export enum GetOnlineRewardActivityReq_CmdId {
  CMD_ID = 4196,
  UNRECOGNIZED = -1,
}

export interface GetOnlineRewardActivityRsp {
  retcode: GetOnlineRewardActivityRsp_Retcode;
  beginTime: number;
  endTime: number;
  minLevel: number;
  rewardList: GetOnlineRewardActivityRsp_OnlineReward[];
}

export enum GetOnlineRewardActivityRsp_CmdId {
  CMD_ID = 4197,
  UNRECOGNIZED = -1,
}

export enum GetOnlineRewardActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_OPEN = 2,
  LEVEL_NOT_SATISFY = 3,
  UNRECOGNIZED = -1,
}

export interface GetOnlineRewardActivityRsp_OnlineReward {
  id: number;
  takeTime: number;
  isTaken: boolean;
}

export interface GetOpenworldEndlessDataReq {
  level: number;
  type: EndlessType;
  isFinishFront: boolean;
}

export enum GetOpenworldEndlessDataReq_CmdId {
  CMD_ID = 3419,
  UNRECOGNIZED = -1,
}

export interface GetOpenworldEndlessDataRsp {
  retcode: GetOpenworldEndlessDataRsp_Retcode;
  groupId: number;
  groupLevel: number;
  beginTime: number;
  endTime: number;
  closeTime: number;
  endlessDataList: OpenworldEndlessPlayer[];
  briefDataList: PlayerFriendBriefData[];
  randomSeed: number;
  itemList: OpenworldEndlessItem[];
  finishMonsterGroupList: number[];
  battleConfigId: number;
  effectItemList: OpenworldEndlessItem[];
  trapAddItemList: OpenworldEndlessItem[];
  bossExtraScore: number;
  isJustJoin: number;
  curTopGroupLevel: number;
  topGroupPlayerNum: number;
  topGroupPromoteUnlockPlayerNum: number;
  invasionId: number;
  hardLevel: number;
  warInfoList: OpenworldEndlessWarInfo[];
  eventSubTypeIdList: number[];
  trapItemShowIdList: number[];
  monsterGroupList: OpenworldEndlessMonsterGroup[];
  type: EndlessType;
  quantumEndless: QuantumEndless | undefined;
  greedyEndless: GreedyEndless | undefined;
}

export enum GetOpenworldEndlessDataRsp_CmdId {
  CMD_ID = 3420,
  UNRECOGNIZED = -1,
}

export enum GetOpenworldEndlessDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LEVEL_LACK = 2,
  NO_ENDLESS = 3,
  URGENCY_STOP = 4,
  ULTRA_ENDLESS = 5,
  FEATURE_CLOSED = 6,
  UNRECOGNIZED = -1,
}

export interface GetOpenworldEndlessPlayerWarInfoReq {
  targetUid: number;
}

export enum GetOpenworldEndlessPlayerWarInfoReq_CmdId {
  CMD_ID = 3443,
  UNRECOGNIZED = -1,
}

export interface GetOpenworldEndlessPlayerWarInfoRsp {
  retcode: GetOpenworldEndlessPlayerWarInfoRsp_Retcode;
  targetUid: number;
  warInfoList: OpenworldEndlessWarInfo[];
}

export enum GetOpenworldEndlessPlayerWarInfoRsp_CmdId {
  CMD_ID = 3444,
  UNRECOGNIZED = -1,
}

export enum GetOpenworldEndlessPlayerWarInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetOpenworldEndlessStageInnerDataReq {
  areaId: number;
}

export enum GetOpenworldEndlessStageInnerDataReq_CmdId {
  CMD_ID = 3426,
  UNRECOGNIZED = -1,
}

export interface GetOpenworldEndlessStageInnerDataRsp {
  retcode: GetOpenworldEndlessStageInnerDataRsp_Retcode;
  battleList: OpenworldEndlessBattle[];
  effectItemList: OpenworldEndlessItem[];
}

export enum GetOpenworldEndlessStageInnerDataRsp_CmdId {
  CMD_ID = 3427,
  UNRECOGNIZED = -1,
}

export enum GetOpenworldEndlessStageInnerDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetOpenworldEndlessTopGroupReq {
  type: EndlessType;
}

export enum GetOpenworldEndlessTopGroupReq_CmdId {
  CMD_ID = 3446,
  UNRECOGNIZED = -1,
}

export interface GetOpenworldEndlessTopGroupRsp {
  retcode: GetOpenworldEndlessTopGroupRsp_Retcode;
  endlessDataList: OpenworldEndlessPlayer[];
  briefDataList: PlayerFriendBriefData[];
  warInfoList: OpenworldEndlessWarInfo[];
  hardLevel: number;
  type: EndlessType;
}

export enum GetOpenworldEndlessTopGroupRsp_CmdId {
  CMD_ID = 3447,
  UNRECOGNIZED = -1,
}

export enum GetOpenworldEndlessTopGroupRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  TOP_GROUP_NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetOtherDormDataReq {
  targetUid: number;
  visitAvatar: number;
  level: number;
  name: string;
}

export enum GetOtherDormDataReq_CmdId {
  CMD_ID = 633,
  UNRECOGNIZED = -1,
}

export interface GetOtherDormDataRsp {
  retcode: GetOtherDormDataRsp_Retcode;
  targetUid: number;
  house: DormHouse | undefined;
  showRoom: number;
  visitAvatar: number;
  beLikedNum: number;
  recordList: DormVisitRecord[];
  beVisitNum: number;
  isReceiveLikeLimit: boolean;
  isHasLiked: boolean;
  isSendLikeLimit: boolean;
  facilityList: DormFacility[];
  comfortValue: number;
}

export enum GetOtherDormDataRsp_CmdId {
  CMD_ID = 634,
  UNRECOGNIZED = -1,
}

export enum GetOtherDormDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LEVEL_LIMIT = 2,
  VISIT_FORBID = 3,
  TARGET_ERROR = 4,
  UNRECOGNIZED = -1,
}

export interface GetOtherMasterPupilReq {
  uidList: number[];
}

export enum GetOtherMasterPupilReq_CmdId {
  CMD_ID = 664,
  UNRECOGNIZED = -1,
}

export interface GetOtherMasterPupilRsp {
  retcode: MasterPupilRetcode_Retcode;
  uidList: number[];
  masterPupilList: MasterPupilDetailData[];
}

export enum GetOtherMasterPupilRsp_CmdId {
  CMD_ID = 665,
  UNRECOGNIZED = -1,
}

export interface GetOtherPlayerCardDataReq {
  targetUid: number;
}

export enum GetOtherPlayerCardDataReq_CmdId {
  CMD_ID = 490,
  UNRECOGNIZED = -1,
}

export interface GetOtherPlayerCardDataRsp {
  retcode: GetOtherPlayerCardDataRsp_Retcode;
  targetUid: number;
  cardData: PlayerCardData | undefined;
  playerData: PlayerDetailData | undefined;
}

export enum GetOtherPlayerCardDataRsp_CmdId {
  CMD_ID = 491,
  UNRECOGNIZED = -1,
}

export enum GetOtherPlayerCardDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_SAME_IDC = 2,
  HAS_LOGOFF = 3,
  UNRECOGNIZED = -1,
}

export interface GetOtherPlayerClientSettingReq {
  targetUid: number;
  clientSettingType: number;
}

export enum GetOtherPlayerClientSettingReq_CmdId {
  CMD_ID = 1273,
  UNRECOGNIZED = -1,
}

export interface GetOtherPlayerClientSettingRsp {
  retcode: GetOtherPlayerClientSettingRsp_Retcode;
  targetUid: number;
  clientSettingType: number;
  isWeeklyGuideSwitchOn: boolean;
  snsShowPriviledgeList: SnsShowPriviledge[];
}

export enum GetOtherPlayerClientSettingRsp_CmdId {
  CMD_ID = 1274,
  UNRECOGNIZED = -1,
}

export enum GetOtherPlayerClientSettingRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetOverlapActivityDataReq {
  activityId: number;
}

export enum GetOverlapActivityDataReq_CmdId {
  CMD_ID = 4215,
  UNRECOGNIZED = -1,
}

export interface GetOverlapActivityDataRsp {
  retcode: GetOverlapActivityDataRsp_Retcode;
  activityData: OverlapActivityData | undefined;
}

export enum GetOverlapActivityDataRsp_CmdId {
  CMD_ID = 4216,
  UNRECOGNIZED = -1,
}

export enum GetOverlapActivityDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetPediaReq {
}

export enum GetPediaReq_CmdId {
  CMD_ID = 464,
  UNRECOGNIZED = -1,
}

export interface GetPediaRsp {
  retcode: GetPediaRsp_Retcode;
  blackList: number[];
}

export enum GetPediaRsp_CmdId {
  CMD_ID = 465,
  UNRECOGNIZED = -1,
}

export enum GetPediaRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetPhonePendantDataReq {
  phonePendantIdList: number[];
}

export enum GetPhonePendantDataReq_CmdId {
  CMD_ID = 1197,
  UNRECOGNIZED = -1,
}

export interface GetPhonePendantDataRsp {
  retcode: GetPhonePendantDataRsp_Retcode;
  isAll: boolean;
  phonePendantList: PhonePendant[];
}

export enum GetPhonePendantDataRsp_CmdId {
  CMD_ID = 1198,
  UNRECOGNIZED = -1,
}

export enum GetPhonePendantDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetPhotoDataReq {
  type: number;
}

export enum GetPhotoDataReq_CmdId {
  CMD_ID = 1191,
  UNRECOGNIZED = -1,
}

export interface GetPhotoDataRsp {
  retcode: GetPhotoDataRsp_Retcode;
  type: number;
  photoIdList: number[];
}

export enum GetPhotoDataRsp_CmdId {
  CMD_ID = 1192,
  UNRECOGNIZED = -1,
}

export enum GetPhotoDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetPictureActivityReq {
  activityId: number;
}

export enum GetPictureActivityReq_CmdId {
  CMD_ID = 4266,
  UNRECOGNIZED = -1,
}

export interface GetPictureActivityRsp {
  retcode: GetPictureActivityRsp_Retcode;
  activityId: number;
  stepList: PictureStep[];
  isShare: boolean;
  isTakeShareReward: boolean;
  score: number;
}

export enum GetPictureActivityRsp_CmdId {
  CMD_ID = 4267,
  UNRECOGNIZED = -1,
}

export enum GetPictureActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetPlayerCardReq {
  type: PlayerCardType;
}

export enum GetPlayerCardReq_CmdId {
  CMD_ID = 480,
  UNRECOGNIZED = -1,
}

export interface GetPlayerCardRsp {
  retcode: GetPlayerCardRsp_Retcode;
  type: PlayerCardType;
  avatarIdList: number[];
  medalIdList: number[];
  msgConfig: number;
  msgData: PlayerCardMsgData | undefined;
  lastReadMsgIndex: number;
  mpLikeNum: number;
  islandLikeNum: number;
  elfIdList: number[];
  campaignLikeNum: number;
  medalList: Medal[];
}

export enum GetPlayerCardRsp_CmdId {
  CMD_ID = 481,
  UNRECOGNIZED = -1,
}

export enum GetPlayerCardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetPlayerDetailDataReq {
  targetUid: number;
}

export enum GetPlayerDetailDataReq_CmdId {
  CMD_ID = 72,
  UNRECOGNIZED = -1,
}

export interface GetPlayerDetailDataRsp {
  retcode: GetPlayerDetailDataRsp_Retcode;
  detail: PlayerDetailData | undefined;
}

export enum GetPlayerDetailDataRsp_CmdId {
  CMD_ID = 73,
  UNRECOGNIZED = -1,
}

export enum GetPlayerDetailDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  TARGET_NOT_EXIST = 2,
  UNRECOGNIZED = -1,
}

export interface GetPlayerOnlineStatusReq {
  uidList: number[];
}

export enum GetPlayerOnlineStatusReq_CmdId {
  CMD_ID = 1576,
  UNRECOGNIZED = -1,
}

export interface GetPlayerOnlineStatusRsp {
  retcode: GetPlayerOnlineStatusRsp_Retcode;
  onlineStatusList: PlayerOnlineStatusInfo[];
}

export enum GetPlayerOnlineStatusRsp_CmdId {
  CMD_ID = 1577,
  UNRECOGNIZED = -1,
}

export enum GetPlayerOnlineStatusRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetPlayerTokenReq {
  accountType: number;
  accountUid: string;
  accountToken: string;
  accountExt: string;
  token: string;
  version: string;
  device: string;
  tag: number;
  uid: number;
  systemInfo: string;
  ipv4Str: string;
  ipv6Str: string;
  cps: string;
  deviceUuid: string;
  transferCode: string;
  transferPwd: string;
  ipInfoStr: string;
  deviceType: DeviceType;
  isAllowDeviceRegister: boolean;
  comboChannelId: number;
  comboToken: string;
  userIpStr: string;
}

export enum GetPlayerTokenReq_CmdId {
  CMD_ID = 4,
  UNRECOGNIZED = -1,
}

export interface GetPlayerTokenRsp {
  retcode: GetPlayerTokenRsp_Retcode;
  uid: number;
  token: string;
  accountType: number;
  accountUid: string;
  tag: number;
  transferCode: string;
  transferPwdExpireTime: number;
  isBindAccess: boolean;
  fightserverIp: number;
  fightserverPort: number;
  msg: string;
  blackListEndTime: number;
  userType: number;
  limitLevel: number;
  securityCmdBuffer: Buffer;
  hoyolabAccountUid: string;
}

export enum GetPlayerTokenRsp_CmdId {
  CMD_ID = 5,
  UNRECOGNIZED = -1,
}

export enum GetPlayerTokenRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  REGISTER_CLOSED = 2,
  ACCOUNT_VERIFY_ERROR = 3,
  TOKEN_REPEAT = 4,
  ACCOUNT_TYPE_ERROR = 5,
  SERVER_FULL = 6,
  INVALID_APK = 7,
  TRANSFER_CODE_ERROR = 8,
  IN_BLACK_LIST = 9,
  SERVER_STOP = 10,
  ACCOUNT_LOCKED = 11,
  SERVER_BUSY = 12,
  DEVICE_TYPE_ERROR = 13,
  FORBID_VISITOR = 14,
  FORBID_TAG_SMURF_VISITOR = 15,
  ANTI_ADDICT_LOGIN = 16,
  GAME_NOT_AVAILABLE = 17,
  UNRECOGNIZED = -1,
}

export interface GetPlotListReq {
}

export enum GetPlotListReq_CmdId {
  CMD_ID = 1382,
  UNRECOGNIZED = -1,
}

export interface GetPlotListRsp {
  retcode: GetPlotListRsp_Retcode;
  plotList: number[];
}

export enum GetPlotListRsp_CmdId {
  CMD_ID = 1383,
  UNRECOGNIZED = -1,
}

export enum GetPlotListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetPrivateHistoryChatMsgReq {
  uidList: number[];
}

export enum GetPrivateHistoryChatMsgReq_CmdId {
  CMD_ID = 2237,
  UNRECOGNIZED = -1,
}

export interface GetPrivateHistoryChatMsgRsp {
  retcode: GetPrivateHistoryChatMsgRsp_Retcode;
  chatList: HistoryPrivateChatMsg[];
}

export enum GetPrivateHistoryChatMsgRsp_CmdId {
  CMD_ID = 2238,
  UNRECOGNIZED = -1,
}

export enum GetPrivateHistoryChatMsgRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetPrivilegeInfoReq {
}

export enum GetPrivilegeInfoReq_CmdId {
  CMD_ID = 1646,
  UNRECOGNIZED = -1,
}

export interface GetPrivilegeInfoRsp {
  retcode: GetPrivilegeInfoRsp_Retcode;
  privilegeList: PrivilegeInfo[];
}

export enum GetPrivilegeInfoRsp_CmdId {
  CMD_ID = 1647,
  UNRECOGNIZED = -1,
}

export enum GetPrivilegeInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetProductListReq {
}

export enum GetProductListReq_CmdId {
  CMD_ID = 98,
  UNRECOGNIZED = -1,
}

export interface GetProductListRsp {
  retcode: GetProductListRsp_Retcode;
  productList: Product[];
  nextRandomBoxProductRefreshTime: number;
  nextLimitProductRefreshTime: number;
  foundationList: FoundationData[];
}

export enum GetProductListRsp_CmdId {
  CMD_ID = 99,
  UNRECOGNIZED = -1,
}

export enum GetProductListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  DEVICE_ERROR = 2,
  UNRECOGNIZED = -1,
}

export interface GetProductRecommendListReq {
}

export enum GetProductRecommendListReq_CmdId {
  CMD_ID = 1478,
  UNRECOGNIZED = -1,
}

export interface GetProductRecommendListRsp {
  retcode: GetProductRecommendListRsp_Retcode;
  recommendList: number[];
}

export enum GetProductRecommendListRsp_CmdId {
  CMD_ID = 1479,
  UNRECOGNIZED = -1,
}

export enum GetProductRecommendListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetPupilEvalDataReq {
}

export enum GetPupilEvalDataReq_CmdId {
  CMD_ID = 659,
  UNRECOGNIZED = -1,
}

export interface GetPupilEvalDataRsp {
  retcode: MasterPupilRetcode_Retcode;
  evalMsg: MasterPupilEvalMsg | undefined;
}

export enum GetPupilEvalDataRsp_CmdId {
  CMD_ID = 660,
  UNRECOGNIZED = -1,
}

export interface GetPupilMissionReq {
  uid: number;
}

export enum GetPupilMissionReq_CmdId {
  CMD_ID = 651,
  UNRECOGNIZED = -1,
}

export interface GetPupilMissionRsp {
  retcode: MasterPupilRetcode_Retcode;
  uid: number;
  stepId: number;
  missionList: Mission[];
  poolReward: MasterPoolData | undefined;
  time: number;
}

export enum GetPupilMissionRsp_CmdId {
  CMD_ID = 652,
  UNRECOGNIZED = -1,
}

export interface GetQuestionActivityReq {
}

export enum GetQuestionActivityReq_CmdId {
  CMD_ID = 4258,
  UNRECOGNIZED = -1,
}

export interface GetQuestionActivityRsp {
  retcode: GetQuestionActivityRsp_Retcode;
  curScheduleId: number;
  questionList: Question[];
}

export enum GetQuestionActivityRsp_CmdId {
  CMD_ID = 4259,
  UNRECOGNIZED = -1,
}

export enum GetQuestionActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetRaffleActivityReq {
  raffleIdList: number[];
}

export enum GetRaffleActivityReq_CmdId {
  CMD_ID = 3898,
  UNRECOGNIZED = -1,
}

export interface GetRaffleActivityRsp {
  retcode: GetRaffleActivityRsp_Retcode;
  raffleActivity: RaffleActivity | undefined;
}

export enum GetRaffleActivityRsp_CmdId {
  CMD_ID = 3899,
  UNRECOGNIZED = -1,
}

export enum GetRaffleActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_RAFFLE = 2,
  NOT_OPEN = 3,
  UNRECOGNIZED = -1,
}

export interface GetRaidActiveInfoReq {
}

export enum GetRaidActiveInfoReq_CmdId {
  CMD_ID = 1622,
  UNRECOGNIZED = -1,
}

export interface GetRaidActiveInfoRsp {
  retcode: GetRaidActiveInfoRsp_Retcode;
  scheduleId: number;
  activeType: RaidActiveType;
  hasDailyRaidActivity: boolean;
}

export enum GetRaidActiveInfoRsp_CmdId {
  CMD_ID = 1623,
  UNRECOGNIZED = -1,
}

export enum GetRaidActiveInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetRankScheduleDataReq {
}

export enum GetRankScheduleDataReq_CmdId {
  CMD_ID = 4233,
  UNRECOGNIZED = -1,
}

export interface GetRankScheduleDataRsp {
  retcode: GetRankScheduleDataRsp_Retcode;
  rankScheduleList: RankScheduleData[];
}

export enum GetRankScheduleDataRsp_CmdId {
  CMD_ID = 4234,
  UNRECOGNIZED = -1,
}

export enum GetRankScheduleDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetRankScheduleRankReq {
  scheduleId: number;
}

export enum GetRankScheduleRankReq_CmdId {
  CMD_ID = 4235,
  UNRECOGNIZED = -1,
}

export interface GetRankScheduleRankRsp {
  retcode: GetRankScheduleRankRsp_Retcode;
  rankData: RankShowData | undefined;
}

export enum GetRankScheduleRankRsp_CmdId {
  CMD_ID = 4236,
  UNRECOGNIZED = -1,
}

export enum GetRankScheduleRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetReclaimActivityDataReq {
  dataType: ReclaimActivityDataType;
}

export enum GetReclaimActivityDataReq_CmdId {
  CMD_ID = 1167,
  UNRECOGNIZED = -1,
}

export interface GetReclaimActivityDataRsp {
  retcode: GetReclaimActivityDataRsp_Retcode;
  dataType: ReclaimActivityDataType;
  id: number;
  level: number;
  hasTakeRewardLevelList: number[];
  reclaimAvatarList: ReclaimAvatar[];
  reclaimWeaponIdList: number[];
  reclaimStigmataIdList: number[];
  reclaimAvatarTeamList: number[];
  levelExp: number;
  totalExp: number;
  candidateItemList: number[];
  candidateGachaBoxId: number;
  boomEnergy: number;
  enterBoomStageTimes: number;
}

export enum GetReclaimActivityDataRsp_CmdId {
  CMD_ID = 1168,
  UNRECOGNIZED = -1,
}

export enum GetReclaimActivityDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetReclaimRankReq {
}

export enum GetReclaimRankReq_CmdId {
  CMD_ID = 1175,
  UNRECOGNIZED = -1,
}

export interface GetReclaimRankRsp {
  retcode: GetReclaimRankRsp_Retcode;
  activityId: number;
  rankData: RankShowData | undefined;
}

export enum GetReclaimRankRsp_CmdId {
  CMD_ID = 1176,
  UNRECOGNIZED = -1,
}

export enum GetReclaimRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetRecommendArmadaMemberListReq {
  uidList: number[];
}

export enum GetRecommendArmadaMemberListReq_CmdId {
  CMD_ID = 2803,
  UNRECOGNIZED = -1,
}

export interface GetRecommendArmadaMemberListRsp {
  retcode: GetRecommendArmadaMemberListRsp_Retcode;
  recommendList: PlayerFriendBriefData[];
}

export enum GetRecommendArmadaMemberListRsp_CmdId {
  CMD_ID = 2804,
  UNRECOGNIZED = -1,
}

export enum GetRecommendArmadaMemberListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  TOO_FREQUENT = 3,
  NOT_LEADER = 4,
  ZERO = 5,
  UNRECOGNIZED = -1,
}

export interface GetRecommendArmadaReq {
  level: number;
  friendUidList: number[];
}

export enum GetRecommendArmadaReq_CmdId {
  CMD_ID = 2617,
  UNRECOGNIZED = -1,
}

export interface GetRecommendArmadaRsp {
  retcode: GetRecommendArmadaRsp_Retcode;
  armadaList: ArmadaBriefData[];
}

export enum GetRecommendArmadaRsp_CmdId {
  CMD_ID = 2618,
  UNRECOGNIZED = -1,
}

export enum GetRecommendArmadaRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LEVEL_LACK = 2,
  UNRECOGNIZED = -1,
}

export interface GetRecommendFriendListReq {
  level: number;
  filterUidList: number[];
  recommendUidList: number[];
  mpRecommendUidList: number[];
}

export enum GetRecommendFriendListReq_CmdId {
  CMD_ID = 76,
  UNRECOGNIZED = -1,
}

export interface GetRecommendFriendListRsp {
  retcode: GetRecommendFriendListRsp_Retcode;
  recommendList: PlayerFriendBriefData[];
}

export enum GetRecommendFriendListRsp_CmdId {
  CMD_ID = 77,
  UNRECOGNIZED = -1,
}

export enum GetRecommendFriendListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  TOO_OFTEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetRecommendGoodsReq {
}

export enum GetRecommendGoodsReq_CmdId {
  CMD_ID = 1275,
  UNRECOGNIZED = -1,
}

export interface GetRecommendGoodsRsp {
  retcode: GetRecommendGoodsRsp_Retcode;
  recommendGoodsList: RecommendGoods[];
}

export enum GetRecommendGoodsRsp_CmdId {
  CMD_ID = 1276,
  UNRECOGNIZED = -1,
}

export enum GetRecommendGoodsRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetRecommendMasterPupilReq {
  type: MasterPupilType;
  card: MasterPupilCard | undefined;
}

export enum GetRecommendMasterPupilReq_CmdId {
  CMD_ID = 655,
  UNRECOGNIZED = -1,
}

export interface GetRecommendMasterPupilRsp {
  retcode: MasterPupilRetcode_Retcode;
  type: MasterPupilType;
  msgList: MasterPupilApplyMsg[];
}

export enum GetRecommendMasterPupilRsp_CmdId {
  CMD_ID = 656,
  UNRECOGNIZED = -1,
}

export interface GetRecommendMissionPanelListReq {
}

export enum GetRecommendMissionPanelListReq_CmdId {
  CMD_ID = 1519,
  UNRECOGNIZED = -1,
}

export interface GetRecommendMissionPanelListRsp {
  retcode: GetRecommendMissionPanelListRsp_Retcode;
  recommendMissionPanelList: RecommendMissionPanel[];
}

export enum GetRecommendMissionPanelListRsp_CmdId {
  CMD_ID = 1520,
  UNRECOGNIZED = -1,
}

export enum GetRecommendMissionPanelListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetRedeemCodeInfoReq {
  redeemCode: string;
}

export enum GetRedeemCodeInfoReq_CmdId {
  CMD_ID = 211,
  UNRECOGNIZED = -1,
}

export interface GetRedeemCodeInfoRsp {
  retcode: GetRedeemCodeInfoRsp_Retcode;
  rewardList: RewardData[];
  desc: string;
  redeemCode: string;
}

export enum GetRedeemCodeInfoRsp_CmdId {
  CMD_ID = 212,
  UNRECOGNIZED = -1,
}

export enum GetRedeemCodeInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  REDEEM_CODE_ERROR = 2,
  UNRECOGNIZED = -1,
}

export interface GetRegionUidRangeReq {
}

export enum GetRegionUidRangeReq_CmdId {
  CMD_ID = 1380,
  UNRECOGNIZED = -1,
}

export interface GetRegionUidRangeRsp {
  retcode: GetRegionUidRangeRsp_Retcode;
  localRegionName: string;
  regionUidRangeList: RegionUidRange[];
}

export enum GetRegionUidRangeRsp_CmdId {
  CMD_ID = 1381,
  UNRECOGNIZED = -1,
}

export enum GetRegionUidRangeRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetRestaurantActivityReq {
  activityId: number;
}

export enum GetRestaurantActivityReq_CmdId {
  CMD_ID = 5860,
  UNRECOGNIZED = -1,
}

export interface GetRestaurantActivityRsp {
  retcode: GetRestaurantActivityRsp_Retcode;
  activityId: number;
  facilityLevel: number;
  roomList: RestaurantRoom[];
  orderList: RestaurantOrder[];
  weatherId: number;
}

export enum GetRestaurantActivityRsp_CmdId {
  CMD_ID = 5861,
  UNRECOGNIZED = -1,
}

export enum GetRestaurantActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetRewardLineActivityReq {
  id: number;
}

export enum GetRewardLineActivityReq_CmdId {
  CMD_ID = 5890,
  UNRECOGNIZED = -1,
}

export interface GetRewardLineActivityRsp {
  retcode: GetRewardLineActivityRsp_Retcode;
  rewardLineActivityList: RewardLineActivity[];
}

export enum GetRewardLineActivityRsp_CmdId {
  CMD_ID = 5891,
  UNRECOGNIZED = -1,
}

export enum GetRewardLineActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  CLOSED = 2,
  ACTIVITY_NOT_EXIST = 3,
  UNRECOGNIZED = -1,
}

export interface GetRogueStageDataReq {
}

export enum GetRogueStageDataReq_CmdId {
  CMD_ID = 275,
  UNRECOGNIZED = -1,
}

export interface GetRogueStageDataRsp {
  retcode: GetRogueStageDataRsp_Retcode;
  maxNextHardLevel: number;
  nextAbleResetTime: number;
  hardLevel: number;
  progress: number;
  randomSeed: number;
  avatarList: RogueStageAvatar[];
  costRatio: number;
  dropRatio: number;
}

export enum GetRogueStageDataRsp_CmdId {
  CMD_ID = 276,
  UNRECOGNIZED = -1,
}

export enum GetRogueStageDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_JOIN_ARMADA = 2,
  LEVEL_LACK = 3,
  NOT_OPEN = 4,
  UNRECOGNIZED = -1,
}

export interface GetRoomDataReq {
}

export enum GetRoomDataReq_CmdId {
  CMD_ID = 3150,
  UNRECOGNIZED = -1,
}

export interface GetRoomDataRsp {
  retcode: GetRoomDataRsp_Retcode;
}

export enum GetRoomDataRsp_CmdId {
  CMD_ID = 3151,
  UNRECOGNIZED = -1,
}

export enum GetRoomDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetRpgTaleFileReq {
  taleId: number;
}

export enum GetRpgTaleFileReq_CmdId {
  CMD_ID = 2378,
  UNRECOGNIZED = -1,
}

export interface GetRpgTaleFileRsp {
  retcode: GetRpgTaleFileRsp_Retcode;
  taleId: number;
  fileIdList: number[];
}

export enum GetRpgTaleFileRsp_CmdId {
  CMD_ID = 2379,
  UNRECOGNIZED = -1,
}

export enum GetRpgTaleFileRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetRpgTaleReq {
  taleId: number;
  isAll: boolean;
}

export enum GetRpgTaleReq_CmdId {
  CMD_ID = 2300,
  UNRECOGNIZED = -1,
}

export interface GetRpgTaleRsp {
  retcode: GetRpgTaleRsp_Retcode;
  taleId: number;
  isAll: boolean;
  rpgTaleList: RpgTaleData[];
}

export enum GetRpgTaleRsp_CmdId {
  CMD_ID = 2301,
  UNRECOGNIZED = -1,
}

export enum GetRpgTaleRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetScDLCReq {
}

export enum GetScDLCReq_CmdId {
  CMD_ID = 6300,
  UNRECOGNIZED = -1,
}

export interface GetScDLCRsp {
  retcode: GetScDLCRsp_Retcode;
  fever: ScDLCFever | undefined;
  avatarList: ScDLCAvatar[];
  npcList: ScDLCSupportNPC[];
  dailyQuestData: ScDLCDailyQuestData | undefined;
  name: string;
  achievementList: ScDLCAchievement[];
  maxChallengeRewardTakeProgress: number;
  activeFeverAbilityGroupIdList: number[];
  maxActiveFeverAbilityGroupNum: number;
}

export enum GetScDLCRsp_CmdId {
  CMD_ID = 6301,
  UNRECOGNIZED = -1,
}

export enum GetScDLCRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetScDLCSelectDailyQuestReq {
}

export enum GetScDLCSelectDailyQuestReq_CmdId {
  CMD_ID = 6316,
  UNRECOGNIZED = -1,
}

export interface GetScDLCSelectDailyQuestRsp {
  retcode: GetScDLCSelectDailyQuestRsp_Retcode;
  questList: OpenworldQuest[];
}

export enum GetScDLCSelectDailyQuestRsp_CmdId {
  CMD_ID = 6317,
  UNRECOGNIZED = -1,
}

export enum GetScDLCSelectDailyQuestRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetScDLCTowerRankReq {
}

export enum GetScDLCTowerRankReq_CmdId {
  CMD_ID = 6338,
  UNRECOGNIZED = -1,
}

export interface GetScDLCTowerRankRsp {
  retcode: GetScDLCTowerRankRsp_Retcode;
  rankPercent: number;
  rank: number;
}

export enum GetScDLCTowerRankRsp_CmdId {
  CMD_ID = 6339,
  UNRECOGNIZED = -1,
}

export enum GetScDLCTowerRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetScDLCTowerReq {
}

export enum GetScDLCTowerReq_CmdId {
  CMD_ID = 6332,
  UNRECOGNIZED = -1,
}

export interface GetScDLCTowerRsp {
  retcode: GetScDLCTowerRsp_Retcode;
  scheduleId: number;
  curFloor: number;
  maxFloor: number;
  avatarInfoList: ScDLCTowerAvatarInfo[];
  maxScore: number;
  avatarReviveTimes: number;
  scDlcFeverScore: number;
  scDlcClimaxScore: number;
  maxCanSweepFloor: number;
}

export enum GetScDLCTowerRsp_CmdId {
  CMD_ID = 6333,
  UNRECOGNIZED = -1,
}

export enum GetScDLCTowerRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetScoinExchangeInfoReq {
}

export enum GetScoinExchangeInfoReq_CmdId {
  CMD_ID = 12,
  UNRECOGNIZED = -1,
}

export interface GetScoinExchangeInfoRsp {
  retcode: GetScoinExchangeInfoRsp_Retcode;
  usableTimes: number;
  totalTimes: number;
  hcoinCost: number;
  scoinGet: number;
}

export enum GetScoinExchangeInfoRsp_CmdId {
  CMD_ID = 13,
  UNRECOGNIZED = -1,
}

export enum GetScoinExchangeInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetScratchTicketReq {
  activityId: number;
}

export enum GetScratchTicketReq_CmdId {
  CMD_ID = 4150,
  UNRECOGNIZED = -1,
}

export interface GetScratchTicketRsp {
  retcode: GetScratchTicketRsp_Retcode;
  activityId: number;
  plateId: number;
  pointList: ScratchTicketPoint[];
  resetTimes: number;
  round: number;
  corePlateEndRound: number;
  hasGotCorePlate: boolean;
}

export enum GetScratchTicketRsp_CmdId {
  CMD_ID = 4151,
  UNRECOGNIZED = -1,
}

export enum GetScratchTicketRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetSealedModeInfoReq {
}

export enum GetSealedModeInfoReq_CmdId {
  CMD_ID = 596,
  UNRECOGNIZED = -1,
}

export interface GetSealedModeInfoRsp {
  retcode: GetSealedModeInfoRsp_Retcode;
  avatarSuiteList: AvatarSuite[];
  avatarSuiteSelection: AvatarSuiteSelection | undefined;
  leftTimes: number;
  selectionSuite: SealedSuiteSelection | undefined;
}

export enum GetSealedModeInfoRsp_CmdId {
  CMD_ID = 597,
  UNRECOGNIZED = -1,
}

export enum GetSealedModeInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetSealedModeScheduleReq {
}

export enum GetSealedModeScheduleReq_CmdId {
  CMD_ID = 594,
  UNRECOGNIZED = -1,
}

export interface GetSealedModeScheduleRsp {
  retcode: GetSealedModeScheduleRsp_Retcode;
  openTime: number;
  closeTime: number;
  id: number;
}

export enum GetSealedModeScheduleRsp_CmdId {
  CMD_ID = 595,
  UNRECOGNIZED = -1,
}

export enum GetSealedModeScheduleRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetSecurityPasswordReq {
}

export enum GetSecurityPasswordReq_CmdId {
  CMD_ID = 5021,
  UNRECOGNIZED = -1,
}

export interface GetSecurityPasswordRsp {
  retcode: GetSecurityPasswordRsp_Retcode;
  status: SecurityPasswordStatus;
  deviceStatus: SecurityPasswordDeviceStatus;
  resetEndTime: number;
  salt: string;
}

export enum GetSecurityPasswordRsp_CmdId {
  CMD_ID = 5022,
  UNRECOGNIZED = -1,
}

export enum GetSecurityPasswordRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetShopListReq {
}

export enum GetShopListReq_CmdId {
  CMD_ID = 201,
  UNRECOGNIZED = -1,
}

export interface GetShopListRsp {
  retcode: GetShopListRsp_Retcode;
  shopList: Shop[];
  isAll: boolean;
}

export enum GetShopListRsp_CmdId {
  CMD_ID = 202,
  UNRECOGNIZED = -1,
}

export enum GetShopListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetShoppingMallListReq {
}

export enum GetShoppingMallListReq_CmdId {
  CMD_ID = 1157,
  UNRECOGNIZED = -1,
}

export interface GetShoppingMallListRsp {
  retcode: GetShoppingMallListRsp_Retcode;
  shopList: Shop[];
  effectiveGiftGoodsList: EffectiveGiftGoodsData[];
}

export enum GetShoppingMallListRsp_CmdId {
  CMD_ID = 1158,
  UNRECOGNIZED = -1,
}

export enum GetShoppingMallListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetSignInRewardReq {
}

export enum GetSignInRewardReq_CmdId {
  CMD_ID = 123,
  UNRECOGNIZED = -1,
}

export interface GetSignInRewardRsp {
  retcode: GetSignInRewardRsp_Retcode;
  rewardList: RewardData[];
}

export enum GetSignInRewardRsp_CmdId {
  CMD_ID = 124,
  UNRECOGNIZED = -1,
}

export enum GetSignInRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  REPEAT_SIGN_IN = 2,
  UNRECOGNIZED = -1,
}

export interface GetSignInRewardStatusReq {
}

export enum GetSignInRewardStatusReq_CmdId {
  CMD_ID = 121,
  UNRECOGNIZED = -1,
}

export interface GetSignInRewardStatusRsp {
  retcode: GetSignInRewardStatusRsp_Retcode;
  isNeedSignIn: boolean;
  nextSignInDay: number;
  nextSignInRewardId: number;
}

export enum GetSignInRewardStatusRsp_CmdId {
  CMD_ID = 122,
  UNRECOGNIZED = -1,
}

export enum GetSignInRewardStatusRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetSimulateActivityReq {
  activityId: number;
}

export enum GetSimulateActivityReq_CmdId {
  CMD_ID = 484,
  UNRECOGNIZED = -1,
}

export interface GetSimulateActivityRsp {
  retcode: GetSimulateActivityRsp_Retcode;
  activityId: number;
  percent: number;
  playerList: SimulatePlayerData[];
  bestAvatarIdList: number[];
}

export enum GetSimulateActivityRsp_CmdId {
  CMD_ID = 485,
  UNRECOGNIZED = -1,
}

export enum GetSimulateActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_OPEN = 2,
  ACTIVITY_ERROR = 3,
  UNRECOGNIZED = -1,
}

export interface GetSingleShopWithoutRefreshReq {
  shopId: number;
}

export enum GetSingleShopWithoutRefreshReq_CmdId {
  CMD_ID = 1617,
  UNRECOGNIZED = -1,
}

export interface GetSingleShopWithoutRefreshRsp {
  retcode: GetSingleShopWithoutRefreshRsp_Retcode;
  shop: Shop | undefined;
}

export enum GetSingleShopWithoutRefreshRsp_CmdId {
  CMD_ID = 1618,
  UNRECOGNIZED = -1,
}

export enum GetSingleShopWithoutRefreshRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetSlotMachineMainInfoReq {
  activityId: number;
}

export enum GetSlotMachineMainInfoReq_CmdId {
  CMD_ID = 4315,
  UNRECOGNIZED = -1,
}

export interface GetSlotMachineMainInfoRsp {
  retcode: GetSlotMachineMainInfoRsp_Retcode;
  activityId: number;
  curGachaId: number;
  gachaTimes: number;
  hasTakeRewardProgress: number;
  isNextSuperGacha: boolean;
}

export enum GetSlotMachineMainInfoRsp_CmdId {
  CMD_ID = 4316,
  UNRECOGNIZED = -1,
}

export enum GetSlotMachineMainInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetSnsShowDataReq {
  snsShowType: number;
  targetUid: number;
  isFriend: boolean;
  exBossScheduleId: number;
}

export enum GetSnsShowDataReq_CmdId {
  CMD_ID = 1266,
  UNRECOGNIZED = -1,
}

export interface GetSnsShowDataRsp {
  retcode: GetSnsShowDataRsp_Retcode;
  snsShowType: number;
  targetUid: number;
  snsShowEndlessData: SnsShowEndlessData | undefined;
  snsShowExBossData: SnsShowExBossData | undefined;
  wikiDetailDataList: WikiDetailData[];
  cardData: PlayerCardData | undefined;
  playerData: PlayerDetailData | undefined;
  targetUidLevel: number;
  snsShowTowerRaidData: SnsShowTowerRaidData | undefined;
}

export enum GetSnsShowDataRsp_CmdId {
  CMD_ID = 1267,
  UNRECOGNIZED = -1,
}

export enum GetSnsShowDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_PRIVILEDGE = 2,
  UNRECOGNIZED = -1,
}

export interface GetSpecificRankReq {
  type: SpecificRankType;
  param: number;
}

export enum GetSpecificRankReq_CmdId {
  CMD_ID = 1684,
  UNRECOGNIZED = -1,
}

export interface GetSpecificRankRsp {
  retcode: GetSpecificRankRsp_Retcode;
  type: SpecificRankType;
  param: number;
  rankData: RankShowData | undefined;
}

export enum GetSpecificRankRsp_CmdId {
  CMD_ID = 1685,
  UNRECOGNIZED = -1,
}

export enum GetSpecificRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetSpecificRecommendGoodsReq {
  goodsIdList: number[];
}

export enum GetSpecificRecommendGoodsReq_CmdId {
  CMD_ID = 1277,
  UNRECOGNIZED = -1,
}

export interface GetSpecificRecommendGoodsRsp {
  retcode: GetSpecificRecommendGoodsRsp_Retcode;
  recommendGoodsList: RecommendGoods[];
}

export enum GetSpecificRecommendGoodsRsp_CmdId {
  CMD_ID = 1278,
  UNRECOGNIZED = -1,
}

export enum GetSpecificRecommendGoodsRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetStageActDifficultyReq {
}

export enum GetStageActDifficultyReq_CmdId {
  CMD_ID = 456,
  UNRECOGNIZED = -1,
}

export interface GetStageActDifficultyRsp {
  retcode: GetStageActDifficultyRsp_Retcode;
  actDifficultyList: StageActDifficultyInfo[];
}

export enum GetStageActDifficultyRsp_CmdId {
  CMD_ID = 457,
  UNRECOGNIZED = -1,
}

export enum GetStageActDifficultyRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetStageBuffReq {
  stageIdList: number[];
  activityBuffIdList: number[];
}

export enum GetStageBuffReq_CmdId {
  CMD_ID = 1528,
  UNRECOGNIZED = -1,
}

export interface GetStageBuffRsp {
  retcode: GetStageBuffRsp_Retcode;
  stageBuffList: StageBuff[];
  activityBuffList: ActivityBuff[];
}

export enum GetStageBuffRsp_CmdId {
  CMD_ID = 1529,
  UNRECOGNIZED = -1,
}

export enum GetStageBuffRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetStageChapterReq {
}

export enum GetStageChapterReq_CmdId {
  CMD_ID = 965,
  UNRECOGNIZED = -1,
}

export interface GetStageChapterRsp {
  retcode: GetStageChapterRsp_Retcode;
  chapterList: StageChapterInfo[];
}

export enum GetStageChapterRsp_CmdId {
  CMD_ID = 966,
  UNRECOGNIZED = -1,
}

export enum GetStageChapterRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetStageDataReq {
  stageIdList: number[];
}

export enum GetStageDataReq_CmdId {
  CMD_ID = 41,
  UNRECOGNIZED = -1,
}

export interface GetStageDataRsp {
  retcode: GetStageDataRsp_Retcode;
  stageList: Stage[];
  finishedChapterList: number[];
  eventDataList: StageEventData[];
  isAll: boolean;
}

export enum GetStageDataRsp_CmdId {
  CMD_ID = 42,
  UNRECOGNIZED = -1,
}

export enum GetStageDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  STAGE_NOT_EXIST = 2,
  UNRECOGNIZED = -1,
}

export interface GetStageDropDisplayReq {
  stageIdList: number[];
}

export enum GetStageDropDisplayReq_CmdId {
  CMD_ID = 60,
  UNRECOGNIZED = -1,
}

export interface GetStageDropDisplayRsp {
  retcode: GetStageDropDisplayRsp_Retcode;
  stageDropList: StageDropDisplayInfo[];
}

export enum GetStageDropDisplayRsp_CmdId {
  CMD_ID = 61,
  UNRECOGNIZED = -1,
}

export enum GetStageDropDisplayRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  STAGE_NOT_EXIST = 2,
  STAGE_TOO_MUCH = 3,
  UNRECOGNIZED = -1,
}

export interface GetStageRecommendAvatarCourseInfoReq {
  id: string;
  type: AvatarRecommendType;
  recommendStyle: number;
  rank: number;
}

export enum GetStageRecommendAvatarCourseInfoReq_CmdId {
  CMD_ID = 1630,
  UNRECOGNIZED = -1,
}

export interface GetStageRecommendAvatarCourseInfoRsp {
  retcode: GetStageRecommendAvatarCourseInfoRsp_Retcode;
  courseInfo: string;
}

export enum GetStageRecommendAvatarCourseInfoRsp_CmdId {
  CMD_ID = 1631,
  UNRECOGNIZED = -1,
}

export enum GetStageRecommendAvatarCourseInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetStageRecommendAvatarReq {
  idList: string[];
  type: AvatarRecommendType;
}

export enum GetStageRecommendAvatarReq_CmdId {
  CMD_ID = 1541,
  UNRECOGNIZED = -1,
}

export interface GetStageRecommendAvatarRsp {
  retcode: GetStageRecommendAvatarRsp_Retcode;
  stageRecommendAvatarList: StageRecommendAvatar[];
}

export enum GetStageRecommendAvatarRsp_CmdId {
  CMD_ID = 1542,
  UNRECOGNIZED = -1,
}

export enum GetStageRecommendAvatarRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ID_TOO_MUCH = 2,
  UNRECOGNIZED = -1,
}

export interface GetStaminaExchangeInfoReq {
}

export enum GetStaminaExchangeInfoReq_CmdId {
  CMD_ID = 16,
  UNRECOGNIZED = -1,
}

export interface GetStaminaExchangeInfoRsp {
  retcode: GetStaminaExchangeInfoRsp_Retcode;
  usableTimes: number;
  totalTimes: number;
  hcoinCost: number;
  staminaGet: number;
}

export enum GetStaminaExchangeInfoRsp_CmdId {
  CMD_ID = 17,
  UNRECOGNIZED = -1,
}

export enum GetStaminaExchangeInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetSupportActivityReq {
}

export enum GetSupportActivityReq_CmdId {
  CMD_ID = 4332,
  UNRECOGNIZED = -1,
}

export interface GetSupportActivityRsp {
  retcode: GetSupportActivityRsp_Retcode;
  scheduleId: number;
  supportData: SupportData | undefined;
  isTakeGlobalReward: boolean;
}

export enum GetSupportActivityRsp_CmdId {
  CMD_ID = 4333,
  UNRECOGNIZED = -1,
}

export enum GetSupportActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetSurveyDataReq {
}

export enum GetSurveyDataReq_CmdId {
  CMD_ID = 4241,
  UNRECOGNIZED = -1,
}

export interface GetSurveyDataRsp {
  retcode: GetSurveyDataRsp_Retcode;
  surveyDataList: SurveyData[];
}

export enum GetSurveyDataRsp_CmdId {
  CMD_ID = 4242,
  UNRECOGNIZED = -1,
}

export enum GetSurveyDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetTeamBriefInfoReq {
  teamId: number;
  isFriendInvitation: boolean;
}

export enum GetTeamBriefInfoReq_CmdId {
  CMD_ID = 352,
  UNRECOGNIZED = -1,
}

export interface GetTeamBriefInfoRsp {
  retcode: GetTeamBriefInfoRsp_Retcode;
  teamId: number;
  status: MpTeamStatus;
  stageId: number;
  isFriendInvitation: boolean;
}

export enum GetTeamBriefInfoRsp_CmdId {
  CMD_ID = 353,
  UNRECOGNIZED = -1,
}

export enum GetTeamBriefInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  TEAM_NOT_EXIST = 2,
  UNRECOGNIZED = -1,
}

export interface GetTeamListReq {
  stageIdList: number[];
  teamIdList: number[];
  isSelectInOrder: boolean;
  level: number;
}

export enum GetTeamListReq_CmdId {
  CMD_ID = 1215,
  UNRECOGNIZED = -1,
}

export interface GetTeamListRsp {
  retcode: GetTeamListRsp_Retcode;
  teamDataList: MpTeamData[];
}

export enum GetTeamListRsp_CmdId {
  CMD_ID = 1216,
  UNRECOGNIZED = -1,
}

export enum GetTeamListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_STAGE = 2,
  SERVER_BUSY = 3,
  UNRECOGNIZED = -1,
}

export interface GetTeamStatusReq {
  teamIdList: number[];
}

export enum GetTeamStatusReq_CmdId {
  CMD_ID = 1553,
  UNRECOGNIZED = -1,
}

export interface GetTeamStatusRsp {
  retcode: GetTeamStatusRsp_Retcode;
  teamDataList: MpTeamData[];
}

export enum GetTeamStatusRsp_CmdId {
  CMD_ID = 1554,
  UNRECOGNIZED = -1,
}

export enum GetTeamStatusRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SERVER_BUSY = 2,
  UNRECOGNIZED = -1,
}

export interface GetThemeDataReq {
}

export enum GetThemeDataReq_CmdId {
  CMD_ID = 4244,
  UNRECOGNIZED = -1,
}

export interface GetThemeDataRsp {
  retcode: GetThemeDataRsp_Retcode;
  themeList: ThemeData[];
}

export enum GetThemeDataRsp_CmdId {
  CMD_ID = 4245,
  UNRECOGNIZED = -1,
}

export enum GetThemeDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetThemeWantedReq {
}

export enum GetThemeWantedReq_CmdId {
  CMD_ID = 5790,
  UNRECOGNIZED = -1,
}

export interface GetThemeWantedRsp {
  retcode: GetThemeWantedRsp_Retcode;
  themeWantedActivity: ThemeWantedActivity | undefined;
}

export enum GetThemeWantedRsp_CmdId {
  CMD_ID = 5791,
  UNRECOGNIZED = -1,
}

export enum GetThemeWantedRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  FEATURE_CLOSED = 3,
  UNRECOGNIZED = -1,
}

export interface GetTileMapReq {
  towerId: number;
  floorId: number;
}

export enum GetTileMapReq_CmdId {
  CMD_ID = 4900,
  UNRECOGNIZED = -1,
}

export interface GetTileMapRsp {
  retcode: GetTileMapRsp_Retcode;
  towerId: number;
  floorId: number;
  map: TileMap | undefined;
}

export enum GetTileMapRsp_CmdId {
  CMD_ID = 4901,
  UNRECOGNIZED = -1,
}

export enum GetTileMapRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LOCKED = 2,
  UNRECOGNIZED = -1,
}

export interface GetTimeLimitAddUpDataReq {
}

export enum GetTimeLimitAddUpDataReq_CmdId {
  CMD_ID = 255,
  UNRECOGNIZED = -1,
}

export interface GetTimeLimitAddUpDataRsp {
  retcode: GetTimeLimitAddUpDataRsp_Retcode;
  type: TimeLimitAddUpType;
  beginTime: number;
  endTime: number;
  addUpValue: number;
  rewardList: TimeLimitAddUpReward[];
}

export enum GetTimeLimitAddUpDataRsp_CmdId {
  CMD_ID = 256,
  UNRECOGNIZED = -1,
}

export enum GetTimeLimitAddUpDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetTowerRaidActivityReq {
}

export enum GetTowerRaidActivityReq_CmdId {
  CMD_ID = 4185,
  UNRECOGNIZED = -1,
}

export interface GetTowerRaidActivityRsp {
  retcode: GetTowerRaidActivityRsp_Retcode;
  scheduleId: number;
  activityId: number;
  hardLevel: number;
  enterTimes: number;
  isSettled: boolean;
  avatarList: TowerRaidAvatar[];
  bossStageList: TowerRaidBossStage[];
}

export enum GetTowerRaidActivityRsp_CmdId {
  CMD_ID = 4186,
  UNRECOGNIZED = -1,
}

export enum GetTowerRaidActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetTradingCardActivityReq {
}

export enum GetTradingCardActivityReq_CmdId {
  CMD_ID = 4262,
  UNRECOGNIZED = -1,
}

export interface GetTradingCardActivityRsp {
  retcode: GetTradingCardActivityRsp_Retcode;
  curScheduleId: number;
  tradeNum: number;
}

export enum GetTradingCardActivityRsp_CmdId {
  CMD_ID = 4263,
  UNRECOGNIZED = -1,
}

export enum GetTradingCardActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface GetTrialAvatarReq {
}

export enum GetTrialAvatarReq_CmdId {
  CMD_ID = 585,
  UNRECOGNIZED = -1,
}

export interface GetTrialAvatarRsp {
  retcode: GetTrialAvatarRsp_Retcode;
  avatarList: TrialAvatar[];
  isAllUpdate: boolean;
}

export enum GetTrialAvatarRsp_CmdId {
  CMD_ID = 586,
  UNRECOGNIZED = -1,
}

export enum GetTrialAvatarRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetTvtActivityReq {
}

export enum GetTvtActivityReq_CmdId {
  CMD_ID = 3300,
  UNRECOGNIZED = -1,
}

export interface GetTvtActivityRsp {
  retcode: GetTvtActivityRsp_Retcode;
  tvtActivityList: TvtActivity[];
  curSeasonId: number;
  seasonBeginTime: number;
  seasonEndTime: number;
  punishEndTime: number;
}

export enum GetTvtActivityRsp_CmdId {
  CMD_ID = 3301,
  UNRECOGNIZED = -1,
}

export enum GetTvtActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_SCHEDULE = 2,
  NOT_OPEN = 3,
  PLAYER_LEVEL_LACK = 4,
  UNRECOGNIZED = -1,
}

export interface GetTvtBattleHistoryReq {
}

export enum GetTvtBattleHistoryReq_CmdId {
  CMD_ID = 3302,
  UNRECOGNIZED = -1,
}

export interface GetTvtBattleHistoryRsp {
  retcode: GetTvtBattleHistoryRsp_Retcode;
  battleHistoryList: TvtBattleHistory[];
}

export enum GetTvtBattleHistoryRsp_CmdId {
  CMD_ID = 3303,
  UNRECOGNIZED = -1,
}

export enum GetTvtBattleHistoryRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_SCHEDULE = 2,
  UNRECOGNIZED = -1,
}

export interface GetVersionActivityReq {
}

export enum GetVersionActivityReq_CmdId {
  CMD_ID = 4223,
  UNRECOGNIZED = -1,
}

export interface GetVersionActivityRsp {
  retcode: GetVersionActivityRsp_Retcode;
  id: number;
  beginTime: number;
  endTime: number;
  score: number;
  rewardScore: number;
  versionActivityList: VersionActivityData[];
}

export enum GetVersionActivityRsp_CmdId {
  CMD_ID = 4224,
  UNRECOGNIZED = -1,
}

export enum GetVersionActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetVipRewardDataReq {
}

export enum GetVipRewardDataReq_CmdId {
  CMD_ID = 197,
  UNRECOGNIZED = -1,
}

export interface GetVipRewardDataRsp {
  retcode: GetVipRewardDataRsp_Retcode;
  totalPayHcoin: number;
  vipRewardList: VipReward[];
}

export enum GetVipRewardDataRsp_CmdId {
  CMD_ID = 198,
  UNRECOGNIZED = -1,
}

export enum GetVipRewardDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetVipRewardReq {
  vipLevelList: number[];
}

export enum GetVipRewardReq_CmdId {
  CMD_ID = 199,
  UNRECOGNIZED = -1,
}

export interface GetVipRewardRsp {
  retcode: GetVipRewardRsp_Retcode;
  rewardList: RewardData[];
}

export enum GetVipRewardRsp_CmdId {
  CMD_ID = 200,
  UNRECOGNIZED = -1,
}

export enum GetVipRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  PAY_HCOIN_LACK = 2,
  REPEAT_GET = 3,
  UNRECOGNIZED = -1,
}

export interface GetVirtualAvatarGroupDetailReq {
  groupId: number;
}

export enum GetVirtualAvatarGroupDetailReq_CmdId {
  CMD_ID = 3502,
  UNRECOGNIZED = -1,
}

export interface GetVirtualAvatarGroupDetailRsp {
  retcode: GetVirtualAvatarGroupDetailRsp_Retcode;
  virtualAvatarGroup: VirtualAvatarGroup | undefined;
}

export enum GetVirtualAvatarGroupDetailRsp_CmdId {
  CMD_ID = 3503,
  UNRECOGNIZED = -1,
}

export enum GetVirtualAvatarGroupDetailRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetVirtualGachaStatusReq {
  groupId: number;
}

export enum GetVirtualGachaStatusReq_CmdId {
  CMD_ID = 3510,
  UNRECOGNIZED = -1,
}

export interface GetVirtualGachaStatusRsp {
  retcode: GetVirtualGachaStatusRsp_Retcode;
  gachaList: VirtualGacha[];
  groupId: number;
  candidateGachaBoxId: number;
  candidateItemIdList: number[];
  candidateGachaPoolId: number;
}

export enum GetVirtualGachaStatusRsp_CmdId {
  CMD_ID = 3511,
  UNRECOGNIZED = -1,
}

export enum GetVirtualGachaStatusRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetWareHouseDataReq {
}

export enum GetWareHouseDataReq_CmdId {
  CMD_ID = 2647,
  UNRECOGNIZED = -1,
}

export interface GetWareHouseDataRsp {
  retcode: GetWareHouseDataRsp_Retcode;
  demandList: WareHouseDemand[];
  status: WareHouseStatus;
  myDemand: WareHouseDemand | undefined;
  donateUid: number;
  cdFinishTime: number;
  dayDonateTimes: number;
  maxDonateTimes: number;
}

export enum GetWareHouseDataRsp_CmdId {
  CMD_ID = 2648,
  UNRECOGNIZED = -1,
}

export enum GetWareHouseDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  STATUS_ERROR = 3,
  UNRECOGNIZED = -1,
}

export interface GetWareHouseItemReq {
}

export enum GetWareHouseItemReq_CmdId {
  CMD_ID = 2655,
  UNRECOGNIZED = -1,
}

export interface GetWareHouseItemRsp {
  retcode: GetWareHouseItemRsp_Retcode;
  demandId: number;
  status: WareHouseStatus;
  cdFinishTime: number;
}

export enum GetWareHouseItemRsp_CmdId {
  CMD_ID = 2656,
  UNRECOGNIZED = -1,
}

export enum GetWareHouseItemRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  STATUS_ERROR = 3,
  UNRECOGNIZED = -1,
}

export interface GetWarshipDataReq {
  warshipIdList: number[];
  isAll: boolean;
}

export enum GetWarshipDataReq_CmdId {
  CMD_ID = 5454,
  UNRECOGNIZED = -1,
}

export interface GetWarshipDataRsp {
  retcode: GetWarshipDataRsp_Retcode;
  warshipList: WarshipThemeData[];
  isAll: boolean;
}

export enum GetWarshipDataRsp_CmdId {
  CMD_ID = 5455,
  UNRECOGNIZED = -1,
}

export enum GetWarshipDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetWarshipItemDataReq {
  warshipItemIdList: number[];
  isAll: boolean;
}

export enum GetWarshipItemDataReq_CmdId {
  CMD_ID = 5450,
  UNRECOGNIZED = -1,
}

export interface GetWarshipItemDataRsp {
  retcode: GetWarshipItemDataRsp_Retcode;
  warshipItemIdList: number[];
  isAll: boolean;
}

export enum GetWarshipItemDataRsp_CmdId {
  CMD_ID = 5451,
  UNRECOGNIZED = -1,
}

export enum GetWarshipItemDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetWarshipTrialDataReq {
  sampleIdList: number[];
  isAll: boolean;
}

export enum GetWarshipTrialDataReq_CmdId {
  CMD_ID = 5452,
  UNRECOGNIZED = -1,
}

export interface GetWarshipTrialDataRsp {
  retcode: GetWarshipTrialDataRsp_Retcode;
  trialWarshipList: TrialWarship[];
  isAll: boolean;
}

export enum GetWarshipTrialDataRsp_CmdId {
  CMD_ID = 5453,
  UNRECOGNIZED = -1,
}

export enum GetWarshipTrialDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetWebActivityInfoReq {
}

export enum GetWebActivityInfoReq_CmdId {
  CMD_ID = 1601,
  UNRECOGNIZED = -1,
}

export interface GetWebActivityInfoRsp {
  retcode: GetWebActivityInfoRsp_Retcode;
  webActivityList: WebActivity[];
}

export enum GetWebActivityInfoRsp_CmdId {
  CMD_ID = 1602,
  UNRECOGNIZED = -1,
}

export enum GetWebActivityInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetWeekDayActivityCompensationInfoReq {
}

export enum GetWeekDayActivityCompensationInfoReq_CmdId {
  CMD_ID = 1666,
  UNRECOGNIZED = -1,
}

export interface GetWeekDayActivityCompensationInfoRsp {
  retcode: GetWeekDayActivityCompensationInfoRsp_Retcode;
  stageCompensationList: WeekDayActivityStageCompensation[];
  hasTakenCompensation: boolean;
}

export enum GetWeekDayActivityCompensationInfoRsp_CmdId {
  CMD_ID = 1667,
  UNRECOGNIZED = -1,
}

export enum GetWeekDayActivityCompensationInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetWeekDayActivityDataReq {
}

export enum GetWeekDayActivityDataReq_CmdId {
  CMD_ID = 125,
  UNRECOGNIZED = -1,
}

export interface GetWeekDayActivityDataRsp {
  retcode: GetWeekDayActivityDataRsp_Retcode;
  activityList: WeekDayActivity[];
  isWholeData: boolean;
  seriesList: ActivitySeries[];
}

export enum GetWeekDayActivityDataRsp_CmdId {
  CMD_ID = 126,
  UNRECOGNIZED = -1,
}

export enum GetWeekDayActivityDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetWeeklyReportEndlessRecommendPlayerReq {
  beginTime: number;
  groupLevel: number;
}

export enum GetWeeklyReportEndlessRecommendPlayerReq_CmdId {
  CMD_ID = 5102,
  UNRECOGNIZED = -1,
}

export interface GetWeeklyReportEndlessRecommendPlayerRsp {
  retcode: GetWeeklyReportEndlessRecommendPlayerRsp_Retcode;
  beginTime: number;
  groupLevel: number;
  rankData: RankShowData | undefined;
  endlessType: EndlessType;
}

export enum GetWeeklyReportEndlessRecommendPlayerRsp_CmdId {
  CMD_ID = 5103,
  UNRECOGNIZED = -1,
}

export enum GetWeeklyReportEndlessRecommendPlayerRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetWeeklyReportExBossRecommendPlayerReq {
  scheduleId: number;
  rankRewardId: number;
}

export enum GetWeeklyReportExBossRecommendPlayerReq_CmdId {
  CMD_ID = 5104,
  UNRECOGNIZED = -1,
}

export interface GetWeeklyReportExBossRecommendPlayerRsp {
  retcode: GetWeeklyReportExBossRecommendPlayerRsp_Retcode;
  scheduleId: number;
  rankRewardId: number;
  rankData: RankShowData | undefined;
}

export enum GetWeeklyReportExBossRecommendPlayerRsp_CmdId {
  CMD_ID = 5105,
  UNRECOGNIZED = -1,
}

export enum GetWeeklyReportExBossRecommendPlayerRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetWeeklyReportReq {
  targetUid: number;
}

export enum GetWeeklyReportReq_CmdId {
  CMD_ID = 5100,
  UNRECOGNIZED = -1,
}

export interface GetWeeklyReportRsp {
  retcode: GetWeeklyReportRsp_Retcode;
  exBossDataList: WeeklyReportExBoss[];
  endlessDataList: WeeklyReportEndless[];
  ultraEndlessList: WeeklyReportUltraEndless[];
  blockZone: WeeklyReportBlockZone | undefined;
  targetUid: number;
}

export enum GetWeeklyReportRsp_CmdId {
  CMD_ID = 5101,
  UNRECOGNIZED = -1,
}

export enum GetWeeklyReportRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetWeeklyReportUltraEndlessRecommendPlayerReq {
  scheduleId: number;
  groupId: number;
}

export enum GetWeeklyReportUltraEndlessRecommendPlayerReq_CmdId {
  CMD_ID = 5106,
  UNRECOGNIZED = -1,
}

export interface GetWeeklyReportUltraEndlessRecommendPlayerRsp {
  retcode: GetWeeklyReportUltraEndlessRecommendPlayerRsp_Retcode;
  scheduleId: number;
  groupId: number;
  rankData: RankShowData | undefined;
}

export enum GetWeeklyReportUltraEndlessRecommendPlayerRsp_CmdId {
  CMD_ID = 5107,
  UNRECOGNIZED = -1,
}

export enum GetWeeklyReportUltraEndlessRecommendPlayerRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetWeeklyRoutineActivityReq {
}

export enum GetWeeklyRoutineActivityReq_CmdId {
  CMD_ID = 4229,
  UNRECOGNIZED = -1,
}

export interface GetWeeklyRoutineActivityRsp {
  retcode: GetWeeklyRoutineActivityRsp_Retcode;
  curScheduleId: number;
  weeklyRoutineMissionList: WeeklyRoutineMission[];
  hasTakeRoutineRewardIdList: number[];
  weeklyRoutineContribution: number;
}

export enum GetWeeklyRoutineActivityRsp_CmdId {
  CMD_ID = 4230,
  UNRECOGNIZED = -1,
}

export enum GetWeeklyRoutineActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_SCHEDULE = 2,
  UNRECOGNIZED = -1,
}

export interface GetWikiDataReq {
}

export enum GetWikiDataReq_CmdId {
  CMD_ID = 1193,
  UNRECOGNIZED = -1,
}

export interface GetWikiDataRsp {
  retcode: GetWikiDataRsp_Retcode;
  hasTakeRatingRewardList: number[];
  hasTakeActivitySuitRewardList: number[];
}

export enum GetWikiDataRsp_CmdId {
  CMD_ID = 1194,
  UNRECOGNIZED = -1,
}

export enum GetWikiDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GetWorldMapDataReq {
}

export enum GetWorldMapDataReq_CmdId {
  CMD_ID = 1012,
  UNRECOGNIZED = -1,
}

export interface GetWorldMapDataRsp {
  retcode: GetWorldMapDataRsp_Retcode;
  worldMapList: WorldMapData[];
}

export enum GetWorldMapDataRsp_CmdId {
  CMD_ID = 1013,
  UNRECOGNIZED = -1,
}

export enum GetWorldMapDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GlobalPollingGetDataReq {
}

export enum GlobalPollingGetDataReq_CmdId {
  CMD_ID = 5811,
  UNRECOGNIZED = -1,
}

export interface GlobalPollingGetDataRsp {
  retcode: GlobalPollingGetDataRsp_Retcode;
  scheduleId: number;
  lastSupportTime: number;
  supportTargetId: number;
  voteBeginTime: number;
  targetDataList: GlobalPollingTargetData[];
}

export enum GlobalPollingGetDataRsp_CmdId {
  CMD_ID = 5812,
  UNRECOGNIZED = -1,
}

export enum GlobalPollingGetDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 3,
  FEATURE_CLOSED = 4,
  UNRECOGNIZED = -1,
}

export interface GlobalPollingSupportReq {
  targetId: number;
}

export enum GlobalPollingSupportReq_CmdId {
  CMD_ID = 5813,
  UNRECOGNIZED = -1,
}

export interface GlobalPollingSupportRsp {
  retcode: GlobalPollingSupportRsp_Retcode;
}

export enum GlobalPollingSupportRsp_CmdId {
  CMD_ID = 5814,
  UNRECOGNIZED = -1,
}

export enum GlobalPollingSupportRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_OPEN = 2,
  TARGET_ID_INVALID = 3,
  IN_CD = 4,
  UNRECOGNIZED = -1,
}

export interface GlobalPollingTargetData {
  id: number;
  scoreU64: number;
  voteNum: number;
}

export interface GlobalPollingVoteReq {
  targetId: number;
  num: number;
}

export enum GlobalPollingVoteReq_CmdId {
  CMD_ID = 5815,
  UNRECOGNIZED = -1,
}

export interface GlobalPollingVoteRsp {
  retcode: GlobalPollingVoteRsp_Retcode;
}

export enum GlobalPollingVoteRsp_CmdId {
  CMD_ID = 5816,
  UNRECOGNIZED = -1,
}

export enum GlobalPollingVoteRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_OPEN = 3,
  VOTE_NOT_OPEN = 4,
  TARGET_ID_INVALID = 5,
  TOO_FREQUENT = 6,
  MATERIAL_LACK = 7,
  FEATURE_CLOSED = 8,
  UNRECOGNIZED = -1,
}

export interface GlobalShopGoodsInfoNotify {
  shopGoodsList: ShopGoodsInfo[];
}

export enum GlobalShopGoodsInfoNotify_CmdId {
  CMD_ID = 1583,
  UNRECOGNIZED = -1,
}

export interface GlobalWarActivity {
  curScheduleId: number;
  displayBeginTime: number;
  displayEndTime: number;
  beginTime: number;
  endTime: number;
  totalGetCurrency: number;
  lastDailyGetCurrency: number;
  totalCostTicketNum: number;
  takePointRewardList: number[];
  globalWarPointList: GlobalWarPoint[];
  memberList: GlobalWarMember[];
  buffLevel: number;
  globalWarIsolatePointList: GlobalWarIsolatePoint[];
}

export interface GlobalWarAddCurrencyNotify {
  pointId: number;
  globalWarMember: GlobalWarMember | undefined;
}

export enum GlobalWarAddCurrencyNotify_CmdId {
  CMD_ID = 3954,
  UNRECOGNIZED = -1,
}

export interface GlobalWarExchangeCurrencyReq {
  pointId: number;
}

export enum GlobalWarExchangeCurrencyReq_CmdId {
  CMD_ID = 3955,
  UNRECOGNIZED = -1,
}

export interface GlobalWarExchangeCurrencyRsp {
  retcode: GlobalWarExchangeCurrencyRsp_Retcode;
  addCurrencyNum: number;
}

export enum GlobalWarExchangeCurrencyRsp_CmdId {
  CMD_ID = 3956,
  UNRECOGNIZED = -1,
}

export enum GlobalWarExchangeCurrencyRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  POINT_NOT_ACTIVE = 2,
  MATERIAL_LACK = 3,
  CURRENCY_FULL = 4,
  AREA_NOT_FINISH = 5,
  STAMINA_LACK = 6,
  UNRECOGNIZED = -1,
}

export interface GlobalWarGetRankReq {
  pointId: number;
}

export enum GlobalWarGetRankReq_CmdId {
  CMD_ID = 3957,
  UNRECOGNIZED = -1,
}

export interface GlobalWarGetRankRsp {
  retcode: GlobalWarGetRankRsp_Retcode;
  pointId: number;
  rankData: RankShowData | undefined;
}

export enum GlobalWarGetRankRsp_CmdId {
  CMD_ID = 3958,
  UNRECOGNIZED = -1,
}

export enum GlobalWarGetRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GlobalWarIsolatePoint {
  pointId: number;
  pointStatus: number;
}

export interface GlobalWarMember {
  uid: number;
  nickname: string;
  level: number;
  headAvatarId: number;
  frameId: number;
  dressId: number;
  customHeadId: number;
  globalWarPointId: number;
  globalWarAddCurrency: number;
  globalWarAddTime: number;
}

export interface GlobalWarPoint {
  pointId: number;
  curHp: number;
  pointStatus: number;
  lastRefreshMemberNum: number;
  pointFinishTime: number;
  lastTakeSweepRewardTime: number;
}

export interface GlobalWarTakePointRewardReq {
  pointIdList: number[];
}

export enum GlobalWarTakePointRewardReq_CmdId {
  CMD_ID = 3952,
  UNRECOGNIZED = -1,
}

export interface GlobalWarTakePointRewardRsp {
  retcode: GlobalWarTakePointRewardRsp_Retcode;
  pointIdList: number[];
  rewardData: RewardData | undefined;
}

export enum GlobalWarTakePointRewardRsp_CmdId {
  CMD_ID = 3953,
  UNRECOGNIZED = -1,
}

export enum GlobalWarTakePointRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  POINT_NOT_FINISH = 2,
  CURRENCY_LACK = 3,
  UNRECOGNIZED = -1,
}

export interface GlobalWarTakeSweepRewardReq {
  pointIdList: number[];
}

export enum GlobalWarTakeSweepRewardReq_CmdId {
  CMD_ID = 3959,
  UNRECOGNIZED = -1,
}

export interface GlobalWarTakeSweepRewardRsp {
  retcode: GlobalWarTakeSweepRewardRsp_Retcode;
  sweepCurrencyList: SweepCurrency[];
}

export enum GlobalWarTakeSweepRewardRsp_CmdId {
  CMD_ID = 3960,
  UNRECOGNIZED = -1,
}

export enum GlobalWarTakeSweepRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  POINT_NOT_FINISH = 2,
  SWEEP_MATERIAL_CD = 3,
  UNRECOGNIZED = -1,
}

export interface GmTalkReq {
  msg: string;
}

export enum GmTalkReq_CmdId {
  CMD_ID = 22,
  UNRECOGNIZED = -1,
}

export interface GmTalkRsp {
  retcode: GmTalkRsp_Retcode;
  msg: string;
  retmsg: string;
}

export enum GmTalkRsp_CmdId {
  CMD_ID = 23,
  UNRECOGNIZED = -1,
}

export enum GmTalkRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GobackActivity {
  id: number;
  endTime: number;
}

export interface GobackActivityLoginReward {
  takeDays: number;
  takeRewardList: number[];
  takeBonusRewardList: number[];
}

export interface GobackFund {
  id: number;
  isUnlocked: boolean;
  hasTakeRewardProgressList: number[];
}

export interface GobackGrowUpActivity {
  joinedRankIdList: number[];
}

export interface GodWar {
  godWarId: number;
  taleList: GodWarTale[];
  beginTime: number;
  endTime: number;
  talentList: GodWarTalent[];
  maxSupportPoint: number;
  lobbyId: number;
  chapterList: GodWarChapter[];
  curChapterId: number;
  roleInfo: GodWarRoleInfo | undefined;
}

export interface GodWarAvatarExpUp {
  beginTime: number;
  endTime: number;
  avatarIdList: number[];
  upRatio: number;
  scheduleId: number;
}

export interface GodWarBonus {
  bonusId: number;
  countDown: number;
  buff: GodWarBuff | undefined;
}

export interface GodWarBuff {
  buffId: number;
  buffLevel: number;
}

export interface GodWarChallenge {
  isChallengeFail: boolean;
  avatarList: GodWarChallengeAvatar[];
  supportAvatarIdList: number[];
  elfId: number;
  extraItemId: number;
  refreshTeleportTimes: number;
  punishBuffList: GodWarPunishBuff[];
  challengeScore: number;
  randomSeed: number;
  stepLevel: number;
  punishBuffIdList: number[];
  isUseVirtualAvatar: boolean;
  boonBuffIdList: number[];
  gainCoinNum: number;
  refreshTeleportTimesLimit: number;
  assistantExtraItemId: number;
  bonusList: GodWarBonus[];
}

export interface GodWarChallengeAvatar {
  avatarId: number;
  hpPercent: number;
  isVirtual: boolean;
  weaponId: number;
  weaponLevel: number;
  stigmata1: GodWarChallengeStigmata | undefined;
  stigmata2: GodWarChallengeStigmata | undefined;
  stigmata3: GodWarChallengeStigmata | undefined;
}

export interface GodWarChallengeHistory {
  avatarId: number;
  isChallengeSucc: boolean;
  maxPunishLevel: number;
  passStepLevelList: number[];
  maxChallengeScore: number;
}

export interface GodWarChallengeStigmata {
  id: number;
  level: number;
  runeList: StigmataRune[];
}

export interface GodWarChapter {
  chapterId: number;
  isLocked: boolean;
}

export interface GodWarOverall {
  overallId: number;
  overallVal: number;
}

export interface GodWarPunishBuff {
  buffId: number;
  buffLevel: number;
}

export interface GodWarRoleInfo {
  roleRelationList: GodWarRoleRelation[];
  avatarExpUp: GodWarAvatarExpUp | undefined;
  mainAvatarIdList: number[];
  supportAvatarIdList: number[];
}

export interface GodWarRoleRelation {
  roleId: number;
  level: number;
  exp: number;
  rewardHasTakeLevel: number;
  rewardHasTakeStoryList: number[];
}

export interface GodWarSite {
  siteId: number;
  siteStatus: GodWarSiteStatus;
}

export interface GodWarStatus {
  teleportId: number;
  isAbandon: boolean;
}

export interface GodWarSwitchData {
  godWarId: number;
}

/** import "GodWarSite.proto"; */
export interface GodWarTale {
  taleId: number;
  scheduleId: number;
  /** repeated GodWarSite site_list = 3; */
  curSiteId: number;
  beginTime: number;
  endTime: number;
  challenge: GodWarChallenge | undefined;
  buffList: GodWarBuff[];
  avatarScheduleId: number;
  challengeHistoryList: GodWarChallengeHistory[];
  isLocked: boolean;
  overallList: GodWarOverall[];
}

export interface GodWarTalent {
  talentId: number;
  talentLevel: number;
}

export interface Goods {
  goodsId: number;
  buyTimes: number;
  canBeRefresh: boolean;
  refreshTimeType: Goods_RefreshTimeType;
  isBackpackRestrict: boolean;
  beginTime: number;
  endTime: number;
  showType: Goods_ShowType;
  unlockTips: string;
  prepareTime: number;
  sortId: number;
  productName: string;
  productId: number;
  productPrice: number;
  showSettingStr: string;
  showNewTag: number;
  mallAnchorList: number[];
  isIgnore: boolean;
  unlockType: number;
  unlockParaInt: number;
  unlockParaStr: string;
  prepareLevel: number;
  minLevel: number;
  maxLevel: number;
  discount: GoodsDiscount | undefined;
  isPopup: boolean;
  isHidePrice: boolean;
}

export enum Goods_RefreshTimeType {
  SHOP_TYPE = 0,
  DAY_TYPE = 1,
  WEEK_TYPE = 2,
  MONTH_TYPE = 3,
  VERSION_TYPE = 4,
  DOUBLE_WEEK_TYPE = 5,
  UNRECOGNIZED = -1,
}

export enum Goods_ShowType {
  NORMAL_SHOW = 1,
  LOCK_SHOW = 2,
  UNRECOGNIZED = -1,
}

export interface GoodsDiscount {
  beginTime: number;
  endTime: number;
  discount: number;
  goodsCost: BuyGoodsCost | undefined;
}

export interface GrandKey {
  id: number;
  endTime: number;
  unlockLevel: number;
  scoinNum: number;
  level: number;
  breachLevel: number;
  activateLevel: number;
  skill: GrandKeySkill | undefined;
}

export interface GrandKeyActivateSkillReq {
  keyList: GrandKeySkill[];
}

export enum GrandKeyActivateSkillReq_CmdId {
  CMD_ID = 759,
  UNRECOGNIZED = -1,
}

export interface GrandKeyActivateSkillRsp {
  retcode: GrandKeyActivateSkillRsp_Retcode;
}

export enum GrandKeyActivateSkillRsp_CmdId {
  CMD_ID = 760,
  UNRECOGNIZED = -1,
}

export enum GrandKeyActivateSkillRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MATERIAL_LIMIT = 2,
  REPEAT_ACTIVATE = 3,
  SKILL_LOCK = 4,
  NUM_LIMIT = 5,
  UNRECOGNIZED = -1,
}

export interface GrandKeyBreachReq {
  keyId: number;
}

export enum GrandKeyBreachReq_CmdId {
  CMD_ID = 757,
  UNRECOGNIZED = -1,
}

export interface GrandKeyBreachRsp {
  retcode: GrandKeyBreachRsp_Retcode;
  keyId: number;
  breachLevel: number;
}

export enum GrandKeyBreachRsp_CmdId {
  CMD_ID = 758,
  UNRECOGNIZED = -1,
}

export enum GrandKeyBreachRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  WEAPON_LIMIT = 2,
  UNRECOGNIZED = -1,
}

export interface GrandKeyContrastReq {
  uniqueId: number;
}

export enum GrandKeyContrastReq_CmdId {
  CMD_ID = 761,
  UNRECOGNIZED = -1,
}

export interface GrandKeyContrastRsp {
  retcode: GrandKeyContrastRsp_Retcode;
  uniqueId: number;
  uniqueIdAfter: number;
}

export enum GrandKeyContrastRsp_CmdId {
  CMD_ID = 762,
  UNRECOGNIZED = -1,
}

export enum GrandKeyContrastRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GrandKeyLevelUpReq {
  keyId: number;
}

export enum GrandKeyLevelUpReq_CmdId {
  CMD_ID = 753,
  UNRECOGNIZED = -1,
}

export interface GrandKeyLevelUpRsp {
  retcode: GrandKeyLevelUpRsp_Retcode;
  keyId: number;
  level: number;
}

export enum GrandKeyLevelUpRsp_CmdId {
  CMD_ID = 754,
  UNRECOGNIZED = -1,
}

export enum GrandKeyLevelUpRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  WEAPON_LEVEL_LIMIT = 2,
  MATERIAL_LIMIT = 3,
  MAX_LEVEL = 4,
  PLAYER_LEVEL_LIMIT = 5,
  UNRECOGNIZED = -1,
}

export interface GrandKeyResetReq {
  keyIdList: number[];
}

export enum GrandKeyResetReq_CmdId {
  CMD_ID = 755,
  UNRECOGNIZED = -1,
}

export interface GrandKeyResetRsp {
  retcode: GrandKeyResetRsp_Retcode;
  keyIdList: number[];
}

export enum GrandKeyResetRsp_CmdId {
  CMD_ID = 756,
  UNRECOGNIZED = -1,
}

export enum GrandKeyResetRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GrandKeySetSkillReq {
  keyList: GrandKeySkill[];
}

export enum GrandKeySetSkillReq_CmdId {
  CMD_ID = 763,
  UNRECOGNIZED = -1,
}

export interface GrandKeySetSkillRsp {
  retcode: GrandKeySetSkillRsp_Retcode;
}

export enum GrandKeySetSkillRsp_CmdId {
  CMD_ID = 764,
  UNRECOGNIZED = -1,
}

export enum GrandKeySetSkillRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_ACTIVE = 2,
  SKILL_LOCKED = 3,
  NUM_LIMIT = 4,
  UNRECOGNIZED = -1,
}

export interface GrandKeySkill {
  keyId: number;
  skillId: number;
  lastTime: number;
}

export interface GrantOuterRewardNotify {
  eventType: number;
  eventId: number;
  rewardData: RewardData | undefined;
  ticket: string;
}

export enum GrantOuterRewardNotify_CmdId {
  CMD_ID = 4247,
  UNRECOGNIZED = -1,
}

export interface GratuityBattle {
  stageUniqueId: number;
  playerInfo: GratuityPlayer | undefined;
  damage: number;
  stageBeginTime: number;
  isBonus: boolean;
  stageId: number;
}

export interface GratuityMonster {
  monsterId: number;
  leftHp: number;
}

export interface GratuityPlayer {
  uid: number;
  nickname: string;
  costHp: number;
  frameId: number;
  customHeadId: number;
}

export interface GratuityPlayerInfo {
  nickname: string;
  level: number;
  frameId: number;
  customHeadId: number;
}

export interface GratuityStage {
  stageUniqueId: number;
  expireTime: number;
  acceptUid: number;
  stageId: number;
  stageGroup: number;
  monsterList: GratuityMonster[];
  playerList: GratuityPlayer[];
  publishTime: number;
}

export interface GratuityStageFinishNotify {
  scheduleId: number;
  stage: GratuityStage | undefined;
}

export enum GratuityStageFinishNotify_CmdId {
  CMD_ID = 4121,
  UNRECOGNIZED = -1,
}

export interface GratuityStageInviteNotify {
  scheduleId: number;
  stage: GratuityStage | undefined;
}

export enum GratuityStageInviteNotify_CmdId {
  CMD_ID = 4120,
  UNRECOGNIZED = -1,
}

export interface GratuityStageMessage {
  messageType: GratuityStageMessage_MessageType;
  fromUid: number;
  monsterDamageList: GratuityStageMessage_MonsterDamage[];
}

export enum GratuityStageMessage_MessageType {
  MESSAGE_NONE = 0,
  MESSAGE_MONSTER_DAMAGE = 1,
  UNRECOGNIZED = -1,
}

export interface GratuityStageMessage_MonsterDamage {
  monsterId: number;
  costHp: number;
}

export interface GratuityStageMeta {
  stageId: number;
  stageGroup: number;
  expireTime: number;
}

export interface GreedyEndless {
  isNeedEnroll: boolean;
  floorConfigId: number;
  rewardConfigId: number;
  curFloor: number;
  maxFinishFloor: number;
  finishChallengeIdList: number[];
}

export interface GreedyEndlessEnrollReq {
}

export enum GreedyEndlessEnrollReq_CmdId {
  CMD_ID = 3453,
  UNRECOGNIZED = -1,
}

export interface GreedyEndlessEnrollRsp {
  retcode: GreedyEndlessEnrollRsp_Retcode;
  newGroupId: number;
}

export enum GreedyEndlessEnrollRsp_CmdId {
  CMD_ID = 3454,
  UNRECOGNIZED = -1,
}

export enum GreedyEndlessEnrollRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ALREADY_ENROLL = 2,
  UNRECOGNIZED = -1,
}

export interface GreedyEndlessFloorRewardNotify {
  rewardData: RewardData | undefined;
  maxFinishFloor: number;
  finishChallengeIdList: number[];
}

export enum GreedyEndlessFloorRewardNotify_CmdId {
  CMD_ID = 3457,
  UNRECOGNIZED = -1,
}

export interface GreedyEndlessGetRankReq {
}

export enum GreedyEndlessGetRankReq_CmdId {
  CMD_ID = 3458,
  UNRECOGNIZED = -1,
}

export interface GreedyEndlessGetRankRsp {
  retcode: GreedyEndlessGetRankRsp_Retcode;
  rankData: RankShowData | undefined;
}

export enum GreedyEndlessGetRankRsp_CmdId {
  CMD_ID = 3459,
  UNRECOGNIZED = -1,
}

export enum GreedyEndlessGetRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_RANK = 2,
  UNRECOGNIZED = -1,
}

export interface GreedyEndlessReportFloorBeginReq {
  floor: number;
}

export enum GreedyEndlessReportFloorBeginReq_CmdId {
  CMD_ID = 3464,
  UNRECOGNIZED = -1,
}

export interface GreedyEndlessReportFloorBeginRsp {
  retcode: GreedyEndlessReportFloorBeginRsp_Retcode;
}

export enum GreedyEndlessReportFloorBeginRsp_CmdId {
  CMD_ID = 3465,
  UNRECOGNIZED = -1,
}

export enum GreedyEndlessReportFloorBeginRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface GreedyEndlessReportFloorEndReq {
  floor: number;
  finishChallengeIdList: number[];
  score: number;
  extraScore: number;
  lineupInfo: LineupBriefInfo | undefined;
  stageCostTime: number;
  endStatus: StageEndStatus;
  cheatDataList: StageCheatData[];
}

export enum GreedyEndlessReportFloorEndReq_CmdId {
  CMD_ID = 3455,
  UNRECOGNIZED = -1,
}

export interface GreedyEndlessReportFloorEndRsp {
  retcode: GreedyEndlessReportFloorEndRsp_Retcode;
  rewardData: RewardData | undefined;
  nextFloor: number;
  maxFinishFloor: number;
  totalScore: number;
  finishChallengeIdList: number[];
  maxScoreLineupInfo: LineupBriefInfo | undefined;
}

export enum GreedyEndlessReportFloorEndRsp_CmdId {
  CMD_ID = 3456,
  UNRECOGNIZED = -1,
}

export enum GreedyEndlessReportFloorEndRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  FEATURE_CLOSED = 2,
  NOT_CUR_FLOOR = 3,
  UNRECOGNIZED = -1,
}

export interface GreedyEndlessTakeRankRewardReq {
}

export enum GreedyEndlessTakeRankRewardReq_CmdId {
  CMD_ID = 3460,
  UNRECOGNIZED = -1,
}

export interface GreedyEndlessTakeRankRewardRsp {
  retcode: GreedyEndlessTakeRankRewardRsp_Retcode;
  groupLevel: number;
  rankPercent: number;
  rewardData: RewardData | undefined;
}

export enum GreedyEndlessTakeRankRewardRsp_CmdId {
  CMD_ID = 3461,
  UNRECOGNIZED = -1,
}

export enum GreedyEndlessTakeRankRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKE = 2,
  NO_REWARD = 3,
  UNRECOGNIZED = -1,
}

export interface GroupChatParam {
  chatgroupId: number;
}

export interface HcoinGachaData {
  ticketHcoinCost: number;
  ticketMaterialId: number;
  wishWellData: WishWellData | undefined;
  shiningType: number;
  gachaPanelType: number;
  protectTypeId: number;
  protectLeftTimes: number;
  protectDisplayInfo: GachaProtectDisplayInfo | undefined;
  displayMaxTimes: number;
}

export interface HexieSwitchData {
}

export interface HistoryPrivateChatMsg {
  uid: number;
  chatMsgList: ChatMsg[];
}

export interface ImpeachDanmakuReq {
  danmakuSlot: number;
  senderUid: number;
  danmakuId: string;
}

export enum ImpeachDanmakuReq_CmdId {
  CMD_ID = 1549,
  UNRECOGNIZED = -1,
}

export interface ImpeachDanmakuRsp {
  retcode: ImpeachDanmakuRsp_Retcode;
}

export enum ImpeachDanmakuRsp_CmdId {
  CMD_ID = 1550,
  UNRECOGNIZED = -1,
}

export enum ImpeachDanmakuRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  TOO_FREQUENT = 2,
  IMPEACH_SELF = 3,
  UNRECOGNIZED = -1,
}

export interface InheritStigmataTitleReq {
  uniqueId: number;
  level: number;
}

export enum InheritStigmataTitleReq_CmdId {
  CMD_ID = 328,
  UNRECOGNIZED = -1,
}

export interface InheritStigmataTitleRsp {
  retcode: InheritStigmataTitleRsp_Retcode;
}

export enum InheritStigmataTitleRsp_CmdId {
  CMD_ID = 329,
  UNRECOGNIZED = -1,
}

export enum InheritStigmataTitleRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  STIGMATA_NOT_EXIST = 2,
  MATERIAL_LACK = 3,
  SCOIN_LACK = 4,
  LEVEL_ERROR = 5,
  TARGET_LEVEL_ERROR = 6,
  LEVEL_LACK = 7,
  UNRECOGNIZED = -1,
}

export interface InitRogueStageReq {
  hardLevel: number;
  avatarIdList: number[];
}

export enum InitRogueStageReq_CmdId {
  CMD_ID = 277,
  UNRECOGNIZED = -1,
}

export interface InitRogueStageRsp {
  retcode: InitRogueStageRsp_Retcode;
}

export enum InitRogueStageRsp_CmdId {
  CMD_ID = 278,
  UNRECOGNIZED = -1,
}

export enum InitRogueStageRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_JOIN_ARMADA = 2,
  NOT_RESET = 3,
  AVATAR_NUM_ERROR = 4,
  AVATAR_NOT_EXIST = 5,
  HARD_LEVEL_ERROR = 6,
  LEVEL_LACK = 7,
  NOT_OPEN = 8,
  UNRECOGNIZED = -1,
}

export interface InLevelActorSnapshot {
  avatarSnapshot: InLevelAvatarActorSnapshot | undefined;
  monsterSnapshot: InLevelMonsterActorSnapshot | undefined;
  baseSnapshot: InLevelBaseActorSnapshot | undefined;
  propertyList: InLevelEntityProperty[];
}

export interface InLevelAttackDataSnapshot {
  attackerAniDamageRatio: number;
  attackerClass: number;
  attackerNature: number;
  attackerCategory: number;
  attackerCritChance: number;
  attackerCritDamageRatio: number;
  attackerLevel: number;
  attackerShieldDamageRatio: number;
  attackerShieldDamageDelta: number;
  attackerAttackPercentage: number;
  attackerAttackValue: number;
  addedAttackRatio: number;
  addedDamageRatio: number;
  addedDamageRatio2: number;
  attackerAddedAttackValue: number;
  attackerAllDamageReduceRatio: number;
  attackerFireDamage: number;
  attackerFireDamagePercentage: number;
  addedAttackerFireDamageRatio: number;
  attackerThunderDamage: number;
  attackerThunderDamagePercentage: number;
  addedAttackerThunderDamageRatio: number;
  attackerIceDamage: number;
  attackerIceDamagePercentage: number;
  addedAttackerIceDamageRatio: number;
  attackeeAniDefenceRatio: number;
  attackeeNature: number;
  attackeeClass: number;
  attackeeAddedDamageTakeRatio: number;
  attackeeNormalDamageTakenRatio: number;
  attackeeFireDamageTakenRatio: number;
  attackeeIceDamageTakenRatio: number;
  attackeeThunderDamageTakenRatio: number;
  fireDamage: number;
  thunderDamage: number;
  iceDamage: number;
  aniDamageRatio: number;
  retreatVelocity: number;
  frameHalt: number;
  isAnimEventAttack: boolean;
  isInComboCount: boolean;
  attackCategoryTag: number;
  hitType: number;
  hitFlag: number;
  hitLevel: number;
  hitEffect: number;
  hitEffectAux: number;
  addedAttackRatio2: number;
  addedAttackerFireDamageRatio2: number;
  addedAttackerThunderDamageRatio2: number;
  addedAttackerIceDamageRatio2: number;
  addedAttackerBurnDamageRatio: number;
  addedAttackerBurnDamageRatio2: number;
  addedAttackerBurnDamageDelta: number;
  addedAttackerBleedDamageRatio: number;
  addedAttackerBleedDamageRatio2: number;
  addedAttackerBleedDamageDelta: number;
}

export interface InLevelAttackSnapshot {
  time: number;
  attackDataCreated: InLevelAttackDataSnapshot | undefined;
  attackDataResoved: InLevelAttackDataSnapshot | undefined;
  actorList: InLevelActorSnapshot[];
}

export interface InLevelAttackSnapshotInfo {
  context: InLevelContext | undefined;
  snapshotList: InLevelAttackSnapshot[];
}

export interface InLevelAvatarActorSnapshot {
  avatarId: number;
  skillList: InLevelAvatarSkillInfo[];
  weaponId: number;
  weaponLevel: number;
  stigmata1Id: number;
  stigmata1Level: number;
  stigmata2Id: number;
  stigmata2Level: number;
  stigmata3Id: number;
  stigmata3Level: number;
}

export interface InLevelAvatarSkillInfo {
  skillName: string;
  cd: number;
  costSp: number;
  needSp: number;
  cdTimer: number;
  maxChargesCount: number;
  chargesCounter: number;
  canHold: boolean;
  instantTriggerAnimEventId: string;
}

export interface InLevelBaseActorSnapshot {
  baseMaxHp: number;
  baseMaxSp: number;
  maxHp: number;
  maxSp: number;
  hp: number;
  sp: number;
  level: number;
  attack: number;
  defense: number;
  isAlive: boolean;
  totalOverkillDamage: number;
}

export interface InLevelContext {
  type: InLevelContext_ContextType;
  contextString: string;
}

export enum InLevelContext_ContextType {
  INVALID = 0,
  NORMAL = 1,
  ENDLESS = 2,
  OPENWORLD_ENDLESS = 3,
  EXBOSS = 4,
  UNRECOGNIZED = -1,
}

export interface InLevelEntityProperty {
  name: string;
  value: number;
}

export interface InLevelMonsterActorSnapshot {
  monsterName: string;
}

export interface InviteActivityAcceptInviteReq {
  inviteCode: string;
}

export enum InviteActivityAcceptInviteReq_CmdId {
  CMD_ID = 1696,
  UNRECOGNIZED = -1,
}

export interface InviteActivityAcceptInviteRsp {
  retcode: InviteActivityAcceptInviteRsp_Retcode;
  inviteUid: number;
  inviteType: InviteeActivityType;
  rewardData: RewardData | undefined;
}

export enum InviteActivityAcceptInviteRsp_CmdId {
  CMD_ID = 1697,
  UNRECOGNIZED = -1,
}

export enum InviteActivityAcceptInviteRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  INVITE_CODE_ERROR = 2,
  LEVEL_LACK = 3,
  INVITE_FULL = 4,
  INVITE_INVALID_REGION = 5,
  INVITE_CONDITION_ERROR = 6,
  NO_ACTIVITY = 7,
  ALREADY_INVITED = 8,
  INVITE_DAILY_LIMIT = 9,
  FEATURE_CLOSED = 10,
  UNRECOGNIZED = -1,
}

export interface InviteActivityData {
  beginTime: number;
  endTime: number;
  hasInviteNum: number;
  myInviteRewardList: InviteFriendRewardData[];
}

export interface InviteActivitySwitchData {
}

export interface InviteChatgroupReq {
  chatgroupId: number;
  friendList: number[];
  masterPupilList: number[];
  strangerUidList: number[];
}

export enum InviteChatgroupReq_CmdId {
  CMD_ID = 2202,
  UNRECOGNIZED = -1,
}

export interface InviteChatgroupRsp {
  retcode: InviteChatgroupRsp_Retcode;
  succUidList: number[];
  succStrangerUidList: number[];
}

export enum InviteChatgroupRsp_CmdId {
  CMD_ID = 2203,
  UNRECOGNIZED = -1,
}

export enum InviteChatgroupRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_CREATER = 2,
  EXCEED_MAX_MEMBER_NUM = 3,
  GROUP_NOT_FOUND = 4,
  NOT_IN_GROUP = 5,
  UID_NOT_EXIST = 6,
  FRIEND_ERROR = 7,
  MASTER_PUPIL_ERROR = 8,
  FEATURE_LIMIT = 9,
  FEATURE_CLOSED = 10,
  UNRECOGNIZED = -1,
}

export interface InviteeActivity {
  scheduleId: number;
  activityType: InviteeActivityType;
  takenInviteeRewardId: number;
  endTime: number;
}

export interface InviteeFriendRewardData {
  level: number;
  rewardList: RewardData[];
}

export interface InviteFriendRewardData {
  level: number;
  curNum: number;
  maxNum: number;
  rewardList: RewardData[];
}

export interface InviterActivity {
  scheduleId: number;
  inviteNum: number;
  takenRewardProgress: number;
  acceptInviteNum: number;
}

export interface InviteRoomReq {
  targetUid: number;
}

export enum InviteRoomReq_CmdId {
  CMD_ID = 3160,
  UNRECOGNIZED = -1,
}

export interface InviteRoomRsp {
  retcode: InviteRoomRsp_Retcode;
}

export enum InviteRoomRsp_CmdId {
  CMD_ID = 3161,
  UNRECOGNIZED = -1,
}

export enum InviteRoomRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ROOM = 2,
  ROOM_IN_MATCHING = 3,
  IS_IN_BATTLE = 4,
  TOO_FREQUENT = 5,
  INVITE_SELF = 6,
  NO_SCHEDULE = 7,
  UNRECOGNIZED = -1,
}

export interface InviteToMultiChatgroupReq {
  targetUid: number;
  chatgroupIdList: number[];
  isHasRelation: boolean;
}

export enum InviteToMultiChatgroupReq_CmdId {
  CMD_ID = 2216,
  UNRECOGNIZED = -1,
}

export interface InviteToMultiChatgroupRsp {
  retcode: InviteToMultiChatgroupRsp_Retcode;
  targetUid: number;
  chatgroupIdList: number[];
  isStranger: boolean;
}

export enum InviteToMultiChatgroupRsp_CmdId {
  CMD_ID = 2217,
  UNRECOGNIZED = -1,
}

export enum InviteToMultiChatgroupRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  JOIN_MAX_NUM = 2,
  FEATURE_CLOSED = 3,
  UNRECOGNIZED = -1,
}

export interface IslandAvatarPos {
  avatarClass: number;
  posType: number;
  eventIdList: number[];
}

export interface IslandDisjoinEquipmentReq {
  type: EquipmentType;
  uniqueIdList: number[];
  disjoinType: DisjoinType;
}

export enum IslandDisjoinEquipmentReq_CmdId {
  CMD_ID = 179,
  UNRECOGNIZED = -1,
}

export interface IslandDisjoinEquipmentRsp {
  retcode: IslandDisjoinEquipmentRsp_Retcode;
  disjoinUniqueIdList: number[];
}

export enum IslandDisjoinEquipmentRsp_CmdId {
  CMD_ID = 180,
  UNRECOGNIZED = -1,
}

export enum IslandDisjoinEquipmentRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  CABIN_TECH_NOT_ADD = 2,
  CONSUME_ITEM_NOT_EXIST = 3,
  CONSUME_ITEM_IN_USE = 4,
  CONSUME_ITEM_PROTECTED = 5,
  SCOIN_LACK = 6,
  EQUIPMENT_FULL = 7,
  COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 8,
  COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 9,
  TITLE_LEVEL_ERROR = 10,
  BATCH_NUM = 11,
  LEVEL_LACK = 12,
  CONSUME_ITEM_REPEAT = 13,
  COST_GACHA_TICKET = 14,
  CONSUME_ITEM_GRAND_KEY = 15,
  CONSUME_ITEM_IN_FACILITY = 16,
  EX_DISJOIN_CURRENCY_LACK = 17,
  CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 18,
  UNRECOGNIZED = -1,
}

export interface IslandStorySweepData {
  sweepId: number;
  overTime: number;
  isFinished: boolean;
  isSieged: boolean;
  avatarIdList: number[];
}

export interface IslandVenture {
  id: number;
  endTime: number;
  avatarId: number[];
}

export interface IslandVisitRecord {
  recordType: IslandVisitRecordType;
  visitTime: number;
  visitUid: number;
  visitEventId: number;
  rewardList: RewardData[];
}

export interface ItemUseSwitchData {
  useId: number;
}

export interface JigsawBlockData {
  blockId: number;
  pieceId: number;
}

export interface JigsawData {
  jigsawId: number;
  blockList: JigsawBlockData[];
  waitingPieceIdList: number[];
  takenRewardGroupIdList: number[];
  isFinishRewardTaken: boolean;
  isFinished: boolean;
}

export interface JigsawExchangePieceReq {
  activityId: number;
  jigsawId: number;
}

export enum JigsawExchangePieceReq_CmdId {
  CMD_ID = 4275,
  UNRECOGNIZED = -1,
}

export interface JigsawExchangePieceRsp {
  retcode: JigsawExchangePieceRsp_Retcode;
  activityId: number;
  jigsawId: number;
}

export enum JigsawExchangePieceRsp_CmdId {
  CMD_ID = 4276,
  UNRECOGNIZED = -1,
}

export enum JigsawExchangePieceRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  JIGSAW_NOT_BEGIN = 3,
  PRE_JIGSAW_NOT_FINISHED = 4,
  ITEMS_LACK = 5,
  NO_PIECE = 6,
  UNRECOGNIZED = -1,
}

export interface JigsawMovePieceInJigsawAreaReq {
  activityId: number;
  jigsawId: number;
  sourceX: number;
  sourceY: number;
  targetX: number;
  targetY: number;
}

export enum JigsawMovePieceInJigsawAreaReq_CmdId {
  CMD_ID = 4279,
  UNRECOGNIZED = -1,
}

export interface JigsawMovePieceInJigsawAreaRsp {
  retcode: JigsawMovePieceInJigsawAreaRsp_Retcode;
  activityId: number;
  jigsawId: number;
}

export enum JigsawMovePieceInJigsawAreaRsp_CmdId {
  CMD_ID = 4280,
  UNRECOGNIZED = -1,
}

export enum JigsawMovePieceInJigsawAreaRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  JIGSAW_NOT_BEGIN = 3,
  PRE_JIGSAW_NOT_FINISHED = 4,
  NO_SOURCE_PIECE = 5,
  OUT_OF_RANGE = 6,
  LOCKED = 7,
  UNRECOGNIZED = -1,
}

export interface JigsawMoveWaitingPieceReq {
  activityId: number;
  jigsawId: number;
  targetX: number;
  targetY: number;
}

export enum JigsawMoveWaitingPieceReq_CmdId {
  CMD_ID = 4277,
  UNRECOGNIZED = -1,
}

export interface JigsawMoveWaitingPieceRsp {
  retcode: JigsawMoveWaitingPieceRsp_Retcode;
  activityId: number;
  jigsawId: number;
}

export enum JigsawMoveWaitingPieceRsp_CmdId {
  CMD_ID = 4278,
  UNRECOGNIZED = -1,
}

export enum JigsawMoveWaitingPieceRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  JIGSAW_NOT_BEGIN = 3,
  PRE_JIGSAW_NOT_FINISHED = 4,
  NO_WAITING_PIECE = 5,
  OUT_OF_RANGE = 6,
  BLOCK_LOCKED = 7,
  UNRECOGNIZED = -1,
}

export interface JigsawTakeFinishRewardReq {
  activityId: number;
  jigsawId: number;
}

export enum JigsawTakeFinishRewardReq_CmdId {
  CMD_ID = 4283,
  UNRECOGNIZED = -1,
}

export interface JigsawTakeFinishRewardRsp {
  retcode: JigsawTakeFinishRewardRsp_Retcode;
  activityId: number;
  jigsawId: number;
  reward: RewardData | undefined;
}

export enum JigsawTakeFinishRewardRsp_CmdId {
  CMD_ID = 4284,
  UNRECOGNIZED = -1,
}

export enum JigsawTakeFinishRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  JIGSAW_NOT_BEGIN = 3,
  PRE_JIGSAW_NOT_FINISHED = 4,
  NOT_FINISHED = 5,
  HAS_TAKEN = 6,
  UNRECOGNIZED = -1,
}

export interface JigsawTakeGroupRewardReq {
  activityId: number;
  jigsawId: number;
  groupId: number;
}

export enum JigsawTakeGroupRewardReq_CmdId {
  CMD_ID = 4281,
  UNRECOGNIZED = -1,
}

export interface JigsawTakeGroupRewardRsp {
  retcode: JigsawTakeGroupRewardRsp_Retcode;
  activityId: number;
  jigsawId: number;
  groupId: number;
  reward: RewardData | undefined;
}

export enum JigsawTakeGroupRewardRsp_CmdId {
  CMD_ID = 4282,
  UNRECOGNIZED = -1,
}

export enum JigsawTakeGroupRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  JIGSAW_NOT_BEGIN = 3,
  PRE_JIGSAW_NOT_FINISHED = 4,
  NOT_FINISHED = 5,
  HAS_TAKEN = 6,
  UNRECOGNIZED = -1,
}

export interface JiguangClientTag {
  tagType: JiguangTagType;
  paraList: number[];
}

export interface JiguangUpdateTagReq {
  addTagList: JiguangClientTag[];
  delTagList: JiguangClientTag[];
}

export enum JiguangUpdateTagReq_CmdId {
  CMD_ID = 1590,
  UNRECOGNIZED = -1,
}

export interface JiguangUpdateTagRsp {
  retcode: JiguangUpdateTagRsp_Retcode;
}

export enum JiguangUpdateTagRsp_CmdId {
  CMD_ID = 1591,
  UNRECOGNIZED = -1,
}

export enum JiguangUpdateTagRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface JoinArmadaElectionReq {
}

export enum JoinArmadaElectionReq_CmdId {
  CMD_ID = 2693,
  UNRECOGNIZED = -1,
}

export interface JoinArmadaElectionRsp {
  retcode: JoinArmadaElectionRsp_Retcode;
  impeachData: ArmadaImpeachData | undefined;
}

export enum JoinArmadaElectionRsp_CmdId {
  CMD_ID = 2694,
  UNRECOGNIZED = -1,
}

export enum JoinArmadaElectionRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  IMPEACH_NOT_START = 3,
  IN_OPTIONAL_LIST = 4,
  LEVEL_LACK = 5,
  ACCOUNT_NONE = 6,
  UNRECOGNIZED = -1,
}

export interface JoinQuitArmadaNotify {
  uid: number;
  armadaId: number;
}

export enum JoinQuitArmadaNotify_CmdId {
  CMD_ID = 2805,
  UNRECOGNIZED = -1,
}

export interface KeepAliveNotify {
}

export enum KeepAliveNotify_CmdId {
  CMD_ID = 1,
  UNRECOGNIZED = -1,
}

export interface KickArmadaMemberReq {
  targetUid: number;
}

export enum KickArmadaMemberReq_CmdId {
  CMD_ID = 2623,
  UNRECOGNIZED = -1,
}

export interface KickArmadaMemberRsp {
  retcode: KickArmadaMemberRsp_Retcode;
}

export enum KickArmadaMemberRsp_CmdId {
  CMD_ID = 2624,
  UNRECOGNIZED = -1,
}

export enum KickArmadaMemberRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_GRANTED = 2,
  NOT_IN_ARMADA = 3,
  TARGET_NOT_IN_ARMADA = 4,
  IN_PROTECT = 5,
  UNRECOGNIZED = -1,
}

export interface KickChatgroupMemberReq {
  chatgroupId: number;
  targetUid: number;
}

export enum KickChatgroupMemberReq_CmdId {
  CMD_ID = 2212,
  UNRECOGNIZED = -1,
}

export interface KickChatgroupMemberRsp {
  retcode: KickChatgroupMemberRsp_Retcode;
  chatgroupId: number;
  targetUid: number;
}

export enum KickChatgroupMemberRsp_CmdId {
  CMD_ID = 2213,
  UNRECOGNIZED = -1,
}

export enum KickChatgroupMemberRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_CREATER = 2,
  KICK_SELF = 3,
  NOT_MEMBER = 4,
  UNRECOGNIZED = -1,
}

export interface KickLobbyMemberReq {
  targetUid: number;
}

export enum KickLobbyMemberReq_CmdId {
  CMD_ID = 317,
  UNRECOGNIZED = -1,
}

export interface KickLobbyMemberRsp {
  retcode: KickLobbyMemberRsp_Retcode;
}

export enum KickLobbyMemberRsp_CmdId {
  CMD_ID = 318,
  UNRECOGNIZED = -1,
}

export enum KickLobbyMemberRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_LOBBY = 2,
  NOT_LEADER = 3,
  TARGET_NOT_EXIST = 4,
  UNRECOGNIZED = -1,
}

export interface KickOutPlayerNotify {
  reason: KickOutPlayerNotify_KickOutReason;
}

export enum KickOutPlayerNotify_CmdId {
  CMD_ID = 5007,
  UNRECOGNIZED = -1,
}

export enum KickOutPlayerNotify_KickOutReason {
  REASON_NONE = 0,
  REASON_MTP_ERROR = 1,
  REASON_PLATFORM_ERROR = 2,
  REASON_SQUEEZE = 3,
  REASON_LOGIN_UNFINISH = 4,
  UNRECOGNIZED = -1,
}

export interface KingdomWarData {
  phaseList: KingdomWarPhase[];
  kingdomList: KingdomWarKingdom[];
  curPhase: number;
  isOver: boolean;
  hasTakeMaxScore: number;
  hasGetCurrencyNum: number;
}

export interface KingdomWarExchangeCurrencyReq {
  pointId: number;
}

export enum KingdomWarExchangeCurrencyReq_CmdId {
  CMD_ID = 3062,
  UNRECOGNIZED = -1,
}

export interface KingdomWarExchangeCurrencyRsp {
  retcode: KingdomWarExchangeCurrencyRsp_Retcode;
  pointId: number;
  currencyNum: number;
}

export enum KingdomWarExchangeCurrencyRsp_CmdId {
  CMD_ID = 3063,
  UNRECOGNIZED = -1,
}

export enum KingdomWarExchangeCurrencyRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  POINT_ERROR = 3,
  COST_MATERIAL_LACK = 4,
  UNRECOGNIZED = -1,
}

export interface KingdomWarGetPointRankReq {
  pointId: number;
  kingdomId: number;
}

export enum KingdomWarGetPointRankReq_CmdId {
  CMD_ID = 3064,
  UNRECOGNIZED = -1,
}

export interface KingdomWarGetPointRankRsp {
  retcode: KingdomWarGetPointRankRsp_Retcode;
  pointId: number;
  kingdomId: number;
  rankDataList: RankShowData | undefined;
}

export enum KingdomWarGetPointRankRsp_CmdId {
  CMD_ID = 3065,
  UNRECOGNIZED = -1,
}

export enum KingdomWarGetPointRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface KingdomWarGetRankReq {
  kingdomId: number;
}

export enum KingdomWarGetRankReq_CmdId {
  CMD_ID = 3058,
  UNRECOGNIZED = -1,
}

export interface KingdomWarGetRankRsp {
  retcode: KingdomWarGetRankRsp_Retcode;
  rankData: RankShowData | undefined;
  kingdomId: number;
}

export enum KingdomWarGetRankRsp_CmdId {
  CMD_ID = 3059,
  UNRECOGNIZED = -1,
}

export enum KingdomWarGetRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  KINGDOM_ERROR = 3,
  UNRECOGNIZED = -1,
}

export interface KingdomWarJoinData {
  combatPower: number;
  lastKingdomId: number;
}

export interface KingdomWarKingdom {
  kingdomId: number;
  playerNum: number;
}

export interface KingdomWarMoveReq {
  targetPoint: number;
}

export enum KingdomWarMoveReq_CmdId {
  CMD_ID = 3052,
  UNRECOGNIZED = -1,
}

export interface KingdomWarMoveRsp {
  retcode: KingdomWarMoveRsp_Retcode;
  curPointId: number;
  todayStep: number;
}

export enum KingdomWarMoveRsp_CmdId {
  CMD_ID = 3053,
  UNRECOGNIZED = -1,
}

export enum KingdomWarMoveRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  PHASE_ERROR = 2,
  TIME_ERROR = 3,
  POINT_ERROR = 4,
  NOT_FINISH_CUR_POINT = 5,
  NO_TIMES = 6,
  IN_MP_LOBBY = 7,
  IN_MP_MATCH = 8,
  UNRECOGNIZED = -1,
}

export interface KingdomWarOccupyRecord {
  beginTime: number;
  occupyPointList: number[];
  playerScore: number;
}

export interface KingdomWarPhase {
  phaseId: number;
  beginTime: number;
  endTime: number;
  todayBeginTime: number;
  todayEndTime: number;
  pointList: KingdomWarPoint[];
  kingdomList: KingdomWarPhaseKingdomData[];
  playerData: KingdomWarPhasePlayerData | undefined;
  assistPoint: number;
  lastRefreshTime: number;
}

export interface KingdomWarPhaseKingdomData {
  kingdomId: number;
  fame: number;
  scoreU64: number;
  rank: number;
  status: number;
  bonusPoint: number;
  lastFame: number;
  recordList: KingdomWarOccupyRecord[];
  belief: number;
  lastBelief: number;
}

export interface KingdomWarPhasePlayerData {
  curPointId: number;
  todayStep: number;
  isTakePhaseReward: boolean;
  votePoint: number;
  yesterdayScore: number;
  todayFinishStageNum: number;
  lastPointId: number;
  todayScore: number;
  changeStageNum: number;
}

export interface KingdomWarPoint {
  pointId: number;
  curKingdomId: number;
  kingdomList: KingdomWarPointKingdomData[];
  score: number;
  lastKingdomId: number;
  finishedNum: number;
  stageId: number;
  todayScore: number;
  isOpen: boolean;
}

export interface KingdomWarPointKingdomData {
  kingdomId: number;
  scoreU64: number;
  voteScoreU64: number;
  lastScoreU64: number;
  playerNum: number;
  recentPlayerList: KingdomWarPointKingdomData_KingdomPlayer[];
  lastScoreTime: number;
}

export interface KingdomWarPointKingdomData_KingdomPlayer {
  nickName: string;
  score: number;
}

export interface KingdomWarSwitchData {
}

export interface KingdomWarTakeDailyRewardReq {
  kingdomId: number;
}

export enum KingdomWarTakeDailyRewardReq_CmdId {
  CMD_ID = 3060,
  UNRECOGNIZED = -1,
}

export interface KingdomWarTakeDailyRewardRsp {
  retcode: KingdomWarTakeDailyRewardRsp_Retcode;
  recordList: KingdomWarOccupyRecord[];
  rewardList: RewardData[];
}

export enum KingdomWarTakeDailyRewardRsp_CmdId {
  CMD_ID = 3061,
  UNRECOGNIZED = -1,
}

export enum KingdomWarTakeDailyRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKE = 2,
  NOT_OPEN = 3,
  UNRECOGNIZED = -1,
}

export interface KingdomWarVoteReq {
  targetPoint: number;
}

export enum KingdomWarVoteReq_CmdId {
  CMD_ID = 3054,
  UNRECOGNIZED = -1,
}

export interface KingdomWarVoteRsp {
  retcode: KingdomWarVoteRsp_Retcode;
  targetPoint: number;
}

export enum KingdomWarVoteRsp_CmdId {
  CMD_ID = 3055,
  UNRECOGNIZED = -1,
}

export enum KingdomWarVoteRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  PHASE_ERROR = 2,
  TIME_ERROR = 3,
  POINT_ERROR = 4,
  HAS_VOTE = 5,
  SCORE_LACK = 6,
  UNRECOGNIZED = -1,
}

export interface LeaveChatgroupReq {
  chatgroupId: number;
}

export enum LeaveChatgroupReq_CmdId {
  CMD_ID = 2208,
  UNRECOGNIZED = -1,
}

export interface LeaveChatgroupRsp {
  retcode: LeaveChatgroupRsp_Retcode;
  chatgroupId: number;
}

export enum LeaveChatgroupRsp_CmdId {
  CMD_ID = 2209,
  UNRECOGNIZED = -1,
}

export enum LeaveChatgroupRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_MEMBER = 2,
  UNRECOGNIZED = -1,
}

export interface LeaveChatroomNotify {
  newChatroomId: number;
}

export enum LeaveChatroomNotify_CmdId {
  CMD_ID = 2233,
  UNRECOGNIZED = -1,
}

export interface LeaveCommonChatworldReq {
}

export enum LeaveCommonChatworldReq_CmdId {
  CMD_ID = 2402,
  UNRECOGNIZED = -1,
}

export interface LeaveCommonChatworldRsp {
  retcode: LeaveCommonChatworldRsp_Retcode;
  isKicked: boolean;
}

export enum LeaveCommonChatworldRsp_CmdId {
  CMD_ID = 2403,
  UNRECOGNIZED = -1,
}

export enum LeaveCommonChatworldRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface LeaveTeamReq {
  teamId: number;
  isLogout: boolean;
  isSqueeze: boolean;
}

export enum LeaveTeamReq_CmdId {
  CMD_ID = 305,
  UNRECOGNIZED = -1,
}

export interface LeaveTeamRsp {
  retcode: LeaveTeamRsp_Retcode;
}

export enum LeaveTeamRsp_CmdId {
  CMD_ID = 306,
  UNRECOGNIZED = -1,
}

export enum LeaveTeamRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_TEAM = 2,
  UNRECOGNIZED = -1,
}

export interface LevelUpArmadaCabinReq {
  type: ArmadaCabinType;
  cabinId: number;
  gridId: number;
}

export enum LevelUpArmadaCabinReq_CmdId {
  CMD_ID = 2631,
  UNRECOGNIZED = -1,
}

export interface LevelUpArmadaCabinRsp {
  retcode: LevelUpArmadaCabinRsp_Retcode;
  type: ArmadaCabinType;
  cabinId: number;
  gridId: number;
  levelUpEndTime: number;
}

export enum LevelUpArmadaCabinRsp_CmdId {
  CMD_ID = 2632,
  UNRECOGNIZED = -1,
}

export enum LevelUpArmadaCabinRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ARMADA_LEVEL_LACK = 2,
  FUND_LACK = 3,
  POPL_LACK = 4,
  BUSY = 5,
  LEVEL_LACK = 6,
  CABIN_NOT_EXIST = 7,
  CABIN_FULL = 8,
  GRID_ERROR = 9,
  NOT_GRANTED = 10,
  NOT_IN_ARMADA = 11,
  NO_OWNERSHIP = 12,
  UNRECOGNIZED = -1,
}

export interface LevelUpDLCAvatarTalentReq {
  talentId: number;
  targetLevel: number;
}

export enum LevelUpDLCAvatarTalentReq_CmdId {
  CMD_ID = 3552,
  UNRECOGNIZED = -1,
}

export interface LevelUpDLCAvatarTalentRsp {
  retcode: LevelUpDLCAvatarTalentRsp_Retcode;
  talentId: number;
}

export enum LevelUpDLCAvatarTalentRsp_CmdId {
  CMD_ID = 3553,
  UNRECOGNIZED = -1,
}

export enum LevelUpDLCAvatarTalentRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_NOT_EXIST = 2,
  TARGET_LEVEL_ERROR = 3,
  PRE_TALENT_LACK = 4,
  MATERIAL_LACK = 5,
  DLC_LEVEL_LACK = 6,
  PRE_AVATAR_LOCK = 7,
  WAIT_SELECT_AFFIX_SET_NOT_EMPTY = 8,
  UNRECOGNIZED = -1,
}

export interface LevelUpDormReq {
  houseId: number;
  targetLevel: number;
}

export enum LevelUpDormReq_CmdId {
  CMD_ID = 613,
  UNRECOGNIZED = -1,
}

export interface LevelUpDormRsp {
  retcode: LevelUpDormRsp_Retcode;
  levelUpHouseId: number;
  levelUpEndTime: number;
}

export enum LevelUpDormRsp_CmdId {
  CMD_ID = 614,
  UNRECOGNIZED = -1,
}

export enum LevelUpDormRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  BUSY = 2,
  HOUSE_NOT_EXIST = 3,
  LEVEL_ERROR = 4,
  COMFORT_LIMIT = 5,
  MATERIAL_LIMIT = 6,
  UNRECOGNIZED = -1,
}

export interface LevelUpRestaurantFacilityReq {
  activityId: number;
}

export enum LevelUpRestaurantFacilityReq_CmdId {
  CMD_ID = 5862,
  UNRECOGNIZED = -1,
}

export interface LevelUpRestaurantFacilityRsp {
  retcode: LevelUpRestaurantFacilityRsp_Retcode;
  activityId: number;
}

export enum LevelUpRestaurantFacilityRsp_CmdId {
  CMD_ID = 5863,
  UNRECOGNIZED = -1,
}

export enum LevelUpRestaurantFacilityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MATERIAL_LACK = 2,
  MISSION_UNFINISH = 3,
  UNRECOGNIZED = -1,
}

export interface LevelUpScDLCAvatarReq {
  avatarId: number;
}

export enum LevelUpScDLCAvatarReq_CmdId {
  CMD_ID = 6310,
  UNRECOGNIZED = -1,
}

export interface LevelUpScDLCAvatarRsp {
  retcode: LevelUpScDLCAvatarRsp_Retcode;
}

export enum LevelUpScDLCAvatarRsp_CmdId {
  CMD_ID = 6311,
  UNRECOGNIZED = -1,
}

export enum LevelUpScDLCAvatarRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MATERIAL_LACK = 2,
  AVATAR_NOT_EXIST = 3,
  FEVER_LEVEL_LACK = 4,
  UNRECOGNIZED = -1,
}

export interface LevelUpScDLCTalentReq {
  avatarId: number;
  talentId: number;
}

export enum LevelUpScDLCTalentReq_CmdId {
  CMD_ID = 6312,
  UNRECOGNIZED = -1,
}

export interface LevelUpScDLCTalentRsp {
  retcode: LevelUpScDLCTalentRsp_Retcode;
}

export enum LevelUpScDLCTalentRsp_CmdId {
  CMD_ID = 6313,
  UNRECOGNIZED = -1,
}

export enum LevelUpScDLCTalentRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_ERROR = 2,
  TALENT_ERROR = 3,
  TARGET_LEVEL_ERROR = 4,
  FEVER_LEVEL_LACK = 5,
  PRE_TALENT_LACK = 6,
  MATERIAL_LACK = 7,
  UNRECOGNIZED = -1,
}

export interface LevelUpStigmataTitleReq {
  uniqueId: number;
  consumeItemList: EquipmentItemList | undefined;
}

export enum LevelUpStigmataTitleReq_CmdId {
  CMD_ID = 324,
  UNRECOGNIZED = -1,
}

export interface LevelUpStigmataTitleRsp {
  retcode: LevelUpStigmataTitleRsp_Retcode;
}

export enum LevelUpStigmataTitleRsp_CmdId {
  CMD_ID = 325,
  UNRECOGNIZED = -1,
}

export enum LevelUpStigmataTitleRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  STIGMATA_NOT_EXIST = 2,
  EXP_FULL = 3,
  MATERIAL_ERROR = 4,
  LEVEL_LACK = 5,
  UNRECOGNIZED = -1,
}

export interface LikeDormReq {
  targetUid: number;
}

export enum LikeDormReq_CmdId {
  CMD_ID = 639,
  UNRECOGNIZED = -1,
}

export interface LikeDormRsp {
  retcode: LikeDormRsp_Retcode;
  targetUid: number;
  friendsPoint: number;
}

export enum LikeDormRsp_CmdId {
  CMD_ID = 640,
  UNRECOGNIZED = -1,
}

export enum LikeDormRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LEVEL_LIMIT = 2,
  HAS_LIKED = 3,
  SEND_LIKE_LIMIT = 4,
  RECEIVE_LIKE_LIMIT = 5,
  UNRECOGNIZED = -1,
}

export interface LineupBriefInfo {
  avatarInfoList: AvatarBriefInfo[];
  elfInfoList: ElfBriefInfo[];
}

export interface LobbyEnterFightErrorNotify {
  lobbyId: number;
  retcode: LobbyEnterFightErrorNotify_Retcode;
  uidList: number[];
  subRetcode: number;
}

export enum LobbyEnterFightErrorNotify_CmdId {
  CMD_ID = 321,
  UNRECOGNIZED = -1,
}

export enum LobbyEnterFightErrorNotify_Retcode {
  SUCC = 0,
  CONNECT_TIMEOUT = 1,
  BEGIN_STAGE_FAIL = 2,
  UNRECOGNIZED = -1,
}

export interface LobbyPrepareCountDownNotify {
  countDownTime: number;
}

export enum LobbyPrepareCountDownNotify_CmdId {
  CMD_ID = 1028,
  UNRECOGNIZED = -1,
}

export interface LobbySetClientStatusReq {
  status: LobbyClientStatus;
}

export enum LobbySetClientStatusReq_CmdId {
  CMD_ID = 1026,
  UNRECOGNIZED = -1,
}

export interface LobbySetClientStatusRsp {
  retcode: LobbySetClientStatusRsp_Retcode;
}

export enum LobbySetClientStatusRsp_CmdId {
  CMD_ID = 1027,
  UNRECOGNIZED = -1,
}

export enum LobbySetClientStatusRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_TEAM = 2,
  UNRECOGNIZED = -1,
}

export interface LobbyStageBeginReq {
}

export enum LobbyStageBeginReq_CmdId {
  CMD_ID = 311,
  UNRECOGNIZED = -1,
}

export interface LobbyStageBeginRsp {
  retcode: LobbyStageBeginRsp_Retcode;
  fightServerIp: string;
  fightServerPort: number;
  lobbyId: number;
  uidList: number[];
  leaderUid: number;
}

export enum LobbyStageBeginRsp_CmdId {
  CMD_ID = 312,
  UNRECOGNIZED = -1,
}

export enum LobbyStageBeginRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_LOBBY = 2,
  LOBBY_FIGHTING = 3,
  NOT_LEADER = 4,
  MEMBER_STATUS_ERROR = 5,
  SYSTEM_ERROR = 6,
  MEMBER_NOT_ENTER_LOBBY = 7,
  MEMBER_NOT_ONLINE = 8,
  MEMBER_DUPLICATE = 9,
  MEMBER_NOT_ENOUGH = 10,
  UNRECOGNIZED = -1,
}

export interface LobbyStageEndReq {
  lobbyId: number;
  clientData: number;
}

export enum LobbyStageEndReq_CmdId {
  CMD_ID = 313,
  UNRECOGNIZED = -1,
}

export interface LobbyStageEndRsp {
  retcode: LobbyStageEndRsp_Retcode;
  lobbyId: number;
}

export enum LobbyStageEndRsp_CmdId {
  CMD_ID = 314,
  UNRECOGNIZED = -1,
}

export enum LobbyStageEndRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_LOBBY = 2,
  LOBBY_NOT_FIGHTING = 3,
  NOT_LEADER = 4,
  SYSTEM_ERROR = 5,
  UNRECOGNIZED = -1,
}

export interface LobbyStat {
  stageId: number;
  inTeamPlayerNumList: LobbyTeamPlayerNum[];
  waitPlayerNum: number;
}

export interface LobbyTeamPlayerNum {
  status: LobbyStatus;
  playerNum: number;
}

export interface LobbyTimeoutNoLeaderNotify {
}

export enum LobbyTimeoutNoLeaderNotify_CmdId {
  CMD_ID = 1033,
  UNRECOGNIZED = -1,
}

export interface LoginActivityData {
  id: number;
  loginDays: number;
  hasTakeDaysRewardList: number[];
  hasTakeDaysBonusRewardList: number[];
  acceptTime: number;
  durationEndTime: number;
}

export interface LoginMissionActivity {
  id: number;
  hasFinishedMissionList: number[];
  unlockDays: number;
  loginDays: number;
}

export interface LoginWish {
  loginDay: number;
  wishId: number;
  chooseRewardId: number;
  isRewardTaken: boolean;
}

export interface LoginWishActivity {
  activityId: number;
  showBeginTime: number;
  showEndTime: number;
  beginTime: number;
  endTime: number;
  loginDays: number;
  hasTakeRewardLoginDayList: number[];
  hasTakeRewardSpecialDayList: number[];
  hasMadeWishList: LoginWish[];
}

export interface LoginWishGetMainDataReq {
}

export enum LoginWishGetMainDataReq_CmdId {
  CMD_ID = 1607,
  UNRECOGNIZED = -1,
}

export interface LoginWishGetMainDataRsp {
  retcode: LoginWishGetMainDataRsp_Retcode;
  activityList: LoginWishActivity[];
}

export enum LoginWishGetMainDataRsp_CmdId {
  CMD_ID = 1608,
  UNRECOGNIZED = -1,
}

export enum LoginWishGetMainDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface LoginWishMakeWishReq {
  activityId: number;
  loginDay: number;
  chooseRewardId: number;
}

export enum LoginWishMakeWishReq_CmdId {
  CMD_ID = 1613,
  UNRECOGNIZED = -1,
}

export interface LoginWishMakeWishRsp {
  retcode: LoginWishMakeWishRsp_Retcode;
  activityId: number;
  loginDay: number;
  chooseRewardId: number;
}

export enum LoginWishMakeWishRsp_CmdId {
  CMD_ID = 1614,
  UNRECOGNIZED = -1,
}

export enum LoginWishMakeWishRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  DAY_LACK = 3,
  REWARD_TAKEN = 4,
  UNRECOGNIZED = -1,
}

export interface LoginWishTakeLoginRewardReq {
  activityId: number;
  loginDay: number;
}

export enum LoginWishTakeLoginRewardReq_CmdId {
  CMD_ID = 1609,
  UNRECOGNIZED = -1,
}

export interface LoginWishTakeLoginRewardRsp {
  retcode: LoginWishTakeLoginRewardRsp_Retcode;
  activityId: number;
  loginDay: number;
  rewardData: RewardData | undefined;
}

export enum LoginWishTakeLoginRewardRsp_CmdId {
  CMD_ID = 1610,
  UNRECOGNIZED = -1,
}

export enum LoginWishTakeLoginRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  DAY_LACK = 2,
  ALREADY_TAKEN = 3,
  UNRECOGNIZED = -1,
}

export interface LoginWishTakeSpecialRewardReq {
  activityId: number;
  loginDay: number;
}

export enum LoginWishTakeSpecialRewardReq_CmdId {
  CMD_ID = 1611,
  UNRECOGNIZED = -1,
}

export interface LoginWishTakeSpecialRewardRsp {
  retcode: LoginWishTakeSpecialRewardRsp_Retcode;
  activityId: number;
  loginDay: number;
  rewardData: RewardData | undefined;
}

export enum LoginWishTakeSpecialRewardRsp_CmdId {
  CMD_ID = 1612,
  UNRECOGNIZED = -1,
}

export enum LoginWishTakeSpecialRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  DAY_LACK = 2,
  ALREADY_TAKEN = 3,
  UNRECOGNIZED = -1,
}

export interface LoginWishTakeWishRewardReq {
  activityId: number;
}

export enum LoginWishTakeWishRewardReq_CmdId {
  CMD_ID = 1615,
  UNRECOGNIZED = -1,
}

export interface LoginWishTakeWishRewardRsp {
  retcode: LoginWishTakeWishRewardRsp_Retcode;
  activityId: number;
  rewardData: RewardData | undefined;
}

export enum LoginWishTakeWishRewardRsp_CmdId {
  CMD_ID = 1616,
  UNRECOGNIZED = -1,
}

export enum LoginWishTakeWishRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface LotteryData {
  lotteryId: number;
  lotteryNumber: number[];
  rewardTakenLotteryNumber: number[];
  drawNumberBeginTime: number;
  drawNumberEndTime: number;
  takeRewardBeginTime: number;
  firstRewardId: number;
  firstRewardNumberStr: string;
  secondRewardId: number;
  secondRewardNumberStr: string;
  thirdRewardId: number;
  maxDrawTimes: number;
  specialNumber: number;
}

export interface LotteryDrawNumberReq {
  lotteryId: number;
}

export enum LotteryDrawNumberReq_CmdId {
  CMD_ID = 4181,
  UNRECOGNIZED = -1,
}

export interface LotteryDrawNumberRsp {
  retcode: LotteryDrawNumberRsp_Retcode;
  lotteryId: number;
  lotteryNumber: number;
}

export enum LotteryDrawNumberRsp_CmdId {
  CMD_ID = 4182,
  UNRECOGNIZED = -1,
}

export enum LotteryDrawNumberRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MATERIAL_NOT_ENOUGH = 2,
  NOT_OPEN = 3,
  TIMES_LIMIT = 4,
  UNRECOGNIZED = -1,
}

export interface LotteryPlayerInfo {
  uid: number;
  level: number;
  vipPoint: number;
  vipLevel: number;
  accountType: number;
  tag: number;
  firstRewardNum: number;
  isLastScheduleGetRareReward: boolean;
}

export interface LotteryReward {
  lotteryId: number;
  lotteryNumber: number;
  rewardData: RewardData | undefined;
  rewardType: number;
}

export interface LotteryTakeRewardReq {
  lotteryId: number;
}

export enum LotteryTakeRewardReq_CmdId {
  CMD_ID = 4183,
  UNRECOGNIZED = -1,
}

export interface LotteryTakeRewardRsp {
  retcode: LotteryTakeRewardRsp_Retcode;
  lotteryRewardList: LotteryReward[];
}

export enum LotteryTakeRewardRsp_CmdId {
  CMD_ID = 4184,
  UNRECOGNIZED = -1,
}

export enum LotteryTakeRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_LOTTERY_NUMBER = 2,
  REWARD_TAKEN = 3,
  NO_REWARD = 4,
  NOT_OPEN = 5,
  UNRECOGNIZED = -1,
}

export interface LotteryUseBoxReq {
}

export enum LotteryUseBoxReq_CmdId {
  CMD_ID = 4179,
  UNRECOGNIZED = -1,
}

export interface LotteryUseBoxRsp {
  retcode: LotteryUseBoxRsp_Retcode;
  getMaterialList: Material[];
}

export enum LotteryUseBoxRsp_CmdId {
  CMD_ID = 4180,
  UNRECOGNIZED = -1,
}

export enum LotteryUseBoxRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MATERIAL_NOT_ENOUGH = 2,
  NOT_OPEN = 3,
  UNRECOGNIZED = -1,
}

export interface Mail {
  id: number;
  type: MailType;
  title: string;
  content: string;
  sender: string;
  time: number;
  attachment: MailAttachment | undefined;
  isAttachmentGot: boolean;
  expireTime: number;
  contentParamList: string[];
}

export interface MailAttachment {
  itemList: MailItem[];
  hcoin: number;
  scoin: number;
  stamina: number;
  exp: number;
  expConvertScoin: number;
  mcoin: number;
}

export interface MailAttachmentTakeSwitchData {
}

export interface MailItem {
  itemId: number;
  level: number;
  num: number;
  splitFragmentNum: number;
}

export interface MailKey {
  id: number;
  type: MailType;
}

export interface MainlineStepMission {
  isUpdate: boolean;
  curMainlineStepList: number[];
  finishedMainlineStepList: number[];
}

export interface ManualRefreshShopReq {
  shopId: number;
}

export enum ManualRefreshShopReq_CmdId {
  CMD_ID = 205,
  UNRECOGNIZED = -1,
}

export interface ManualRefreshShopRsp {
  retcode: ManualRefreshShopRsp_Retcode;
}

export enum ManualRefreshShopRsp_CmdId {
  CMD_ID = 206,
  UNRECOGNIZED = -1,
}

export enum ManualRefreshShopRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SHOP_NOT_EXIST = 2,
  REFRESH_TIMES_LACK = 3,
  HCOIN_LACK = 4,
  SHOP_CLOSE = 5,
  NO_NEED_REFRESH = 6,
  MATERIAL_LACK = 7,
  UNRECOGNIZED = -1,
}

export interface MapQuestSettleData {
  mapId: number;
  oldLevel: number;
  oldStar: number;
  curLevel: number;
  curStar: number;
  subStar: number;
}

export interface MarkReadClientMailReq {
  mailKey: ClientMailKey | undefined;
}

export enum MarkReadClientMailReq_CmdId {
  CMD_ID = 3804,
  UNRECOGNIZED = -1,
}

export interface MarkReadClientMailRsp {
  retcode: MarkReadClientMailRsp_Retcode;
  mailKey: ClientMailKey | undefined;
}

export enum MarkReadClientMailRsp_CmdId {
  CMD_ID = 3805,
  UNRECOGNIZED = -1,
}

export enum MarkReadClientMailRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface MassiveWarActivity {
  curScheduleId: number;
  startTime: number;
  endTime: number;
  openDayTime: number;
  closeDayTime: number;
  battleTimes: number;
  curBattleUniqId: number;
  stageInfoList: MassiveWarStageInfo[];
  playerGroupId: number;
  lastSettleRewardScore: number;
}

export interface MassiveWarBattleBeginNotify {
  stageId: number;
  battleUniqId: number;
  transactionStr: string;
  battleInfo: MassiveWarBattleInfo | undefined;
}

export enum MassiveWarBattleBeginNotify_CmdId {
  CMD_ID = 4806,
  UNRECOGNIZED = -1,
}

export interface MassiveWarBattleEndNotify {
  battleUniqId: number;
  transactionStr: string;
  totalDamage: number;
  damageLevel: number;
  rank: number;
  totalDamageScore: number;
  rankScore: number;
  basicDamageScore: number;
  totalMemberNum: number;
  battleCostTime: number;
}

export enum MassiveWarBattleEndNotify_CmdId {
  CMD_ID = 4810,
  UNRECOGNIZED = -1,
}

export interface MassiveWarBattleInfo {
  battleBeginTime: number;
  stageId: number;
  battleUniqId: number;
  autoLoseHpTimeId: number;
  battleStatus: number;
  totalMember: number;
  selfRank: number;
  selfMonsterDamageList: MassiveWarMonsterDamage[];
  monsterList: MassiveWarBattleMonster[];
  topMemberList: MassiveWarBattleMember[];
  monsterHardLevel: number;
  selfBuffProgress: number;
  fieldProgress: MassiveWarFieldProgress | undefined;
}

export interface MassiveWarBattleMember {
  uid: number;
  nickname: string;
  totalDamage: number;
  rank: number;
  lineupInfo: LineupBriefInfo | undefined;
}

export interface MassiveWarBattleMessage {
  messageId: number;
  damageMsg: MassiveWarBattleMessage_DamageMessage | undefined;
  fieldMsg: MassiveWarBattleMessage_FieldMessage | undefined;
}

export enum MassiveWarBattleMessage_MassiveWarMessageType {
  MASSIVE_WAR_MESSAGE_NONE = 0,
  MASSIVE_WAR_MESSAGE_BOSS_DAMAGE = 1,
  MASSIVE_WAR_MESSAGE_FIELD = 2,
  UNRECOGNIZED = -1,
}

export interface MassiveWarBattleMessage_DamageMessage {
  addDamage: number;
  totalDamage: number;
}

export interface MassiveWarBattleMessage_FieldMessage {
  actionType: MassiveWarFieldActionType;
  buffProgress: number;
}

export interface MassiveWarBattleMonster {
  messageId: number;
  monsterId: number;
  totalHp: number;
  leftHp: number;
}

export interface MassiveWarExitBattleReq {
  battleUniqId: number;
}

export enum MassiveWarExitBattleReq_CmdId {
  CMD_ID = 4808,
  UNRECOGNIZED = -1,
}

export interface MassiveWarExitBattleRsp {
  retcode: MassiveWarExitBattleRsp_Retcode;
}

export enum MassiveWarExitBattleRsp_CmdId {
  CMD_ID = 4809,
  UNRECOGNIZED = -1,
}

export enum MassiveWarExitBattleRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface MassiveWarFieldProgress {
  fieldProgressRatio: number;
  inFieldMemberNum: number;
}

export interface MassiveWarGetActivityReq {
}

export enum MassiveWarGetActivityReq_CmdId {
  CMD_ID = 4800,
  UNRECOGNIZED = -1,
}

export interface MassiveWarGetActivityRsp {
  retcode: MassiveWarGetActivityRsp_Retcode;
  massiveWarActivity: MassiveWarActivity | undefined;
}

export enum MassiveWarGetActivityRsp_CmdId {
  CMD_ID = 4801,
  UNRECOGNIZED = -1,
}

export enum MassiveWarGetActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface MassiveWarGetBattleInfoReq {
  battleUniqId: number;
}

export enum MassiveWarGetBattleInfoReq_CmdId {
  CMD_ID = 4802,
  UNRECOGNIZED = -1,
}

export interface MassiveWarGetBattleInfoRsp {
  retcode: MassiveWarGetBattleInfoRsp_Retcode;
  battleUniqId: number;
  battleInfo: MassiveWarBattleInfo | undefined;
}

export enum MassiveWarGetBattleInfoRsp_CmdId {
  CMD_ID = 4803,
  UNRECOGNIZED = -1,
}

export enum MassiveWarGetBattleInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_EXIST = 2,
  UNRECOGNIZED = -1,
}

export interface MassiveWarGetRankReq {
  battleUniqId: number;
}

export enum MassiveWarGetRankReq_CmdId {
  CMD_ID = 4804,
  UNRECOGNIZED = -1,
}

export interface MassiveWarGetRankRsp {
  retcode: MassiveWarGetRankRsp_Retcode;
  battleUniqId: number;
  memberList: MassiveWarBattleMember[];
}

export enum MassiveWarGetRankRsp_CmdId {
  CMD_ID = 4805,
  UNRECOGNIZED = -1,
}

export enum MassiveWarGetRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface MassiveWarLineupInfoNotify {
  battleUniqId: number;
  lineupInfo: LineupBriefInfo | undefined;
}

export enum MassiveWarLineupInfoNotify_CmdId {
  CMD_ID = 4811,
  UNRECOGNIZED = -1,
}

export interface MassiveWarMonsterDamage {
  messageId: number;
  totalDamage: number;
}

export interface MassiveWarReportBattleMessageNotify {
  messageList: MassiveWarBattleMessage[];
  battleUniqId: number;
}

export enum MassiveWarReportBattleMessageNotify_CmdId {
  CMD_ID = 4807,
  UNRECOGNIZED = -1,
}

export interface MassiveWarRoomMember {
  uid: number;
  nickname: string;
  scoreRank: number;
  playerGroupId: number;
}

export interface MassiveWarStageInfo {
  stageId: number;
  subScheduleId: number;
  beginTime: number;
  endTime: number;
  maxDamageLevelScore: number;
  maxRankScore: number;
  basicDamageScore: number;
  minRankRatio: number;
  minDamageLevel: number;
  maxTotalDamage: number;
}

export interface MassiveWarTakeScoreRewardReq {
}

export enum MassiveWarTakeScoreRewardReq_CmdId {
  CMD_ID = 4812,
  UNRECOGNIZED = -1,
}

export interface MassiveWarTakeScoreRewardRsp {
  retcode: MassiveWarTakeScoreRewardRsp_Retcode;
  rewardData: RewardData | undefined;
}

export enum MassiveWarTakeScoreRewardRsp_CmdId {
  CMD_ID = 4813,
  UNRECOGNIZED = -1,
}

export enum MassiveWarTakeScoreRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface MasterDetailData {
  uid: number;
  nickname: string;
  level: number;
  card: MasterPupilCard | undefined;
}

export interface MasterMainData {
  exp: number;
  level: number;
  rewardLevel: number[];
  lastDismissTime: number;
  score: number;
  periodMasterMedalNum: number;
}

export interface MasterPoolData {
  materialList: Material[];
}

export interface MasterPupilApplyMsg {
  uid: number;
  type: MasterPupilType;
  card: MasterPupilCard | undefined;
  level: number;
  nickname: string;
  teacherRank: number;
  lastOnlineTime: number;
  avatarId: number;
  dressId: number;
  score: number;
  frameId: number;
  customHeadId: number;
  lastLogoutTime: number;
  onlineStatus: number;
  isLogoff: boolean;
}

export interface MasterPupilCard {
  type: MasterPupilType;
  gender: PlayerGenderType;
  area: PlayerAreaType;
  interest: PlayerInterestType;
  declaration: string;
  uid: number;
  isRecommend: boolean;
  score: number;
}

export interface MasterPupilCardReportReq {
  card: MasterPupilCard | undefined;
}

export enum MasterPupilCardReportReq_CmdId {
  CMD_ID = 578,
  UNRECOGNIZED = -1,
}

export interface MasterPupilData {
  uid: number;
  type: MasterPupilType;
  card: MasterPupilCard | undefined;
  level: number;
  nickname: string;
  teacherRank: number;
  lastOnlineTime: number;
  avatarId: number;
  dressId: number;
  status: MasterPupilStatus;
  relationTime: number;
  briefData: PlayerFriendBriefData | undefined;
  score: number;
  isLogoff: boolean;
}

export interface MasterPupilDealMsg {
  targetUid: number;
  type: MasterPupilType;
  op: MasterPupilOpType;
  nickname: string;
}

export interface MasterPupilDetailData {
  master: MasterPupilData | undefined;
  pupilList: MasterPupilData[];
}

export interface MasterPupilEvalMsg {
  pupilList: PupilMainData[];
  score: number;
}

export interface MasterPupilEvalReq {
  uid: number;
  star: number;
  stepId: number;
  comment: string;
  level: number;
  nickname: string;
  poolReward: MasterPoolData | undefined;
}

export enum MasterPupilEvalReq_CmdId {
  CMD_ID = 574,
  UNRECOGNIZED = -1,
}

export interface MasterPupilEvalRsp {
  retcode: MasterPupilRetcode_Retcode;
  uid: number;
  star: number;
  stepId: number;
  comment: string;
  poolReward: MasterPoolData | undefined;
  masterScore: number;
}

export enum MasterPupilEvalRsp_CmdId {
  CMD_ID = 575,
  UNRECOGNIZED = -1,
}

export interface MasterPupilEventData {
  uid: number;
  nickname: string;
  mission: MasterPupilMission | undefined;
  apply: MasterPupilApplyMsg | undefined;
  deal: MasterPupilDealMsg | undefined;
  eval: MasterPupilEvalMsg | undefined;
  companyMissionList: MasterPupilEventData_CompanyMission[];
}

export interface MasterPupilEventData_CompanyMission {
  missionId: number;
  time: number;
}

export interface MasterPupilMission {
  id: number;
  status: number;
}

export enum MasterPupilMission_MissionStatus {
  DOING = 1,
  FINISH = 2,
  UNRECOGNIZED = -1,
}

export interface MasterPupilMsgNotify {
  targetUid: number;
  event: MasterPupilEventType;
  data: MasterPupilEventData | undefined;
}

export enum MasterPupilMsgNotify_CmdId {
  CMD_ID = 589,
  UNRECOGNIZED = -1,
}

export interface MasterPupilRetcode {
}

export enum MasterPupilRetcode_Retcode {
  SUCC = 0,
  FAIL = 1,
  PUPIL_LEVEL_LIMIT = 2,
  MASTER_LEVEL_LIMIT = 3,
  APPLY_NUM_LIMIT = 6,
  TARGET_APPLY_NUM_LIMIT = 7,
  INVALID_UID = 8,
  IS_EVALED = 9,
  EXAM_MISSION_UNFINISH = 10,
  FAME_LEVEL_LIMIT = 12,
  FAME_LEVEL_REWARDED = 13,
  CONTENT_STR_INVALID = 14,
  MASTER_PUPIL_TYPE_ERROR = 16,
  APPLY_REPEATE = 17,
  HAS_RELATION = 18,
  NO_RELATION = 19,
  RELATION_CD_LIMIT = 21,
  HAS_STEP_UNFINISH = 22,
  NO_STEP_DOING = 23,
  DAILY_REFRESH_TIMES_LIMIT = 24,
  SAME_DAY_TIME = 25,
  RECOMMEND_CD = 26,
  INVALID_STAR = 27,
  NOT_OPEN = 28,
  NOT_ALLOW_CROSS_REGION_MASTER_PUPIL = 29,
  FEATURE_LIMIT = 30,
  SELF_PUPIL_NUM_LIMIT = 101,
  SELF_HAS_MASTER = 102,
  SELF_STEP_ERROR = 103,
  SELF_DISMISS_TIME_LIMIT = 104,
  SELF_IS_GRADUATED = 105,
  SELF_MONTH_PUPIL_NUM_LIMIT = 106,
  SELF_IS_MASTER = 107,
  TARGET_PUPIL_NUM_LIMIT = 201,
  TARGET_HAS_MASTER = 202,
  TARGET_STEP_ERROR = 203,
  TARGET_DISMISS_TIME_LIMIT = 204,
  TARGET_IS_GRADUATED = 205,
  TARGET_MONTH_PUPIL_NUM_LIMIT = 206,
  TARGET_IS_MASTER = 207,
  DECLARATION_IN_CD = 208,
  DECLARATION_IN_AUDIT = 209,
  FEATURE_CLOSED = 210,
  TARGET_RECALLED = 211,
  UNRECOGNIZED = -1,
}

export interface MasterPupilTagSwitch {
  type: MasterPupilType;
  isOpen: boolean;
}

export interface Material {
  id: number;
  num: number;
}

export interface MaterialDeleteReturnReq {
}

export enum MaterialDeleteReturnReq_CmdId {
  CMD_ID = 553,
  UNRECOGNIZED = -1,
}

export interface MaterialEvoReq {
}

export enum MaterialEvoReq_CmdId {
  CMD_ID = 56,
  UNRECOGNIZED = -1,
}

export interface MaterialEvoRsp {
  retcode: MaterialEvoRsp_Retcode;
}

export enum MaterialEvoRsp_CmdId {
  CMD_ID = 57,
  UNRECOGNIZED = -1,
}

export enum MaterialEvoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface MaterialHideSwitchData {
  materialId: number;
}

export interface MatrixAdvancePath {
  pathFrom: MatrixGridPos | undefined;
  pathTo: MatrixGridPos | undefined;
}

export interface MatrixAdvanceReq {
  fromPos: MatrixGridPos | undefined;
  toPos: MatrixGridPos | undefined;
  pathList: MatrixAdvancePath[];
}

export enum MatrixAdvanceReq_CmdId {
  CMD_ID = 2326,
  UNRECOGNIZED = -1,
}

export interface MatrixAdvanceRsp {
  retcode: MatrixAdvanceRsp_Retcode;
  curPos: MatrixGridPos | undefined;
  posList: MatrixGridPos[];
}

export enum MatrixAdvanceRsp_CmdId {
  CMD_ID = 2327,
  UNRECOGNIZED = -1,
}

export enum MatrixAdvanceRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  PATH_NOT_VALID = 2,
  IN_FLOOR_EVENT = 3,
  UNRECOGNIZED = -1,
}

export interface MatrixBuff {
  buffId: number;
  buffType: number;
  buffParaInt: number;
}

export interface MatrixCancelEventReq {
}

export enum MatrixCancelEventReq_CmdId {
  CMD_ID = 2332,
  UNRECOGNIZED = -1,
}

export interface MatrixCancelEventRsp {
  retcode: MatrixCancelEventRsp_Retcode;
}

export enum MatrixCancelEventRsp_CmdId {
  CMD_ID = 2333,
  UNRECOGNIZED = -1,
}

export enum MatrixCancelEventRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface MatrixEnterReq {
  floorId: number;
}

export enum MatrixEnterReq_CmdId {
  CMD_ID = 2324,
  UNRECOGNIZED = -1,
}

export interface MatrixEnterRsp {
  retcode: MatrixEnterRsp_Retcode;
}

export enum MatrixEnterRsp_CmdId {
  CMD_ID = 2325,
  UNRECOGNIZED = -1,
}

export enum MatrixEnterRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface MatrixEventFinishNotify {
  pos: MatrixGridPos | undefined;
  eventId: number;
  rewardData: RewardData | undefined;
  displayType: MatrixEventType;
  displayId: number;
}

export enum MatrixEventFinishNotify_CmdId {
  CMD_ID = 2335,
  UNRECOGNIZED = -1,
}

export interface MatrixFloorBriefInfo {
  floorId: number;
  floorStatus: MatrixFloorStatus;
}

export interface MatrixFloorMapInfo {
  floorId: number;
  gridList: MatrixGrid[];
  width: number;
  height: number;
  mapId: number;
  currentPos: MatrixGridPos | undefined;
  eventGridList: MatrixGrid[];
  stepNum: number;
  dicePoint: number;
  lotteryList: MatrixLottery[];
  buffList: MatrixBuff[];
}

export interface MatrixGrid {
  pos: MatrixGridPos | undefined;
  type: MatrixGridType;
  gridId: number;
  eventId: number;
}

export interface MatrixGridPos {
  x: number;
  y: number;
}

export interface MatrixGuessFingerReq {
  fingerType: MatrixFingerType;
}

export enum MatrixGuessFingerReq_CmdId {
  CMD_ID = 2349,
  UNRECOGNIZED = -1,
}

export interface MatrixGuessFingerRsp {
  retcode: MatrixGuessFingerRsp_Retcode;
  playerFingerType: MatrixFingerType;
  robotFingerType: MatrixFingerType;
  rewardData: RewardData | undefined;
}

export enum MatrixGuessFingerRsp_CmdId {
  CMD_ID = 2350,
  UNRECOGNIZED = -1,
}

export enum MatrixGuessFingerRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_WIN = 2,
  UNRECOGNIZED = -1,
}

export interface MatrixLottery {
  lotteryId: number;
  lotteryNum: number;
  leftStep: number;
}

export interface MatrixLotteryDrawNotify {
  lottery: MatrixLottery | undefined;
  winNum: number;
  rewardData: RewardData | undefined;
}

export enum MatrixLotteryDrawNotify_CmdId {
  CMD_ID = 2353,
  UNRECOGNIZED = -1,
}

export interface MatrixMoveObjectReq {
  pos: MatrixGridPos | undefined;
  eventId: number;
}

export enum MatrixMoveObjectReq_CmdId {
  CMD_ID = 2339,
  UNRECOGNIZED = -1,
}

export interface MatrixMoveObjectRsp {
  retcode: MatrixMoveObjectRsp_Retcode;
  posList: MatrixGridPos[];
  eventId: number;
}

export enum MatrixMoveObjectRsp_CmdId {
  CMD_ID = 2340,
  UNRECOGNIZED = -1,
}

export enum MatrixMoveObjectRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  POS_INVALID = 2,
  OBJECT_NOT_EXIST = 3,
  BLOCK = 4,
  IN_FLOOR_EVENT = 5,
  UNRECOGNIZED = -1,
}

export interface MatrixResetFloorReq {
}

export enum MatrixResetFloorReq_CmdId {
  CMD_ID = 2341,
  UNRECOGNIZED = -1,
}

export interface MatrixResetFloorRsp {
  retcode: MatrixResetFloorRsp_Retcode;
}

export enum MatrixResetFloorRsp_CmdId {
  CMD_ID = 2342,
  UNRECOGNIZED = -1,
}

export enum MatrixResetFloorRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface MatrixSetDiceDestinationReq {
  targetPos: MatrixGridPos | undefined;
}

export enum MatrixSetDiceDestinationReq_CmdId {
  CMD_ID = 2347,
  UNRECOGNIZED = -1,
}

export interface MatrixSetDiceDestinationRsp {
  retcode: MatrixSetDiceDestinationRsp_Retcode;
  targetPos: MatrixGridPos | undefined;
}

export enum MatrixSetDiceDestinationRsp_CmdId {
  CMD_ID = 2348,
  UNRECOGNIZED = -1,
}

export enum MatrixSetDiceDestinationRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_PATH = 2,
  UNRECOGNIZED = -1,
}

export interface MatrixSetLotteryNumReq {
  lotteryNum: number;
}

export enum MatrixSetLotteryNumReq_CmdId {
  CMD_ID = 2351,
  UNRECOGNIZED = -1,
}

export interface MatrixSetLotteryNumRsp {
  retcode: MatrixSetLotteryNumRsp_Retcode;
}

export enum MatrixSetLotteryNumRsp_CmdId {
  CMD_ID = 2352,
  UNRECOGNIZED = -1,
}

export enum MatrixSetLotteryNumRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface MatrixSettleFloorEventReq {
}

export enum MatrixSettleFloorEventReq_CmdId {
  CMD_ID = 2343,
  UNRECOGNIZED = -1,
}

export interface MatrixSettleFloorEventRsp {
  retcode: MatrixSettleFloorEventRsp_Retcode;
}

export enum MatrixSettleFloorEventRsp_CmdId {
  CMD_ID = 2344,
  UNRECOGNIZED = -1,
}

export enum MatrixSettleFloorEventRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface MatrixTeleportNotify {
  fromPos: MatrixGridPos | undefined;
  toPos: MatrixGridPos | undefined;
}

export enum MatrixTeleportNotify_CmdId {
  CMD_ID = 2338,
  UNRECOGNIZED = -1,
}

export interface MatrixThrowDiceReq {
  diceType: DiceType;
  dicePoint: number;
}

export enum MatrixThrowDiceReq_CmdId {
  CMD_ID = 2345,
  UNRECOGNIZED = -1,
}

export interface MatrixThrowDiceRsp {
  retcode: MatrixThrowDiceRsp_Retcode;
  diceType: DiceType;
  dicePoint: number;
  bonusDicePoint: number;
}

export enum MatrixThrowDiceRsp_CmdId {
  CMD_ID = 2346,
  UNRECOGNIZED = -1,
}

export enum MatrixThrowDiceRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_DICE = 2,
  IN_FLOOR_EVENT = 3,
  WAIT_CHOOSE = 4,
  HAVE_EVENT = 5,
  LACK_DICE = 6,
  UNRECOGNIZED = -1,
}

export interface MatrixTriggerEventReq {
  pos: MatrixGridPos | undefined;
  eventId: number;
}

export enum MatrixTriggerEventReq_CmdId {
  CMD_ID = 2330,
  UNRECOGNIZED = -1,
}

export interface MatrixTriggerEventRsp {
  retcode: MatrixTriggerEventRsp_Retcode;
}

export enum MatrixTriggerEventRsp_CmdId {
  CMD_ID = 2331,
  UNRECOGNIZED = -1,
}

export enum MatrixTriggerEventRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  POS_INVALID = 2,
  EVENT_NOT_EXIST = 3,
  IN_FLOOR_EVENT = 4,
  UNRECOGNIZED = -1,
}

export interface McoinBuySwitchData {
  accountType: number;
}

export interface Mecha {
  uniqueId: number;
  id: number;
}

export interface Medal {
  id: number;
  endTime: number;
  extraParam: number;
}

export interface MedalOpReq {
  op: MedalOpType;
  onId: number;
  offId: number;
}

export enum MedalOpReq_CmdId {
  CMD_ID = 451,
  UNRECOGNIZED = -1,
}

export interface MedalOpRsp {
  retcode: MedalOpRsp_Retcode;
  op: MedalOpType;
  onId: number;
  offId: number;
}

export enum MedalOpRsp_CmdId {
  CMD_ID = 452,
  UNRECOGNIZED = -1,
}

export enum MedalOpRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_OWN = 2,
  EXPIRED = 3,
  OFF_ID_ERROR = 4,
  UNRECOGNIZED = -1,
}

export interface MinuteStage {
  minuteId: number;
  state: MinuteStage_StageState;
}

export enum MinuteStage_StageState {
  LOCKED = 0,
  UNLOCK = 1,
  FINISH = 2,
  UNRECOGNIZED = -1,
}

export interface Mission {
  missionId: number;
  status: MissionStatus;
  progress: number;
  beginTime: number;
  endTime: number;
  priority: number;
  finishedTimes: number;
  finishedTimesLimit: number;
  cycleId: number;
}

export interface MissionCompensationReward {
  missionId: number;
  missionCompensationRewardId: number;
}

export interface MissionHideSwitchData {
  missionId: number;
}

export interface MissionRewardSwitchData {
  missionId: number;
}

export interface MissionStepCompensation {
  typeId: number;
  oldStepId: number;
  newStepId: number;
  oldStepCompensationRewardId: number;
  oldStepRewardId: number;
  missionCompensationList: MissionCompensationReward[];
  oldStepCompensationRewardIdList: number[];
}

export interface MissionThemeData {
  themeId: number;
  isThemeUpgrade: boolean;
  hasTakeExtraRewardMissionList: number[];
  isHasTakeAllExtraReward: boolean;
}

export interface ModifyDLCNameReq {
  name: string;
}

export enum ModifyDLCNameReq_CmdId {
  CMD_ID = 3557,
  UNRECOGNIZED = -1,
}

export interface ModifyDLCNameRsp {
  retcode: ModifyDLCNameRsp_Retcode;
}

export enum ModifyDLCNameRsp_CmdId {
  CMD_ID = 3558,
  UNRECOGNIZED = -1,
}

export enum ModifyDLCNameRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  FORMAT_ERROR = 2,
  SENSITIVE_WORDS = 3,
  UNRECOGNIZED = -1,
}

export interface ModifyScDLCNameReq {
  name: string;
}

export enum ModifyScDLCNameReq_CmdId {
  CMD_ID = 6326,
  UNRECOGNIZED = -1,
}

export interface ModifyScDLCNameRsp {
  retcode: ModifyScDLCNameRsp_Retcode;
}

export enum ModifyScDLCNameRsp_CmdId {
  CMD_ID = 6327,
  UNRECOGNIZED = -1,
}

export enum ModifyScDLCNameRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  FORMAT_ERROR = 2,
  SENSITIVE_WORDS = 3,
  UNRECOGNIZED = -1,
}

export interface MonopolyAddMonsterReq {
  areaId: number;
  floorId: number;
  monsterId: number;
  position: number;
  direction: number;
}

export enum MonopolyAddMonsterReq_CmdId {
  CMD_ID = 3867,
  UNRECOGNIZED = -1,
}

export interface MonopolyAddMonsterRsp {
  retcode: MonopolyAddMonsterRsp_Retcode;
  monsterId: number;
  position: number;
  direction: number;
  uniqueId: number;
  entityType: number;
  tileEntityId: number;
}

export enum MonopolyAddMonsterRsp_CmdId {
  CMD_ID = 3868,
  UNRECOGNIZED = -1,
}

export enum MonopolyAddMonsterRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ALREADY_ADD = 2,
  UNRECOGNIZED = -1,
}

export interface MonopolyArea {
  areaId: number;
  status: MonopolyAreaStatus;
  floorList: MonopolyFloor[];
}

export interface MonopolyBuildingConstructReq {
  areaId: number;
  buildingType: number;
}

export enum MonopolyBuildingConstructReq_CmdId {
  CMD_ID = 3854,
  UNRECOGNIZED = -1,
}

export interface MonopolyBuildingConstructRsp {
  retcode: MonopolyBuildingConstructRsp_Retcode;
  areaId: number;
  buildingType: number;
}

export enum MonopolyBuildingConstructRsp_CmdId {
  CMD_ID = 3855,
  UNRECOGNIZED = -1,
}

export enum MonopolyBuildingConstructRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LACK_MATERIAL = 2,
  ANOTHER_TYPE_EXIST = 3,
  NUM_LIMIT = 4,
  LEVEL_MAX = 5,
  NO_LOCATION = 6,
  WAIT_SELECT = 7,
  STATUS_ERROR = 8,
  UNRECOGNIZED = -1,
}

export interface MonopolyBuyGoodsReq {
  areaId: number;
  goodsId: number;
}

export enum MonopolyBuyGoodsReq_CmdId {
  CMD_ID = 3861,
  UNRECOGNIZED = -1,
}

export interface MonopolyBuyGoodsRsp {
  retcode: MonopolyBuyGoodsRsp_Retcode;
}

export enum MonopolyBuyGoodsRsp_CmdId {
  CMD_ID = 3862,
  UNRECOGNIZED = -1,
}

export enum MonopolyBuyGoodsRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LACK_MATERIAL = 2,
  BUY_TIMES_LACK = 3,
  INVALID_POSITION = 4,
  STATUS_ERROR = 5,
  UNRECOGNIZED = -1,
}

export interface MonopolyEndRoundReq {
  areaId: number;
}

export enum MonopolyEndRoundReq_CmdId {
  CMD_ID = 3856,
  UNRECOGNIZED = -1,
}

export interface MonopolyEndRoundRsp {
  retcode: MonopolyEndRoundRsp_Retcode;
}

export enum MonopolyEndRoundRsp_CmdId {
  CMD_ID = 3857,
  UNRECOGNIZED = -1,
}

export enum MonopolyEndRoundRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  STATUS_ERROR = 2,
  UNRECOGNIZED = -1,
}

export interface MonopolyFloor {
  floorId: number;
  buildingList: MonopolyFloor_Building[];
  monsterList: MonopolyMonster[];
  roundStatus: MonopolyRoundStatus;
}

export interface MonopolyFloor_Building {
  location: number;
  type: number;
  level: number;
  productNum: number;
}

export interface MonopolyMonster {
  uniqueId: number;
  monsterId: number;
}

export interface MonopolyResetFloorReq {
  areaId: number;
  floorId: number;
}

export enum MonopolyResetFloorReq_CmdId {
  CMD_ID = 3865,
  UNRECOGNIZED = -1,
}

export interface MonopolyResetFloorRsp {
  retcode: MonopolyResetFloorRsp_Retcode;
  areaId: number;
  floorId: number;
  tileTowerId: number;
}

export enum MonopolyResetFloorRsp_CmdId {
  CMD_ID = 3866,
  UNRECOGNIZED = -1,
}

export enum MonopolyResetFloorRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface MonopolyRewardNotify {
  behaviorId: number;
  reward: RewardData | undefined;
}

export enum MonopolyRewardNotify_CmdId {
  CMD_ID = 3860,
  UNRECOGNIZED = -1,
}

export interface MonopolyShopGoods {
  goodsId: number;
  buyTimes: number;
}

export interface MonopolySkipBattleReq {
  stageId: number;
}

export enum MonopolySkipBattleReq_CmdId {
  CMD_ID = 3863,
  UNRECOGNIZED = -1,
}

export interface MonopolySkipBattleRsp {
  retcode: MonopolySkipBattleRsp_Retcode;
}

export enum MonopolySkipBattleRsp_CmdId {
  CMD_ID = 3864,
  UNRECOGNIZED = -1,
}

export enum MonopolySkipBattleRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface MonopolyThrowDiceReq {
  areaId: number;
}

export enum MonopolyThrowDiceReq_CmdId {
  CMD_ID = 3852,
  UNRECOGNIZED = -1,
}

export interface MonopolyThrowDiceRsp {
  retcode: MonopolyThrowDiceRsp_Retcode;
  areaId: number;
  diceNum: number;
}

export enum MonopolyThrowDiceRsp_CmdId {
  CMD_ID = 3853,
  UNRECOGNIZED = -1,
}

export enum MonopolyThrowDiceRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  WAIT_SELECT_PATH = 2,
  STATUS_ERROR = 3,
  UNRECOGNIZED = -1,
}

export interface MonopolyUseItemReq {
  areaId: number;
  itemId: number;
  para: number;
}

export enum MonopolyUseItemReq_CmdId {
  CMD_ID = 3858,
  UNRECOGNIZED = -1,
}

export interface MonopolyUseItemRsp {
  retcode: MonopolyUseItemRsp_Retcode;
}

export enum MonopolyUseItemRsp_CmdId {
  CMD_ID = 3859,
  UNRECOGNIZED = -1,
}

export enum MonopolyUseItemRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LACK_MATERIAL = 2,
  INVALID_AREA = 3,
  UNRECOGNIZED = -1,
}

export interface MonsterCard {
  uniqueId: number;
  level: number;
  star: number;
  fragmentNum: number;
  talentList: number[];
}

export interface MonsterCardActivityRankInfo {
  teamBriefDataList: MonsterCardCardBriefData[];
  collectionLevel: number;
  floor: number;
}

export interface MonsterCardCardBriefData {
  uniqueId: number;
  star: number;
  level: number;
  talentList: number[];
}

export interface MonsterCardConfirmRandomTalentReq {
  activityId: number;
  type: MonsterCardRandomTalentConfirmType;
}

export enum MonsterCardConfirmRandomTalentReq_CmdId {
  CMD_ID = 5933,
  UNRECOGNIZED = -1,
}

export interface MonsterCardConfirmRandomTalentRsp {
  retcode: MonsterCardConfirmRandomTalentRsp_Retcode;
  activityId: number;
  type: MonsterCardRandomTalentConfirmType;
  confirmData: MonsterCardRandomTalentConfirmData | undefined;
}

export enum MonsterCardConfirmRandomTalentRsp_CmdId {
  CMD_ID = 5934,
  UNRECOGNIZED = -1,
}

export enum MonsterCardConfirmRandomTalentRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface MonsterCardFragmentOverflowNotify {
  activityId: number;
  overflowCostMaterial: Material | undefined;
  returnMaterialList: Material[];
}

export enum MonsterCardFragmentOverflowNotify_CmdId {
  CMD_ID = 5935,
  UNRECOGNIZED = -1,
}

export interface MonsterCardGetActivityReq {
  activityId: number;
}

export enum MonsterCardGetActivityReq_CmdId {
  CMD_ID = 5920,
  UNRECOGNIZED = -1,
}

export interface MonsterCardGetActivityRsp {
  retcode: MonsterCardGetActivityRsp_Retcode;
  activityId: number;
  cardList: MonsterCard[];
  hasTakeDailyRewardTimes: number;
  randomTalentConfirmData: MonsterCardRandomTalentConfirmData | undefined;
}

export enum MonsterCardGetActivityRsp_CmdId {
  CMD_ID = 5921,
  UNRECOGNIZED = -1,
}

export enum MonsterCardGetActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface MonsterCardGetBossRankReq {
  activityId: number;
  stageId: number;
}

export enum MonsterCardGetBossRankReq_CmdId {
  CMD_ID = 5931,
  UNRECOGNIZED = -1,
}

export interface MonsterCardGetBossRankRsp {
  retcode: MonsterCardGetBossRankRsp_Retcode;
  activityId: number;
  stageId: number;
  num: number;
  rankData: RankShowData | undefined;
  rankPercent: number;
  selfRankData: MonsterCardActivityRankInfo | undefined;
}

export enum MonsterCardGetBossRankRsp_CmdId {
  CMD_ID = 5932,
  UNRECOGNIZED = -1,
}

export enum MonsterCardGetBossRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface MonsterCardGetTowerRankReq {
  activityId: number;
}

export enum MonsterCardGetTowerRankReq_CmdId {
  CMD_ID = 5929,
  UNRECOGNIZED = -1,
}

export interface MonsterCardGetTowerRankRsp {
  retcode: MonsterCardGetTowerRankRsp_Retcode;
  activityId: number;
  num: number;
  rankData: RankShowData | undefined;
  rankPercent: number;
  selfRankData: MonsterCardActivityRankInfo | undefined;
}

export enum MonsterCardGetTowerRankRsp_CmdId {
  CMD_ID = 5930,
  UNRECOGNIZED = -1,
}

export enum MonsterCardGetTowerRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface MonsterCardLearnRandomTalentReq {
  activityId: number;
  uniqueId: number;
  costMaterialId: number;
  talentIndex: number;
}

export enum MonsterCardLearnRandomTalentReq_CmdId {
  CMD_ID = 5926,
  UNRECOGNIZED = -1,
}

export interface MonsterCardLearnRandomTalentRsp {
  retcode: MonsterCardLearnRandomTalentRsp_Retcode;
  activityId: number;
  uniqueId: number;
  costMaterialId: number;
  talentIndex: number;
  oldTalentId: number;
  newTalentId: number;
}

export enum MonsterCardLearnRandomTalentRsp_CmdId {
  CMD_ID = 5927,
  UNRECOGNIZED = -1,
}

export enum MonsterCardLearnRandomTalentRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MATERIAL_LACK = 2,
  MATERIAL_ERROR = 3,
  INDEX_ERROR = 4,
  NEED_TO_CONFIRM = 5,
  UNRECOGNIZED = -1,
}

export interface MonsterCardLevelUpReq {
  activityId: number;
  uniqueId: number;
  targetLevel: number;
}

export enum MonsterCardLevelUpReq_CmdId {
  CMD_ID = 5922,
  UNRECOGNIZED = -1,
}

export interface MonsterCardLevelUpRsp {
  retcode: MonsterCardLevelUpRsp_Retcode;
  activityId: number;
  uniqueId: number;
  targetLevel: number;
}

export enum MonsterCardLevelUpRsp_CmdId {
  CMD_ID = 5923,
  UNRECOGNIZED = -1,
}

export enum MonsterCardLevelUpRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MATERIAL_LACK = 2,
  LEVEL_LIMIT = 3,
  TARGET_LEVEL_ERROR = 4,
  UNRECOGNIZED = -1,
}

export interface MonsterCardRandomTalentConfirmData {
  uniqueId: number;
  costMaterialId: number;
  talentIndex: number;
  oldTalentId: number;
  newTalentId: number;
}

export interface MonsterCardStarUpReq {
  activityId: number;
  uniqueId: number;
}

export enum MonsterCardStarUpReq_CmdId {
  CMD_ID = 5924,
  UNRECOGNIZED = -1,
}

export interface MonsterCardStarUpRsp {
  retcode: MonsterCardStarUpRsp_Retcode;
  activityId: number;
  uniqueId: number;
}

export enum MonsterCardStarUpRsp_CmdId {
  CMD_ID = 5925,
  UNRECOGNIZED = -1,
}

export enum MonsterCardStarUpRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  FRAGMENT_LACK = 2,
  LEVEL_LACK = 3,
  STAR_LIMIT = 4,
  UNRECOGNIZED = -1,
}

export interface MonsterCardSyncCardNotify {
  activityId: number;
  isAll: boolean;
  cardList: MonsterCard[];
  type: MonsterCardSyncType;
}

export enum MonsterCardSyncCardNotify_CmdId {
  CMD_ID = 5928,
  UNRECOGNIZED = -1,
}

export interface MosaicActivity {
  activityId: number;
  progress: number;
  isTakeReward: boolean;
}

export interface MoveArmadaCabinReq {
  gridList: ArmadaGrid[];
}

export enum MoveArmadaCabinReq_CmdId {
  CMD_ID = 2635,
  UNRECOGNIZED = -1,
}

export interface MoveArmadaCabinRsp {
  retcode: MoveArmadaCabinRsp_Retcode;
}

export enum MoveArmadaCabinRsp_CmdId {
  CMD_ID = 2636,
  UNRECOGNIZED = -1,
}

export enum MoveArmadaCabinRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  NOT_GRANTED = 3,
  DATA_ERROR = 4,
  NO_OWNERSHIP = 5,
  UNRECOGNIZED = -1,
}

export interface MpBadge {
  uniqueIdU64: number;
  badgeId: number;
}

export interface MpBadgeData {
  equipedBadgeUidU64: number;
  badgeList: MpBadge[];
}

export interface MpCancelMatchReq {
}

export enum MpCancelMatchReq_CmdId {
  CMD_ID = 468,
  UNRECOGNIZED = -1,
}

export interface MpCancelMatchRsp {
  retcode: MpCancelMatchRsp_Retcode;
}

export enum MpCancelMatchRsp_CmdId {
  CMD_ID = 469,
  UNRECOGNIZED = -1,
}

export enum MpCancelMatchRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface MpCreateTeamReq {
  member: MpTeamMember | undefined;
}

export enum MpCreateTeamReq_CmdId {
  CMD_ID = 348,
  UNRECOGNIZED = -1,
}

export interface MpCreateTeamRsp {
  retcode: MpCreateTeamRsp_Retcode;
  teamId: number;
}

export enum MpCreateTeamRsp_CmdId {
  CMD_ID = 349,
  UNRECOGNIZED = -1,
}

export enum MpCreateTeamRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ALREADY_IN_TEAM = 2,
  CLIENT_VERSION_ERROR = 3,
  SERVER_BUSY = 4,
  IN_SQUAD = 5,
  IN_SQUAD_MATCH = 6,
  IN_ROOM = 7,
  FEATURE_LIMIT = 8,
  UNRECOGNIZED = -1,
}

export interface MpEnterTeamReq {
  teamId: number;
  member: MpTeamMember | undefined;
  uid: number;
}

export enum MpEnterTeamReq_CmdId {
  CMD_ID = 350,
  UNRECOGNIZED = -1,
}

export interface MpEnterTeamRsp {
  retcode: MpEnterTeamRsp_Retcode;
  teamId: number;
  stageId: number;
}

export enum MpEnterTeamRsp_CmdId {
  CMD_ID = 351,
  UNRECOGNIZED = -1,
}

export enum MpEnterTeamRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  TEAM_NOT_EXIST = 2,
  TEAM_FULL = 3,
  TEAM_ENTER_LOBBY = 4,
  TEAM_IN_LOBBY = 5,
  TEAM_IN_FIGHT = 6,
  ALREADY_IN_TEAM = 7,
  CLIENT_VERSION_ERROR = 8,
  SERVER_BUSY = 9,
  IN_SQUAD = 10,
  IN_SQUAD_MATCH = 11,
  IN_ROOM = 12,
  CONDITION_NOT_MEET = 13,
  FEATURE_LIMIT = 14,
  DATA_VERSION_CONFLICT = 15,
  UNRECOGNIZED = -1,
}

export interface MpFastMatchReq {
  stageIdList: number[];
  deviceScore: number;
  matchStageList: MpMatchStage[];
  level: number;
  clientRtt: number;
  member: MpTeamMember | undefined;
  reportNum: number;
}

export enum MpFastMatchReq_CmdId {
  CMD_ID = 1247,
  UNRECOGNIZED = -1,
}

export interface MpFastMatchRsp {
  retcode: MpFastMatchRsp_Retcode;
  stageIdList: number[];
  lobbyId: number;
}

export enum MpFastMatchRsp_CmdId {
  CMD_ID = 1248,
  UNRECOGNIZED = -1,
}

export enum MpFastMatchRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  STAGE_ERROR = 2,
  CLIENT_VERSION_ERROR = 3,
  BAD_NETWORK = 4,
  SERVER_BUSY = 5,
  ALREADY_IN_TEAM = 6,
  MATCH_STAGE_EXCEED_MAX = 7,
  IN_SQUAD = 8,
  IN_SQUAD_MATCH = 9,
  IN_ROOM = 10,
  UNRECOGNIZED = -1,
}

export interface MpGetLobbyRecommendReq {
  stageId: number;
}

export enum MpGetLobbyRecommendReq_CmdId {
  CMD_ID = 470,
  UNRECOGNIZED = -1,
}

export interface MpGetLobbyRecommendRsp {
  retcode: MpGetLobbyRecommendRsp_Retcode;
  stageId: number;
  recommendType: MpGetLobbyRecommendRsp_RecommendType;
}

export enum MpGetLobbyRecommendRsp_CmdId {
  CMD_ID = 471,
  UNRECOGNIZED = -1,
}

export enum MpGetLobbyRecommendRsp_RecommendType {
  RECOMMEND_NONE = 0,
  RECOMMEND_CREATE = 1,
  RECOMMEND_ENTER = 2,
  UNRECOGNIZED = -1,
}

export enum MpGetLobbyRecommendRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface MpGetMatchInfoReq {
}

export enum MpGetMatchInfoReq_CmdId {
  CMD_ID = 466,
  UNRECOGNIZED = -1,
}

export interface MpGetMatchInfoRsp {
  retcode: MpGetMatchInfoRsp_Retcode;
  matchInfoList: MpMatchInfo[];
  battleBeginTime: number;
  lobbyIdx: number;
}

export enum MpGetMatchInfoRsp_CmdId {
  CMD_ID = 467,
  UNRECOGNIZED = -1,
}

export enum MpGetMatchInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_MATCH_ROOM = 2,
  UNRECOGNIZED = -1,
}

export interface MpGetTeamReq {
}

export enum MpGetTeamReq_CmdId {
  CMD_ID = 346,
  UNRECOGNIZED = -1,
}

export interface MpGetTeamRsp {
  retcode: MpGetTeamRsp_Retcode;
  teamData: MpTeamData | undefined;
}

export enum MpGetTeamRsp_CmdId {
  CMD_ID = 347,
  UNRECOGNIZED = -1,
}

export enum MpGetTeamRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_TEAM = 2,
  DISCONNECT = 3,
  KICK = 4,
  UNRECOGNIZED = -1,
}

export interface MpKickFromTeamReq {
  memberUid: number;
}

export enum MpKickFromTeamReq_CmdId {
  CMD_ID = 354,
  UNRECOGNIZED = -1,
}

export interface MpKickFromTeamRsp {
  retcode: MpKickFromTeamRsp_Retcode;
  memberUid: number;
}

export enum MpKickFromTeamRsp_CmdId {
  CMD_ID = 355,
  UNRECOGNIZED = -1,
}

export enum MpKickFromTeamRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_TEAM = 2,
  UNRECOGNIZED = -1,
}

export interface MpLeaveTeamNotify {
  reason: number;
}

export enum MpLeaveTeamNotify_CmdId {
  CMD_ID = 1101,
  UNRECOGNIZED = -1,
}

export interface MpLikePlayerReq {
  targetUid: number;
}

export enum MpLikePlayerReq_CmdId {
  CMD_ID = 392,
  UNRECOGNIZED = -1,
}

export interface MpLikePlayerRsp {
  retcode: MpLikePlayerRsp_Retcode;
  targetUid: number;
  fromUid: number;
  targetLikeNum: number;
  addFriendsPoint: number;
}

export enum MpLikePlayerRsp_CmdId {
  CMD_ID = 393,
  UNRECOGNIZED = -1,
}

export enum MpLikePlayerRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_TEAM = 2,
  HAS_LIKE = 3,
  UNRECOGNIZED = -1,
}

export interface MpMatchInfo {
  stageId: number;
  startMatchTime: number;
}

export interface MpMatchStage {
  stageId: number;
  hasLeaderStamina: boolean;
  hasLeaderEnterTimes: boolean;
  avatarDetail: AvatarDetailData | undefined;
  backupAvatarList: AvatarDetailData[];
  hasLeaderThemeWantedTicket: boolean;
}

export interface MpMemberSetClientStatusReq {
  status: MpMemberClientStatus;
}

export enum MpMemberSetClientStatusReq_CmdId {
  CMD_ID = 375,
  UNRECOGNIZED = -1,
}

export interface MpMemberSetClientStatusRsp {
  retcode: MpMemberSetClientStatusRsp_Retcode;
}

export enum MpMemberSetClientStatusRsp_CmdId {
  CMD_ID = 376,
  UNRECOGNIZED = -1,
}

export enum MpMemberSetClientStatusRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_TEAM = 2,
  UNRECOGNIZED = -1,
}

export interface MpRaidRankData {
  uid: number;
  score: number;
  rank: number;
  nickname: string;
  armadaId: number;
  armadaName: string;
}

export interface MpRaidResetCycleReq {
  activityId: number;
}

export enum MpRaidResetCycleReq_CmdId {
  CMD_ID = 360,
  UNRECOGNIZED = -1,
}

export interface MpRaidResetCycleRsp {
  retcode: MpRaidResetCycleRsp_Retcode;
}

export enum MpRaidResetCycleRsp_CmdId {
  CMD_ID = 361,
  UNRECOGNIZED = -1,
}

export enum MpRaidResetCycleRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_OPEN = 2,
  RESET_TIMES_LACK = 3,
  COIN_LACK = 4,
  HAVE_REWARD_NOT_TAKEN = 5,
  NOT_ACTIVE = 6,
  UNRECOGNIZED = -1,
}

export interface MpRecordMember {
  uid: number;
  avatarId: number;
  dressId: number;
  isMvp: boolean;
  isLeader: boolean;
  nickName: string;
  avatarLevel: number;
  avatarStarLevel: number;
  regionName: string;
}

export interface MpReportPlayerReq {
  targetUid: number;
}

export enum MpReportPlayerReq_CmdId {
  CMD_ID = 381,
  UNRECOGNIZED = -1,
}

export interface MpReportPlayerRsp {
  retcode: MpReportPlayerRsp_Retcode;
  targetUid: number;
  reportSuccess: boolean;
  judgeTerm: number;
}

export enum MpReportPlayerRsp_CmdId {
  CMD_ID = 382,
  UNRECOGNIZED = -1,
}

export enum MpReportPlayerRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_TEAM = 2,
  ALREADY_REPORT = 3,
  UNRECOGNIZED = -1,
}

export interface MpResetSkillPointReq {
  type: MpSkillType;
}

export enum MpResetSkillPointReq_CmdId {
  CMD_ID = 344,
  UNRECOGNIZED = -1,
}

export interface MpResetSkillPointRsp {
  retcode: MpResetSkillPointRsp_Retcode;
  type: MpSkillType;
}

export enum MpResetSkillPointRsp_CmdId {
  CMD_ID = 345,
  UNRECOGNIZED = -1,
}

export enum MpResetSkillPointRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  COIN_NOT_ENOUGH = 2,
  UNRECOGNIZED = -1,
}

export interface MpSetExtraSkillReq {
  extraSkillId: number;
}

export enum MpSetExtraSkillReq_CmdId {
  CMD_ID = 1644,
  UNRECOGNIZED = -1,
}

export interface MpSetExtraSkillRsp {
  retcode: MpSetExtraSkillRsp_Retcode;
}

export enum MpSetExtraSkillRsp_CmdId {
  CMD_ID = 1645,
  UNRECOGNIZED = -1,
}

export enum MpSetExtraSkillRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_TEAM = 2,
  UNRECOGNIZED = -1,
}

export interface MpSkill {
  skillId: number;
  level: number;
}

export interface MpSkillPoint {
  type: MpSkillType;
  value: number;
}

export interface MpStageDamageInfo {
  hitDamage1: number;
  hitDamage2: number;
  hitDamage3: number;
}

export interface MpStageGetVoteInfoReq {
}

export enum MpStageGetVoteInfoReq_CmdId {
  CMD_ID = 1036,
  UNRECOGNIZED = -1,
}

export interface MpStageGetVoteInfoRsp {
  retcode: MpStageGetVoteInfoRsp_Retcode;
  voteInfoList: MpStageVoteInfo[];
  voteEndTime: number;
}

export enum MpStageGetVoteInfoRsp_CmdId {
  CMD_ID = 1037,
  UNRECOGNIZED = -1,
}

export enum MpStageGetVoteInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_TEAM = 2,
  NOT_IN_VOTING = 3,
  UNRECOGNIZED = -1,
}

export interface MpStageMemberVoteNotify {
  voteInfoList: MpStageVoteInfo[];
}

export enum MpStageMemberVoteNotify_CmdId {
  CMD_ID = 1038,
  UNRECOGNIZED = -1,
}

export interface MpStageMvpReward {
  extraCoin: number;
  extraAvatarExp: number;
  extraMpExp: number;
}

export interface MpStageRecord {
  stageId: number;
  beginTime: number;
  duration: number;
  memberList: MpRecordMember[];
}

export interface MpStageSettle {
  uid: number;
  score: number;
  damage: number;
  mvpScore: number;
}

export interface MpStageSettleNotify {
  teamId: number;
  settleList: MpStageSettle[];
}

export enum MpStageSettleNotify_CmdId {
  CMD_ID = 391,
  UNRECOGNIZED = -1,
}

export interface MpStageVoteCountDownNotify {
  countDownTime: number;
}

export enum MpStageVoteCountDownNotify_CmdId {
  CMD_ID = 1029,
  UNRECOGNIZED = -1,
}

export interface MpStageVoteInfo {
  uid: number;
  option: number;
}

export interface MpStageVoteReq {
  option: MpStageVoteOption;
}

export enum MpStageVoteReq_CmdId {
  CMD_ID = 1030,
  UNRECOGNIZED = -1,
}

export interface MpStageVoteResultNotify {
  option: number;
}

export enum MpStageVoteResultNotify_CmdId {
  CMD_ID = 1032,
  UNRECOGNIZED = -1,
}

export interface MpStageVoteRsp {
  retcode: MpStageVoteRsp_Retcode;
  option: MpStageVoteOption;
}

export enum MpStageVoteRsp_CmdId {
  CMD_ID = 1031,
  UNRECOGNIZED = -1,
}

export enum MpStageVoteRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_TEAM = 2,
  NOT_VOTING = 3,
  UNRECOGNIZED = -1,
}

export interface MpSyncActionFromPlayerNotify {
  action: MpAction;
}

export enum MpSyncActionFromPlayerNotify_CmdId {
  CMD_ID = 1579,
  UNRECOGNIZED = -1,
}

export interface MpSyncActionFromServerNotify {
  uid: number;
  action: MpAction;
}

export enum MpSyncActionFromServerNotify_CmdId {
  CMD_ID = 1580,
  UNRECOGNIZED = -1,
}

export interface MpTeamChangeLeaderReq {
  newLeaderUid: number;
}

export enum MpTeamChangeLeaderReq_CmdId {
  CMD_ID = 362,
  UNRECOGNIZED = -1,
}

export interface MpTeamChangeLeaderRsp {
  retcode: MpTeamChangeLeaderRsp_Retcode;
}

export enum MpTeamChangeLeaderRsp_CmdId {
  CMD_ID = 363,
  UNRECOGNIZED = -1,
}

export enum MpTeamChangeLeaderRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_TEAM = 2,
  NOT_LEADER = 3,
  NOT_ENOUGH_STAMINA = 4,
  NOT_ENOUGH_ENTER_TIMES = 5,
  NOT_ALLOW_CHANGE_LEADER = 6,
  UNRECOGNIZED = -1,
}

export interface MpTeamData {
  teamId: number;
  leaderUid: number;
  status: MpTeamStatus;
  lobbyStatus: LobbyStatus;
  memberList: MpTeamMember[];
  minLevel: number;
  lobbyEnterType: LobbyEnterType;
  stageId: number;
  teamName: string;
  teamDescription: string;
  maxLevel: number;
}

export interface MpTeamEnterLobbyReq {
  stageId: number;
  lobbyEnterType: LobbyEnterType;
  minLevel: number;
  teamName: string;
  teamDescription: string;
  isTeamNameDefault: boolean;
  maxLevel: number;
}

export enum MpTeamEnterLobbyReq_CmdId {
  CMD_ID = 356,
  UNRECOGNIZED = -1,
}

export interface MpTeamEnterLobbyRsp {
  retcode: MpTeamEnterLobbyRsp_Retcode;
  subRetcode: number;
  errorUid: number;
  stageId: number;
}

export enum MpTeamEnterLobbyRsp_CmdId {
  CMD_ID = 357,
  UNRECOGNIZED = -1,
}

export enum MpTeamEnterLobbyRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_TEAM = 2,
  MEMBER_EXCEED_MAX = 3,
  MEMBER_OFFLINE = 4,
  IN_ENTER_LOBBY = 5,
  ENTER_TIME_OUT = 6,
  STAGE_ERROR = 7,
  NOT_LEADER = 8,
  MEMBER_NOT_ENTER_TEAM_UI = 9,
  NO_AVAILABLE_AVATAR = 10,
  TEAM_NOT_SATIFY_RAID = 11,
  NOT_ALLOW_CROSS_REGION = 12,
  TEAM_NAME_ERROR = 13,
  DEFAULT_TEAM_NAME_ERROR = 14,
  UNRECOGNIZED = -1,
}

export interface MpTeamLeaveLobbyReq {
}

export enum MpTeamLeaveLobbyReq_CmdId {
  CMD_ID = 373,
  UNRECOGNIZED = -1,
}

export interface MpTeamLeaveLobbyRsp {
  retcode: MpTeamLeaveLobbyRsp_Retcode;
}

export enum MpTeamLeaveLobbyRsp_CmdId {
  CMD_ID = 374,
  UNRECOGNIZED = -1,
}

export enum MpTeamLeaveLobbyRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_LEADER = 2,
  NOT_IN_TEAM = 3,
  NOT_IN_LOBBY = 4,
  LEADER_IS_WILD = 5,
  UNRECOGNIZED = -1,
}

export interface MpTeamMember {
  index: number;
  uid: number;
  mpExp: number;
  stamina: number;
  skillList: MpSkill[];
  headAvatarId: number;
  dressId: number;
  punishEndTime: number;
  voiceId: number;
  memberInfo: MpTeamMemberInfo | undefined;
  status: LobbyMemberStatus;
  clientStatus: LobbyClientStatus;
  avatarTrialId: number;
  isWild: boolean;
  reclaimAvatarInfo: ReclaimMpAvatar | undefined;
  regionName: string;
  openworldBossInfo: OpenworldBossMp | undefined;
  frameId: number;
  enterType: number;
  customHeadId: number;
  newbieId: number;
  dataVersion: number;
  seasonId: number;
  seasonGroupId: number;
  seasonLevel: number;
  extraSkillId: number;
  scDlcAvatarInfo: ScDLCMpAvatar | undefined;
}

export interface MpTeamMemberInfo {
  detail: PlayerDetailData | undefined;
  card: PlayerCardData | undefined;
}

export interface MpTeamMemberSetVoiceIdReq {
  voiceId: number;
}

export enum MpTeamMemberSetVoiceIdReq_CmdId {
  CMD_ID = 396,
  UNRECOGNIZED = -1,
}

export interface MpTeamMemberSetVoiceIdRsp {
  retcode: MpTeamMemberSetVoiceIdRsp_Retcode;
  uid: number;
  voiceId: number;
}

export enum MpTeamMemberSetVoiceIdRsp_CmdId {
  CMD_ID = 397,
  UNRECOGNIZED = -1,
}

export enum MpTeamMemberSetVoiceIdRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_TEAM = 2,
  UNRECOGNIZED = -1,
}

export interface MpTeamSyncNotify {
  teamData: MpTeamData | undefined;
}

export enum MpTeamSyncNotify_CmdId {
  CMD_ID = 395,
  UNRECOGNIZED = -1,
}

export interface MpUpgradeSkillReq {
  skillId: number;
}

export enum MpUpgradeSkillReq_CmdId {
  CMD_ID = 342,
  UNRECOGNIZED = -1,
}

export interface MpUpgradeSkillRsp {
  retcode: MpUpgradeSkillRsp_Retcode;
  skillId: number;
}

export enum MpUpgradeSkillRsp_CmdId {
  CMD_ID = 343,
  UNRECOGNIZED = -1,
}

export enum MpUpgradeSkillRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  POINT_NOT_ENOUGH = 2,
  IS_MAX_LEVEL = 3,
  UNRECOGNIZED = -1,
}

export interface NewbieActivityChallenge {
  isTakeChallengeReward: boolean;
  hasFinishedStageList: number[];
  enterTimes: number;
}

export interface NewbieLevelRush {
  isPurchased: boolean;
  freeRewardMaxTakeLevel: number;
  purchaseRewardMaxTakeLevel: number;
}

export interface NewbieLevelRushPurchaseReq {
}

export enum NewbieLevelRushPurchaseReq_CmdId {
  CMD_ID = 5881,
  UNRECOGNIZED = -1,
}

export interface NewbieLevelRushPurchaseRsp {
  retcode: NewbieLevelRushPurchaseRsp_Retcode;
}

export enum NewbieLevelRushPurchaseRsp_CmdId {
  CMD_ID = 5882,
  UNRECOGNIZED = -1,
}

export enum NewbieLevelRushPurchaseRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  PURCHASED = 2,
  MCOIN_LACK = 3,
  UNRECOGNIZED = -1,
}

export interface NewbieLevelRushTakeRewardReq {
}

export enum NewbieLevelRushTakeRewardReq_CmdId {
  CMD_ID = 5883,
  UNRECOGNIZED = -1,
}

export interface NewbieLevelRushTakeRewardRsp {
  retcode: NewbieLevelRushTakeRewardRsp_Retcode;
  rewardList: RewardData[];
}

export enum NewbieLevelRushTakeRewardRsp_CmdId {
  CMD_ID = 5884,
  UNRECOGNIZED = -1,
}

export enum NewbieLevelRushTakeRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface NewbiePrivilegeInfo {
  endTime: number;
  hasTakeDailyReward: boolean;
  dailyFreeGachaTimes: number;
  buyTimes: number;
}

export interface NewClientMailNotify {
  type: ClientMailType;
}

export enum NewClientMailNotify_CmdId {
  CMD_ID = 3808,
  UNRECOGNIZED = -1,
}

export interface NicknameModifyReq {
  nickname: string;
}

export enum NicknameModifyReq_CmdId {
  CMD_ID = 20,
  UNRECOGNIZED = -1,
}

export interface NicknameModifyRsp {
  retcode: NicknameModifyRsp_Retcode;
  cdEndTime: number;
}

export enum NicknameModifyRsp_CmdId {
  CMD_ID = 21,
  UNRECOGNIZED = -1,
}

export enum NicknameModifyRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  FORMAT_ERROR = 2,
  SENSITIVE_WORDS = 3,
  IN_AUDIT = 4,
  IN_CD = 5,
  UNRECOGNIZED = -1,
}

export interface NinjaActivityData {
  ninjaId: number;
  beginTime: number;
  endTime: number;
  slotList: NinjaSlot[];
}

export interface NinjaActivityNotify {
  slotList: NinjaSlot[];
}

export enum NinjaActivityNotify_CmdId {
  CMD_ID = 4404,
  UNRECOGNIZED = -1,
}

export interface NinjaSlot {
  slotId: number;
  level: number;
  exp: number;
  choosedEffectId: number;
}

export interface NinjaSlotChooseEffectReq {
  slotId: number;
  effectId: number;
}

export enum NinjaSlotChooseEffectReq_CmdId {
  CMD_ID = 4405,
  UNRECOGNIZED = -1,
}

export interface NinjaSlotChooseEffectRsp {
  retcode: NinjaSlotChooseEffectRsp_Retcode;
  slot: NinjaSlot | undefined;
}

export enum NinjaSlotChooseEffectRsp_CmdId {
  CMD_ID = 4406,
  UNRECOGNIZED = -1,
}

export enum NinjaSlotChooseEffectRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LOCKED = 2,
  UNRECOGNIZED = -1,
}

export interface NinjaSlotStrengthenReq {
  slotId: number;
  materialId: number;
  costNum: number;
}

export enum NinjaSlotStrengthenReq_CmdId {
  CMD_ID = 4402,
  UNRECOGNIZED = -1,
}

export interface NinjaSlotStrengthenRsp {
  retcode: NinjaSlotStrengthenRsp_Retcode;
  slot: NinjaSlot | undefined;
}

export enum NinjaSlotStrengthenRsp_CmdId {
  CMD_ID = 4403,
  UNRECOGNIZED = -1,
}

export enum NinjaSlotStrengthenRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MATERIAL_NOT_ENOUGH = 2,
  LOCKED = 3,
  NOT_OPEN = 4,
  LEVEL_MAX = 5,
  UNRECOGNIZED = -1,
}

export interface ObjSelected {
  id: number;
}

export interface OfflineResource {
  resourceType: number;
  hasTakeBoxNum: number;
  availableBoxNum: number;
}

export interface OldEndlessPlayerSettle {
  uid: number;
  beginTime: number;
  endlessType: number;
  groupLevel: number;
}

export interface OpenArmadaStageReq {
  hardLevel: number;
}

export enum OpenArmadaStageReq_CmdId {
  CMD_ID = 2799,
  UNRECOGNIZED = -1,
}

export interface OpenArmadaStageRsp {
  retcode: OpenArmadaStageRsp_Retcode;
  hardLevel: number;
}

export enum OpenArmadaStageRsp_CmdId {
  CMD_ID = 2800,
  UNRECOGNIZED = -1,
}

export enum OpenArmadaStageRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  NOT_LEADER = 3,
  TIME_LIMIT = 4,
  BOSS_NOT_FOUND = 5,
  LEVEL_LOCK = 6,
  POPL_LACK = 7,
  HAS_OPEN = 8,
  NOT_FINISH = 9,
  UNRECOGNIZED = -1,
}

export interface OpenChatworldTreasureReq {
  chatworldId: number;
  treasureId: number;
  curTreasureScheduleId: number;
  isGsCheck: boolean;
}

export enum OpenChatworldTreasureReq_CmdId {
  CMD_ID = 2417,
  UNRECOGNIZED = -1,
}

export interface OpenChatworldTreasureRsp {
  retcode: OpenChatworldTreasureRsp_Retcode;
  chatworldId: number;
  treasureId: number;
  dropItemList: DropItem[];
  isTakeReward: boolean;
  curTreasureScheduleId: number;
  openUidList: number[];
}

export enum OpenChatworldTreasureRsp_CmdId {
  CMD_ID = 2418,
  UNRECOGNIZED = -1,
}

export enum OpenChatworldTreasureRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  OPEN_NUM_LIMIT = 2,
  MATERIAL_LACK = 3,
  HAS_OPEN = 4,
  HAS_TAKEN = 5,
  TREASURE_EXPIRE = 6,
  NOT_IN_CHATWORLD = 7,
  UNRECOGNIZED = -1,
}

export interface OpenWeekDayActivityReq {
  activityId: number;
}

export enum OpenWeekDayActivityReq_CmdId {
  CMD_ID = 534,
  UNRECOGNIZED = -1,
}

export interface OpenWeekDayActivityRsp {
  retcode: OpenWeekDayActivityRsp_Retcode;
}

export enum OpenWeekDayActivityRsp_CmdId {
  CMD_ID = 535,
  UNRECOGNIZED = -1,
}

export enum OpenWeekDayActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  IS_OPEN = 2,
  HAS_OPEN = 3,
  VALID_OPEN = 4,
  MATERIAL_LACK = 5,
  SCOIN_LACK = 6,
  UNRECOGNIZED = -1,
}

export interface OpenworldActivity {
  activityId: number;
  phaseId: number;
  activityLevel: number;
  activityExp: number;
  activityRewardTakenLevelList: number[];
  activityTreasureTakenList: number[];
}

export interface OpenworldBoss {
  bossId: number;
  leftHp: number;
  clueProgress: number;
  searchTime: number;
  battleTime: number;
  isTakeKillReward: boolean;
  locationIdx: number;
  bossKilledAvatarList: number[];
  mpLeftHp: number;
  minKillTime: number;
}

export interface OpenworldBossHunt {
  mapId: number;
  curBossId: number;
  bossList: OpenworldBoss[];
  lastChooseBossTime: number;
  haveTakeRatingRewardList: number[];
  isCallBoss: boolean;
  killedBossIdList: number[];
}

export interface OpenworldBossMp {
  bossId: number;
  leftHp: number;
  mpLeftHp: number;
  buffList: number[];
}

export interface OpenworldCook {
  cookId: number;
  eatNum: number;
}

export interface OpenworldEndlessBattle {
  battleId: number;
  trapList: OpenworldEndlessTrap[];
  sceneGear: number;
}

export interface OpenworldEndlessBattleBeginReq {
  battleId: number;
  groupLevel: number;
  monsterGroupId: number;
  layerNumber: number;
  transactionStr: string;
  type: EndlessType;
}

export enum OpenworldEndlessBattleBeginReq_CmdId {
  CMD_ID = 3438,
  UNRECOGNIZED = -1,
}

export interface OpenworldEndlessBattleBeginRsp {
  retcode: OpenworldEndlessBattleBeginRsp_Retcode;
}

export enum OpenworldEndlessBattleBeginRsp_CmdId {
  CMD_ID = 3439,
  UNRECOGNIZED = -1,
}

export enum OpenworldEndlessBattleBeginRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface OpenworldEndlessBattleEndReq {
  battleId: number;
  groupLevel: number;
  invasionId: number;
  invasionBuffNum: number;
  costTime: number;
  endStatus: StageEndStatus;
  avatarList: StageInnerAvatarData[];
  monsterGroupId: number;
  environmentId: number;
  layerNumber: number;
  transactionStr: string;
  monsterStr: string;
  elfList: StageInnerElfData[];
  type: EndlessType;
  quantumString: string;
  waveString: string;
  aoeString: string;
}

export enum OpenworldEndlessBattleEndReq_CmdId {
  CMD_ID = 3440,
  UNRECOGNIZED = -1,
}

export interface OpenworldEndlessBattleEndRsp {
  retcode: OpenworldEndlessBattleEndRsp_Retcode;
}

export enum OpenworldEndlessBattleEndRsp_CmdId {
  CMD_ID = 3441,
  UNRECOGNIZED = -1,
}

export enum OpenworldEndlessBattleEndRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface OpenworldEndlessChangeAvatarReq {
  avatarIdList: number[];
}

export enum OpenworldEndlessChangeAvatarReq_CmdId {
  CMD_ID = 3450,
  UNRECOGNIZED = -1,
}

export interface OpenworldEndlessChangeAvatarRsp {
  retcode: OpenworldEndlessChangeAvatarRsp_Retcode;
}

export enum OpenworldEndlessChangeAvatarRsp_CmdId {
  CMD_ID = 3451,
  UNRECOGNIZED = -1,
}

export enum OpenworldEndlessChangeAvatarRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_ERROR = 2,
  STAGE_ERROR = 3,
  UNRECOGNIZED = -1,
}

export interface OpenworldEndlessItem {
  itemId: number;
  num: number;
}

export interface OpenworldEndlessItemUpdateNotify {
  itemList: OpenworldEndlessItem[];
}

export enum OpenworldEndlessItemUpdateNotify_CmdId {
  CMD_ID = 3421,
  UNRECOGNIZED = -1,
}

export interface OpenworldEndlessMonsterGroup {
  groupId: number;
  progress: number;
  oldProgress: number;
}

export interface OpenworldEndlessPlayer {
  uid: number;
  score: number;
  scoreTime: number;
  invasionList: OpenworldEndlessPlayerInvasionData[];
  lastLineupInfo: LineupBriefInfo | undefined;
  effectItemList: OpenworldEndlessItem[];
  maxScore: number;
  rewardProgress: number;
  groupLevel: number;
  unfinishedMonsterMaxProgress: number;
  maxScoreLineupInfo: LineupBriefInfo | undefined;
  greedyMaxFinishFloor: number;
}

export interface OpenworldEndlessPlayerInvasionData {
  id: number;
  invaderId: number;
  activeTime: number;
  buffList: number[];
  subScore: number;
  battleId: number;
  invasionId: number;
}

export interface OpenworldEndlessPlayerUpdateNotify {
  playerData: OpenworldEndlessPlayer | undefined;
  briefData: PlayerFriendBriefData | undefined;
  type: EndlessType;
}

export enum OpenworldEndlessPlayerUpdateNotify_CmdId {
  CMD_ID = 3445,
  UNRECOGNIZED = -1,
}

export interface OpenworldEndlessReprotBattle {
  battleId: number;
  sceneGear: number;
}

export interface OpenworldEndlessReprotInvasion {
  id: number;
  battleId: number;
}

export interface OpenworldEndlessTrap {
  itemId: number;
  battleId: number;
  uniqueId: number;
  setUid: number;
}

export interface OpenworldEndlessWarInfo {
  uid: number;
  type: OpenworldEndlessWarInfo_Type;
  itemId: number;
  battleId: number;
  targetId: number;
  fromWho: number;
  invasionId: number;
  score: number;
  sceneGear: number;
  time: number;
}

export enum OpenworldEndlessWarInfo_Type {
  NONE = 0,
  SET_TRAP = 1,
  TRIGGER_TRAP = 2,
  SCENE_GEAR = 3,
  INVASION = 4,
  INVASION_SUB_SCORE = 5,
  FINISH_INVASION = 6,
  UNRECOGNIZED = -1,
}

export interface OpenworldEndlessWarInfoNotify {
  warInfo: OpenworldEndlessWarInfo | undefined;
}

export enum OpenworldEndlessWarInfoNotify_CmdId {
  CMD_ID = 3442,
  UNRECOGNIZED = -1,
}

export interface OpenworldEvent {
  eventId: number;
  dropItemList: DropItem[];
}

export interface OpenworldInvasionItem {
  invasionId: number;
  avatarList: number[];
  buffList: number[];
}

export interface OpenworldMapBriefData {
  mapId: number;
  status: number;
  statList: OpenworldStat[];
  cycle: number;
  questLevel: number;
  hasTakeFinishRewardCycle: number;
}

export interface OpenworldOverView {
  missionId: number;
  progress: number;
}

export interface OpenworldQuest {
  id: number;
  status: OpenworldQuestStatus;
  buffId: number;
  debuffId: number;
  position: number;
  finishChallengeList: number[];
  progress: number;
  rarityRewardId: number;
  questActivityId: number;
  specialTimeoutSec: number;
}

export interface OpenworldQuestData {
  level: number;
  star: number;
  isOpen: boolean;
  dayOpenTimes: number;
  questList: OpenworldQuest[];
  refreshLeftTimes: number;
  nextRefreshCost: number;
  keyQuest: OpenworldQuest | undefined;
  maxQuestLevel: number;
  isCanAbandon: boolean;
  challengeScore: number;
  finishKeyQuestList: number[];
  isQuestFinish: boolean;
  openQuestTime: number;
}

export interface OpenworldStageArea {
  areaId: number;
  avatarList: number[];
  weaponUidList: number[];
  stigmataUidList: number[];
}

export interface OpenworldStageAvatarInfo {
  avatarId: number;
  hpPercent: number;
  spPercent: number;
  reviveTime: number;
  lastHpRecoverTime: number;
}

export interface OpenworldStageInner {
  conditionType: number;
  conditionValue: number;
}

export interface OpenworldStat {
  id: number;
  maxNum: number;
  finishNum: number;
}

export interface OpenworldStory {
  storyId: number;
  storyProgress: number;
  acceptTime: number;
}

export interface OpenworldTalent {
  talentId: number;
  level: number;
}

export interface OpenworldTechData {
  mapId: number;
  level: number;
  exp: number;
  nextCollectTime: number;
  skillPoint: number;
  unlockSkillList: number[];
}

export interface OptionalBuffActivity {
  buffList: number[];
}

export interface OptionalBuffActivityChooseBuffReq {
  activityId: number;
  buffList: number[];
}

export enum OptionalBuffActivityChooseBuffReq_CmdId {
  CMD_ID = 4050,
  UNRECOGNIZED = -1,
}

export interface OptionalBuffActivityChooseBuffRsp {
  retcode: OptionalBuffActivityChooseBuffRsp_Retcode;
}

export enum OptionalBuffActivityChooseBuffRsp_CmdId {
  CMD_ID = 4051,
  UNRECOGNIZED = -1,
}

export enum OptionalBuffActivityChooseBuffRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  INVALID_BUFF = 2,
  BUFF_LOCKED = 3,
  UNRECOGNIZED = -1,
}

export interface OverlapActivityData {
  activityId: number;
  gridList: OverlapGrid[];
  hasTakeRewardIdList: number[];
  overlapId: number;
}

export interface OverlapActivityMoveReq {
  activityId: number;
  fromGridId: number;
  toGridId: number;
}

export enum OverlapActivityMoveReq_CmdId {
  CMD_ID = 4221,
  UNRECOGNIZED = -1,
}

export interface OverlapActivityMoveRsp {
  retcode: OverlapActivityMoveRsp_Retcode;
  activityId: number;
  fromGrid: OverlapGrid | undefined;
  toGrid: OverlapGrid | undefined;
}

export enum OverlapActivityMoveRsp_CmdId {
  CMD_ID = 4222,
  UNRECOGNIZED = -1,
}

export enum OverlapActivityMoveRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface OverlapActivitySummonReq {
  activityId: number;
}

export enum OverlapActivitySummonReq_CmdId {
  CMD_ID = 4219,
  UNRECOGNIZED = -1,
}

export interface OverlapActivitySummonRsp {
  retcode: OverlapActivitySummonRsp_Retcode;
  activityId: number;
  grid: OverlapGrid | undefined;
  rewardData: RewardData | undefined;
}

export enum OverlapActivitySummonRsp_CmdId {
  CMD_ID = 4220,
  UNRECOGNIZED = -1,
}

export enum OverlapActivitySummonRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MATERIAL_NOT_ENOUGH = 2,
  NOT_OPEN = 3,
  FULL = 4,
  UNRECOGNIZED = -1,
}

export interface OverlapGrid {
  id: number;
  summonId: number;
}

export interface PhonePendant {
  id: number;
  endTime: number;
}

export interface PhonePendantOpReq {
  op: PhonePendantOpType;
  onId: number;
  offId: number;
}

export enum PhonePendantOpReq_CmdId {
  CMD_ID = 1199,
  UNRECOGNIZED = -1,
}

export interface PhonePendantOpRsp {
  retcode: PhonePendantOpRsp_Retcode;
  op: PhonePendantOpType;
  onId: number;
  offId: number;
}

export enum PhonePendantOpRsp_CmdId {
  CMD_ID = 1200,
  UNRECOGNIZED = -1,
}

export enum PhonePendantOpRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_OWN = 2,
  EXPIRED = 3,
  OFF_ID_ERROR = 4,
  UNRECOGNIZED = -1,
}

export interface PictureActivityChooseReq {
  activityId: number;
  stepId: number;
  choiceId: number;
}

export enum PictureActivityChooseReq_CmdId {
  CMD_ID = 4268,
  UNRECOGNIZED = -1,
}

export interface PictureActivityChooseRsp {
  retcode: PictureActivityChooseRsp_Retcode;
  reward: RewardData | undefined;
  step: PictureStep | undefined;
}

export enum PictureActivityChooseRsp_CmdId {
  CMD_ID = 4269,
  UNRECOGNIZED = -1,
}

export enum PictureActivityChooseRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  HAS_CHOOSE = 3,
  SCORE_LACK = 4,
  PRE_NOT_CHOOSE = 5,
  UNRECOGNIZED = -1,
}

export interface PictureActivityShareReq {
  activityId: number;
  isTakeReward: boolean;
}

export enum PictureActivityShareReq_CmdId {
  CMD_ID = 4270,
  UNRECOGNIZED = -1,
}

export interface PictureActivityShareRsp {
  retcode: PictureActivityShareRsp_Retcode;
  reward: RewardData | undefined;
}

export enum PictureActivityShareRsp_CmdId {
  CMD_ID = 4271,
  UNRECOGNIZED = -1,
}

export enum PictureActivityShareRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  HAS_TAKE = 3,
  NOT_SHARE = 4,
  NOT_FINISH = 5,
  UNRECOGNIZED = -1,
}

export interface PictureStep {
  stepId: number;
  choiceId: number;
}

export interface PlayerAdventureData {
  adventureGroupLevel: number;
  adventureAvatarList: AdventureAvatar[];
}

export interface PlayerCardAvatarData {
  index: number;
  avatar: AvatarDetailData | undefined;
}

export interface PlayerCardData {
  uid: number;
  avatarList: PlayerCardAvatarData[];
  medalList: PlayerCardMedalData[];
  msgData: PlayerCardMsgData | undefined;
  islandLikeNum: number;
  onPhonePendantId: number;
  elfList: PlayerCardElfData[];
}

export interface PlayerCardDataChangeNotify {
  uid: number;
  msgConfig: number;
  medal: PlayerCardMedalData | undefined;
  avatar: PlayerCardAvatarData | undefined;
}

export enum PlayerCardDataChangeNotify_CmdId {
  CMD_ID = 492,
  UNRECOGNIZED = -1,
}

export interface PlayerCardElfData {
  index: number;
  elf: ElfDetailData | undefined;
}

export interface PlayerCardMedalData {
  index: number;
  medalId: number;
  extraParam: number;
}

export interface PlayerCardMsg {
  index: number;
  msg: ChatMsg | undefined;
}

export interface PlayerCardMsgData {
  msgIndex: number;
  msgConfig: number;
  msgList: PlayerCardMsg[];
}

export interface PlayerCardSlot {
  index: number;
  targetId: number;
}

export interface PlayerDetailData {
  uid: number;
  nickname: string;
  level: number;
  leaderAvatar: AvatarDetailData | undefined;
  selfDesc: string;
  armadaId: number;
  armadaName: string;
  mpLevel: number;
  onMedalId: number;
  isNewbie: boolean;
  isGoback: boolean;
  mpLikeNum: number;
  grandKeyList: GrandKey[];
  leaderElf: ElfDetailData | undefined;
  customHeadId: number;
  frameId: number;
  adventure: PlayerAdventureData | undefined;
  backupAvatarList: AvatarDetailData[];
  onMedal: Medal | undefined;
  isAllowVisit: boolean;
  visitAvatar: number;
  beLikedNum: number;
  showHouse: number;
  comfortValue: number;
  houseLevel: number;
  houseName: string;
  totalWikiScore: number;
  totalAchievementNumGet: number;
  totalAchievementNum: number;
  chatForbidFinishTime: number;
  masterUid: number;
  masterPupilTag: MasterPupilType;
  seasonId: number;
  seasonGroupId: number;
  seasonLevel: number;
  isLogoff: boolean;
}

export interface PlayerFriendBriefData {
  uid: number;
  nickname: string;
  level: number;
  avatarId: number;
  avatarStar: number;
  avatarCombat: number;
  avatarLevel: number;
  mainSubSkillList: AvatarSubSkillDetailData[];
  lastLoginTime: number;
  dressId: number;
  armadaId: number;
  armadaName: string;
  bond: number;
  onMedalId: number;
  onMedal: Medal | undefined;
  frameId: number;
  mpLevel: number;
  customHeadId: number;
  isAllowVisit: boolean;
  visitAvatar: number;
  beLikedNum: number;
  showHouse: number;
  comfortValue: number;
  houseLevel: number;
  houseName: string;
  isGoback: boolean;
  avatarSubStar: number;
  lastLogoutTime: number;
  onlineStatus: number;
  seasonId: number;
  seasonGroupId: number;
  seasonLevel: number;
  isLogoff: boolean;
}

export interface PlayerLevelUpNotify {
  oldLevel: number;
  newLevel: number;
  rewardData: RewardData | undefined;
}

export enum PlayerLevelUpNotify_CmdId {
  CMD_ID = 976,
  UNRECOGNIZED = -1,
}

export interface PlayerLoginReq {
  lastServerPacketId: number;
  cps: string;
  checkSum: string;
  deviceUuid: string;
  androidSignatures: string;
  language: string;
  advertiserId: string;
  securityCmdReply: Buffer;
  lastLoginVersion: number;
  accountType: number;
  accountUid: string;
  deviceType: DeviceType;
  userType: number;
  userIp: string;
  tag: number;
  clientVersion: string;
  clientDevice: string;
  systemInfo: string;
  androidSign: string;
  limitLevel: number;
  blackListEndTime: number;
  isBindAccess: boolean;
  loginSessionToken: number;
  hoyolabAccountUid: string;
  userPort: number;
}

export enum PlayerLoginReq_CmdId {
  CMD_ID = 6,
  UNRECOGNIZED = -1,
}

export interface PlayerLoginRsp {
  retcode: PlayerLoginRsp_Retcode;
  msg: string;
  isFirstLogin: boolean;
  lastClientPacketId: number;
  regionName: string;
  cgType: CGType;
  lastLogoutTime: number;
  regionId: number;
  isValidReconnect: boolean;
  accountType: number;
  accountUid: string;
  loginSessionToken: number;
}

export enum PlayerLoginRsp_CmdId {
  CMD_ID = 7,
  UNRECOGNIZED = -1,
}

export enum PlayerLoginRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  REPEAT_LOGIN = 2,
  IN_BLACK_LIST = 3,
  WAIT_STOP_ANOTHER_LOGIN = 4,
  ANTI_ADDICT_LOGIN = 5,
  SQUEEZE_CD = 6,
  UNRECOGNIZED = -1,
}

export interface PlayerLogoutReq {
  isKick: boolean;
}

export enum PlayerLogoutReq_CmdId {
  CMD_ID = 8,
  UNRECOGNIZED = -1,
}

export interface PlayerMatrixShop {
  shopId: number;
  goodsList: PlayerMatrixShop_MatrixGoods[];
}

export interface PlayerMatrixShop_MatrixGoods {
  id: number;
  num: number;
  isSold: boolean;
}

export interface PlayerOnlineStatusInfo {
  uid: number;
  onlineStatus: number;
  lastLoginTime: number;
  lastLogoutTime: number;
}

export interface PlayerRoomStatus {
  roomMode: RoomMode;
  roomId: number;
}

export interface PlayerSkill {
  entityId: number;
  skillId: number;
}

export interface PostWareHouseDemandReq {
  demandId: number;
}

export enum PostWareHouseDemandReq_CmdId {
  CMD_ID = 2649,
  UNRECOGNIZED = -1,
}

export interface PostWareHouseDemandRsp {
  retcode: PostWareHouseDemandRsp_Retcode;
  demandId: number;
}

export enum PostWareHouseDemandRsp_CmdId {
  CMD_ID = 2650,
  UNRECOGNIZED = -1,
}

export enum PostWareHouseDemandRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  STATUS_ERROR = 3,
  SCOIN_LACK = 4,
  ITEM_LACK = 5,
  LEVEL_LACK = 6,
  NOT_VALID = 7,
  UNRECOGNIZED = -1,
}

export interface PrayGachaData {
  ticketHcoinCost: number;
  ticketMaterialId: number;
  costMaterialId: number;
  costMaterialNum: number;
  maxGachaTimes: number;
  gachaTimes: number;
  isFinished: boolean;
  protectItemList: GachaItem[];
  poolItemList: PrayGachaItemData[];
  gachaId: number;
  prayValuePerGacha: number;
}

export interface PrayGachaItemData {
  id: number;
  totalNum: number;
  gachaNum: number;
}

export interface PrivateChatParam {
  relationType: ChatRelationType;
}

export interface PrivilegeInfo {
  privilegeId: number;
  expireTime: number;
  rightInfoList: PrivilegeRightInfo[];
}

export interface PrivilegeRightInfo {
  rightId: number;
  type: number;
  totalUsedTimes: number;
  maxUseTimes: number;
  useTimes: number;
  nextAutoRefreshTime: number;
}

export interface Product {
  name: string;
  desc: string;
  type: ProductType;
  payHcoin: number;
  freeHcoin: number;
  price: number;
  leftBuyTimes: number;
  cardDailyHcoin: number;
  cardLeftDays: number;
  isForbidByItunesSmallOrder: boolean;
  boxRewardList: RewardData[];
  isItunesBoxSubscription: boolean;
  cardActivityDailyHcoin: number;
  isAddHcoin: boolean;
  endTime: number;
  sortPriority: number;
  isShowPic: boolean;
  picPath: string;
  detail: string;
  id: number;
  mcoin: number;
  productGoodsId: number;
  priceTier: string;
}

export interface PromoteStigmataRuneReq {
  uniqueId: number;
}

export enum PromoteStigmataRuneReq_CmdId {
  CMD_ID = 332,
  UNRECOGNIZED = -1,
}

export interface PromoteStigmataRuneRsp {
  retcode: PromoteStigmataRuneRsp_Retcode;
  waitSelectStgimataList: number[];
}

export enum PromoteStigmataRuneRsp_CmdId {
  CMD_ID = 333,
  UNRECOGNIZED = -1,
}

export enum PromoteStigmataRuneRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  STIGMATA_NOT_EXIST = 2,
  MATERIAL_LACK = 3,
  STIGMATA_NOT_IDENTIFY = 4,
  CAN_NOT_PROMOTE = 5,
  TIMES_LIMIT = 6,
  LEVEL_LACK = 7,
  TOO_MANY_WAIT_RUNE = 8,
  UNRECOGNIZED = -1,
}

export interface ProtectEntry {
  possibleItemList: DropItem[];
  totalTimes: number;
  dropTimes: number;
}

export interface PublishGratuityStageReq {
  stageUniqueId: number;
  targetUid: number;
  relationTag: number;
}

export enum PublishGratuityStageReq_CmdId {
  CMD_ID = 4114,
  UNRECOGNIZED = -1,
}

export interface PublishGratuityStageRsp {
  retcode: PublishGratuityStageRsp_Retcode;
  targetUid: number;
  stageUniqueId: number;
  relationTag: number;
}

export enum PublishGratuityStageRsp_CmdId {
  CMD_ID = 4115,
  UNRECOGNIZED = -1,
}

export enum PublishGratuityStageRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_ACCEPTOR = 2,
  UNRECOGNIZED = -1,
}

export interface PupilDetailData {
  uid: number;
  nickname: string;
  status: MasterPupilStatus;
}

export interface PupilFinishExamMissionMsg {
  uid: number;
  nickname: string;
  mission: MasterPupilMission | undefined;
}

export interface PupilMainData {
  stepList: PupilStep[];
  lastDismissTime: number;
  pupilId: number;
  nickname: string;
  curStepId: number;
  leftAssistantTimes: number;
  leftFrozenTime: number;
  masterBrief: PlayerFriendBriefData | undefined;
  poolFameNum: number;
  isGraduated: boolean;
}

export interface PupilStep {
  stepId: number;
  masterId: number;
  star: number;
  comment: string;
  level: number;
  poolReward: MasterPoolData | undefined;
  examMissionIdList: number[];
}

export interface PushClientMsgNotify {
  platformList: string[];
  uidList: string[];
  tagList: string[];
  tagAndList: string[];
  tagNotList: string[];
  content: string;
}

export enum PushClientMsgNotify_CmdId {
  CMD_ID = 801,
  UNRECOGNIZED = -1,
}

export interface PushTowerActivityInfo {
  enterTimes: number;
  stageRewardTakenList: number[];
  isClearRewardTaken: boolean;
  growBuffLevel: number;
}

export interface PushTowerActivityTakeClearRewardReq {
  activityId: number;
}

export enum PushTowerActivityTakeClearRewardReq_CmdId {
  CMD_ID = 4011,
  UNRECOGNIZED = -1,
}

export interface PushTowerActivityTakeClearRewardRsp {
  retcode: PushTowerActivityTakeClearRewardRsp_Retcode;
  activityId: number;
  rewardDataList: RewardData[];
}

export enum PushTowerActivityTakeClearRewardRsp_CmdId {
  CMD_ID = 4012,
  UNRECOGNIZED = -1,
}

export enum PushTowerActivityTakeClearRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKE_CAMPAIGN_REWARD = 2,
  UNRECOGNIZED = -1,
}

export interface PushTowerActivityTakeStageRewardReq {
  activityId: number;
  stageConfigId: number;
}

export enum PushTowerActivityTakeStageRewardReq_CmdId {
  CMD_ID = 4009,
  UNRECOGNIZED = -1,
}

export interface PushTowerActivityTakeStageRewardRsp {
  retcode: PushTowerActivityTakeStageRewardRsp_Retcode;
  activityId: number;
  stageConfigId: number;
  rewardDataList: RewardData[];
}

export enum PushTowerActivityTakeStageRewardRsp_CmdId {
  CMD_ID = 4010,
  UNRECOGNIZED = -1,
}

export enum PushTowerActivityTakeStageRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface PvzActivity {
  activityId: number;
  unlockedQavatarList: PvzQAvatar[];
  siteInfoList: PvzSiteInfo[];
  challengeMaxFinishWave: number;
}

export interface PvzBattleBeginReq {
  activityId: number;
  towerId: number;
  floorId: number;
  qavatarIdList: number[];
}

export enum PvzBattleBeginReq_CmdId {
  CMD_ID = 6552,
  UNRECOGNIZED = -1,
}

export interface PvzBattleBeginRsp {
  retcode: PvzBattleBeginRsp_Retcode;
  activityId: number;
  towerId: number;
  floorId: number;
  qavatarList: PvzQAvatar[];
  gameType: number;
}

export enum PvzBattleBeginRsp_CmdId {
  CMD_ID = 6553,
  UNRECOGNIZED = -1,
}

export enum PvzBattleBeginRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  QAVATAR_ERROR = 2,
  INVALID_TILE = 3,
  RPG_SITE_CANNOT_ENTER = 4,
  LACK_TICKET = 5,
  TILE_SITE_MISMATCH = 6,
  UNRECOGNIZED = -1,
}

export interface PvzBattleEndReq {
  activityId: number;
  endStatus: PvzBattleEndStatus;
  finishWave: number;
  towerId: number;
  floorId: number;
  costTime: number;
  leftHp: number;
  usedCoinNum: number;
}

export enum PvzBattleEndReq_CmdId {
  CMD_ID = 6554,
  UNRECOGNIZED = -1,
}

export interface PvzBattleEndRsp {
  retcode: PvzBattleEndRsp_Retcode;
  activityId: number;
  towerId: number;
  floorId: number;
  endStatus: PvzBattleEndStatus;
  finishWave: number;
  maxFinishWave: number;
  rewardData: RewardData | undefined;
  qavatarList: PvzQAvatar[];
  siteId: number;
  costTime: number;
  leftHp: number;
  usedCoinNum: number;
}

export enum PvzBattleEndRsp_CmdId {
  CMD_ID = 6555,
  UNRECOGNIZED = -1,
}

export enum PvzBattleEndRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  BATTLE_MISMATCH = 2,
  INVALID_TILE = 3,
  RPG_SITE_CANNOT_ENTER = 4,
  LACK_TICKET = 5,
  TILE_SITE_MISMATCH = 6,
  END_STATUS_INVALID = 7,
  UNRECOGNIZED = -1,
}

export interface PvzGetActivityReq {
  activityId: number;
}

export enum PvzGetActivityReq_CmdId {
  CMD_ID = 6550,
  UNRECOGNIZED = -1,
}

export interface PvzGetActivityRsp {
  retcode: PvzGetActivityRsp_Retcode;
  pvzActivity: PvzActivity | undefined;
}

export enum PvzGetActivityRsp_CmdId {
  CMD_ID = 6551,
  UNRECOGNIZED = -1,
}

export enum PvzGetActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface PvzQAvatar {
  qavatarId: number;
  level: number;
  isSpecialMaterialUnlocked: boolean;
}

export interface PvzQAvatarLevelUpReq {
  activityId: number;
  qavatarId: number;
  targetLevel: number;
}

export enum PvzQAvatarLevelUpReq_CmdId {
  CMD_ID = 6556,
  UNRECOGNIZED = -1,
}

export interface PvzQAvatarLevelUpRsp {
  retcode: PvzQAvatarLevelUpRsp_Retcode;
  activityId: number;
  qavatarId: number;
  targetLevel: number;
}

export enum PvzQAvatarLevelUpRsp_CmdId {
  CMD_ID = 6557,
  UNRECOGNIZED = -1,
}

export enum PvzQAvatarLevelUpRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MATERIAL_LACK = 2,
  TARGET_LEVEL_ERROR = 3,
  QAVATAR_NOT_FOUND = 4,
  UNRECOGNIZED = -1,
}

export interface PvzSiteDropMaterial {
  materialId: number;
  hasDropNum: number;
}

export interface PvzSiteInfo {
  siteId: number;
  towerId: number;
  siteType: PvzSiteType;
  hasDropMaterialList: PvzSiteDropMaterial[];
}

export interface QAvatarBattleBeginNotify {
  taleId: number;
  siteId: number;
  fightserverIp: number;
  fightserverPort: number;
  chatworldId: number;
  sceneId: number;
  lobbyId: number;
  battleId: number;
  battleStartTime: number;
  memberList: QAvatarBattleMember[];
}

export enum QAvatarBattleBeginNotify_CmdId {
  CMD_ID = 5550,
  UNRECOGNIZED = -1,
}

export interface QAvatarBattleBuff {
  buffId: number;
  buffType: QAvatarBuffType;
  expireTimeMsU64: number;
  num: number;
}

export interface QAvatarBattleBuffComponent {
  buffList: QAvatarBattleBuff[];
}

export interface QAvatarBattleComponentOpNotify {
  triggerEntityId: number;
  componentType: number;
  opType: QAvatarBattleComponentOpNotify_ComponentOpType;
}

export enum QAvatarBattleComponentOpNotify_CmdId {
  CMD_ID = 5611,
  UNRECOGNIZED = -1,
}

export enum QAvatarBattleComponentOpNotify_ComponentOpType {
  COMPONENT_OP_NONE = 0,
  COMPONENT_OP_ADD = 1,
  COMPONENT_OP_DEL = 2,
  UNRECOGNIZED = -1,
}

export interface QAvatarBattleComponentSet {
  positionComponent: QAvatarBattlePositionComponent | undefined;
  speedComponent: QAvatarBattleSpeedComponent | undefined;
  skillComponent: QAvatarBattleSkillComponent | undefined;
  evadeComponent: QAvatarBattleEvadeComponent | undefined;
  buffComponent: QAvatarBattleBuffComponent | undefined;
}

export interface QAvatarBattleDataNotify {
  updateEntityList: QAvatarBattleEntity[];
  curTimeMsU64: number;
  deleteEntityList: QAvatarBattleDeleteEntity[];
  isAll: boolean;
}

export enum QAvatarBattleDataNotify_CmdId {
  CMD_ID = 5600,
  UNRECOGNIZED = -1,
}

export interface QAvatarBattleDeleteEntity {
  deleteReason: QAvatarBattleEntityDeleteReasonType;
  entityId: number;
}

export interface QAvatarBattleDiscardStigmataReq {
  stigmataId: number;
}

export enum QAvatarBattleDiscardStigmataReq_CmdId {
  CMD_ID = 5612,
  UNRECOGNIZED = -1,
}

export interface QAvatarBattleDiscardStigmataRsp {
  retcode: QAvatarBattleDiscardStigmataRsp_Retcode;
  stigmataId: number;
}

export enum QAvatarBattleDiscardStigmataRsp_CmdId {
  CMD_ID = 5613,
  UNRECOGNIZED = -1,
}

export enum QAvatarBattleDiscardStigmataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface QAvatarBattleEndBattleNotify {
  endReason: QAvatarBattleEndReason;
  isWin: boolean;
  isMvp: boolean;
  fightInfoList: QAvatarBattleFightInfo[];
}

export enum QAvatarBattleEndBattleNotify_CmdId {
  CMD_ID = 5630,
  UNRECOGNIZED = -1,
}

export interface QAvatarBattleEndSkillNotify {
  srcEntityId: number;
  skillType: number;
  skillId: number;
}

export enum QAvatarBattleEndSkillNotify_CmdId {
  CMD_ID = 5609,
  UNRECOGNIZED = -1,
}

export interface QAvatarBattleEndSkillReq {
  skillType: number;
  rotationX: number;
  rotationY: number;
  dstPositionX: number;
  dstPositionY: number;
}

export enum QAvatarBattleEndSkillReq_CmdId {
  CMD_ID = 5607,
  UNRECOGNIZED = -1,
}

export interface QAvatarBattleEndSkillRsp {
  retcode: QAvatarBattleEndSkillRsp_Retcode;
  skillType: number;
  skillId: number;
}

export enum QAvatarBattleEndSkillRsp_CmdId {
  CMD_ID = 5608,
  UNRECOGNIZED = -1,
}

export enum QAvatarBattleEndSkillRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface QAvatarBattleEnterBattleReq {
}

export enum QAvatarBattleEnterBattleReq_CmdId {
  CMD_ID = 5601,
  UNRECOGNIZED = -1,
}

export interface QAvatarBattleEnterBattleRsp {
  retcode: QAvatarBattleEnterBattleRsp_Retcode;
}

export enum QAvatarBattleEnterBattleRsp_CmdId {
  CMD_ID = 5602,
  UNRECOGNIZED = -1,
}

export enum QAvatarBattleEnterBattleRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  BATTLE_NOT_EXIST = 2,
  UNRECOGNIZED = -1,
}

export interface QAvatarBattleEntity {
  entityId: number;
  type: QAvatarBattleEntityType;
  entityNameId: number;
  entityExpireTimeMsU64: number;
  componentSet: QAvatarBattleComponentSet | undefined;
  fightInfo: QAvatarBattleFightInfo | undefined;
  ownerId: number;
}

export interface QAvatarBattleEvadeComponent {
  speedX: number;
  speedY: number;
  expireTimeMsU64: number;
}

export interface QAvatarBattleFightInfo {
  uid: number;
  killNum: number;
  deadNum: number;
  rank: number;
  isMvp: boolean;
  isWin: boolean;
  maxHp: number;
  curHp: number;
  rebornTimeMsU64: number;
  maxSp: number;
  curSp: number;
}

export interface QAvatarBattleGetDataNotify {
}

export enum QAvatarBattleGetDataNotify_CmdId {
  CMD_ID = 5614,
  UNRECOGNIZED = -1,
}

export interface QAvatarBattleGetLobbyInfoReq {
  taleId: number;
  lobbyId: number;
}

export enum QAvatarBattleGetLobbyInfoReq_CmdId {
  CMD_ID = 5552,
  UNRECOGNIZED = -1,
}

export interface QAvatarBattleGetLobbyInfoRsp {
  retcode: QAvatarBattleGetLobbyInfoRsp_Retcode;
  taleId: number;
  lobbyId: number;
  lobbyStatus: number;
  fightserverIp: number;
  fightserverPort: number;
  battleId: number;
  memberList: QAvatarBattleMember[];
}

export enum QAvatarBattleGetLobbyInfoRsp_CmdId {
  CMD_ID = 5553,
  UNRECOGNIZED = -1,
}

export enum QAvatarBattleGetLobbyInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_EXIST = 2,
  UNRECOGNIZED = -1,
}

export interface QAvatarBattleKillNotify {
  killerUid: number;
  killedUid: number;
  killerStreakNum: number;
  battleTotalKillNum: number;
}

export enum QAvatarBattleKillNotify_CmdId {
  CMD_ID = 5621,
  UNRECOGNIZED = -1,
}

export interface QAvatarBattleMember {
  uid: number;
  regionName: string;
  nickname: string;
  level: number;
  frameId: number;
  customHeadId: number;
  division: number;
  eloScore: number;
  chooseVirtualAvatar: VirtualAvatar | undefined;
  campId: number;
}

export interface QAvatarBattleMoveNotify {
  speedX: number;
  speedY: number;
  rotationX: number;
  rotationY: number;
}

export enum QAvatarBattleMoveNotify_CmdId {
  CMD_ID = 5603,
  UNRECOGNIZED = -1,
}

export interface QAvatarBattlePositionComponent {
  x: number;
  y: number;
  rotationX: number;
  rotationY: number;
}

export interface QAvatarBattleRefreshGadget {
  gadgetId: number;
  spawnPointId: number;
}

export interface QAvatarBattleRefreshGadgetForecastNotify {
  refreshId: number;
  refreshTimeMsU64: number;
  spawnPointIdList: number[];
}

export enum QAvatarBattleRefreshGadgetForecastNotify_CmdId {
  CMD_ID = 5622,
  UNRECOGNIZED = -1,
}

export interface QAvatarBattleRefreshGadgetGenerateNotify {
  refreshId: number;
  refreshGadgetList: QAvatarBattleRefreshGadget[];
}

export enum QAvatarBattleRefreshGadgetGenerateNotify_CmdId {
  CMD_ID = 5623,
  UNRECOGNIZED = -1,
}

export interface QAvatarBattleSettleNotify {
  endReason: QAvatarBattleEndReason;
  taleId: number;
  siteId: number;
  lobbyId: number;
  battleStartTime: number;
  previousScore: number;
  curScore: number;
  fightInfoList: QAvatarBattleFightInfo[];
  getMaterialList: Material[];
  memberList: QAvatarBattleMember[];
}

export enum QAvatarBattleSettleNotify_CmdId {
  CMD_ID = 5551,
  UNRECOGNIZED = -1,
}

export interface QAvatarBattleSkillComponent {
  skillInfoList: QAvatarBattleSkillInfo[];
}

export interface QAvatarBattleSkillInfo {
  skillId: number;
  skillType: number;
  btnHoldupTimeMsU64: number;
  comboNum: number;
  maxBulletNum: number;
  curBulletNum: number;
  maxChargeNum: number;
  curChargeNum: number;
  skillCdMsU64: number;
}

export interface QAvatarBattleSkillTriggerNotify {
  triggerEntityId: number;
  triggerEntity: QAvatarBattleEntity | undefined;
  skillInfo: QAvatarBattleSkillInfo | undefined;
}

export enum QAvatarBattleSkillTriggerNotify_CmdId {
  CMD_ID = 5610,
  UNRECOGNIZED = -1,
}

export interface QAvatarBattleSpeedComponent {
  speedX: number;
  speedY: number;
}

export interface QAvatarBattleStartSkillNotify {
  srcEntityId: number;
  skillType: number;
  skillId: number;
}

export enum QAvatarBattleStartSkillNotify_CmdId {
  CMD_ID = 5606,
  UNRECOGNIZED = -1,
}

export interface QAvatarBattleStartSkillReq {
  skillType: number;
  rotationX: number;
  rotationY: number;
}

export enum QAvatarBattleStartSkillReq_CmdId {
  CMD_ID = 5604,
  UNRECOGNIZED = -1,
}

export interface QAvatarBattleStartSkillRsp {
  retcode: QAvatarBattleStartSkillRsp_Retcode;
  skillType: number;
  skillId: number;
}

export enum QAvatarBattleStartSkillRsp_CmdId {
  CMD_ID = 5605,
  UNRECOGNIZED = -1,
}

export enum QAvatarBattleStartSkillRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SKILL_CD = 2,
  BULLET_LACK = 3,
  RELOAD_TO_MAX = 4,
  CHARGE_LACK = 5,
  SP_LACK = 6,
  UNRECOGNIZED = -1,
}

export interface QAvatarBattleStigmata {
  stigmataId: number;
}

export interface QAvatarBattleStigmataComponent {
  stigmataList: QAvatarBattleStigmata[];
}

export interface QCandyBattleArriveReq {
}

export enum QCandyBattleArriveReq_CmdId {
  CMD_ID = 6583,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleArriveRsp {
  retcode: QCandyBattleArriveRsp_Retcode;
}

export enum QCandyBattleArriveRsp_CmdId {
  CMD_ID = 6584,
  UNRECOGNIZED = -1,
}

export enum QCandyBattleArriveRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SETTLE_FAILED = 2,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleAvatarLifeTimesChangeNotify {
  lifeTimes: number;
}

export enum QCandyBattleAvatarLifeTimesChangeNotify_CmdId {
  CMD_ID = 6582,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleAvatarStateClientNotify {
  state: QCandyBattleAvatarState;
  isMove: boolean;
  subState: number;
}

export enum QCandyBattleAvatarStateClientNotify_CmdId {
  CMD_ID = 6588,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleAvatarStateServerNotify {
  entityId: number;
  state: QCandyBattleAvatarState;
  isMove: boolean;
  subState: number;
}

export enum QCandyBattleAvatarStateServerNotify_CmdId {
  CMD_ID = 6589,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleBeginNotify {
  lobbyId: number;
  battleId: number;
  mapId: number;
  fightserverIp: number;
  fightserverPort: number;
  battleBeginTime: number;
  battleEndTime: number;
  memberList: QCandyBattleMember[];
  activityId: number;
}

export enum QCandyBattleBeginNotify_CmdId {
  CMD_ID = 6603,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleChooseAvatarReq {
  activityId: number;
  oldAvatarId: number;
  newAvatarId: number;
}

export enum QCandyBattleChooseAvatarReq_CmdId {
  CMD_ID = 6604,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleChooseAvatarRsp {
  retcode: QCandyBattleChooseAvatarRsp_Retcode;
  activityId: number;
  oldAvatarId: number;
  newAvatarId: number;
}

export enum QCandyBattleChooseAvatarRsp_CmdId {
  CMD_ID = 6605,
  UNRECOGNIZED = -1,
}

export enum QCandyBattleChooseAvatarRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  OLD_AVATAR_MISMATCH = 2,
  NEW_AVATAR_LOCKED = 3,
  IN_MATCH_STATUS = 4,
  IN_READY_STATUS = 5,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleComponentPosition {
  postion: QCandyBattleVector3 | undefined;
  forward: QCandyBattleVector3 | undefined;
}

export interface QCandyBattleComponentSet {
  positionComponent: QCandyBattleComponentPosition | undefined;
}

export interface QCandyBattleCreateEntityReq {
  propId: number;
  type: QCandyBattleEntityType;
  initPos: QCandyBattleVector3 | undefined;
  initForward: QCandyBattleVector3 | undefined;
}

export enum QCandyBattleCreateEntityReq_CmdId {
  CMD_ID = 6576,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleCreateEntityRsp {
  retcode: QCandyBattleCreateEntityRsp_Retcode;
  entityId: number;
  propId: number;
  ownerEntityId: number;
}

export enum QCandyBattleCreateEntityRsp_CmdId {
  CMD_ID = 6577,
  UNRECOGNIZED = -1,
}

export enum QCandyBattleCreateEntityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleDataNotify {
  curTimeMsU64: number;
  updateEntityList: QCandyBattleEntity[];
  deleteEntityList: QCandyBattleEntity[];
  battleInfo: QCandyBattleInfo | undefined;
}

export enum QCandyBattleDataNotify_CmdId {
  CMD_ID = 6572,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleDeleteEntityReq {
  entityId: number;
}

export enum QCandyBattleDeleteEntityReq_CmdId {
  CMD_ID = 6578,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleDeleteEntityRsp {
  retcode: QCandyBattleDeleteEntityRsp_Retcode;
  entityId: number;
}

export enum QCandyBattleDeleteEntityRsp_CmdId {
  CMD_ID = 6579,
  UNRECOGNIZED = -1,
}

export enum QCandyBattleDeleteEntityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ENTITY_NOT_EXIST = 2,
  ENTITY_CANNOT_DELETE = 3,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleEndNotify {
  battleId: number;
}

export enum QCandyBattleEndNotify_CmdId {
  CMD_ID = 6573,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleEnterBattleReq {
}

export enum QCandyBattleEnterBattleReq_CmdId {
  CMD_ID = 6570,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleEnterBattleRsp {
  retcode: QCandyBattleEnterBattleRsp_Retcode;
  battleType: QCandyBattleType;
  battleBeginTime: number;
  battleEndTime: number;
  memberList: QCandyBattleMember[];
  memberBriefList: QCandyBattleMemberBrief[];
  propDataList: QCandyBattlePropData[];
}

export enum QCandyBattleEnterBattleRsp_CmdId {
  CMD_ID = 6571,
  UNRECOGNIZED = -1,
}

export enum QCandyBattleEnterBattleRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  BATTLE_NOT_EXIST = 2,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleEntity {
  entityId: number;
  type: QCandyBattleEntityType;
  componentSet: QCandyBattleComponentSet | undefined;
  propId: number;
  ownerEntityId: number;
  state: number;
}

export interface QCandyBattleFinishBattleNotify {
  uid: number;
  rankNum: number;
  isOver: boolean;
}

export enum QCandyBattleFinishBattleNotify_CmdId {
  CMD_ID = 6591,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleGetActivityReq {
  activityId: number;
}

export enum QCandyBattleGetActivityReq_CmdId {
  CMD_ID = 6601,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleGetActivityRsp {
  retcode: QCandyBattleGetActivityRsp_Retcode;
  activityId: number;
  todayCurrencyGotNum: number;
  rankScore: number;
  maxRankScore: number;
  lastAvatarId: number;
  unlockedAvatarList: number[];
}

export enum QCandyBattleGetActivityRsp_CmdId {
  CMD_ID = 6602,
  UNRECOGNIZED = -1,
}

export enum QCandyBattleGetActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleInfo {
  battleId: number;
  remainLifeTimes: number;
  score: number;
}

export interface QCandyBattleLeaveBattleNotify {
  uid: number;
}

export enum QCandyBattleLeaveBattleNotify_CmdId {
  CMD_ID = 6594,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleLeaveBattleReq {
}

export enum QCandyBattleLeaveBattleReq_CmdId {
  CMD_ID = 6592,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleLeaveBattleRsp {
  retcode: QCandyBattleLeaveBattleRsp_Retcode;
}

export enum QCandyBattleLeaveBattleRsp_CmdId {
  CMD_ID = 6593,
  UNRECOGNIZED = -1,
}

export enum QCandyBattleLeaveBattleRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleMember {
  uid: number;
  nickname: string;
  rankScore: number;
  teamId: number;
  avatarId: number;
}

export interface QCandyBattleMemberBrief {
  uid: number;
  entityId: number;
}

export interface QCandyBattleMemberSettleInfo {
  uid: number;
  nickname: string;
  avatarId: number;
  curRankScore: number;
  isAbandoned: boolean;
  rank: number;
  progress: number;
  costTime: number;
  lifeTimes: number;
  score: number;
}

export interface QCandyBattleMoveNotify {
  pos: QCandyBattleVector3 | undefined;
  forward: QCandyBattleVector3 | undefined;
}

export enum QCandyBattleMoveNotify_CmdId {
  CMD_ID = 6574,
  UNRECOGNIZED = -1,
}

export interface QCandyBattlePropData {
  entityId: number;
  propId: number;
  postion: QCandyBattleVector3 | undefined;
  rotation: QCandyBattleVector3 | undefined;
  scale: QCandyBattleVector3 | undefined;
  parentName: string;
}

export interface QCandyBattleSettleBattleNotify {
  activityId: number;
  lobbyId: number;
  mapId: number;
  settleInfoList: QCandyBattleMemberSettleInfo[];
}

export enum QCandyBattleSettleBattleNotify_CmdId {
  CMD_ID = 6608,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleSkillEndNotify {
  playerSkillEnd: PlayerSkill | undefined;
}

export enum QCandyBattleSkillEndNotify_CmdId {
  CMD_ID = 6590,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleTriggerEntityReq {
  entityId: number;
  curState: number;
}

export enum QCandyBattleTriggerEntityReq_CmdId {
  CMD_ID = 6580,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleTriggerEntityRsp {
  retcode: QCandyBattleTriggerEntityRsp_Retcode;
  entityId: number;
  curState: number;
}

export enum QCandyBattleTriggerEntityRsp_CmdId {
  CMD_ID = 6581,
  UNRECOGNIZED = -1,
}

export enum QCandyBattleTriggerEntityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ENTITY_NOT_EXIST = 2,
  STATE_ERROR = 3,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleUnlockAvatarReq {
  activityId: number;
  avatarId: number;
}

export enum QCandyBattleUnlockAvatarReq_CmdId {
  CMD_ID = 6606,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleUnlockAvatarRsp {
  retcode: QCandyBattleUnlockAvatarRsp_Retcode;
  activityId: number;
  avatarId: number;
}

export enum QCandyBattleUnlockAvatarRsp_CmdId {
  CMD_ID = 6607,
  UNRECOGNIZED = -1,
}

export enum QCandyBattleUnlockAvatarRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MATERIAL_LACK = 2,
  RANK_SCORE_LACK = 3,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleUseSkillNotify {
  playerUseSkill: PlayerSkill | undefined;
}

export enum QCandyBattleUseSkillNotify_CmdId {
  CMD_ID = 6587,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleUseSkillReq {
  skillId: number;
}

export enum QCandyBattleUseSkillReq_CmdId {
  CMD_ID = 6585,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleUseSkillRsp {
  retcode: QCandyBattleUseSkillRsp_Retcode;
  skillId: number;
}

export enum QCandyBattleUseSkillRsp_CmdId {
  CMD_ID = 6586,
  UNRECOGNIZED = -1,
}

export enum QCandyBattleUseSkillRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SKILL_INVALID = 2,
  SKILL_IN_CD = 3,
  SKILL_ALL_USED = 4,
  UNRECOGNIZED = -1,
}

export interface QCandyBattleVector3 {
  x: number;
  y: number;
  z: number;
}

export interface QuantumEndless {
  curMonsterGroup: number;
  monsterProgress: number;
  finishMonsterNum: number;
}

export interface QuantumEndlessBattleAoe {
  aoeNum: number;
  evadeNum: number;
}

export interface QuantumEndlessBattleWave {
  waveId: number;
  endStatus: StageEndStatus;
  costTime: number;
}

export interface Question {
  id: number;
  answerList: number[];
  rightAnswerList: number[];
}

export interface QuickApplyJoinArmadaReq {
  level: number;
}

export enum QuickApplyJoinArmadaReq_CmdId {
  CMD_ID = 2732,
  UNRECOGNIZED = -1,
}

export interface QuickApplyJoinArmadaRsp {
  retcode: QuickApplyJoinArmadaRsp_Retcode;
}

export enum QuickApplyJoinArmadaRsp_CmdId {
  CMD_ID = 2733,
  UNRECOGNIZED = -1,
}

export enum QuickApplyJoinArmadaRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LEVEL_LACK = 2,
  ALREADY_IN_ARMADA = 3,
  NO_QUICK_APPLY_ARMADA = 4,
  IN_CD_TIME = 5,
  IN_LOW_POPL_CD_TIME = 6,
  FEATURE_CLOSED = 7,
  UNRECOGNIZED = -1,
}

export interface QuitArmadaReq {
}

export enum QuitArmadaReq_CmdId {
  CMD_ID = 2627,
  UNRECOGNIZED = -1,
}

export interface QuitArmadaRsp {
  retcode: QuitArmadaRsp_Retcode;
}

export enum QuitArmadaRsp_CmdId {
  CMD_ID = 2628,
  UNRECOGNIZED = -1,
}

export enum QuitArmadaRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 3,
  IS_LEADER = 4,
  UNRECOGNIZED = -1,
}

export interface Raffle {
  id: number;
  drawBeginTime: number;
  drawEndTime: number;
  rewardBeginTime: number;
  missionId: number;
  totalTicketNum: number;
  ticketList: RaffleTicket[];
}

export interface RaffleActivity {
  curScheduleId: number;
  beginTime: number;
  endTime: number;
  raffleList: Raffle[];
}

export interface RaffleTicket {
  ticketNum: number;
  drawIdx: number;
  rewardGrade: RaffleRewardGrade;
  isRewardTaken: boolean;
}

export interface RanchArea {
  areaId: number;
  curProductNum: number;
  monsterUniqueIdList: number[];
  productionEfficiency: number;
}

export interface RanchAssignMonsterReq {
  activityId: number;
  uniqueIdList: number[];
  areaId: number;
}

export enum RanchAssignMonsterReq_CmdId {
  CMD_ID = 5839,
  UNRECOGNIZED = -1,
}

export interface RanchAssignMonsterRsp {
  retcode: RanchAssignMonsterRsp_Retcode;
  activityId: number;
  uniqueIdList: number[];
  areaId: number;
}

export enum RanchAssignMonsterRsp_CmdId {
  CMD_ID = 5840,
  UNRECOGNIZED = -1,
}

export enum RanchAssignMonsterRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MONSTER_NOT_EXIST = 2,
  UNIQUE_ID_REPEATED = 3,
  AREA_NOT_EXIST = 4,
  MONSTER_ALREADY_ASSIGNED = 5,
  SLOT_NOT_ENOUGH = 6,
  UNRECOGNIZED = -1,
}

export interface RanchDelMonsterNotify {
  activityId: number;
  delMonsterUniqueIdList: number[];
}

export enum RanchDelMonsterNotify_CmdId {
  CMD_ID = 5848,
  UNRECOGNIZED = -1,
}

export interface RanchFireMonsterReq {
  activityId: number;
  uniqueIdList: number[];
}

export enum RanchFireMonsterReq_CmdId {
  CMD_ID = 5841,
  UNRECOGNIZED = -1,
}

export interface RanchFireMonsterRsp {
  retcode: RanchFireMonsterRsp_Retcode;
  activityId: number;
  uniqueIdList: number[];
}

export enum RanchFireMonsterRsp_CmdId {
  CMD_ID = 5842,
  UNRECOGNIZED = -1,
}

export enum RanchFireMonsterRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MONSTER_NOT_EXIST = 2,
  UNIQUE_ID_REPEATED = 3,
  AREA_NOT_EXIST = 4,
  MONSTER_NOT_ASSIGNED = 5,
  UNRECOGNIZED = -1,
}

export interface RanchFreeMonsterReq {
  activityId: number;
  uniqueIdList: number[];
}

export enum RanchFreeMonsterReq_CmdId {
  CMD_ID = 5837,
  UNRECOGNIZED = -1,
}

export interface RanchFreeMonsterRsp {
  retcode: RanchFreeMonsterRsp_Retcode;
  activityId: number;
  uniqueIdList: number[];
  returnMaterialNum: number;
}

export enum RanchFreeMonsterRsp_CmdId {
  CMD_ID = 5838,
  UNRECOGNIZED = -1,
}

export enum RanchFreeMonsterRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MONSTER_NOT_EXIST = 2,
  UNIQUE_ID_REPEATED = 3,
  MONSTER_ALREADY_ASSIGNED = 4,
  UNRECOGNIZED = -1,
}

export interface RanchGetActivityReq {
  activityId: number;
}

export enum RanchGetActivityReq_CmdId {
  CMD_ID = 5833,
  UNRECOGNIZED = -1,
}

export interface RanchGetActivityRsp {
  retcode: RanchGetActivityRsp_Retcode;
  activityId: number;
  monsterList: RanchMonster[];
  areaList: RanchArea[];
  nextRefreshTime: number;
  stageList: RanchStage[];
  battleUniqueIdList: number[];
}

export enum RanchGetActivityRsp_CmdId {
  CMD_ID = 5834,
  UNRECOGNIZED = -1,
}

export enum RanchGetActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface RanchGetMonsterWikiReq {
  activityId: number;
}

export enum RanchGetMonsterWikiReq_CmdId {
  CMD_ID = 5845,
  UNRECOGNIZED = -1,
}

export interface RanchGetMonsterWikiRsp {
  retcode: RanchGetMonsterWikiRsp_Retcode;
  activityId: number;
  monsterWikiList: RanchMonsterWiki[];
  skillWikiList: RanchSkillWiki[];
  collectionPoint: number;
}

export enum RanchGetMonsterWikiRsp_CmdId {
  CMD_ID = 5846,
  UNRECOGNIZED = -1,
}

export enum RanchGetMonsterWikiRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface RanchLockMonsterSkillReq {
  activityId: number;
  uniqueId: number;
  lockSkillIdxList: number[];
}

export enum RanchLockMonsterSkillReq_CmdId {
  CMD_ID = 5849,
  UNRECOGNIZED = -1,
}

export interface RanchLockMonsterSkillRsp {
  retcode: RanchLockMonsterSkillRsp_Retcode;
  activityId: number;
  uniqueId: number;
  lockSkillIdxList: number[];
}

export enum RanchLockMonsterSkillRsp_CmdId {
  CMD_ID = 5850,
  UNRECOGNIZED = -1,
}

export enum RanchLockMonsterSkillRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MONSTER_NOT_EXIST = 2,
  LOCK_NUM_LIMIT = 3,
  UNRECOGNIZED = -1,
}

export interface RanchMonster {
  uniqueId: number;
  monsterId: number;
  skillList: RanchMonsterSkill[];
  ranchAreaId: number;
  ranchLastSettleTime: number;
  monsterLevel: number;
  monsterExp: number;
}

export interface RanchMonsterBriefInfo {
  monsterId: number;
  skillIdList: number[];
  monsterLevel: number;
}

export interface RanchMonsterSkill {
  skillId: number;
  isLocked: boolean;
}

export interface RanchMonsterWiki {
  monsterId: number;
  unlockTime: number;
  battleTimes: number;
  catchTimes: number;
  skillIdList: number[];
}

export interface RanchSetBattleMonsterReq {
  activityId: number;
  uniqueIdList: number[];
}

export enum RanchSetBattleMonsterReq_CmdId {
  CMD_ID = 5851,
  UNRECOGNIZED = -1,
}

export interface RanchSetBattleMonsterRsp {
  retcode: RanchSetBattleMonsterRsp_Retcode;
  activityId: number;
  uniqueIdList: number[];
}

export enum RanchSetBattleMonsterRsp_CmdId {
  CMD_ID = 5852,
  UNRECOGNIZED = -1,
}

export enum RanchSetBattleMonsterRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MONSTER_NOT_EXIST = 2,
  UNRECOGNIZED = -1,
}

export interface RanchSkillWiki {
  skillType: number;
  skillId: number;
}

export interface RanchStage {
  stageId: number;
  takeChallengeRewardTimes: number;
  maxChallengeScore: number;
  dropMonsterList: RanchMonster[];
  uniqueIdList: number[];
}

export interface RanchSyncMonsterNotify {
  activityId: number;
  monsterList: RanchMonster[];
  delMonsterUniqueIdList: number[];
  notifyType: RanchNotifyType;
  stageId: number;
}

export enum RanchSyncMonsterNotify_CmdId {
  CMD_ID = 5847,
  UNRECOGNIZED = -1,
}

export interface RanchSynthesisMonsterReq {
  activityId: number;
  synthesisId: number;
  mainUniqueId: number;
  assistUniqueId: number;
}

export enum RanchSynthesisMonsterReq_CmdId {
  CMD_ID = 5835,
  UNRECOGNIZED = -1,
}

export interface RanchSynthesisMonsterRsp {
  retcode: RanchSynthesisMonsterRsp_Retcode;
  activityId: number;
  synthesisId: number;
  mainUniqueId: number;
  assistUniqueId: number;
  outputUniqueId: number;
}

export enum RanchSynthesisMonsterRsp_CmdId {
  CMD_ID = 5836,
  UNRECOGNIZED = -1,
}

export enum RanchSynthesisMonsterRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MONSTER_NOT_EXIST = 2,
  UNIQUE_ID_REPEATED = 3,
  MONSTER_ALREADY_ASSIGNED = 4,
  MATERIAL_LACK = 5,
  MONSTER_NOT_MATCH = 6,
  UNRECOGNIZED = -1,
}

export interface RanchTakeProductReq {
  activityId: number;
}

export enum RanchTakeProductReq_CmdId {
  CMD_ID = 5843,
  UNRECOGNIZED = -1,
}

export interface RanchTakeProductRsp {
  retcode: RanchTakeProductRsp_Retcode;
  activityId: number;
  uniqueIdList: number[];
}

export enum RanchTakeProductRsp_CmdId {
  CMD_ID = 5844,
  UNRECOGNIZED = -1,
}

export enum RanchTakeProductRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MONSTER_NUM_OVERFLOW = 2,
  UNRECOGNIZED = -1,
}

export interface RankScheduleData {
  scheduleId: number;
  type: number;
  beginTime: number;
  endTime: number;
}

export interface RankShowData {
  myRankType: number;
  myRank: number;
  rankList: UserRankData[];
  myScore: number;
}

export interface RecallMasterPupilApplicationReq {
  targetUid: number;
  selfNickname: string;
}

export enum RecallMasterPupilApplicationReq_CmdId {
  CMD_ID = 970,
  UNRECOGNIZED = -1,
}

export interface RecallMasterPupilApplicationRsp {
  retcode: MasterPupilRetcode_Retcode;
}

export enum RecallMasterPupilApplicationRsp_CmdId {
  CMD_ID = 971,
  UNRECOGNIZED = -1,
}

export interface RechargeFinishNotify {
  retcode: RechargeFinishNotify_Retcode;
  productName: string;
  payHcoin: number;
  freeHcoin: number;
  productDesc: string;
  boxRewardList: RewardData[];
  productPrice: number;
  channelName: string;
  channelOrderNo: string;
  isAddHcoin: boolean;
  mcoin: number;
  goodsId: number;
  payCurrency: string;
  payPrice: string;
}

export enum RechargeFinishNotify_CmdId {
  CMD_ID = 83,
  UNRECOGNIZED = -1,
}

export enum RechargeFinishNotify_Retcode {
  SUCC = 0,
  FAIL = 1,
  ORDER_REPEAT = 2,
  ITUNES_RECEIPT_ERROR = 3,
  DUPLICATE_FAIL = 4,
  UNRECOGNIZED = -1,
}

export interface ReclaimAvatar {
  reclaimAvatarId: number;
  reclaimWeaponId: number;
  reclaimStigmataId1: number;
  reclaimStigmataId2: number;
  reclaimStigmataId3: number;
}

export interface ReclaimGachaReq {
  boxId: number;
}

export enum ReclaimGachaReq_CmdId {
  CMD_ID = 1177,
  UNRECOGNIZED = -1,
}

export interface ReclaimGachaRsp {
  retcode: ReclaimGachaRsp_Retcode;
  candidateItemList: number[];
  rewardList: RewardData[];
}

export enum ReclaimGachaRsp_CmdId {
  CMD_ID = 1178,
  UNRECOGNIZED = -1,
}

export enum ReclaimGachaRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  WAIT_CHOOSE = 2,
  MATERIAL_LACK = 3,
  UNRECOGNIZED = -1,
}

export interface ReclaimMpAvatar {
  reclaimAvatar: ReclaimAvatar | undefined;
  reclaimLevel: number;
  reclaimAvatarIdList: number[];
  avatarId: number;
}

export interface RecommendAvatar {
  lineupInfo: LineupBriefInfo | undefined;
  battleTimes: number;
  battleRate: number;
  source: AvatarRecommendSource;
  extInfo: string;
  recommendStyle: number;
  rank: number;
  isHasCourseInfo: boolean;
}

export interface RecommendGoods {
  shopId: number;
  goods: Goods | undefined;
  bannerBg: string;
  accurateDeliverScheduleId: number;
}

export interface RecommendMissionPanel {
  panelId: number;
  isPanelShow: boolean;
  missionBeginTime: number;
}

export interface RecoverChatCreditNotify {
  lostChatCredit: number;
}

export enum RecoverChatCreditNotify_CmdId {
  CMD_ID = 1162,
  UNRECOGNIZED = -1,
}

export interface RecvArmadaSystemChatMsgNotify {
  chatMsg: ArmadaSystemChatMsg | undefined;
}

export enum RecvArmadaSystemChatMsgNotify_CmdId {
  CMD_ID = 2662,
  UNRECOGNIZED = -1,
}

export interface RecvChatMsgNotify {
  chatMsgList: ChatMsg[];
}

export enum RecvChatMsgNotify_CmdId {
  CMD_ID = 2235,
  UNRECOGNIZED = -1,
}

export interface RecvCommonChatworldMsgNotify {
  chatMsgList: ChatworldMsg[];
}

export enum RecvCommonChatworldMsgNotify_CmdId {
  CMD_ID = 2405,
  UNRECOGNIZED = -1,
}

export interface RecvOfflinePrivateChatMsgNotify {
  chatMsgList: ChatMsg[];
}

export enum RecvOfflinePrivateChatMsgNotify_CmdId {
  CMD_ID = 2236,
  UNRECOGNIZED = -1,
}

export interface RecvPlayerCardMsgNotify {
  msgList: PlayerCardMsg[];
  targetUid: number;
}

export enum RecvPlayerCardMsgNotify_CmdId {
  CMD_ID = 487,
  UNRECOGNIZED = -1,
}

export interface RecvRoomChatMsgNotify {
  roomMode: RoomMode;
  chatMsg: ChatMsg | undefined;
}

export enum RecvRoomChatMsgNotify_CmdId {
  CMD_ID = 3164,
  UNRECOGNIZED = -1,
}

export interface RefineRuneSwitchData {
}

export interface RefineStigmataRuneReq {
  type: StigmataRefineType;
  uniqueId: number;
  consumeItemList: EquipmentItemList | undefined;
  specialId: number;
  lockRuneIndex: number;
  isRetry: boolean;
  timesType: StigmataRefineTimesType;
}

export enum RefineStigmataRuneReq_CmdId {
  CMD_ID = 193,
  UNRECOGNIZED = -1,
}

export interface RefineStigmataRuneRsp {
  retcode: RefineStigmataRuneRsp_Retcode;
  runeList: StigmataRune[];
  timesType: StigmataRefineTimesType;
  runeGroupList: StigmataRuneGroup[];
  waitSelectStgimataList: number[];
}

export enum RefineStigmataRuneRsp_CmdId {
  CMD_ID = 194,
  UNRECOGNIZED = -1,
}

export enum RefineStigmataRuneRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  STIGMATA_NOT_EXIST = 2,
  STIGMATA_NOT_IDENTIFY = 3,
  STIGMATA_CAN_NOT_REFINE = 4,
  STIGMATA_WAIT_RUNE_EXIST = 5,
  CONSUME_ITEM_NOT_EXIST = 6,
  CONSUME_ITEM_IN_USE = 7,
  CONSUME_ITEM_REPEAT = 8,
  CONSUME_ITEM_UN_NECESSARY = 9,
  CONSUME_ITEM_LACK = 10,
  ITEM_IN_CONSUME_ITEM_LIST = 11,
  CONSUME_ITEM_PROTECTED = 12,
  COST_GACHA_TICKET = 13,
  COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 14,
  COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 15,
  LEVEL_LACK = 16,
  CONSUME_ITEM_IN_FACILITY = 17,
  CONSUME_ITEM_GRAND_KEY = 18,
  SLOT_LACK = 19,
  TRIGGER_MATERIAL_LACK = 20,
  LOCK_INDEX_ERROR = 21,
  CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 22,
  NOT_OPEN = 23,
  TOO_MANY_WAIT_RUNE = 24,
  UNRECOGNIZED = -1,
}

export interface ReforgeEquipmentReq {
  type: EquipmentType;
  uniqueId: number;
  targetEquipId: number;
}

export enum ReforgeEquipmentReq_CmdId {
  CMD_ID = 3657,
  UNRECOGNIZED = -1,
}

export interface ReforgeEquipmentRsp {
  retcode: ReforgeEquipmentRsp_Retcode;
  uniqueId: number;
  remainReforgeTimes: number;
}

export enum ReforgeEquipmentRsp_CmdId {
  CMD_ID = 3658,
  UNRECOGNIZED = -1,
}

export enum ReforgeEquipmentRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  JUST_SUPPORT_WEAPON = 2,
  CONSUME_ITEM_NOT_EXIST = 3,
  CONSUME_ITEM_IN_USE = 4,
  CONSUME_ITEM_PROTECTED = 5,
  COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 6,
  COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 7,
  EQUIPMENT_NOT_EXTRACTED = 8,
  ACTIVITY_NOT_OPEN = 9,
  EQUIPMENT_NOT_OPEN = 10,
  TIMES_LACK = 11,
  CONSUME_ITEM_IN_FACILITY = 12,
  TARGET_NOT_FITTED = 13,
  CONSUME_ITEM_GRAND_KEY = 14,
  CONSUME_ITEM_REPEAT = 15,
  COST_GACHA_TICKET = 16,
  CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 17,
  UNRECOGNIZED = -1,
}

export interface RefreshAndSyncMissionNotify {
}

export enum RefreshAndSyncMissionNotify_CmdId {
  CMD_ID = 1473,
  UNRECOGNIZED = -1,
}

export interface RefreshDLCTalentAffixReq {
  avatarId: number;
  talentId: number;
}

export enum RefreshDLCTalentAffixReq_CmdId {
  CMD_ID = 3580,
  UNRECOGNIZED = -1,
}

export interface RefreshDLCTalentAffixRsp {
  retcode: RefreshDLCTalentAffixRsp_Retcode;
  newAffixSetId: number;
}

export enum RefreshDLCTalentAffixRsp_CmdId {
  CMD_ID = 3581,
  UNRECOGNIZED = -1,
}

export enum RefreshDLCTalentAffixRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_ERROR = 2,
  NOT_REFRESHABLE_TALENT = 3,
  MATERIAL_LACK = 4,
  WAIT_SELECT_AFFIX_SET_NOT_EMPTY = 5,
  UNRECOGNIZED = -1,
}

export interface RefreshScDLCDailyQuestReq {
}

export enum RefreshScDLCDailyQuestReq_CmdId {
  CMD_ID = 6318,
  UNRECOGNIZED = -1,
}

export interface RefreshScDLCDailyQuestRsp {
  retcode: RefreshScDLCDailyQuestRsp_Retcode;
  questList: OpenworldQuest[];
}

export enum RefreshScDLCDailyQuestRsp_CmdId {
  CMD_ID = 6319,
  UNRECOGNIZED = -1,
}

export enum RefreshScDLCDailyQuestRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MATERIAL_LACK = 2,
  UNRECOGNIZED = -1,
}

export interface RegionUidRange {
  regionName: string;
  startUid: number;
  endUid: number;
}

export interface RejectGratuityStageReq {
  stageUniqueId: number;
}

export enum RejectGratuityStageReq_CmdId {
  CMD_ID = 4118,
  UNRECOGNIZED = -1,
}

export interface RejectGratuityStageRsp {
  retcode: RejectGratuityStageRsp_Retcode;
  stageUniqueId: number;
}

export enum RejectGratuityStageRsp_CmdId {
  CMD_ID = 4119,
  UNRECOGNIZED = -1,
}

export enum RejectGratuityStageRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface RelationActivityDataNotify {
  limitType: number;
  limitNum: number;
  gotMaterialNum: number;
  relationType: number;
  dropMaterialId: number;
}

export enum RelationActivityDataNotify_CmdId {
  CMD_ID = 1373,
  UNRECOGNIZED = -1,
}

export interface ReleaseArmadaBuildOwnershipReq {
}

export enum ReleaseArmadaBuildOwnershipReq_CmdId {
  CMD_ID = 2687,
  UNRECOGNIZED = -1,
}

export interface ReleaseArmadaBuildOwnershipRsp {
  retcode: ReleaseArmadaBuildOwnershipRsp_Retcode;
}

export enum ReleaseArmadaBuildOwnershipRsp_CmdId {
  CMD_ID = 2688,
  UNRECOGNIZED = -1,
}

export enum ReleaseArmadaBuildOwnershipRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_GRANTED = 2,
  NOT_IN_ARMADA = 3,
  UNRECOGNIZED = -1,
}

export interface Replay {
  replayIdU64: number;
  replayType: ReplayType;
  commonInfo: ReplayCommonInfo | undefined;
  extInfo: ReplayExtInfo | undefined;
}

export interface ReplayBeginReq {
  key: string;
}

export enum ReplayBeginReq_CmdId {
  CMD_ID = 5400,
  UNRECOGNIZED = -1,
}

export interface ReplayBeginRsp {
  retcode: ReplayBeginRsp_Retcode;
}

export enum ReplayBeginRsp_CmdId {
  CMD_ID = 5401,
  UNRECOGNIZED = -1,
}

export enum ReplayBeginRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ReplayCommonInfo {
  uid: number;
  nickname: string;
  createTime: number;
  stageId: number;
  fileMd5: string;
  downloadUrl: string;
  version: string;
  timespan: number;
}

export interface ReplayEndReq {
  key: string;
}

export enum ReplayEndReq_CmdId {
  CMD_ID = 5402,
  UNRECOGNIZED = -1,
}

export interface ReplayEndRsp {
  retcode: ReplayEndRsp_Retcode;
}

export enum ReplayEndRsp_CmdId {
  CMD_ID = 5403,
  UNRECOGNIZED = -1,
}

export enum ReplayEndRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ReplayExBossInfo {
  rankId: number;
  finishedBossInfo: FinishedExBossInfo | undefined;
  rawScore: number;
  isEventBoss: boolean;
}

export interface ReplayExtInfo {
  exBossInfo: ReplayExBossInfo | undefined;
}

export interface ReplayFrame {
  seq: number;
  count: number;
  frame: Buffer;
}

export interface ReplayFrameEndNotify {
}

export enum ReplayFrameEndNotify_CmdId {
  CMD_ID = 5409,
  UNRECOGNIZED = -1,
}

export interface ReplayFrameNotify {
  replayFrameList: ReplayFrame[];
}

export enum ReplayFrameNotify_CmdId {
  CMD_ID = 5408,
  UNRECOGNIZED = -1,
}

export interface ReplayGetFileTokenReq {
  op: ReplayOp;
  replay: Replay | undefined;
}

export enum ReplayGetFileTokenReq_CmdId {
  CMD_ID = 5410,
  UNRECOGNIZED = -1,
}

export interface ReplayGetFileTokenRsp {
  retcode: ReplayGetFileTokenRsp_Retcode;
  token: string;
  tokenUrl: string;
}

export enum ReplayGetFileTokenRsp_CmdId {
  CMD_ID = 5411,
  UNRECOGNIZED = -1,
}

export enum ReplayGetFileTokenRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LIMIT = 2,
  INVALID_PARAM = 3,
  HAS_UPLOAD = 4,
  HAS_DELETE = 5,
  DAILY_LIMIT = 6,
  UNRECOGNIZED = -1,
}

export interface ReplayGetRecommendBriefReq {
  keyList: ReplayRecommendBriefKey[];
}

export enum ReplayGetRecommendBriefReq_CmdId {
  CMD_ID = 5418,
  UNRECOGNIZED = -1,
}

export interface ReplayGetRecommendBriefRsp {
  retcode: ReplayGetRecommendBriefRsp_Retcode;
  briefList: ReplayRecommendBrief[];
}

export enum ReplayGetRecommendBriefRsp_CmdId {
  CMD_ID = 5419,
  UNRECOGNIZED = -1,
}

export enum ReplayGetRecommendBriefRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ReplayGetRecommendListReq {
  type: ReplayType;
  stageOrBossId: number;
  rank: number;
  startIdx: number;
  endIdx: number;
  isRandom: boolean;
}

export enum ReplayGetRecommendListReq_CmdId {
  CMD_ID = 5416,
  UNRECOGNIZED = -1,
}

export interface ReplayGetRecommendListRsp {
  retcode: ReplayGetRecommendListRsp_Retcode;
  type: ReplayType;
  stageOrBossId: number;
  rank: number;
  startIdx: number;
  endIdx: number;
  replayList: Replay[];
  isRandom: boolean;
}

export enum ReplayGetRecommendListRsp_CmdId {
  CMD_ID = 5417,
  UNRECOGNIZED = -1,
}

export enum ReplayGetRecommendListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ReplayGetUploadListReq {
}

export enum ReplayGetUploadListReq_CmdId {
  CMD_ID = 5414,
  UNRECOGNIZED = -1,
}

export interface ReplayGetUploadListRsp {
  retcode: ReplayGetUploadListRsp_Retcode;
  replayList: Replay[];
  todayUploadNum: number;
}

export enum ReplayGetUploadListRsp_CmdId {
  CMD_ID = 5415,
  UNRECOGNIZED = -1,
}

export enum ReplayGetUploadListRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ReplayRecommendBrief {
  key: ReplayRecommendBriefKey | undefined;
  num: number;
}

export interface ReplayRecommendBriefKey {
  type: ReplayType;
  stageOrBossId: number;
  rank: number;
}

export interface ReplayReportFileResultReq {
  token: string;
}

export enum ReplayReportFileResultReq_CmdId {
  CMD_ID = 5412,
  UNRECOGNIZED = -1,
}

export interface ReplayReportFileResultRsp {
  retcode: ReplayReportFileResultRsp_Retcode;
  replayIdU64: number;
}

export enum ReplayReportFileResultRsp_CmdId {
  CMD_ID = 5413,
  UNRECOGNIZED = -1,
}

export enum ReplayReportFileResultRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_MATCH = 2,
  UNRECOGNIZED = -1,
}

export interface ReportBirthdayReq {
  birthday: number;
}

export enum ReportBirthdayReq_CmdId {
  CMD_ID = 299,
  UNRECOGNIZED = -1,
}

export interface ReportBirthdayRsp {
  retcode: ReportBirthdayRsp_Retcode;
}

export enum ReportBirthdayRsp_CmdId {
  CMD_ID = 300,
  UNRECOGNIZED = -1,
}

export enum ReportBirthdayRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACCOUNT_ERROR = 2,
  INVALID_BIRTHDAY = 3,
  UNRECOGNIZED = -1,
}

export interface ReportChapterActivityStageReq {
  chapterId: number;
  stageId: number;
  floor: number;
}

export enum ReportChapterActivityStageReq_CmdId {
  CMD_ID = 4390,
  UNRECOGNIZED = -1,
}

export interface ReportChapterActivityStageRsp {
  retcode: ReportChapterActivityStageRsp_Retcode;
  chapterId: number;
  stageId: number;
}

export enum ReportChapterActivityStageRsp_CmdId {
  CMD_ID = 4391,
  UNRECOGNIZED = -1,
}

export enum ReportChapterActivityStageRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_OPEN = 2,
  STAGE_NOT_EXIST = 3,
  UNRECOGNIZED = -1,
}

export interface ReportClickRechargeButtonNotify {
  productName: string;
  currencyCode: string;
  price: string;
}

export enum ReportClickRechargeButtonNotify_CmdId {
  CMD_ID = 661,
  UNRECOGNIZED = -1,
}

export interface ReportClientDataVersionReq {
  version: number;
}

export enum ReportClientDataVersionReq_CmdId {
  CMD_ID = 398,
  UNRECOGNIZED = -1,
}

export interface ReportClientDataVersionRsp {
  serverVersion: number;
}

export enum ReportClientDataVersionRsp_CmdId {
  CMD_ID = 399,
  UNRECOGNIZED = -1,
}

export interface ReportDLCDropItemReq {
  dropItemList: DropItem[];
}

export enum ReportDLCDropItemReq_CmdId {
  CMD_ID = 3590,
  UNRECOGNIZED = -1,
}

export interface ReportDLCDropItemRsp {
  retcode: ReportDLCDropItemRsp_Retcode;
}

export enum ReportDLCDropItemRsp_CmdId {
  CMD_ID = 3591,
  UNRECOGNIZED = -1,
}

export enum ReportDLCDropItemRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ReportOpenworldEndlessDataReq {
  type: OpenworldEndlessDataType;
  invasion: OpenworldEndlessReprotInvasion | undefined;
  battle: OpenworldEndlessReprotBattle | undefined;
}

export enum ReportOpenworldEndlessDataReq_CmdId {
  CMD_ID = 3434,
  UNRECOGNIZED = -1,
}

export interface ReportOpenworldEndlessDataRsp {
  retcode: ReportOpenworldEndlessDataRsp_Retcode;
}

export enum ReportOpenworldEndlessDataRsp_CmdId {
  CMD_ID = 3435,
  UNRECOGNIZED = -1,
}

export enum ReportOpenworldEndlessDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ReportReplayFrameReq {
  key: string;
  replayFrame: ReplayFrame | undefined;
}

export enum ReportReplayFrameReq_CmdId {
  CMD_ID = 5404,
  UNRECOGNIZED = -1,
}

export interface ReportReplayFrameRsp {
  retcode: ReportReplayFrameRsp_Retcode;
  key: string;
  seq: number;
  count: number;
}

export enum ReportReplayFrameRsp_CmdId {
  CMD_ID = 5405,
  UNRECOGNIZED = -1,
}

export enum ReportReplayFrameRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ReportRpgTaleStageReq {
  stageId: number;
  curFloor: number;
  clientData: string;
  taleId: number;
  score: number;
  monsterUniqueIdList: number[];
  monsterCardUniqueIdList: number[];
}

export enum ReportRpgTaleStageReq_CmdId {
  CMD_ID = 2374,
  UNRECOGNIZED = -1,
}

export interface ReportRpgTaleStageRsp {
  retcode: ReportRpgTaleStageRsp_Retcode;
  stageId: number;
  curFloor: number;
  taleId: number;
  score: number;
}

export enum ReportRpgTaleStageRsp_CmdId {
  CMD_ID = 2375,
  UNRECOGNIZED = -1,
}

export enum ReportRpgTaleStageRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ReportTvtBattleStageMessageNotify {
  messageList: TvtBattleStageMessage[];
}

export enum ReportTvtBattleStageMessageNotify_CmdId {
  CMD_ID = 3355,
  UNRECOGNIZED = -1,
}

export interface RequestLogoffReq {
}

export enum RequestLogoffReq_CmdId {
  CMD_ID = 1670,
  UNRECOGNIZED = -1,
}

export interface RequestLogoffRsp {
  retcode: RequestLogoffRsp_Retcode;
}

export enum RequestLogoffRsp_CmdId {
  CMD_ID = 1671,
  UNRECOGNIZED = -1,
}

export enum RequestLogoffRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ResetAdventureQuestReq {
  poolId: number;
}

export enum ResetAdventureQuestReq_CmdId {
  CMD_ID = 3924,
  UNRECOGNIZED = -1,
}

export interface ResetAdventureQuestRsp {
  retcode: ResetAdventureQuestRsp_Retcode;
  poolId: number;
}

export enum ResetAdventureQuestRsp_CmdId {
  CMD_ID = 3925,
  UNRECOGNIZED = -1,
}

export enum ResetAdventureQuestRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_QUEST = 2,
  NO_TIMES = 3,
  HAS_FINISHED = 4,
  HAS_SELECTED = 5,
  UNRECOGNIZED = -1,
}

export interface ResetAvatarMissionAvatarReq {
}

export enum ResetAvatarMissionAvatarReq_CmdId {
  CMD_ID = 3008,
  UNRECOGNIZED = -1,
}

export interface ResetAvatarMissionAvatarRsp {
  retcode: ResetAvatarMissionAvatarRsp_Retcode;
}

export enum ResetAvatarMissionAvatarRsp_CmdId {
  CMD_ID = 3009,
  UNRECOGNIZED = -1,
}

export enum ResetAvatarMissionAvatarRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  CAN_NOT_RESET = 3,
  NOT_CHOOSE = 4,
  UNRECOGNIZED = -1,
}

export interface ResetChapterActivityExclusiveStageReq {
  chapterId: number;
  groupId: number;
  stageId: number;
}

export enum ResetChapterActivityExclusiveStageReq_CmdId {
  CMD_ID = 4386,
  UNRECOGNIZED = -1,
}

export interface ResetChapterActivityExclusiveStageRsp {
  retcode: ResetChapterActivityExclusiveStageRsp_Retcode;
  chapterId: number;
  groupId: number;
  stageId: number;
}

export enum ResetChapterActivityExclusiveStageRsp_CmdId {
  CMD_ID = 4387,
  UNRECOGNIZED = -1,
}

export enum ResetChapterActivityExclusiveStageRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  GROUP_NOT_EXIST = 2,
  STAGE_NOT_EXIST = 3,
  ACTIVITY_NOT_OPEN = 4,
  UNRECOGNIZED = -1,
}

export interface ResetChapterActivityTalentReq {
  chapterId: number;
}

export enum ResetChapterActivityTalentReq_CmdId {
  CMD_ID = 4388,
  UNRECOGNIZED = -1,
}

export interface ResetChapterActivityTalentRsp {
  retcode: ResetChapterActivityTalentRsp_Retcode;
  chapterId: number;
}

export enum ResetChapterActivityTalentRsp_CmdId {
  CMD_ID = 4389,
  UNRECOGNIZED = -1,
}

export enum ResetChapterActivityTalentRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_OPEN = 2,
  NOT_ALLOWED = 3,
  UNRECOGNIZED = -1,
}

export interface ResetConsignedOrderReq {
}

export enum ResetConsignedOrderReq_CmdId {
  CMD_ID = 2645,
  UNRECOGNIZED = -1,
}

export interface ResetConsignedOrderRsp {
  retcode: ResetConsignedOrderRsp_Retcode;
}

export enum ResetConsignedOrderRsp_CmdId {
  CMD_ID = 2646,
  UNRECOGNIZED = -1,
}

export enum ResetConsignedOrderRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  IN_CD_TIME = 3,
  UNRECOGNIZED = -1,
}

export interface ResetDLCTowerProgressReq {
}

export enum ResetDLCTowerProgressReq_CmdId {
  CMD_ID = 3576,
  UNRECOGNIZED = -1,
}

export interface ResetDLCTowerProgressRsp {
  retcode: ResetDLCTowerProgressRsp_Retcode;
}

export enum ResetDLCTowerProgressRsp_CmdId {
  CMD_ID = 3577,
  UNRECOGNIZED = -1,
}

export enum ResetDLCTowerProgressRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ResetExtraStoryChallengeModeReq {
  chapterId: number;
  difficulty: number;
}

export enum ResetExtraStoryChallengeModeReq_CmdId {
  CMD_ID = 504,
  UNRECOGNIZED = -1,
}

export interface ResetExtraStoryChallengeModeRsp {
  retcode: ResetExtraStoryChallengeModeRsp_Retcode;
  chapterId: number;
  difficulty: number;
}

export enum ResetExtraStoryChallengeModeRsp_CmdId {
  CMD_ID = 505,
  UNRECOGNIZED = -1,
}

export enum ResetExtraStoryChallengeModeRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  TIME_LIMIT = 2,
  EXTRA_STORY_NOT_OPEN = 3,
  RESET_TIMES_LACK = 4,
  DIFFICULTY_NOT_OPEN = 5,
  LEVEL_LIMIT = 6,
  UNRECOGNIZED = -1,
}

export interface ResetRogueStageReq {
}

export enum ResetRogueStageReq_CmdId {
  CMD_ID = 279,
  UNRECOGNIZED = -1,
}

export interface ResetRogueStageRsp {
  retcode: ResetRogueStageRsp_Retcode;
}

export enum ResetRogueStageRsp_CmdId {
  CMD_ID = 280,
  UNRECOGNIZED = -1,
}

export enum ResetRogueStageRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_JOIN_ARMADA = 2,
  NOT_INIT = 3,
  RESET_TIMES_LACK = 4,
  NOT_OPEN = 5,
  UNRECOGNIZED = -1,
}

export interface ResetScratchTicketPlateReq {
  activityId: number;
}

export enum ResetScratchTicketPlateReq_CmdId {
  CMD_ID = 4154,
  UNRECOGNIZED = -1,
}

export interface ResetScratchTicketPlateRsp {
  retcode: ResetScratchTicketPlateRsp_Retcode;
  activityId: number;
}

export enum ResetScratchTicketPlateRsp_CmdId {
  CMD_ID = 4155,
  UNRECOGNIZED = -1,
}

export enum ResetScratchTicketPlateRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_OPEN = 2,
  TIMES_LIMIT = 3,
  MATERIAL_LACK = 4,
  CORE_PLATE = 5,
  ACTIVITY_LIMIT = 6,
  UNRECOGNIZED = -1,
}

export interface ResetSecurityPasswordReq {
  isWithdraw: boolean;
}

export enum ResetSecurityPasswordReq_CmdId {
  CMD_ID = 5031,
  UNRECOGNIZED = -1,
}

export interface ResetSecurityPasswordRsp {
  retcode: ResetSecurityPasswordRsp_Retcode;
}

export enum ResetSecurityPasswordRsp_CmdId {
  CMD_ID = 5032,
  UNRECOGNIZED = -1,
}

export enum ResetSecurityPasswordRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  IS_ALREADY_RESETTING = 2,
  UNRECOGNIZED = -1,
}

export interface ResetStageEnterTimesReq {
  stageId: number;
}

export enum ResetStageEnterTimesReq_CmdId {
  CMD_ID = 108,
  UNRECOGNIZED = -1,
}

export interface ResetStageEnterTimesRsp {
  retcode: ResetStageEnterTimesRsp_Retcode;
}

export enum ResetStageEnterTimesRsp_CmdId {
  CMD_ID = 109,
  UNRECOGNIZED = -1,
}

export enum ResetStageEnterTimesRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HCOIN_LACK = 2,
  TIMES_LACK = 3,
  NOT_NEED_RESET = 4,
  STAGE_ID_ERROR = 5,
  MATERIAL_LACK = 6,
  UNRECOGNIZED = -1,
}

export interface ResetStigmataTitleReq {
  uniqueId: number;
}

export enum ResetStigmataTitleReq_CmdId {
  CMD_ID = 330,
  UNRECOGNIZED = -1,
}

export interface ResetStigmataTitleRsp {
  retcode: ResetStigmataTitleRsp_Retcode;
}

export enum ResetStigmataTitleRsp_CmdId {
  CMD_ID = 331,
  UNRECOGNIZED = -1,
}

export enum ResetStigmataTitleRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  STIGMATA_NOT_EXIST = 2,
  MATERIAL_LACK = 3,
  SCOIN_LACK = 4,
  LEVEL_LACK = 5,
  UNRECOGNIZED = -1,
}

export interface RestaurantOrder {
  materialId: number;
  price: number;
}

export interface RestaurantRoom {
  roomId: number;
  avatarId: number;
  materialId: number;
  speed: number;
  progress: number;
  status: number;
}

export interface ReunionCookActivity {
  curScheduleId: number;
  startTime: number;
  endTime: number;
  cookScore: number;
  lastSettleRewardScore: number;
  cookHistory: ReunionCookHistory[];
  scoreRewardGroup: number;
  groupId: number;
}

export interface ReunionCookData {
  bookId: number;
  cookTimes: number;
  recycleMaterialList: Material[];
}

export interface ReunionCookGetActivityReq {
}

export enum ReunionCookGetActivityReq_CmdId {
  CMD_ID = 4380,
  UNRECOGNIZED = -1,
}

export interface ReunionCookGetActivityRsp {
  retcode: ReunionCookGetActivityRsp_Retcode;
  reunionCookActivity: ReunionCookActivity | undefined;
}

export enum ReunionCookGetActivityRsp_CmdId {
  CMD_ID = 4381,
  UNRECOGNIZED = -1,
}

export enum ReunionCookGetActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface ReunionCookHistory {
  bookId: number;
  dailyNum: number;
  totalNum: number;
}

export interface ReunionCookMakeDinnerReq {
  bookId: number;
  recycleMaterialList: Material[];
  bookType: ReunionCookBookType;
  cookData: ReunionCookData[];
}

export enum ReunionCookMakeDinnerReq_CmdId {
  CMD_ID = 4382,
  UNRECOGNIZED = -1,
}

export interface ReunionCookMakeDinnerRsp {
  retcode: ReunionCookMakeDinnerRsp_Retcode;
  bookId: number;
  rewardData: RewardData | undefined;
}

export enum ReunionCookMakeDinnerRsp_CmdId {
  CMD_ID = 4383,
  UNRECOGNIZED = -1,
}

export enum ReunionCookMakeDinnerRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  INVALID_BOOK_ID = 3,
  INVALID_MATERIAL = 4,
  MATERIAL_LACK = 5,
  TIMES_LIMIT = 6,
  DUPLICATE_BOOK_ID = 7,
  UNRECOGNIZED = -1,
}

export interface ReunionCookTakeScoreRewardReq {
}

export enum ReunionCookTakeScoreRewardReq_CmdId {
  CMD_ID = 4384,
  UNRECOGNIZED = -1,
}

export interface ReunionCookTakeScoreRewardRsp {
  retcode: ReunionCookTakeScoreRewardRsp_Retcode;
  rewardData: RewardData | undefined;
}

export enum ReunionCookTakeScoreRewardRsp_CmdId {
  CMD_ID = 4385,
  UNRECOGNIZED = -1,
}

export enum ReunionCookTakeScoreRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface RewardData {
  exp: number;
  scoin: number;
  hcoin: number;
  stamina: number;
  friendsPoint: number;
  itemList: RewardItemData[];
  expConvertScoin: number;
}

export interface RewardItemData {
  id: number;
  level: number;
  num: number;
  splitFragmentNum: number;
}

export interface RewardLineActivity {
  id: number;
  scheduleId: number;
  score: number;
  lastTakenRewardScore: number;
}

export interface RogueBuff {
  id: number;
  level: number;
  type: RogueBuff_Type;
}

export enum RogueBuff_Type {
  NORMAL = 1,
  SUPPORT_AVATAR = 2,
  UNRECOGNIZED = -1,
}

export interface RogueStageAvatar {
  avatarId: number;
  position: number;
  hpPercent: number;
  spPercent: number;
  propList: RogueStageAvatarProp[];
}

export interface RogueStageAvatarProp {
  propId: number;
  value: number;
}

export interface RogueStageBeginReq {
  avatarIdList: number[];
}

export enum RogueStageBeginReq_CmdId {
  CMD_ID = 281,
  UNRECOGNIZED = -1,
}

export interface RogueStageBeginRsp {
  retcode: RogueStageBeginRsp_Retcode;
  energy: number;
  randomSeed: number;
  dropItemList: DropItem[];
  hardLevel: number;
  progress: number;
  buffList: RogueStageBuff[];
}

export enum RogueStageBeginRsp_CmdId {
  CMD_ID = 282,
  UNRECOGNIZED = -1,
}

export enum RogueStageBeginRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_JOIN_ARMADA = 2,
  NOT_INIT = 3,
  ITEM_LACK = 4,
  AVATAR_DIE = 5,
  AVATAR_ERROR = 6,
  PROGRESS_FULL = 7,
  NOT_OPEN = 8,
  UNRECOGNIZED = -1,
}

export interface RogueStageBuff {
  buffId: number;
  value: number;
}

export interface RogueStageEndReq {
  endStatus: StageEndStatus;
  avatarList: RogueStageAvatar[];
  dropItemList: DropItem[];
  energy: number;
  buffList: RogueStageBuff[];
  stagePassTime: number;
}

export enum RogueStageEndReq_CmdId {
  CMD_ID = 283,
  UNRECOGNIZED = -1,
}

export interface RogueStageEndRsp {
  retcode: RogueStageEndRsp_Retcode;
  endStatus: StageEndStatus;
  dropItemList: DropItem[];
  progress: number;
  maxNextHardLevel: number;
}

export enum RogueStageEndRsp_CmdId {
  CMD_ID = 284,
  UNRECOGNIZED = -1,
}

export enum RogueStageEndRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_BEGIN = 2,
  AVATAR_ERROR = 3,
  DROP_ERROR = 4,
  NOT_INIT = 5,
  ITEM_LACK = 6,
  UNRECOGNIZED = -1,
}

export interface RogueTowerGetActivityReq {
  id: number;
}

export enum RogueTowerGetActivityReq_CmdId {
  CMD_ID = 4360,
  UNRECOGNIZED = -1,
}

export interface RogueTowerGetActivityRsp {
  retcode: RogueTowerGetActivityRsp_Retcode;
  id: number;
  challengeStatus: RogueTowerGetActivityRsp_RogueTowerChallengeStatus | undefined;
  buffStatus: RogueTowerGetActivityRsp_RogueTowerBuffStatus | undefined;
  buffCandidate: RogueTowerGetActivityRsp_RogueTowerCandidate | undefined;
  endlessStatus: RogueTowerGetActivityRsp_RogueTowerEndlessStatus | undefined;
  saveList: RogueTowerGetActivityRsp_RogueTowerSnapshot[];
  leftSupportAvatarLevelupTimes: number;
}

export enum RogueTowerGetActivityRsp_CmdId {
  CMD_ID = 4361,
  UNRECOGNIZED = -1,
}

export enum RogueTowerGetActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface RogueTowerGetActivityRsp_WaitPool {
  poolId: number;
  leftTimes: number;
}

export interface RogueTowerGetActivityRsp_RandomSiteStage {
  siteId: number;
  stageId: number;
}

export interface RogueTowerGetActivityRsp_RogueTowerCandidate {
  curPoolId: number;
  curCandidateIdList: number[];
  waitPoolList: RogueTowerGetActivityRsp_WaitPool[];
}

export interface RogueTowerGetActivityRsp_RogueTowerBuffStatus {
  refreshBuffTimes: number;
  buffList: RogueBuff[];
}

export interface RogueTowerGetActivityRsp_RogueTowerChallengeStatus {
  avatarList: ChallengeModeAvatar[];
  isChallengeFail: boolean;
  curAreaId: number;
  siteStageList: RogueTowerGetActivityRsp_RandomSiteStage[];
}

export interface RogueTowerGetActivityRsp_RogueTowerEndlessScore {
  avatarId: number;
  score: number;
}

export interface RogueTowerGetActivityRsp_RogueTowerEndlessStatus {
  endlessScore: number;
  lastSettleRewardScore: number;
  endlessFloor: number;
  avatarMaxScoreList: RogueTowerGetActivityRsp_RogueTowerEndlessScore[];
}

export interface RogueTowerGetActivityRsp_RogueTowerSnapshot {
  stagePassCount: number;
  score: number;
  avatarIdList: number[];
  selectedBuffList: RogueBuff[];
}

export interface RogueTowerGetCandidateBuffReq {
  id: number;
  poolId: number;
}

export enum RogueTowerGetCandidateBuffReq_CmdId {
  CMD_ID = 4362,
  UNRECOGNIZED = -1,
}

export interface RogueTowerGetCandidateBuffRsp {
  retcode: RogueTowerGetCandidateBuffRsp_Retcode;
  id: number;
  poolId: number;
  buffIdList: number[];
}

export enum RogueTowerGetCandidateBuffRsp_CmdId {
  CMD_ID = 4363,
  UNRECOGNIZED = -1,
}

export enum RogueTowerGetCandidateBuffRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_SELECT = 2,
  NO_LEFT_TIMES = 3,
  UNRECOGNIZED = -1,
}

export interface RogueTowerGetRankReq {
  id: number;
  avatarId: number;
}

export enum RogueTowerGetRankReq_CmdId {
  CMD_ID = 4376,
  UNRECOGNIZED = -1,
}

export interface RogueTowerGetRankRsp {
  retcode: RogueTowerGetRankRsp_Retcode;
  id: number;
  avatarId: number;
  rankData: RankShowData | undefined;
}

export enum RogueTowerGetRankRsp_CmdId {
  CMD_ID = 4377,
  UNRECOGNIZED = -1,
}

export enum RogueTowerGetRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface RogueTowerLevelUpBuffReq {
  id: number;
  buffId: number;
}

export enum RogueTowerLevelUpBuffReq_CmdId {
  CMD_ID = 4370,
  UNRECOGNIZED = -1,
}

export interface RogueTowerLevelUpBuffRsp {
  retcode: RogueTowerLevelUpBuffRsp_Retcode;
  id: number;
  buffId: number;
  buffLevel: number;
}

export enum RogueTowerLevelUpBuffRsp_CmdId {
  CMD_ID = 4371,
  UNRECOGNIZED = -1,
}

export enum RogueTowerLevelUpBuffRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_BUFF = 2,
  COIN_LACK = 3,
  LEVEL_LIMIT = 4,
  UNRECOGNIZED = -1,
}

export interface RogueTowerLevelupSupportAvatarReq {
  id: number;
  supportAvatarId: number;
}

export enum RogueTowerLevelupSupportAvatarReq_CmdId {
  CMD_ID = 4374,
  UNRECOGNIZED = -1,
}

export interface RogueTowerLevelupSupportAvatarRsp {
  retcode: RogueTowerLevelupSupportAvatarRsp_Retcode;
}

export enum RogueTowerLevelupSupportAvatarRsp_CmdId {
  CMD_ID = 4375,
  UNRECOGNIZED = -1,
}

export enum RogueTowerLevelupSupportAvatarRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LACK_TIMES = 2,
  MAX_LEVEL = 3,
  AVATAR_LOCKED = 4,
  UNRECOGNIZED = -1,
}

export interface RogueTowerRefreshBuffReq {
  id: number;
}

export enum RogueTowerRefreshBuffReq_CmdId {
  CMD_ID = 4368,
  UNRECOGNIZED = -1,
}

export interface RogueTowerRefreshBuffRsp {
  retcode: RogueTowerRefreshBuffRsp_Retcode;
  id: number;
}

export enum RogueTowerRefreshBuffRsp_CmdId {
  CMD_ID = 4369,
  UNRECOGNIZED = -1,
}

export enum RogueTowerRefreshBuffRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_LEFT_TIMES = 2,
  COIN_LACK = 3,
  NOT_IN_CANDIDATE = 4,
  UNRECOGNIZED = -1,
}

export interface RogueTowerSaveReq {
  id: number;
  index: number;
  stagePassCount: number;
  score: number;
}

export enum RogueTowerSaveReq_CmdId {
  CMD_ID = 4372,
  UNRECOGNIZED = -1,
}

export interface RogueTowerSaveRsp {
  retcode: RogueTowerSaveRsp_Retcode;
  id: number;
  index: number;
}

export enum RogueTowerSaveRsp_CmdId {
  CMD_ID = 4373,
  UNRECOGNIZED = -1,
}

export enum RogueTowerSaveRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SAVE_LIMIT = 2,
  UNRECOGNIZED = -1,
}

export interface RogueTowerSelectBuffReq {
  id: number;
  buffId: number;
}

export enum RogueTowerSelectBuffReq_CmdId {
  CMD_ID = 4364,
  UNRECOGNIZED = -1,
}

export interface RogueTowerSelectBuffRsp {
  retcode: RogueTowerSelectBuffRsp_Retcode;
}

export enum RogueTowerSelectBuffRsp_CmdId {
  CMD_ID = 4365,
  UNRECOGNIZED = -1,
}

export enum RogueTowerSelectBuffRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_CANDIDATE = 2,
  UNRECOGNIZED = -1,
}

export interface RogueTowerSelectChallengeAvatarReq {
  id: number;
  avatarIdList: number[];
}

export enum RogueTowerSelectChallengeAvatarReq_CmdId {
  CMD_ID = 4366,
  UNRECOGNIZED = -1,
}

export interface RogueTowerSelectChallengeAvatarRsp {
  retcode: RogueTowerSelectChallengeAvatarRsp_Retcode;
}

export enum RogueTowerSelectChallengeAvatarRsp_CmdId {
  CMD_ID = 4367,
  UNRECOGNIZED = -1,
}

export enum RogueTowerSelectChallengeAvatarRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ALREADY_SELECTED = 2,
  AVATAR_ERROR = 3,
  UNRECOGNIZED = -1,
}

export interface RoomChatParam {
  isBroadcastMsg: boolean;
}

export interface RoomGetStatusReq {
  roomId: number;
  memberData: RoomMember | undefined;
}

export enum RoomGetStatusReq_CmdId {
  CMD_ID = 3181,
  UNRECOGNIZED = -1,
}

export interface RoomGetStatusRsp {
  retcode: RoomGetStatusRsp_Retcode;
  playerRoomStatus: PlayerRoomStatus | undefined;
  memberList: RoomMember[];
  roomInfo: RoomInfo | undefined;
}

export enum RoomGetStatusRsp_CmdId {
  CMD_ID = 3182,
  UNRECOGNIZED = -1,
}

export enum RoomGetStatusRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  TOO_FREQUENT = 2,
  ROOM_NOT_EXIST = 3,
  UNRECOGNIZED = -1,
}

export interface RoomInfo {
  subType: number;
  stageId: number;
}

export interface RoomInvitationNotify {
  targetUid: number;
  roomMode: RoomMode;
  roomId: number;
  fromPlayer: RoomMember | undefined;
  roomInfo: RoomInfo | undefined;
}

export enum RoomInvitationNotify_CmdId {
  CMD_ID = 3162,
  UNRECOGNIZED = -1,
}

export interface RoomKickMemberReq {
  targetUid: number;
}

export enum RoomKickMemberReq_CmdId {
  CMD_ID = 3175,
  UNRECOGNIZED = -1,
}

export interface RoomKickMemberRsp {
  retcode: RoomKickMemberRsp_Retcode;
}

export enum RoomKickMemberRsp_CmdId {
  CMD_ID = 3176,
  UNRECOGNIZED = -1,
}

export enum RoomKickMemberRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ROOM = 2,
  NOT_LEADER = 3,
  NO_TARGET = 4,
  SELF = 5,
  UNRECOGNIZED = -1,
}

export interface RoomMatchTimeoutNotify {
}

export enum RoomMatchTimeoutNotify_CmdId {
  CMD_ID = 3170,
  UNRECOGNIZED = -1,
}

export interface RoomMember {
  uid: number;
  regionName: string;
  nickname: string;
  level: number;
  headAvatarId: number;
  frameId: number;
  dressId: number;
  status: RoomMemberStatus;
  position: RoomMember_MemberPosition;
  modeBytes: Buffer;
  customHeadId: number;
  clientStatus: RoomClientStatus;
  voiceId: number;
}

export enum RoomMember_MemberPosition {
  NORMAL = 1,
  LEADER = 2,
  UNRECOGNIZED = -1,
}

export interface RoomMemberSetVoiceIdReq {
  voiceId: number;
}

export enum RoomMemberSetVoiceIdReq_CmdId {
  CMD_ID = 3179,
  UNRECOGNIZED = -1,
}

export interface RoomMemberSetVoiceIdRsp {
  retcode: RoomMemberSetVoiceIdRsp_Retcode;
  uid: number;
  voiceId: number;
}

export enum RoomMemberSetVoiceIdRsp_CmdId {
  CMD_ID = 3180,
  UNRECOGNIZED = -1,
}

export enum RoomMemberSetVoiceIdRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ROOM = 2,
  UNRECOGNIZED = -1,
}

export interface RoomSwitchMemberStatusReq {
  status: RoomMemberStatus;
  clientStatus: RoomClientStatus;
}

export enum RoomSwitchMemberStatusReq_CmdId {
  CMD_ID = 3173,
  UNRECOGNIZED = -1,
}

export interface RoomSwitchMemberStatusRsp {
  retcode: RoomSwitchMemberStatusRsp_Retcode;
}

export enum RoomSwitchMemberStatusRsp_CmdId {
  CMD_ID = 3174,
  UNRECOGNIZED = -1,
}

export enum RoomSwitchMemberStatusRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface RoomTransferLeaderReq {
  targetUid: number;
}

export enum RoomTransferLeaderReq_CmdId {
  CMD_ID = 3177,
  UNRECOGNIZED = -1,
}

export interface RoomTransferLeaderRsp {
  retcode: RoomTransferLeaderRsp_Retcode;
}

export enum RoomTransferLeaderRsp_CmdId {
  CMD_ID = 3178,
  UNRECOGNIZED = -1,
}

export enum RoomTransferLeaderRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ROOM = 2,
  NOT_LEADER = 3,
  NO_TARGET = 4,
  SELF = 5,
  UNRECOGNIZED = -1,
}

export interface RpgDungeonActivity {
  id: number;
  questList: RpgDungeonQuest[];
  candidateBuffIdList: number[];
  buffList: RpgDungeonBuff[];
  poolList: RpgDungeonBuffPool[];
}

export interface RpgDungeonBuff {
  buffId: number;
  buffLevel: number;
}

export interface RpgDungeonBuffPool {
  poolId: number;
  leftTimes: number;
}

export interface RpgDungeonGetActivityReq {
  dungeonId: number;
}

export enum RpgDungeonGetActivityReq_CmdId {
  CMD_ID = 5500,
  UNRECOGNIZED = -1,
}

export interface RpgDungeonGetActivityRsp {
  retcode: RpgDungeonGetActivityRsp_Retcode;
  activity: RpgDungeonActivity | undefined;
  dungeonId: number;
}

export enum RpgDungeonGetActivityRsp_CmdId {
  CMD_ID = 5501,
  UNRECOGNIZED = -1,
}

export enum RpgDungeonGetActivityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface RpgDungeonGetCandidateBuffReq {
  dungeonId: number;
  poolId: number;
}

export enum RpgDungeonGetCandidateBuffReq_CmdId {
  CMD_ID = 5504,
  UNRECOGNIZED = -1,
}

export interface RpgDungeonGetCandidateBuffRsp {
  retcode: RpgDungeonGetCandidateBuffRsp_Retcode;
  dungeonId: number;
  poolId: number;
  buffIdList: number[];
}

export enum RpgDungeonGetCandidateBuffRsp_CmdId {
  CMD_ID = 5505,
  UNRECOGNIZED = -1,
}

export enum RpgDungeonGetCandidateBuffRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_SELECT = 2,
  NO_LEFT_TIMES = 3,
  UNRECOGNIZED = -1,
}

export interface RpgDungeonQuest {
  id: number;
  avatarIdList: number[];
}

export interface RpgDungeonSelectBuffReq {
  dungeonId: number;
  buffId: number;
}

export enum RpgDungeonSelectBuffReq_CmdId {
  CMD_ID = 5506,
  UNRECOGNIZED = -1,
}

export interface RpgDungeonSelectBuffRsp {
  retcode: RpgDungeonSelectBuffRsp_Retcode;
  dungeonId: number;
}

export enum RpgDungeonSelectBuffRsp_CmdId {
  CMD_ID = 5507,
  UNRECOGNIZED = -1,
}

export enum RpgDungeonSelectBuffRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_CANDIDATE = 2,
  UNRECOGNIZED = -1,
}

export interface RpgDungeonSelectQuestReq {
  dungeonId: number;
  questId: number;
  avatarIdList: number[];
}

export enum RpgDungeonSelectQuestReq_CmdId {
  CMD_ID = 5502,
  UNRECOGNIZED = -1,
}

export interface RpgDungeonSelectQuestRsp {
  retcode: RpgDungeonSelectQuestRsp_Retcode;
  dungeonId: number;
}

export enum RpgDungeonSelectQuestRsp_CmdId {
  CMD_ID = 5503,
  UNRECOGNIZED = -1,
}

export enum RpgDungeonSelectQuestRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_MEET_TAG = 2,
  AVATAR_NOT_EXIST = 3,
  LOCKED = 4,
  SELECTED = 5,
  UNRECOGNIZED = -1,
}

export interface RpgTaleAbility {
  abilityId: number;
  abilityLevel: number;
}

export interface RpgTaleArea {
  areaId: number;
}

export interface RpgTaleData {
  taleId: number;
  siteList: RpgTaleSite[];
  curSiteId: number;
  rewardTakenCollectionCountList: number[];
  endTime: number;
  finishedEventIdList: number[];
  areaList: RpgTaleArea[];
  overallList: RpgTaleOverall[];
  scheduleId: number;
  stageList: RpgTaleStage[];
  totalScoreDropList: RpgTaleTotalScoreDrop[];
  abilityList: RpgTaleAbility[];
  siteRefreshNum: number;
  lastResetSiteRefreshNumTime: number;
  qavatarBattle: RpgTaleQAvatarBattle | undefined;
  stageEnterTimesLimitList: RpgTaleStageEnterTimesLimit[];
}

export interface RpgTaleEvent {
  eventId: number;
  eventType: number;
  eventParamList: number[];
  rewardData: RewardData | undefined;
}

export interface RpgTaleEventNotify {
  eventData: RpgTaleEvent | undefined;
  taleId: number;
}

export enum RpgTaleEventNotify_CmdId {
  CMD_ID = 2312,
  UNRECOGNIZED = -1,
}

export interface RpgTaleFlag {
  type: RpgTaleFlagType;
  paramList: number[];
}

export interface RpgTaleGetPvpDivisionRewardReq {
  taleId: number;
}

export enum RpgTaleGetPvpDivisionRewardReq_CmdId {
  CMD_ID = 2392,
  UNRECOGNIZED = -1,
}

export interface RpgTaleGetPvpDivisionRewardRsp {
  retcode: RpgTaleGetPvpDivisionRewardRsp_Retcode;
  taleId: number;
  rewardData: RewardData | undefined;
}

export enum RpgTaleGetPvpDivisionRewardRsp_CmdId {
  CMD_ID = 2393,
  UNRECOGNIZED = -1,
}

export enum RpgTaleGetPvpDivisionRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ALREADY_TAKEN = 2,
  UNRECOGNIZED = -1,
}

export interface RpgTaleLevelUpAbilityReq {
  taleId: number;
  abilityId: number;
  targetLevel: number;
}

export enum RpgTaleLevelUpAbilityReq_CmdId {
  CMD_ID = 2382,
  UNRECOGNIZED = -1,
}

export interface RpgTaleLevelUpAbilityRsp {
  retcode: RpgTaleLevelUpAbilityRsp_Retcode;
  taleId: number;
  abilityId: number;
  limitFlagList: RpgTaleFlag[];
}

export enum RpgTaleLevelUpAbilityRsp_CmdId {
  CMD_ID = 2383,
  UNRECOGNIZED = -1,
}

export enum RpgTaleLevelUpAbilityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  TARGET_LEVEL_ERROR = 2,
  MATERIAL_LACK = 3,
  FLAG_LIMIT = 4,
  ABILITY_ERROR = 5,
  UNRECOGNIZED = -1,
}

export interface RpgTaleOverall {
  overallId: number;
  value: number;
}

export interface RpgTaleProgress {
  id: number;
  progress: number;
}

export interface RpgTaleQAvatarBattle {
  curScore: number;
  hasTakeRewardScore: number;
  chooseVirtualAvatarId: number;
  winNum: number;
  winStreak: number;
  virtualAvatarDropNum: number;
  gotMaterialList: RpgTaleQAvatarSettleGotMaterial[];
}

export interface RpgTaleQAvatarSettleGotMaterial {
  materialId: number;
  materialNum: number;
}

export interface RpgTaleRefreshSiteReq {
  taleId: number;
}

export enum RpgTaleRefreshSiteReq_CmdId {
  CMD_ID = 2388,
  UNRECOGNIZED = -1,
}

export interface RpgTaleRefreshSiteRsp {
  retcode: RpgTaleRefreshSiteRsp_Retcode;
  taleId: number;
}

export enum RpgTaleRefreshSiteRsp_CmdId {
  CMD_ID = 2389,
  UNRECOGNIZED = -1,
}

export enum RpgTaleRefreshSiteRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HCOIN_LACK = 2,
  MATERIAL_LACK = 3,
  REFRESH_TIME_LACK = 4,
  SITE_NOT_FINISH = 5,
  UNRECOGNIZED = -1,
}

export interface RpgTaleRefreshTicketReq {
  taleId: number;
}

export enum RpgTaleRefreshTicketReq_CmdId {
  CMD_ID = 2380,
  UNRECOGNIZED = -1,
}

export interface RpgTaleRefreshTicketRsp {
  retcode: RpgTaleRefreshTicketRsp_Retcode;
  taleId: number;
  ticketRefreshList: RpgTaleTicketRefreshInfo[];
}

export enum RpgTaleRefreshTicketRsp_CmdId {
  CMD_ID = 2381,
  UNRECOGNIZED = -1,
}

export enum RpgTaleRefreshTicketRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface RpgTaleResetTowerReq {
  taleId: number;
}

export enum RpgTaleResetTowerReq_CmdId {
  CMD_ID = 2384,
  UNRECOGNIZED = -1,
}

export interface RpgTaleResetTowerRsp {
  retcode: RpgTaleResetTowerRsp_Retcode;
  taleId: number;
}

export enum RpgTaleResetTowerRsp_CmdId {
  CMD_ID = 2385,
  UNRECOGNIZED = -1,
}

export enum RpgTaleResetTowerRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface RpgTaleSetOverallReq {
  taleId: number;
  overallId: number;
  value: number;
}

export enum RpgTaleSetOverallReq_CmdId {
  CMD_ID = 2386,
  UNRECOGNIZED = -1,
}

export interface RpgTaleSetOverallRsp {
  retcode: RpgTaleSetOverallRsp_Retcode;
  taleId: number;
  overallId: number;
}

export enum RpgTaleSetOverallRsp_CmdId {
  CMD_ID = 2387,
  UNRECOGNIZED = -1,
}

export enum RpgTaleSetOverallRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface RpgTaleSetPvpVirtualAvatarReq {
  taleId: number;
  virtualAvatarId: number;
}

export enum RpgTaleSetPvpVirtualAvatarReq_CmdId {
  CMD_ID = 2390,
  UNRECOGNIZED = -1,
}

export interface RpgTaleSetPvpVirtualAvatarRsp {
  retcode: RpgTaleSetPvpVirtualAvatarRsp_Retcode;
  taleId: number;
  virtualAvatarId: number;
}

export enum RpgTaleSetPvpVirtualAvatarRsp_CmdId {
  CMD_ID = 2391,
  UNRECOGNIZED = -1,
}

export enum RpgTaleSetPvpVirtualAvatarRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_NOT_EXIST = 2,
  UNRECOGNIZED = -1,
}

export interface RpgTaleSite {
  siteId: number;
  areaId: number;
  status: RpgTaleSiteStatus;
  contentType: RpgTaleSiteContentType;
  contentParam: string;
  finishedMatrixEventIdList: number[];
  eventType: number;
  eventParam: number;
  curProgress: RpgTaleProgress | undefined;
  passTimes: number;
  statusEndTime: number;
  closeTime: number;
  unlockLimitFlagList: RpgTaleFlag[];
}

export interface RpgTaleStage {
  stageId: number;
  maxFloor: number;
  maxScore: number;
  scoreDrop: RpgTaleStageScoreDrop | undefined;
}

export interface RpgTaleStageEnterTimesLimit {
  limitId: number;
  enterTimes: number;
}

export interface RpgTaleStageScoreDrop {
  totalNum: number;
  dailyNum: number;
}

export interface RpgTaleSweepReq {
  stageId: number;
  times: number;
  taleId: number;
}

export enum RpgTaleSweepReq_CmdId {
  CMD_ID = 2376,
  UNRECOGNIZED = -1,
}

export interface RpgTaleSweepRsp {
  retcode: RpgTaleSweepRsp_Retcode;
  stageId: number;
  times: number;
  rewardData: RewardData | undefined;
  taleId: number;
  maxFloor: number;
}

export enum RpgTaleSweepRsp_CmdId {
  CMD_ID = 2377,
  UNRECOGNIZED = -1,
}

export enum RpgTaleSweepRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LACK_MATERIAL = 2,
  STAGE_ERROR = 3,
  NO_REWARD = 4,
  ENTER_TIMES_LACK = 5,
  CHALLENGE_NUM_LACK = 6,
  UNRECOGNIZED = -1,
}

export interface RpgTaleSwitchData {
  taleId: number;
  siteId: number;
}

export interface RpgTaleTicketRefreshInfo {
  ticketId: number;
  materialId: number;
  addNum: number;
}

export interface RpgTaleTotalScoreDrop {
  materialId: number;
  dailyNum: number;
}

export interface SanctuaryActivityData {
  activityId: number;
  level: number;
  exp: number;
  hasTakeRewardLevel: number;
  productCounterTime: number;
  productStorageNum: number;
  isInit: boolean;
  playerLevelGroupId: number;
  stageIdList: number[];
  isNewStage: boolean;
}

export interface SanctuaryGetMainInfoReq {
}

export enum SanctuaryGetMainInfoReq_CmdId {
  CMD_ID = 4305,
  UNRECOGNIZED = -1,
}

export interface SanctuaryGetMainInfoRsp {
  retcode: SanctuaryGetMainInfoRsp_Retcode;
  activityData: SanctuaryActivityData | undefined;
  beginTime: number;
  endTime: number;
}

export enum SanctuaryGetMainInfoRsp_CmdId {
  CMD_ID = 4306,
  UNRECOGNIZED = -1,
}

export enum SanctuaryGetMainInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface SanctuaryStageEndNotify {
  totalAddExp: number;
  bonusAddExp: number;
  oldLevel: number;
  oldExp: number;
}

export enum SanctuaryStageEndNotify_CmdId {
  CMD_ID = 4314,
  UNRECOGNIZED = -1,
}

export interface SanctuaryStartNotify {
}

export enum SanctuaryStartNotify_CmdId {
  CMD_ID = 4311,
  UNRECOGNIZED = -1,
}

export interface SanctuaryTakeLevelRewardReq {
}

export enum SanctuaryTakeLevelRewardReq_CmdId {
  CMD_ID = 4307,
  UNRECOGNIZED = -1,
}

export interface SanctuaryTakeLevelRewardRsp {
  retcode: SanctuaryTakeLevelRewardRsp_Retcode;
  hasTakeRewardLevel: number;
  rewardData: RewardData | undefined;
}

export enum SanctuaryTakeLevelRewardRsp_CmdId {
  CMD_ID = 4308,
  UNRECOGNIZED = -1,
}

export enum SanctuaryTakeLevelRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface SanctuaryTakeProductReq {
}

export enum SanctuaryTakeProductReq_CmdId {
  CMD_ID = 4309,
  UNRECOGNIZED = -1,
}

export interface SanctuaryTakeProductRsp {
  retcode: SanctuaryTakeProductRsp_Retcode;
  rewardData: RewardData | undefined;
}

export enum SanctuaryTakeProductRsp_CmdId {
  CMD_ID = 4310,
  UNRECOGNIZED = -1,
}

export enum SanctuaryTakeProductRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface ScDLCAchievement {
  missionId: number;
  finishTime: number;
}

export interface ScDLCActiveFeverAbilityReq {
  abilityGroupIdList: number[];
}

export enum ScDLCActiveFeverAbilityReq_CmdId {
  CMD_ID = 6345,
  UNRECOGNIZED = -1,
}

export interface ScDLCActiveFeverAbilityRsp {
  retcode: ScDLCActiveFeverAbilityRsp_Retcode;
}

export enum ScDLCActiveFeverAbilityRsp_CmdId {
  CMD_ID = 6346,
  UNRECOGNIZED = -1,
}

export enum ScDLCActiveFeverAbilityRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVE_NUM_LIMIT = 2,
  ACTIVE_LIST_EMPTY = 3,
  GROUP_INVALID = 4,
  UNRECOGNIZED = -1,
}

export interface ScDLCAvatar {
  avatarId: number;
  level: number;
  talentList: ScDLCTalent[];
  equipTalentList: number[];
}

export interface ScDLCDailyQuestData {
  questList: OpenworldQuest[];
  leftAcceptTimes: number;
  refreshLeftTimes: number;
  refreshCostMaterialId: number;
  refreshCostMaterialNum: number;
}

export interface ScDLCFever {
  level: number;
  exp: number;
  feverSlotNum: number;
  hasTakeRewardLevel: number;
  skillSuiteList: FeverSkillSuite[];
  activeSuiteId: number;
}

export interface ScDLCMpAvatar {
  scDlcAvatarId: number;
  talentList: ScDLCMpTalent[];
  equipTalentList: number[];
}

export interface ScDLCMpTalent {
  talentId: number;
  talentLevel: number;
}

export interface ScDLCReviveAvatarReq {
  avatarId: number;
}

export enum ScDLCReviveAvatarReq_CmdId {
  CMD_ID = 6341,
  UNRECOGNIZED = -1,
}

export interface ScDLCReviveAvatarRsp {
  retcode: ScDLCReviveAvatarRsp_Retcode;
}

export enum ScDLCReviveAvatarRsp_CmdId {
  CMD_ID = 6342,
  UNRECOGNIZED = -1,
}

export enum ScDLCReviveAvatarRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_ERROR = 2,
  MATERIAL_LACK = 3,
  UNRECOGNIZED = -1,
}

export interface ScDLCStatus {
  scDlcFeverScore: number;
  scDlcClimaxScore: number;
}

export interface ScDLCSupportNPC {
  npcId: number;
  exp: number;
  level: number;
}

export interface ScDLCSweepTowerReq {
}

export enum ScDLCSweepTowerReq_CmdId {
  CMD_ID = 6347,
  UNRECOGNIZED = -1,
}

export interface ScDLCSweepTowerRsp {
  retcode: ScDLCSweepTowerRsp_Retcode;
  rewardList: RewardData[];
}

export enum ScDLCSweepTowerRsp_CmdId {
  CMD_ID = 6348,
  UNRECOGNIZED = -1,
}

export enum ScDLCSweepTowerRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  CANNOT_SWEEP = 2,
  UNRECOGNIZED = -1,
}

export interface ScDLCTalent {
  talentId: number;
  talentLevel: number;
}

export interface ScDLCTowerAvatarInfo {
  avatarId: number;
  hpPercent: number;
  spPercent: number;
}

export interface ScDLCTowerReviveAvatarReq {
}

export enum ScDLCTowerReviveAvatarReq_CmdId {
  CMD_ID = 6343,
  UNRECOGNIZED = -1,
}

export interface ScDLCTowerReviveAvatarRsp {
  retcode: ScDLCTowerReviveAvatarRsp_Retcode;
  reviveTimes: number;
}

export enum ScDLCTowerReviveAvatarRsp_CmdId {
  CMD_ID = 6344,
  UNRECOGNIZED = -1,
}

export enum ScDLCTowerReviveAvatarRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  REVIVE_TIMES_LACK = 2,
  NOT_IN_TOWER = 3,
  MATERIAL_LACK = 4,
  UNRECOGNIZED = -1,
}

export interface ScDLCTowerScheduleRewardNotify {
  score: number;
  rewardData: RewardData | undefined;
}

export enum ScDLCTowerScheduleRewardNotify_CmdId {
  CMD_ID = 6340,
  UNRECOGNIZED = -1,
}

export interface ScDLCTowerStageBeginReq {
  avatarIdList: number[];
  supportAvatarId: number;
}

export enum ScDLCTowerStageBeginReq_CmdId {
  CMD_ID = 6334,
  UNRECOGNIZED = -1,
}

export interface ScDLCTowerStageBeginRsp {
  retcode: ScDLCTowerStageBeginRsp_Retcode;
  curFloor: number;
}

export enum ScDLCTowerStageBeginRsp_CmdId {
  CMD_ID = 6335,
  UNRECOGNIZED = -1,
}

export enum ScDLCTowerStageBeginRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_BEGIN = 2,
  PROGRESS_FULL = 3,
  AVATAR_ERROR = 4,
  AVATAR_DIE = 5,
  NOT_OPEN = 6,
  SUPPORT_AVATAR_ERROR = 7,
  FLOOR_ERROR = 8,
  STORY_NOT_FINISH = 9,
  UNRECOGNIZED = -1,
}

export interface ScDLCTowerStageEndReq {
  endStatus: StageEndStatus;
  floor: number;
  score: number;
  avatarInfoList: ScDLCTowerAvatarInfo[];
  dropItemList: DropItem[];
  scDlcFeverScore: number;
  scDlcClimaxScore: number;
}

export enum ScDLCTowerStageEndReq_CmdId {
  CMD_ID = 6336,
  UNRECOGNIZED = -1,
}

export interface ScDLCTowerStageEndRsp {
  retcode: ScDLCTowerStageEndRsp_Retcode;
  rewardData: RewardData | undefined;
  score: number;
  floor: number;
  settleFloor: number;
}

export enum ScDLCTowerStageEndRsp_CmdId {
  CMD_ID = 6337,
  UNRECOGNIZED = -1,
}

export enum ScDLCTowerStageEndRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_BEGIN = 2,
  FLOOR_ERROR = 3,
  AVATAR_ERROR = 4,
  UNRECOGNIZED = -1,
}

export interface ScheduledMapSiteActivity {
  stageGroupScheduleList: GeneralActivityStageGroupScheduleInfo[];
  enterTimes: number;
}

export interface ScoinExchangeReq {
  purpleJadeNum: number;
}

export enum ScoinExchangeReq_CmdId {
  CMD_ID = 14,
  UNRECOGNIZED = -1,
}

export interface ScoinExchangeRsp {
  retcode: ScoinExchangeRsp_Retcode;
  hcoinCost: number;
  scoinGet: number;
  boostRate: number;
  purpleJadeCost: number;
}

export enum ScoinExchangeRsp_CmdId {
  CMD_ID = 15,
  UNRECOGNIZED = -1,
}

export enum ScoinExchangeRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HCOIN_LACK = 2,
  TIMES_LACK = 3,
  LACK_PURPLE_JADE = 4,
  UNRECOGNIZED = -1,
}

export interface ScratchReq {
  xPos: number;
  yPos: number;
  activityId: number;
}

export enum ScratchReq_CmdId {
  CMD_ID = 4152,
  UNRECOGNIZED = -1,
}

export interface ScratchRsp {
  retcode: ScratchRsp_Retcode;
  activityId: number;
}

export enum ScratchRsp_CmdId {
  CMD_ID = 4153,
  UNRECOGNIZED = -1,
}

export enum ScratchRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_OPEN = 2,
  POS_ERROR = 3,
  POS_REPEAT = 4,
  MATERIAL_LACK = 5,
  UNRECOGNIZED = -1,
}

export interface ScratchTicketPoint {
  xPos: number;
  yPos: number;
  ticketItemId: number;
}

export interface SealedMatchPlayer {
  uid: number;
  name: string;
  playerLevel: number;
  avatarId: number;
  rankLevel: SealedPlayerRankLevel | undefined;
}

export interface SealedModeAbandonTicketReq {
}

export enum SealedModeAbandonTicketReq_CmdId {
  CMD_ID = 742,
  UNRECOGNIZED = -1,
}

export interface SealedModeAbandonTicketRsp {
  retcode: SealedModeAbandonTicketRsp_Retcode;
}

export enum SealedModeAbandonTicketRsp_CmdId {
  CMD_ID = 743,
  UNRECOGNIZED = -1,
}

export enum SealedModeAbandonTicketRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_TICKET_USED = 2,
  NO_TIMES_USED = 3,
  NOT_SETTLED = 4,
  UNRECOGNIZED = -1,
}

export interface SealedModeBattleBeginNotify {
  beginTime: number;
  round: number;
}

export enum SealedModeBattleBeginNotify_CmdId {
  CMD_ID = 719,
  UNRECOGNIZED = -1,
}

export interface SealedModeCancelMatchReq {
}

export enum SealedModeCancelMatchReq_CmdId {
  CMD_ID = 705,
  UNRECOGNIZED = -1,
}

export interface SealedModeCancelMatchRsp {
  retcode: SealedModeCancelMatchRsp_Retcode;
}

export enum SealedModeCancelMatchRsp_CmdId {
  CMD_ID = 706,
  UNRECOGNIZED = -1,
}

export enum SealedModeCancelMatchRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface SealedModeEvent {
  openTime: number;
  closeTime: number;
  eventId: number;
}

export interface SealedModeExchangeAvatarReq {
  indexLhs: number;
  indexRhs: number;
}

export enum SealedModeExchangeAvatarReq_CmdId {
  CMD_ID = 707,
  UNRECOGNIZED = -1,
}

export interface SealedModeExchangeAvatarRsp {
  retcode: SealedModeExchangeAvatarRsp_Retcode;
  avatarSuiteList: AvatarSuite[];
}

export enum SealedModeExchangeAvatarRsp_CmdId {
  CMD_ID = 708,
  UNRECOGNIZED = -1,
}

export enum SealedModeExchangeAvatarRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface SealedModeExchangeEquipReq {
  equipFrom: SealedModeExchangeEquipReq_SealedModeEquip | undefined;
  equipTo: SealedModeExchangeEquipReq_SealedModeEquip | undefined;
}

export enum SealedModeExchangeEquipReq_CmdId {
  CMD_ID = 732,
  UNRECOGNIZED = -1,
}

export interface SealedModeExchangeEquipReq_SealedModeEquip {
  index: number;
  avatarObjectId: number;
  slot: EquipmentSlot;
  equipObjectId: number;
}

export interface SealedModeExchangeEquipRsp {
  retcode: SealedModeExchangeEquipRsp_Retcode;
  avatarSuiteList: AvatarSuite[];
}

export enum SealedModeExchangeEquipRsp_CmdId {
  CMD_ID = 733,
  UNRECOGNIZED = -1,
}

export enum SealedModeExchangeEquipRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface SealedModeGetMatchInfoReq {
}

export enum SealedModeGetMatchInfoReq_CmdId {
  CMD_ID = 703,
  UNRECOGNIZED = -1,
}

export interface SealedModeGetMatchInfoRsp {
  retcode: SealedModeGetMatchInfoRsp_Retcode;
  matchInfo: SealedModeMatchInfo | undefined;
  matchPlayerList: SealedMatchPlayer[];
}

export enum SealedModeGetMatchInfoRsp_CmdId {
  CMD_ID = 704,
  UNRECOGNIZED = -1,
}

export enum SealedModeGetMatchInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_MATCH_ROOM = 2,
  UNRECOGNIZED = -1,
}

export interface SealedModeGetPlayerStatusReq {
}

export enum SealedModeGetPlayerStatusReq_CmdId {
  CMD_ID = 720,
  UNRECOGNIZED = -1,
}

export interface SealedModeGetPlayerStatusRsp {
  retcode: SealedModeGetPlayerStatusRsp_Retcode;
  status: SealedModePlayerStatus;
  matchInfo: SealedModeMatchInfo | undefined;
}

export enum SealedModeGetPlayerStatusRsp_CmdId {
  CMD_ID = 721,
  UNRECOGNIZED = -1,
}

export enum SealedModeGetPlayerStatusRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface SealedModeGetRankInfoReq {
  uniqueTicketId: number;
}

export enum SealedModeGetRankInfoReq_CmdId {
  CMD_ID = 724,
  UNRECOGNIZED = -1,
}

export interface SealedModeGetRankInfoRsp {
  retcode: SealedModeGetRankInfoRsp_Retcode;
  rankLevel: SealedPlayerRankLevel | undefined;
  roundRankList: SealedModeRoundRank[];
  rewardTakenLevelList: number[];
}

export enum SealedModeGetRankInfoRsp_CmdId {
  CMD_ID = 725,
  UNRECOGNIZED = -1,
}

export enum SealedModeGetRankInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface SealedModeGetTotalRewardScoreInfoReq {
}

export enum SealedModeGetTotalRewardScoreInfoReq_CmdId {
  CMD_ID = 738,
  UNRECOGNIZED = -1,
}

export interface SealedModeGetTotalRewardScoreInfoRsp {
  retcode: SealedModeGetTotalRewardScoreInfoRsp_Retcode;
  totalRewardScore: number;
  rewardTakenTotalScoreList: number[];
}

export enum SealedModeGetTotalRewardScoreInfoRsp_CmdId {
  CMD_ID = 739,
  UNRECOGNIZED = -1,
}

export enum SealedModeGetTotalRewardScoreInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface SealedModeMatchInfo {
  eventId: number;
  matchBeginTime: number;
}

export interface SealedModePlayerScoreNotify {
  playerList: SealedRoomPlayer[];
}

export enum SealedModePlayerScoreNotify_CmdId {
  CMD_ID = 711,
  UNRECOGNIZED = -1,
}

export interface SealedModeRankLevelRewardNotify {
  rankLevel: number;
  rewardList: RewardData[];
}

export enum SealedModeRankLevelRewardNotify_CmdId {
  CMD_ID = 726,
  UNRECOGNIZED = -1,
}

export interface SealedModeReceiveItemNotify {
  item: SealedModeUseItem | undefined;
}

export enum SealedModeReceiveItemNotify_CmdId {
  CMD_ID = 712,
  UNRECOGNIZED = -1,
}

export interface SealedModeRoundRank {
  round: number;
  rank: number;
}

export interface SealedModeSelectionNotify {
  selectionSuite: SealedSuiteSelection | undefined;
}

export enum SealedModeSelectionNotify_CmdId {
  CMD_ID = 729,
  UNRECOGNIZED = -1,
}

export interface SealedModeSelectReq {
  step: SealedSuiteSelectionStep;
  index: number;
  id: number;
}

export enum SealedModeSelectReq_CmdId {
  CMD_ID = 730,
  UNRECOGNIZED = -1,
}

export interface SealedModeSelectRsp {
  retcode: SealedModeSelectRsp_Retcode;
}

export enum SealedModeSelectRsp_CmdId {
  CMD_ID = 731,
  UNRECOGNIZED = -1,
}

export enum SealedModeSelectRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface SealedModeSettleNotify {
  settleInfoList: SealedSettleInfo[];
  round: number;
}

export enum SealedModeSettleNotify_CmdId {
  CMD_ID = 717,
  UNRECOGNIZED = -1,
}

export interface SealedModeStartMatchReq {
  eventId: number;
  player: SealedMatchPlayer | undefined;
  eloScore: number;
  ticketId: number;
  round: number;
  rankLevel: number;
  rankStar: number;
  ticketTime: number;
  avatarSuiteList: AvatarSuite[];
}

export enum SealedModeStartMatchReq_CmdId {
  CMD_ID = 701,
  UNRECOGNIZED = -1,
}

export interface SealedModeStartMatchRsp {
  retcode: SealedModeStartMatchRsp_Retcode;
}

export enum SealedModeStartMatchRsp_CmdId {
  CMD_ID = 702,
  UNRECOGNIZED = -1,
}

export enum SealedModeStartMatchRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_BEGUN = 2,
  UNRECOGNIZED = -1,
}

export interface SealedModeStartNewSelectionReq {
}

export enum SealedModeStartNewSelectionReq_CmdId {
  CMD_ID = 727,
  UNRECOGNIZED = -1,
}

export interface SealedModeStartNewSelectionRsp {
  retcode: SealedModeStartNewSelectionRsp_Retcode;
}

export enum SealedModeStartNewSelectionRsp_CmdId {
  CMD_ID = 728,
  UNRECOGNIZED = -1,
}

export enum SealedModeStartNewSelectionRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  IS_SELECTING = 2,
  IS_FINISH = 3,
  UNRECOGNIZED = -1,
}

export interface SealedModeStartSelectionReq {
}

export enum SealedModeStartSelectionReq_CmdId {
  CMD_ID = 598,
  UNRECOGNIZED = -1,
}

export interface SealedModeStartSelectionRsp {
  retcode: SealedModeStartSelectionRsp_Retcode;
}

export enum SealedModeStartSelectionRsp_CmdId {
  CMD_ID = 599,
  UNRECOGNIZED = -1,
}

export enum SealedModeStartSelectionRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  IS_SELECTING = 2,
  AVATAR_FULL = 3,
  UNRECOGNIZED = -1,
}

export interface SealedModeSyncLevelInfoReq {
  seq: number;
  level: number;
  blockItemUniqueIdList: number[];
}

export enum SealedModeSyncLevelInfoReq_CmdId {
  CMD_ID = 715,
  UNRECOGNIZED = -1,
}

export interface SealedModeSyncLevelInfoRsp {
  retcode: SealedModeSyncLevelInfoRsp_Retcode;
  level: number;
  useItemList: SealedModeUseItem[];
  seq: number;
}

export enum SealedModeSyncLevelInfoRsp_CmdId {
  CMD_ID = 716,
  UNRECOGNIZED = -1,
}

export enum SealedModeSyncLevelInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface SealedModeTakeTotalScoreRewardReq {
  totalScore: number;
}

export enum SealedModeTakeTotalScoreRewardReq_CmdId {
  CMD_ID = 740,
  UNRECOGNIZED = -1,
}

export interface SealedModeTakeTotalScoreRewardRsp {
  retcode: SealedModeTakeTotalScoreRewardRsp_Retcode;
  totalScore: number;
  rewardDataList: RewardData[];
}

export enum SealedModeTakeTotalScoreRewardRsp_CmdId {
  CMD_ID = 741,
  UNRECOGNIZED = -1,
}

export enum SealedModeTakeTotalScoreRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  TOTAL_SCORE_LACK = 2,
  NO_REWARD = 3,
  HAVE_TAKEN = 4,
  UNRECOGNIZED = -1,
}

export interface SealedModeUpdateCheatDataReq {
  stageId: number;
  eventId: number;
  cheatDataList: StageCheatData[];
}

export enum SealedModeUpdateCheatDataReq_CmdId {
  CMD_ID = 734,
  UNRECOGNIZED = -1,
}

export interface SealedModeUpdateCheatDataRsp {
  retcode: SealedModeUpdateCheatDataRsp_Retcode;
}

export enum SealedModeUpdateCheatDataRsp_CmdId {
  CMD_ID = 735,
  UNRECOGNIZED = -1,
}

export enum SealedModeUpdateCheatDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface SealedModeUpdateScoreReq {
  level: number;
  score: number;
}

export enum SealedModeUpdateScoreReq_CmdId {
  CMD_ID = 709,
  UNRECOGNIZED = -1,
}

export interface SealedModeUpdateScoreRsp {
  retcode: SealedModeUpdateScoreRsp_Retcode;
  level: number;
  score: number;
}

export enum SealedModeUpdateScoreRsp_CmdId {
  CMD_ID = 710,
  UNRECOGNIZED = -1,
}

export enum SealedModeUpdateScoreRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  STATE_MISMATCH = 2,
  UNRECOGNIZED = -1,
}

export interface SealedModeUseItem {
  uniqueId: number;
  itemId: number;
  fromUid: number;
  toUid: number;
}

export interface SealedModeUseItemReq {
  itemId: number;
  toUidList: number[];
}

export enum SealedModeUseItemReq_CmdId {
  CMD_ID = 713,
  UNRECOGNIZED = -1,
}

export interface SealedModeUseItemRsp {
  retcode: SealedModeUseItemRsp_Retcode;
}

export enum SealedModeUseItemRsp_CmdId {
  CMD_ID = 714,
  UNRECOGNIZED = -1,
}

export enum SealedModeUseItemRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface SealedModeUseTicketReq {
}

export enum SealedModeUseTicketReq_CmdId {
  CMD_ID = 722,
  UNRECOGNIZED = -1,
}

export interface SealedModeUseTicketRsp {
  retcode: SealedModeUseTicketRsp_Retcode;
}

export enum SealedModeUseTicketRsp_CmdId {
  CMD_ID = 723,
  UNRECOGNIZED = -1,
}

export enum SealedModeUseTicketRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_LEFT_TIMES = 2,
  UNRECOGNIZED = -1,
}

export interface SealedModeWinBattleReq {
  level: number;
  score: number;
}

export enum SealedModeWinBattleReq_CmdId {
  CMD_ID = 736,
  UNRECOGNIZED = -1,
}

export interface SealedModeWinBattleRsp {
  retcode: SealedModeWinBattleRsp_Retcode;
}

export enum SealedModeWinBattleRsp_CmdId {
  CMD_ID = 737,
  UNRECOGNIZED = -1,
}

export enum SealedModeWinBattleRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface SealedModeWinnerNotify {
  uid: number;
  endTime: number;
}

export enum SealedModeWinnerNotify_CmdId {
  CMD_ID = 718,
  UNRECOGNIZED = -1,
}

export interface SealedPlayerRankLevel {
  rankLevel: number;
  rankStar: number;
}

export interface SealedRoomPlayer {
  uid: number;
  level: number;
  score: number;
  rank: number;
}

export interface SealedSettleInfo {
  uid: number;
  level: number;
  score: number;
  timeCost: number;
  bonusPoints: number;
  totalBonusPoints: number;
  avatarSuiteList: AvatarSuite[];
}

export interface SealedSuiteSelection {
  status: SealedSuiteSelectionStatus;
  beginTime: number;
  step: SealedSuiteSelectionStep;
  choiceList: number[];
  avatarSuiteList: AvatarSuite[];
}

export interface SearchArmadaReq {
  name: string;
  labelIdList: number[];
}

export enum SearchArmadaReq_CmdId {
  CMD_ID = 2605,
  UNRECOGNIZED = -1,
}

export interface SearchArmadaRsp {
  retcode: SearchArmadaRsp_Retcode;
  armadaList: ArmadaBriefData[];
}

export enum SearchArmadaRsp_CmdId {
  CMD_ID = 2606,
  UNRECOGNIZED = -1,
}

export enum SearchArmadaRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface SecurityPasswordInfo {
  remainFailTimes: number;
}

export interface SecurityPasswordOpReq {
  password: string;
  opType: SecurityPasswordOpType;
  paraList: number[];
}

export enum SecurityPasswordOpReq_CmdId {
  CMD_ID = 5029,
  UNRECOGNIZED = -1,
}

export interface SecurityPasswordOpRsp {
  retcode: SecurityPasswordOpRsp_Retcode;
  opType: SecurityPasswordOpType;
  securityPasswordInfo: SecurityPasswordInfo | undefined;
}

export enum SecurityPasswordOpRsp_CmdId {
  CMD_ID = 5030,
  UNRECOGNIZED = -1,
}

export enum SecurityPasswordOpRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  TOO_MANY_FAILS = 2,
  WRONG_PASSWORD = 3,
  UNRECOGNIZED = -1,
}

export interface SecurityPasswordRejectionNotify {
}

export enum SecurityPasswordRejectionNotify_CmdId {
  CMD_ID = 5033,
  UNRECOGNIZED = -1,
}

export interface SelectAdventureQuestReq {
  poolId: number;
  avatarList: number[];
  elfId: number;
}

export enum SelectAdventureQuestReq_CmdId {
  CMD_ID = 3902,
  UNRECOGNIZED = -1,
}

export interface SelectAdventureQuestRsp {
  retcode: SelectAdventureQuestRsp_Retcode;
}

export enum SelectAdventureQuestRsp_CmdId {
  CMD_ID = 3903,
  UNRECOGNIZED = -1,
}

export enum SelectAdventureQuestRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_FINISHED = 2,
  HAS_TAKE = 3,
  LACK_GRAIN = 4,
  LACK_STAMINA = 5,
  AVATAR_LOCK = 6,
  AVATAR_IN_QUEST = 7,
  AVATAR_NUM_ERROR = 8,
  ELF_LOCK = 9,
  ELF_IN_QUEST = 10,
  SKILL_LACK = 11,
  UNRECOGNIZED = -1,
}

export interface SelectAvatarEquipSuiteReq {
  avatarId: number;
  suiteId: number;
}

export enum SelectAvatarEquipSuiteReq_CmdId {
  CMD_ID = 1458,
  UNRECOGNIZED = -1,
}

export interface SelectAvatarEquipSuiteRsp {
  retcode: SelectAvatarEquipSuiteRsp_Retcode;
  succNum: number;
  suiteId: number;
}

export enum SelectAvatarEquipSuiteRsp_CmdId {
  CMD_ID = 1459,
  UNRECOGNIZED = -1,
}

export enum SelectAvatarEquipSuiteRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_LOCK = 2,
  SLOT_WEAPON = 3,
  SLOT_STIGMATA_1 = 4,
  SLOT_STIGMATA_2 = 5,
  SLOT_STIGMATA_3 = 6,
  UNRECOGNIZED = -1,
}

export interface SelectAvatarSuiteReq {
  sysId: number;
  step: number;
  index: number;
  id: number;
}

export enum SelectAvatarSuiteReq_CmdId {
  CMD_ID = 580,
  UNRECOGNIZED = -1,
}

export interface SelectAvatarSuiteRsp {
  retcode: SelectAvatarSuiteRsp_Retcode;
}

export enum SelectAvatarSuiteRsp_CmdId {
  CMD_ID = 581,
  UNRECOGNIZED = -1,
}

export enum SelectAvatarSuiteRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface SelectDLCTalentAffixReq {
  avatarId: number;
  talentId: number;
  isSelect: boolean;
}

export enum SelectDLCTalentAffixReq_CmdId {
  CMD_ID = 3584,
  UNRECOGNIZED = -1,
}

export interface SelectDLCTalentAffixRsp {
  retcode: SelectDLCTalentAffixRsp_Retcode;
}

export enum SelectDLCTalentAffixRsp_CmdId {
  CMD_ID = 3585,
  UNRECOGNIZED = -1,
}

export enum SelectDLCTalentAffixRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_NEW_AFFIX = 2,
  UNRECOGNIZED = -1,
}

export interface SelectGodWarChallengeAvatarReq {
  godWarId: number;
  taleId: number;
  avatarIdList: number[];
  supportAvatarIdList: number[];
  elfId: number;
  extraItemId: number;
  isUseVirtualAvatar: boolean;
  boonBuffIdList: number[];
  stepLevel: number;
  assistantExtraItemId: number;
}

export enum SelectGodWarChallengeAvatarReq_CmdId {
  CMD_ID = 6152,
  UNRECOGNIZED = -1,
}

export interface SelectGodWarChallengeAvatarRsp {
  retcode: SelectGodWarChallengeAvatarRsp_Retcode;
  godWarId: number;
  taleId: number;
}

export enum SelectGodWarChallengeAvatarRsp_CmdId {
  CMD_ID = 6153,
  UNRECOGNIZED = -1,
}

export enum SelectGodWarChallengeAvatarRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ALREADY_SELECTED = 2,
  AVATAR_ERROR = 3,
  SUPPORT_AVATAR_ERROR = 4,
  ELF_ERROR = 5,
  AVATAR_SCHEDULE_ERROR = 6,
  PUNISH_BUFF_ERROR = 7,
  FEATURE_CLOSE = 8,
  FORCE_SETTLE = 9,
  NOT_OPEN = 10,
  BOON_BUFF_ERROR = 11,
  AVATAR_MISSION_NOT_FINISH = 12,
  EXTRA_ITEM_ERROR = 13,
  UNRECOGNIZED = -1,
}

export interface SelectNewStigmataRuneReq {
  uniqueId: number;
  isSelect: boolean;
  timesType: StigmataRefineTimesType;
  selectUniqueId: number;
}

export enum SelectNewStigmataRuneReq_CmdId {
  CMD_ID = 195,
  UNRECOGNIZED = -1,
}

export interface SelectNewStigmataRuneRsp {
  retcode: SelectNewStigmataRuneRsp_Retcode;
  selectUniqueId: number;
  isSelect: boolean;
}

export enum SelectNewStigmataRuneRsp_CmdId {
  CMD_ID = 196,
  UNRECOGNIZED = -1,
}

export enum SelectNewStigmataRuneRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  STIGMATA_NOT_EXIST = 2,
  NO_NEW_RUNE = 3,
  SELECT_EMPTY = 4,
  NOT_OPEN = 5,
  TOO_FAST = 6,
  UNRECOGNIZED = -1,
}

export interface SellAvatarFragmentReq {
  fragmentList: AvatarFragment[];
}

export enum SellAvatarFragmentReq_CmdId {
  CMD_ID = 102,
  UNRECOGNIZED = -1,
}

export interface SellAvatarFragmentRsp {
  retcode: SellAvatarFragmentRsp_Retcode;
  scoinAdd: number;
}

export enum SellAvatarFragmentRsp_CmdId {
  CMD_ID = 103,
  UNRECOGNIZED = -1,
}

export enum SellAvatarFragmentRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  FRAGMENT_NOT_ENOUGH = 2,
  UNRECOGNIZED = -1,
}

export interface SendArmadaSystemChatMsgNotify {
  chatMsg: ArmadaSystemChatMsg | undefined;
}

export enum SendArmadaSystemChatMsgNotify_CmdId {
  CMD_ID = 2661,
  UNRECOGNIZED = -1,
}

export interface SendChatMsgNotify {
  chatMsg: ChatMsg | undefined;
  targetUidList: number[];
  extraChatParam: ExtraChatParam | undefined;
}

export enum SendChatMsgNotify_CmdId {
  CMD_ID = 2234,
  UNRECOGNIZED = -1,
}

export interface SendChatRedEnvelopeReq {
  itemId: number;
  channel: number;
  msg: string;
  nickname: string;
  armadaId: number;
  redEnvelopeId: number;
}

export enum SendChatRedEnvelopeReq_CmdId {
  CMD_ID = 1163,
  UNRECOGNIZED = -1,
}

export interface SendChatRedEnvelopeRsp {
  retcode: SendChatRedEnvelopeRsp_Retcode;
  itemId: number;
  channel: number;
  msg: string;
  redEnvelopeId: number;
  expireTime: number;
}

export enum SendChatRedEnvelopeRsp_CmdId {
  CMD_ID = 1164,
  UNRECOGNIZED = -1,
}

export enum SendChatRedEnvelopeRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LACK_ITEM = 2,
  LACK_TIMES = 3,
  CHAT_FORBIDEN = 4,
  LACK_CD = 5,
  LACK_LEVEL = 6,
  NOT_IN_CHATWORLD = 7,
  NOT_IN_ARMADA = 8,
  NOT_IN_WORLD_CHATROOM = 9,
  SENSITIVE_WORDS = 10,
  UNRECOGNIZED = -1,
}

export interface SendCommonChatworldMsgNotify {
  msg: ChatworldMsg | undefined;
}

export enum SendCommonChatworldMsgNotify_CmdId {
  CMD_ID = 2404,
  UNRECOGNIZED = -1,
}

export interface SendDanmakuReq {
  danmakuSlot: number;
  content: string;
}

export enum SendDanmakuReq_CmdId {
  CMD_ID = 1543,
  UNRECOGNIZED = -1,
}

export interface SendDanmakuRsp {
  retcode: SendDanmakuRsp_Retcode;
  danmakuSlot: number;
  content: DanmakuContent | undefined;
  blacklistExpireTime: number;
}

export enum SendDanmakuRsp_CmdId {
  CMD_ID = 1544,
  UNRECOGNIZED = -1,
}

export enum SendDanmakuRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SENSITIVE_WORDS = 2,
  CHAT_FORBIDEN = 3,
  TOO_FREQUENT = 4,
  DANMAKU_CLOSED = 5,
  IN_BLACKLIST = 6,
  NUM_LIMIT = 7,
  LENGTH_LIMIT = 8,
  UNRECOGNIZED = -1,
}

export interface SendPlayerCardMsgReq {
  targetUid: number;
  msg: string;
  chatMsg: ChatMsg | undefined;
  msgNumLimit: number;
  isFriend: boolean;
}

export enum SendPlayerCardMsgReq_CmdId {
  CMD_ID = 486,
  UNRECOGNIZED = -1,
}

export interface SendPlayerCardMsgRsp {
  retcode: SendPlayerCardMsgRsp_Retcode;
  targetUid: number;
  msgIndex: number;
  forbiddenTime: number;
  chatMsg: ChatMsg | undefined;
}

export enum SendPlayerCardMsgRsp_CmdId {
  CMD_ID = 493,
  UNRECOGNIZED = -1,
}

export enum SendPlayerCardMsgRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SEND_NUM_LIMIT = 2,
  SEND_NUM_LIMIT_PLAYER = 3,
  MSG_INVALID = 4,
  BLACK_LIST = 5,
  FORBIDDEN = 6,
  ONLY_FRIEND = 7,
  MSG_CLOSED = 8,
  UNRECOGNIZED = -1,
}

export interface SendRoomChatMsgNotify {
  chatMsg: ChatMsg | undefined;
  isBroadcastMsg: boolean;
  roomMode: RoomMode;
  targetUidList: number[];
}

export enum SendRoomChatMsgNotify_CmdId {
  CMD_ID = 3163,
  UNRECOGNIZED = -1,
}

export interface SensitiveWordCheckReq {
  content: string;
}

export enum SensitiveWordCheckReq_CmdId {
  CMD_ID = 5005,
  UNRECOGNIZED = -1,
}

export interface SensitiveWordCheckRsp {
  retcode: SensitiveWordCheckRsp_Retcode;
}

export enum SensitiveWordCheckRsp_CmdId {
  CMD_ID = 5006,
  UNRECOGNIZED = -1,
}

export enum SensitiveWordCheckRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SENSITIVE_WORDS = 2,
  UNRECOGNIZED = -1,
}

export interface ServerStopGachaMsgData {
}

export interface SetArmadaApplyReq {
  applyLevel: number;
  autoPass: boolean;
  autoPassLevel: number;
}

export enum SetArmadaApplyReq_CmdId {
  CMD_ID = 2613,
  UNRECOGNIZED = -1,
}

export interface SetArmadaApplyRsp {
  retcode: SetArmadaApplyRsp_Retcode;
}

export enum SetArmadaApplyRsp_CmdId {
  CMD_ID = 2614,
  UNRECOGNIZED = -1,
}

export enum SetArmadaApplyRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_GRANTED = 2,
  NOT_IN_ARMADA = 3,
  LEVEL_ERROR = 4,
  UNRECOGNIZED = -1,
}

export interface SetArmadaBulletinReq {
  bulletin: string;
  contact: string;
}

export enum SetArmadaBulletinReq_CmdId {
  CMD_ID = 2615,
  UNRECOGNIZED = -1,
}

export interface SetArmadaBulletinRsp {
  retcode: SetArmadaBulletinRsp_Retcode;
  bulletin: string;
  oldBulletin: string;
  auditBulletin: string;
  cdEndTime: number;
}

export enum SetArmadaBulletinRsp_CmdId {
  CMD_ID = 2616,
  UNRECOGNIZED = -1,
}

export enum SetArmadaBulletinRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_GRANTED = 2,
  FORMAT_ERROR = 3,
  SENSITIVE_WORDS = 4,
  NOT_IN_ARMADA = 5,
  IN_CD = 6,
  IN_AUDIT = 7,
  UNRECOGNIZED = -1,
}

export interface SetArmadaLabelReq {
  label: ArmadaLabel | undefined;
}

export enum SetArmadaLabelReq_CmdId {
  CMD_ID = 2840,
  UNRECOGNIZED = -1,
}

export interface SetArmadaLabelRsp {
  retcode: SetArmadaLabelRsp_Retcode;
  label: ArmadaLabel | undefined;
}

export enum SetArmadaLabelRsp_CmdId {
  CMD_ID = 2841,
  UNRECOGNIZED = -1,
}

export enum SetArmadaLabelRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  NOT_LEADER = 3,
  LABEL_ERROR = 4,
  PREFIX_ERROR = 5,
  FORMAT_ERROR = 6,
  HEXIE_OPEN = 7,
  SENSITIVE_WORDS = 8,
  UNRECOGNIZED = -1,
}

export interface SetArmadaPositionReq {
  targetUid: number;
  position: ArmadaPosition;
}

export enum SetArmadaPositionReq_CmdId {
  CMD_ID = 2621,
  UNRECOGNIZED = -1,
}

export interface SetArmadaPositionRsp {
  retcode: SetArmadaPositionRsp_Retcode;
}

export enum SetArmadaPositionRsp_CmdId {
  CMD_ID = 2622,
  UNRECOGNIZED = -1,
}

export enum SetArmadaPositionRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_GRANTED = 2,
  NOT_IN_ARMADA = 3,
  TARGET_NOT_IN_ARMADA = 4,
  OFFICER_FULL = 5,
  UNRECOGNIZED = -1,
}

export interface SetAvatarEquipSuiteReq {
  avatarId: number;
  suiteId: number;
  suite: AvatarEquipSuite | undefined;
}

export enum SetAvatarEquipSuiteReq_CmdId {
  CMD_ID = 1456,
  UNRECOGNIZED = -1,
}

export interface SetAvatarEquipSuiteRsp {
  retcode: SetAvatarEquipSuiteRsp_Retcode;
  suiteId: number;
}

export enum SetAvatarEquipSuiteRsp_CmdId {
  CMD_ID = 1457,
  UNRECOGNIZED = -1,
}

export enum SetAvatarEquipSuiteRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_LOCK = 2,
  SLOT_WEAPON = 3,
  SLOT_STIGMATA_1 = 4,
  SLOT_STIGMATA_2 = 5,
  SLOT_STIGMATA_3 = 6,
  SUITE_ID = 7,
  SENSITIVE_WORDS = 8,
  NAME_LEN_ERROR = 9,
  TOO_FREQUENT = 10,
  FORMAT_ERROR = 11,
  UNRECOGNIZED = -1,
}

export interface SetChatgroupReq {
  chatgroupId: number;
  name: string;
  notice: string;
  iconId: number;
  labelIdList: number[];
}

export enum SetChatgroupReq_CmdId {
  CMD_ID = 2206,
  UNRECOGNIZED = -1,
}

export interface SetChatgroupRsp {
  retcode: SetChatgroupRsp_Retcode;
  chatgroupId: number;
  name: string;
  notice: string;
  iconId: number;
  labelIdList: number[];
  oldName: string;
  oldNotice: string;
  auditName: string;
  auditNotice: string;
  cdEndTime: number;
}

export enum SetChatgroupRsp_CmdId {
  CMD_ID = 2207,
  UNRECOGNIZED = -1,
}

export enum SetChatgroupRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_CREATER = 2,
  SENSITIVE_WORD = 3,
  LABEL_ERROR = 4,
  NAME_FORMAT_ERROR = 5,
  NOTICE_FORMAT_ERROR = 6,
  FORBIDDEN = 7,
  IN_CD = 8,
  IN_AUDIT = 9,
  UNRECOGNIZED = -1,
}

export interface SetClientDataReq {
  clientData: ClientData | undefined;
}

export enum SetClientDataReq_CmdId {
  CMD_ID = 1588,
  UNRECOGNIZED = -1,
}

export interface SetClientDataRsp {
  retcode: SetClientDataRsp_Retcode;
  type: ClientDataType;
  id: number;
}

export enum SetClientDataRsp_CmdId {
  CMD_ID = 1589,
  UNRECOGNIZED = -1,
}

export enum SetClientDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SIZE_LIMIT = 2,
  UNKNOWN_ID = 3,
  UNRECOGNIZED = -1,
}

export interface SetCustomHeadReq {
  id: number;
}

export enum SetCustomHeadReq_CmdId {
  CMD_ID = 1525,
  UNRECOGNIZED = -1,
}

export interface SetCustomHeadRsp {
  retcode: SetCustomHeadRsp_Retcode;
}

export enum SetCustomHeadRsp_CmdId {
  CMD_ID = 1526,
  UNRECOGNIZED = -1,
}

export enum SetCustomHeadRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LOCKED = 2,
  UNRECOGNIZED = -1,
}

export interface SetDormAvatarReq {
  houseId: number;
  roomAvatarList: DormRoomAvatar[];
}

export enum SetDormAvatarReq_CmdId {
  CMD_ID = 611,
  UNRECOGNIZED = -1,
}

export interface SetDormAvatarRsp {
  retcode: SetDormAvatarRsp_Retcode;
}

export enum SetDormAvatarRsp_CmdId {
  CMD_ID = 612,
  UNRECOGNIZED = -1,
}

export enum SetDormAvatarRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HOUSE_NOT_EXIST = 2,
  ROOM_NOT_EXIST = 3,
  AVATAR_NOT_EXIST = 4,
  AVATAR_LIMIT = 5,
  UNRECOGNIZED = -1,
}

export interface SetDormNameReq {
  houseId: number;
  roomId: number;
  name: string;
}

export enum SetDormNameReq_CmdId {
  CMD_ID = 615,
  UNRECOGNIZED = -1,
}

export interface SetDormNameRsp {
  retcode: SetDormNameRsp_Retcode;
  cdEndTime: number;
}

export enum SetDormNameRsp_CmdId {
  CMD_ID = 616,
  UNRECOGNIZED = -1,
}

export enum SetDormNameRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HOUSE_NOT_EXIST = 2,
  ROOM_NOT_EXIST = 3,
  FORMAT_ERROR = 4,
  SENSITIVE_WORDS = 5,
  NAME_REPEAT = 6,
  IN_AUDIT = 7,
  IN_CD = 8,
  UNRECOGNIZED = -1,
}

export interface SetDormSnsInfoReq {
  showHouse: number;
  showRoom: number;
  visitAvatar: number;
  isAllowVisit: boolean;
}

export enum SetDormSnsInfoReq_CmdId {
  CMD_ID = 635,
  UNRECOGNIZED = -1,
}

export interface SetDormSnsInfoRsp {
  retcode: SetDormSnsInfoRsp_Retcode;
}

export enum SetDormSnsInfoRsp_CmdId {
  CMD_ID = 636,
  UNRECOGNIZED = -1,
}

export enum SetDormSnsInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HOUSE_NOT_EXIST = 2,
  ROOM_NOT_EXIST = 3,
  AVATAR_NOT_EXIST = 4,
  UNRECOGNIZED = -1,
}

export interface SetDressReq {
  avatarId: number;
  dressId: number;
}

export enum SetDressReq_CmdId {
  CMD_ID = 248,
  UNRECOGNIZED = -1,
}

export interface SetDressRsp {
  retcode: SetDressRsp_Retcode;
}

export enum SetDressRsp_CmdId {
  CMD_ID = 249,
  UNRECOGNIZED = -1,
}

export enum SetDressRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_NOT_EXIST = 2,
  DRESS_NOT_EXIST = 3,
  DRESS_CAN_NOT_USE = 4,
  DRESS_IN_USE = 5,
  UNRECOGNIZED = -1,
}

export interface SetFrameUseReq {
  frameId: number;
}

export enum SetFrameUseReq_CmdId {
  CMD_ID = 592,
  UNRECOGNIZED = -1,
}

export interface SetFrameUseRsp {
  retcode: SetFrameUseRsp_Retcode;
  frameId: number;
}

export enum SetFrameUseRsp_CmdId {
  CMD_ID = 593,
  UNRECOGNIZED = -1,
}

export enum SetFrameUseRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface SetFriendRemarkReq {
  uid: number;
  newRemark: string;
  oldRemark: string;
}

export enum SetFriendRemarkReq_CmdId {
  CMD_ID = 972,
  UNRECOGNIZED = -1,
}

export interface SetFriendRemarkRsp {
  retcode: SetFriendRemarkRsp_Retcode;
  uid: number;
  remark: string;
  setFriendRemarkCdEndTime: number;
}

export enum SetFriendRemarkRsp_CmdId {
  CMD_ID = 973,
  UNRECOGNIZED = -1,
}

export enum SetFriendRemarkRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_FRIEND = 2,
  FORMAT_ERROR = 3,
  SENSITIVE_WORDS = 4,
  SAME_REMARK = 5,
  FEATURE_CLOSED = 6,
  IN_AUDIT = 7,
  IN_CD = 8,
  UNRECOGNIZED = -1,
}

export interface SetLevelLockReq {
  levelLockId: number;
}

export enum SetLevelLockReq_CmdId {
  CMD_ID = 1488,
  UNRECOGNIZED = -1,
}

export interface SetLevelLockRsp {
  retcode: SetLevelLockRsp_Retcode;
  levelLockId: number;
}

export enum SetLevelLockRsp_CmdId {
  CMD_ID = 1489,
  UNRECOGNIZED = -1,
}

export enum SetLevelLockRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_MEET_MAX_LEVEL = 2,
  NOT_NEXT_ID = 3,
  UNRECOGNIZED = -1,
}

export interface SetLobbyFastEntranceReq {
  lobbyId: number;
  isOpen: boolean;
}

export enum SetLobbyFastEntranceReq_CmdId {
  CMD_ID = 319,
  UNRECOGNIZED = -1,
}

export interface SetLobbyFastEntranceRsp {
  lobbyId: number;
  retcode: SetLobbyFastEntranceRsp_Retcode;
  isOpen: boolean;
}

export enum SetLobbyFastEntranceRsp_CmdId {
  CMD_ID = 320,
  UNRECOGNIZED = -1,
}

export enum SetLobbyFastEntranceRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface SetOpenworldEndlessMonsterGroupProgressReq {
  groupId: number;
  progress: number;
  type: EndlessType;
}

export enum SetOpenworldEndlessMonsterGroupProgressReq_CmdId {
  CMD_ID = 3448,
  UNRECOGNIZED = -1,
}

export interface SetOpenworldEndlessMonsterGroupProgressRsp {
  retcode: SetOpenworldEndlessMonsterGroupProgressRsp_Retcode;
  monsterGroupList: OpenworldEndlessMonsterGroup[];
  type: EndlessType;
}

export enum SetOpenworldEndlessMonsterGroupProgressRsp_CmdId {
  CMD_ID = 3449,
  UNRECOGNIZED = -1,
}

export enum SetOpenworldEndlessMonsterGroupProgressRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  GROUP_ERROR = 2,
  PROGRESS_ERROR = 3,
  HAS_FINISHED = 4,
  UNRECOGNIZED = -1,
}

export interface SetPlayerTagNotify {
  uid: string;
  tagList: string[];
}

export enum SetPlayerTagNotify_CmdId {
  CMD_ID = 802,
  UNRECOGNIZED = -1,
}

export interface SetReclaimAvatarTeamReq {
  reclaimAvatarTeamList: number[];
}

export enum SetReclaimAvatarTeamReq_CmdId {
  CMD_ID = 1171,
  UNRECOGNIZED = -1,
}

export interface SetReclaimAvatarTeamRsp {
  retcode: SetReclaimAvatarTeamRsp_Retcode;
}

export enum SetReclaimAvatarTeamRsp_CmdId {
  CMD_ID = 1172,
  UNRECOGNIZED = -1,
}

export enum SetReclaimAvatarTeamRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_NOT_EXIST = 2,
  AVATAR_REPEATED = 3,
  AVATAR_EMPTY = 4,
  TEAM_SIZE_LIMIT = 5,
  UNRECOGNIZED = -1,
}

export interface SetSecurityPasswordReq {
  password: string;
}

export enum SetSecurityPasswordReq_CmdId {
  CMD_ID = 5023,
  UNRECOGNIZED = -1,
}

export interface SetSecurityPasswordRsp {
  retcode: SetSecurityPasswordRsp_Retcode;
}

export enum SetSecurityPasswordRsp_CmdId {
  CMD_ID = 5024,
  UNRECOGNIZED = -1,
}

export enum SetSecurityPasswordRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  IS_NOT_OFTEN_DEVICE = 2,
  ALREADY_SET = 3,
  UNRECOGNIZED = -1,
}

export interface SetSelfDescReq {
  selfDesc: string;
}

export enum SetSelfDescReq_CmdId {
  CMD_ID = 78,
  UNRECOGNIZED = -1,
}

export interface SetSelfDescRsp {
  retcode: SetSelfDescRsp_Retcode;
  cdEndTime: number;
}

export enum SetSelfDescRsp_CmdId {
  CMD_ID = 79,
  UNRECOGNIZED = -1,
}

export enum SetSelfDescRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  FORMAT_ERROR = 2,
  SENSITIVE_WORDS = 3,
  IN_AUDIT = 4,
  IN_CD = 5,
  UNRECOGNIZED = -1,
}

export interface SettingDict {
  dictItemList: SettingDict_DictItem[];
}

export enum SettingDict_ValueType {
  INT = 1,
  FLOAT = 2,
  STRING = 3,
  UNRECOGNIZED = -1,
}

export interface SettingDict_DictItem {
  key: string;
  type: SettingDict_ValueType;
  value: string;
}

export interface SetTransferPwdReq {
  transferPwd: string;
}

export enum SetTransferPwdReq_CmdId {
  CMD_ID = 245,
  UNRECOGNIZED = -1,
}

export interface SetTransferPwdRsp {
  retcode: SetTransferPwdRsp_Retcode;
  transferCode: string;
  transferPwdExpireTime: number;
}

export enum SetTransferPwdRsp_CmdId {
  CMD_ID = 246,
  UNRECOGNIZED = -1,
}

export enum SetTransferPwdRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  PWD_FORMAT_ERROR = 2,
  UNRECOGNIZED = -1,
}

export interface SetVirtualAvatarTeamReq {
  groupId: number;
  avatarTeamList: number[];
}

export enum SetVirtualAvatarTeamReq_CmdId {
  CMD_ID = 3504,
  UNRECOGNIZED = -1,
}

export interface SetVirtualAvatarTeamRsp {
  retcode: SetVirtualAvatarTeamRsp_Retcode;
  groupId: number;
  avatarTeamList: number[];
}

export enum SetVirtualAvatarTeamRsp_CmdId {
  CMD_ID = 3505,
  UNRECOGNIZED = -1,
}

export enum SetVirtualAvatarTeamRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_NOT_EXIST = 2,
  AVATAR_REPEATED = 3,
  AVATAR_EMPTY = 4,
  TEAM_SIZE_LIMIT = 5,
  LOCK = 6,
  UNRECOGNIZED = -1,
}

export interface SetWarshipAvatarReq {
  firstAvatarId: number;
  secondAvatarId: number;
}

export enum SetWarshipAvatarReq_CmdId {
  CMD_ID = 1492,
  UNRECOGNIZED = -1,
}

export interface SetWarshipAvatarRsp {
  retcode: SetWarshipAvatarRsp_Retcode;
}

export enum SetWarshipAvatarRsp_CmdId {
  CMD_ID = 1493,
  UNRECOGNIZED = -1,
}

export enum SetWarshipAvatarRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_NOT_EXIST = 2,
  AVATAR_NOT_TWINS = 3,
  UNRECOGNIZED = -1,
}

export interface SetWarshipComponentReq {
  warshipId: number;
  componentList: WarshipComponent[];
}

export enum SetWarshipComponentReq_CmdId {
  CMD_ID = 5458,
  UNRECOGNIZED = -1,
}

export interface SetWarshipComponentRsp {
  retcode: SetWarshipComponentRsp_Retcode;
}

export enum SetWarshipComponentRsp_CmdId {
  CMD_ID = 5459,
  UNRECOGNIZED = -1,
}

export enum SetWarshipComponentRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  WARSHIP_NOT_EXIST = 2,
  COMPONENT_TYPE_ERROR = 3,
  COMPONENT_NOT_EXIST = 4,
  WARSHIP_ERROR = 5,
  UNRECOGNIZED = -1,
}

export interface SetWarshipReq {
  warshipId: number;
}

export enum SetWarshipReq_CmdId {
  CMD_ID = 5456,
  UNRECOGNIZED = -1,
}

export interface SetWarshipRsp {
  retcode: SetWarshipRsp_Retcode;
}

export enum SetWarshipRsp_CmdId {
  CMD_ID = 5457,
  UNRECOGNIZED = -1,
}

export enum SetWarshipRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_EXIST = 2,
  UNRECOGNIZED = -1,
}

export interface SetWarshipSettingReq {
  warshipId: number;
  settingType: WarshipSettingType;
  bgmPlayMode: WarshipBgmPlayMode;
  isWeatherFixed: boolean;
  weatherIdx: number;
}

export enum SetWarshipSettingReq_CmdId {
  CMD_ID = 5460,
  UNRECOGNIZED = -1,
}

export interface SetWarshipSettingRsp {
  retcode: SetWarshipSettingRsp_Retcode;
}

export enum SetWarshipSettingRsp_CmdId {
  CMD_ID = 5461,
  UNRECOGNIZED = -1,
}

export enum SetWarshipSettingRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  WARSHIP_NOT_EXIST = 2,
  UNRECOGNIZED = -1,
}

export interface ShareRewardRecord {
  shareId: number;
  lastTakeTime: number;
}

export interface Shop {
  shopId: number;
  isOpen: boolean;
  textMapName: string;
  shopIconPath: string;
  goodsList: Goods[];
  nextAutoRefreshTime: number;
  manualRefreshTimes: number;
  refreshItem: number;
  nextRefreshCost: number;
  maxManualRefreshTimes: number;
  shopType: number;
  currencyList: number[];
  scheduleChangeTime: number;
  shopName: string;
  unlockLevel: number;
  allGoodsIdList: number[];
  beginTime: number;
  endTime: number;
  isHot: boolean;
  multiCurrency: number;
  isDoubleConfirm: boolean;
  isShow: boolean;
  sortPriority: number;
  toolbarCurrencyList: number[];
  newCurrencyList: number[];
  freeManualRefreshTimes: number;
}

export interface ShopGoodsInfo {
  goodsId: number;
  sellNum: number;
}

export interface ShopGoodsPoolHideSwitchData {
  shopId: number;
  poolId: number;
}

export interface ShopGoodsPoolSwitchData {
  poolId: number;
}

export interface ShopGoodsSwitchData {
  goodsId: number;
}

export interface ShopSwitchData {
  shopId: number;
}

export interface SimulatePlayerData {
  uid: number;
  level: number;
  nickname: string;
  avatarTrialId: number;
}

export interface SingleRaidActivity {
  curStepStageId: number;
  lastDoneChallengeStageId: number;
  stepStageRemainEnterTimes: number;
}

export interface SlgBattleAddScoreFailNotify {
  pointId: number;
}

export enum SlgBattleAddScoreFailNotify_CmdId {
  CMD_ID = 6061,
  UNRECOGNIZED = -1,
}

export interface SlgBattleBriefCountryData {
  countryId: number;
  countryScore: number;
}

export interface SlgBattleBroadcast {
  broadcastId: number;
  triggerTime: number;
  pointId: number;
  para: number;
  triggerPlayer: SlgBroadcastPlayer | undefined;
}

export interface SlgBattleBuffData {
  buffId: number;
  type: SlgBuffType;
  num: number;
}

export interface SlgBattleCountryData {
  countryId: number;
  takeDownBossNum: number;
  buffList: SlgBattleBuffData[];
  countryScore: number;
}

export interface SlgBattleData {
  battleId: number;
  battleScheduleId: number;
  countryDataList: SlgBattleCountryData[];
  pointDataList: SlgBattlePointData[];
  beginTime: number;
  endTime: number;
  todayBeginTime: number;
  todayEndTime: number;
  playerData: SlgBattlePlayerData | undefined;
  adjoiningPointList: number[];
  lastSettleTime: number;
  isSettled: boolean;
  levelGroupId: number;
}

export interface SlgBattleInSettleNotify {
}

export enum SlgBattleInSettleNotify_CmdId {
  CMD_ID = 6070,
  UNRECOGNIZED = -1,
}

export interface SlgBattleMatchRsp {
  retcode: SlgBattleMatchRsp_Retcode;
  battleId: number;
  battleScheduleId: number;
}

export enum SlgBattleMatchRsp_CmdId {
  CMD_ID = 6054,
  UNRECOGNIZED = -1,
}

export enum SlgBattleMatchRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_BATTLE_AVAILABLE = 2,
  UNRECOGNIZED = -1,
}

export interface SlgBattlePlayerData {
  countryId: number;
  buffList: number[];
  score: number;
}

export interface SlgBattlePointBossData {
  bossId: number;
  type: SlgBossType;
  isAlive: boolean;
  bossScheduleId: number;
}

export interface SlgBattlePointCountryData {
  countryId: number;
  pointScoreU64: number;
}

export interface SlgBattlePointData {
  pointId: number;
  occupyCountryId: number;
  pointCountryDataList: SlgBattlePointCountryData[];
  bossData: SlgBattlePointBossData | undefined;
  occupiedCountryList: number[];
}

export interface SlgBattleRank {
  isAll: boolean;
  countryId: number;
  totalNum: number;
  rankData: RankShowData | undefined;
}

export interface SlgBattleSettleNotify {
  scheduleId: number;
  battleScheduleId: number;
  rewardData: RewardData | undefined;
  rank: number;
}

export enum SlgBattleSettleNotify_CmdId {
  CMD_ID = 6066,
  UNRECOGNIZED = -1,
}

export interface SlgBriefBattleData {
  battleId: number;
  battleScheduleId: number;
  countryId: number;
  countryDataList: SlgBattleBriefCountryData[];
  isSettled: boolean;
}

export interface SlgBroadcastNotify {
  broadcastList: SlgBattleBroadcast[];
}

export enum SlgBroadcastNotify_CmdId {
  CMD_ID = 6068,
  UNRECOGNIZED = -1,
}

export interface SlgBroadcastPlayer {
  uid: number;
  countryId: number;
  nickname: string;
}

export interface SlgEnrollData {
  enrollBattleScheduleId: number;
  enrollBeginTime: number;
  enrollEndTime: number;
  isEnrolled: boolean;
}

export interface SlgEnrollReq {
  battleScheduleId: number;
  groupId: number;
  matchScore: number;
  regionName: string;
}

export enum SlgEnrollReq_CmdId {
  CMD_ID = 6055,
  UNRECOGNIZED = -1,
}

export interface SlgEnrollRsp {
  retcode: SlgEnrollRsp_Retcode;
  battleScheduleId: number;
}

export enum SlgEnrollRsp_CmdId {
  CMD_ID = 6056,
  UNRECOGNIZED = -1,
}

export enum SlgEnrollRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  BATTLE_SCHEDULE_ID_ERROR = 2,
  HAS_ENROLL = 3,
  TOO_FREQUENT = 4,
  FEATURE_CLOSED = 5,
  UNRECOGNIZED = -1,
}

export interface SlgGetActivityStaminaReq {
}

export enum SlgGetActivityStaminaReq_CmdId {
  CMD_ID = 6057,
  UNRECOGNIZED = -1,
}

export interface SlgGetActivityStaminaRsp {
  retcode: SlgGetActivityStaminaRsp_Retcode;
  activityStaminaNum: number;
  lastRecoverActivityStaminaTime: number;
}

export enum SlgGetActivityStaminaRsp_CmdId {
  CMD_ID = 6058,
  UNRECOGNIZED = -1,
}

export enum SlgGetActivityStaminaRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_SCHEDULE = 2,
  UNRECOGNIZED = -1,
}

export interface SlgGetBattleRankReq {
  countryId: number;
}

export enum SlgGetBattleRankReq_CmdId {
  CMD_ID = 6062,
  UNRECOGNIZED = -1,
}

export interface SlgGetBattleRankRsp {
  retcode: SlgGetBattleRankRsp_Retcode;
  rank: SlgBattleRank | undefined;
  battleScheduleId: number;
}

export enum SlgGetBattleRankRsp_CmdId {
  CMD_ID = 6063,
  UNRECOGNIZED = -1,
}

export enum SlgGetBattleRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_SCHEDULE = 2,
  NOT_IN_BATTLE = 3,
  UNRECOGNIZED = -1,
}

export interface SlgGetBriefRankReq {
}

export enum SlgGetBriefRankReq_CmdId {
  CMD_ID = 6071,
  UNRECOGNIZED = -1,
}

export interface SlgGetBriefRankRsp {
  retcode: SlgGetBriefRankRsp_Retcode;
  allCountryRank: number;
  selfCountryRank: number;
}

export enum SlgGetBriefRankRsp_CmdId {
  CMD_ID = 6072,
  UNRECOGNIZED = -1,
}

export enum SlgGetBriefRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_BATTLE = 2,
  UNRECOGNIZED = -1,
}

export interface SlgGetDataReq {
  countryId: number;
  region: string;
}

export enum SlgGetDataReq_CmdId {
  CMD_ID = 6050,
  UNRECOGNIZED = -1,
}

export interface SlgGetDataRsp {
  retcode: SlgGetDataRsp_Retcode;
  scheduleId: number;
  nextBattleBeginTime: number;
  battleData: SlgBattleData | undefined;
  activityStaminaNum: number;
  lastRecoverActivityStaminaTime: number;
  beginTime: number;
  endTime: number;
  unlockStoryIdList: number[];
  historyBattleDataList: SlgBriefBattleData[];
  battleScheduleId: number;
  currentEnrollData: SlgEnrollData | undefined;
  takenScoreRewardIdList: number[];
  totalScore: number;
}

export enum SlgGetDataRsp_CmdId {
  CMD_ID = 6051,
  UNRECOGNIZED = -1,
}

export enum SlgGetDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  BATTLE_NOT_FOUND = 3,
  NOT_IN_BATTLE = 4,
  FEATURE_CLOSED = 5,
  UNRECOGNIZED = -1,
}

export interface SlgGetPointRankReq {
  pointId: number;
}

export enum SlgGetPointRankReq_CmdId {
  CMD_ID = 6064,
  UNRECOGNIZED = -1,
}

export interface SlgGetPointRankRsp {
  retcode: SlgGetPointRankRsp_Retcode;
  battleScheduleId: number;
  pointId: number;
  playerScore: number;
  rankList: UserRankData[];
}

export enum SlgGetPointRankRsp_CmdId {
  CMD_ID = 6065,
  UNRECOGNIZED = -1,
}

export enum SlgGetPointRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_SCHEDULE = 2,
  NOT_IN_BATTLE = 3,
  POINT_ERROR = 4,
  UNRECOGNIZED = -1,
}

export interface SlgMainPageReq {
  isInMainPage: boolean;
}

export enum SlgMainPageReq_CmdId {
  CMD_ID = 6069,
  UNRECOGNIZED = -1,
}

export interface SlgPointSweepReq {
  pointId: number;
}

export enum SlgPointSweepReq_CmdId {
  CMD_ID = 6052,
  UNRECOGNIZED = -1,
}

export interface SlgPointSweepRsp {
  retcode: SlgPointSweepRsp_Retcode;
  pointId: number;
  rewardData: RewardData | undefined;
}

export enum SlgPointSweepRsp_CmdId {
  CMD_ID = 6053,
  UNRECOGNIZED = -1,
}

export enum SlgPointSweepRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 3,
  POINT_INVALID = 4,
  COST_MATERIAL_LACK = 5,
  EQUIPMENT_FULL = 6,
  UNRECOGNIZED = -1,
}

export interface SlgTakeScoreRewardReq {
  scoreRewardType: SlgScoreRewardType;
}

export enum SlgTakeScoreRewardReq_CmdId {
  CMD_ID = 6059,
  UNRECOGNIZED = -1,
}

export interface SlgTakeScoreRewardRsp {
  retcode: SlgTakeScoreRewardRsp_Retcode;
  hasTakenScoreRewardIdList: number[];
  rewardData: RewardData | undefined;
}

export enum SlgTakeScoreRewardRsp_CmdId {
  CMD_ID = 6060,
  UNRECOGNIZED = -1,
}

export enum SlgTakeScoreRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_SCHEDULE = 2,
  UNRECOGNIZED = -1,
}

export interface SnsRequestSwitchData {
}

export interface SnsShowEndlessData {
  curType: EndlessType;
  endlessPlayerData: EndlessPlayerData | undefined;
  openworldEndlessPlayerData: OpenworldEndlessPlayer | undefined;
}

export interface SnsShowExBossData {
  curRank: number;
  totalScore: number;
  finishedBossInfoList: FinishedExBossInfo[];
  rankId: number;
  curRankPercent: number;
}

export interface SnsShowPriviledge {
  snsShowType: number;
  snsShowPriviledgeState: number;
}

export interface SnsShowTowerRaidData {
  hardLevel: number;
  maxHardLevel: number;
  totalEnterTimes: number;
  totalBattleDuringTime: number;
}

export interface SpeedUpFarmProduceReq {
  slotId: number;
  speedUpMaterialId: number;
  speedUpMaterialNum: number;
}

export enum SpeedUpFarmProduceReq_CmdId {
  CMD_ID = 1393,
  UNRECOGNIZED = -1,
}

export interface SpeedUpFarmProduceRsp {
  retcode: SpeedUpFarmProduceRsp_Retcode;
  slotId: number;
  speedUpMaterialId: number;
  speedUpMaterialNum: number;
}

export enum SpeedUpFarmProduceRsp_CmdId {
  CMD_ID = 1394,
  UNRECOGNIZED = -1,
}

export enum SpeedUpFarmProduceRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_PRODUCE = 2,
  MATERIAL_LACK = 3,
  UNRECOGNIZED = -1,
}

export interface Stage {
  id: number;
  progress: number;
  enterTimes: number;
  resetTimes: number;
  challengeIndexList: number[];
  bonusEndTime: number;
  bonusEnterTimes: number;
  bonusTotalTimes: number;
  minStageTime: number;
  maxScore: number;
  staminaDiscount: number;
  totalScore: number;
  mpRaidPassAvatarUid: number;
  mpRaidWeaponUid: number;
  mpRaidStigmataUidSet: number[];
  isDone: boolean;
  assistEnterTimes: number;
  backupChallengeIndexList: number[];
  maxBattleScore: number;
  maxRank: number;
  clientData: string;
  firstStaminaDiscount: number;
}

export interface StageActDifficultyInfo {
  actId: number;
  difficulty: number;
  hasTakeChallengeNumIndex: number[];
}

export interface StageBattleSaveClientDataReq {
  stageId: number;
  actId: number;
  clientData: string;
}

export enum StageBattleSaveClientDataReq_CmdId {
  CMD_ID = 829,
  UNRECOGNIZED = -1,
}

export interface StageBattleSaveClientDataRsp {
  retcode: StageBattleSaveClientDataRsp_Retcode;
}

export enum StageBattleSaveClientDataRsp_CmdId {
  CMD_ID = 830,
  UNRECOGNIZED = -1,
}

export enum StageBattleSaveClientDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ONE_VALID_ID = 2,
  STAGE_BEGIN = 3,
  UNRECOGNIZED = -1,
}

export interface StageBeginReq {
  stageId: number;
  avatarIdList: number[];
  avatarTeamType: AvatarTeamType;
  assistantUid: number;
  isSpeedUpStage: boolean;
  avatarTrialIdList: number[];
  elfIdList: number[];
  targetWave: number;
  gratuityStageUniqueId: number;
  isGratuityBonus: boolean;
  mtpReportType: string;
  mtpReportValue: string;
  isReBegin: boolean;
  avatarRestrictList: number[];
  isThemeWantedMpAssistMode: boolean;
  scDlcSupportAvatarId: number;
  stageBeginFloor: number;
  monsterCardUniqueIdList: number[];
}

export enum StageBeginReq_CmdId {
  CMD_ID = 43,
  UNRECOGNIZED = -1,
}

export interface StageBeginRsp {
  retcode: StageBeginRsp_Retcode;
  stageId: number;
  progress: number;
  dropItemList: DropItem[];
  isCollectCheatData: boolean;
  signKey: string;
  tag: number;
  equipBuffList: AvatarEquipBuff[];
  battleBuffList: string[];
  battleAttrList: string[];
  isTriggerBaodi: boolean;
  securityCmdBuffer: Buffer;
  stageTransactionStr: string;
  godWarSkillId: number;
}

export enum StageBeginRsp_CmdId {
  CMD_ID = 44,
  UNRECOGNIZED = -1,
}

export enum StageBeginRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  STAGE_NOT_EXIST = 2,
  LEVEL_LACK = 3,
  STAMINA_LACK = 4,
  AVATAR_ERROR = 5,
  EQUIPMENT_FULL = 6,
  ENTER_TIMES_LACK = 7,
  ASSISTANT_PLAYER_FROZEN = 8,
  ACTIVITY_LEVEL_LACK = 9,
  ACTIVITY_ENTER_TIMES_LACK = 10,
  ACTIVITY_NOT_BEGIN = 11,
  ACTIVITY_END = 12,
  AVATAR_NUM_ERROR = 13,
  CHALLENGE_NUM_LACK = 14,
  FRIEND_NUM_MAX = 15,
  EXTRA_STORY_LEVEL_LACK = 16,
  EXTRA_STORY_NOT_BEGIN = 17,
  EXTRA_STORY_END = 18,
  NOT_MEET_RESTRICT = 19,
  EQUIPMENT_MATERIAL_LIMIT = 20,
  EQUIPMENT_FRAGMENT_LIMIT = 21,
  NOT_MEET_FAST = 22,
  PRE_MP_STAGE_NOT_FINISH = 23,
  STAGE_TYPE_ERROR = 24,
  MP_LEVEL_LACK = 25,
  ACTIVITY_UNLOCK = 26,
  NOT_MEET_EXTRA_STORY_CHALLENGE_MODE = 28,
  EXTRA_STORY_EQUIPMENT_USED = 29,
  EXTRA_STORY_AVATAR_USED = 30,
  EXTRA_STORY_AVATAR_LIMIT = 31,
  STAGE_FINISH_ONCE = 32,
  SEASON_TICKET_LACK = 33,
  PRE_STAGE_NOT_FINISH = 34,
  CHALLENGE_MODE_NEED_RESET = 35,
  ALREADY_OPEN_DUNGEONS = 36,
  DUNGEONS_AREA_LOCKED = 37,
  DUNGEONS_TEST_STAGE_FIRST = 38,
  DUNGEONS_TEST_STAGE_DONE = 39,
  COST_MATERIAL_LACK = 40,
  WEEKLY_ENTER_TIMES_LACK = 41,
  RECLAIM_BOOM_ENERGY_LACK = 42,
  RECLAIM_LEVEL_LACK = 43,
  OPENWORLD_BOSS_MP_INVALID = 44,
  SCORE_LACK = 45,
  COUPLE_TOWER_FLOOR_LACK = 46,
  GENERAL_ACTIVITY_CONDITION_LIMIT = 47,
  EQUIPMENT_DISMATCH_LOCKED = 48,
  WEAPON_LOCKED = 49,
  STIGMATA_LOCKED = 50,
  ELF_ERROR = 51,
  NOT_IN_SQUAD = 52,
  ELF_CARRY_LEVEL_LIMIT = 53,
  CAMPAIGN_PHASE_ERROR = 54,
  MISSION_LOCKED = 55,
  HAS_TAKE_CAMPAIGN_REWARD = 56,
  KINGDOM_WAR_NOT_OPEN = 57,
  KINGDOM_WAR_POINT_ERROR = 58,
  KINGDOM_WAR_LEVEL_LACK = 59,
  FEATURE_CLOSED = 61,
  NOT_IN_TEAM = 62,
  EXTRA_MATERIAL_LACK = 63,
  FEATURE_LIMIT = 64,
  STAGE_MISMATCH = 65,
  GRATUITY_STAGE_NOT_EXIST = 66,
  NOT_IN_SAME_ARMADA = 67,
  ASSIST_STAMINA_LACK = 68,
  ARMADA_ACTIVITY_NOT_OPEN = 69,
  NOT_IN_ARMADA = 70,
  LOGIN_DAYS_LACK = 71,
  NOT_NEWBIE = 72,
  IN_CD = 73,
  DAILY_RAID_NOT_ACTIVE = 74,
  CHAPTER_PRE_ZONE_NOT_FINISHED = 75,
  BEAST_TIME_NOT_ENOUGH = 76,
  SINGLE_WANTED_BOX_UNPICK = 77,
  EXCLUSIVE_STAGE_CONFLICT = 78,
  THEME_WANTED_LEADER_TICKET_LACK = 79,
  THEME_WANTED_MEMBER_LOCKED = 80,
  THEME_WANTED_LOCK = 81,
  THEME_WANTED_TICKET_LACK = 82,
  SLG_BATTLE_NOT_OPEN = 83,
  SLG_BATTLE_POINT_ERROR = 84,
  SLG_BATTLE_POINT_NOT_OPEN = 85,
  UNLOCK_TIME_LIMIT = 86,
  BEGIN_FLOOR_ERROR = 87,
  OPENWORLD_STORY_NOT_FINISH = 88,
  MONSTER_CARD_MONSTER_ERROR = 89,
  MONSTER_CARD_COST_LIMIT = 90,
  CHAPTER_OW_FAME_LEVEL_LACK = 91,
  BUFF_ASSIST_STAGE_NOT_OPEN = 92,
  UNRECOGNIZED = -1,
}

export interface StageBuff {
  stageId: number;
  genBuffIdList: number[];
  holdBuffIdList: number[];
  isNew: boolean;
  carryBuffIdList: number[];
}

export interface StageChallengeData {
  challengeIndex: number;
  reward: RewardData | undefined;
}

export interface StageChapterBoss {
  bossStageId: number;
  leftHp: number;
}

export interface StageChapterExclusive {
  groupId: number;
  stageId: number;
}

export interface StageChapterInfo {
  chapterId: number;
  hasTakeChallenge: number;
  enterPlayerLevel: number;
  bossList: StageChapterBoss[];
  exclusiveStageList: StageChapterExclusive[];
}

export interface StageCheatData {
  type: StageCheatData_Type;
  value: number;
}

export enum StageCheatData_Type {
  STAGE_ID = 1,
  STAGE_PROGRESS = 2,
  STAGE_MAX_SCORE = 3,
  TIME_START = 1001,
  TIME_USE = 1002,
  AVG_FRAME_TIME = 1003,
  PLAYER_LEVEL = 1004,
  STAGE_SCORE = 1005,
  MONSTER_TOTAL_HP = 1006,
  MONSTER_TOTAL_LOSS_HP = 1007,
  MONSTER_HIT_MISS_NUM = 1008,
  MONSTER_HIT_NUM = 1009,
  NATURE_DAMAGE_BONUS_RATIO_MAX = 1010,
  AVATAR_ID_1 = 2001,
  AVATAR_LEVEL_1 = 2002,
  AVATAR_COMBAT_1 = 2003,
  ATTACK_MAX_1 = 2004,
  SP_MAX_1 = 2005,
  SP_BEGIN_1 = 2006,
  SP_END_1 = 2007,
  SP_GAIN_1 = 2008,
  SP_USE_1 = 2009,
  HP_MAX_1 = 2010,
  HP_BEGIN_1 = 2011,
  HP_END_1 = 2012,
  HP_GAIN_1 = 2013,
  HIT_COUNT_1 = 2014,
  HIT_DAMAGE_1 = 2015,
  HIT_NORMAL_DAMAGE_MAX_1 = 2016,
  HIT_CRITICAL_DAMAGE_MAX_1 = 2017,
  BEHIT_COUNT_1 = 2018,
  BEHIT_NORMAL_DAMAGE_MAX_1 = 2019,
  BEHIT_CRITICAL_DAMAGE_MAX_1 = 2020,
  COMBO_MAX_1 = 2021,
  AVATAR_TIME_USE_1 = 2022,
  WEAPON_LEVEL_1 = 2023,
  STIGMATA_LEVEL_MAX_1 = 2024,
  MP_TEAM_SKILL_TIMES_1 = 2025,
  MP_QTE_SKILL_TIMES_1 = 2026,
  MP_BE_RESCUED_TIMES_1 = 2027,
  MP_RESCUE_TIMES_1 = 2028,
  MP_AVG_RESCUE_TIME_1 = 2029,
  MP_CHAT_TIMES_1 = 2030,
  ULTIMATE_SKILL_TIMES_1 = 2031,
  ULTIMATE_SKILL_DURATION_1 = 2032,
  ATTACK_SP_GAIN_1 = 2033,
  WEAPON_SKILL_TIMES_1 = 2034,
  SWITCH_IN_SKILL_DAMAGE_MAX_1 = 2035,
  BRANCH_SKILL_DAMAGE_MAX_1 = 2036,
  CHARGE_SKILL_DAMAGE_MAX_1 = 2037,
  ULTIMATE_SKILL_DAMAGE_MAX_1 = 2038,
  ULTIMATE_SKILL_INTERVAL_TIME_MIN_1 = 2039,
  WEAPON_SKILL_INTERVAL_TIME_MIN_1 = 2040,
  HIT_INTERVAL_TIME_MIN_1 = 2041,
  SP_MIN_1 = 2042,
  HP_MIN_1 = 2043,
  STIGMATA_1_1 = 2044,
  STIGMATA_1_2 = 2045,
  STIGMATA_1_3 = 2046,
  WEAPON_ID_1 = 2047,
  DRESS_ID_1 = 2048,
  SERVER_AVATAR_ID_1 = 2049,
  SERVER_STIGMATA_1_1 = 2050,
  SERVER_STIGMATA_1_2 = 2051,
  SERVER_STIGMATA_1_3 = 2052,
  SERVER_WEAPON_ID_1 = 2053,
  SERVER_DRESS_ID_1 = 2054,
  AVATAR_ID_2 = 2101,
  AVATAR_LEVEL_2 = 2102,
  AVATAR_COMBAT_2 = 2103,
  ATTACK_MAX_2 = 2104,
  SP_MAX_2 = 2105,
  SP_BEGIN_2 = 2106,
  SP_END_2 = 2107,
  SP_GAIN_2 = 2108,
  SP_USE_2 = 2109,
  HP_MAX_2 = 2110,
  HP_BEGIN_2 = 2111,
  HP_END_2 = 2112,
  HP_GAIN_2 = 2113,
  HIT_COUNT_2 = 2114,
  HIT_DAMAGE_2 = 2115,
  HIT_NORMAL_DAMAGE_MAX_2 = 2116,
  HIT_CRITICAL_DAMAGE_MAX_2 = 2117,
  BEHIT_COUNT_2 = 2118,
  BEHIT_NORMAL_DAMAGE_MAX_2 = 2119,
  BEHIT_CRITICAL_DAMAGE_MAX_2 = 2120,
  COMBO_MAX_2 = 2121,
  AVATAR_TIME_USE_2 = 2122,
  WEAPON_LEVEL_2 = 2123,
  STIGMATA_LEVEL_MAX_2 = 2124,
  MP_TEAM_SKILL_TIMES_2 = 2125,
  MP_QTE_SKILL_TIMES_2 = 2126,
  MP_BE_RESCUED_TIMES_2 = 2127,
  MP_RESCUE_TIMES_2 = 2128,
  MP_AVG_RESCUE_TIME_2 = 2129,
  MP_CHAT_TIMES_2 = 2130,
  ULTIMATE_SKILL_TIMES_2 = 2131,
  ULTIMATE_SKILL_DURATION_2 = 2132,
  ATTACK_SP_GAIN_2 = 2133,
  WEAPON_SKILL_TIMES_2 = 2134,
  SWITCH_IN_SKILL_DAMAGE_MAX_2 = 2135,
  BRANCH_SKILL_DAMAGE_MAX_2 = 2136,
  CHARGE_SKILL_DAMAGE_MAX_2 = 2137,
  ULTIMATE_SKILL_DAMAGE_MAX_2 = 2138,
  ULTIMATE_SKILL_INTERVAL_TIME_MIN_2 = 2139,
  WEAPON_SKILL_INTERVAL_TIME_MIN_2 = 2140,
  HIT_INTERVAL_TIME_MIN_2 = 2141,
  SP_MIN_2 = 2142,
  HP_MIN_2 = 2143,
  STIGMATA_2_1 = 2144,
  STIGMATA_2_2 = 2145,
  STIGMATA_2_3 = 2146,
  WEAPON_ID_2 = 2147,
  DRESS_ID_2 = 2148,
  SERVER_AVATAR_ID_2 = 2149,
  SERVER_STIGMATA_2_1 = 2150,
  SERVER_STIGMATA_2_2 = 2151,
  SERVER_STIGMATA_2_3 = 2152,
  SERVER_WEAPON_ID_2 = 2153,
  SERVER_DRESS_ID_2 = 2154,
  AVATAR_ID_3 = 2201,
  AVATAR_LEVEL_3 = 2202,
  AVATAR_COMBAT_3 = 2203,
  ATTACK_MAX_3 = 2204,
  SP_MAX_3 = 2205,
  SP_BEGIN_3 = 2206,
  SP_END_3 = 2207,
  SP_GAIN_3 = 2208,
  SP_USE_3 = 2209,
  HP_MAX_3 = 2210,
  HP_BEGIN_3 = 2211,
  HP_END_3 = 2212,
  HP_GAIN_3 = 2213,
  HIT_COUNT_3 = 2214,
  HIT_DAMAGE_3 = 2215,
  HIT_NORMAL_DAMAGE_MAX_3 = 2216,
  HIT_CRITICAL_DAMAGE_MAX_3 = 2217,
  BEHIT_COUNT_3 = 2218,
  BEHIT_NORMAL_DAMAGE_MAX_3 = 2219,
  BEHIT_CRITICAL_DAMAGE_MAX_3 = 2220,
  COMBO_MAX_3 = 2221,
  AVATAR_TIME_USE_3 = 2222,
  WEAPON_LEVEL_3 = 2223,
  STIGMATA_LEVEL_MAX_3 = 2224,
  MP_TEAM_SKILL_TIMES_3 = 2225,
  MP_QTE_SKILL_TIMES_3 = 2226,
  MP_BE_RESCUED_TIMES_3 = 2227,
  MP_RESCUE_TIMES_3 = 2228,
  MP_AVG_RESCUE_TIME_3 = 2229,
  MP_CHAT_TIMES_3 = 2230,
  ULTIMATE_SKILL_TIMES_3 = 2231,
  ULTIMATE_SKILL_DURATION_3 = 2232,
  ATTACK_SP_GAIN_3 = 2233,
  WEAPON_SKILL_TIMES_3 = 2234,
  SWITCH_IN_SKILL_DAMAGE_MAX_3 = 2235,
  BRANCH_SKILL_DAMAGE_MAX_3 = 2236,
  CHARGE_SKILL_DAMAGE_MAX_3 = 2237,
  ULTIMATE_SKILL_DAMAGE_MAX_3 = 2238,
  ULTIMATE_SKILL_INTERVAL_TIME_MIN_3 = 2239,
  WEAPON_SKILL_INTERVAL_TIME_MIN_3 = 2240,
  HIT_INTERVAL_TIME_MIN_3 = 2241,
  SP_MIN_3 = 2242,
  HP_MIN_3 = 2243,
  STIGMATA_3_1 = 2244,
  STIGMATA_3_2 = 2245,
  STIGMATA_3_3 = 2246,
  WEAPON_ID_3 = 2247,
  DRESS_ID_3 = 2248,
  SERVER_AVATAR_ID_3 = 2249,
  SERVER_STIGMATA_3_1 = 2250,
  SERVER_STIGMATA_3_2 = 2251,
  SERVER_STIGMATA_3_3 = 2252,
  SERVER_WEAPON_ID_3 = 2253,
  SERVER_DRESS_ID_3 = 2254,
  ELF_ID = 2301,
  ELF_LEVEL = 2302,
  ELF_COMBAT = 2303,
  ELF_ATTACK = 2304,
  ELF_SP_MAX = 2305,
  ELF_ULTIMATE_SKILL_TIMES = 2306,
  ELF_SP_USE = 2307,
  ELF_HIT_CRITICAL_DAMAGE_MAX = 2308,
  ELF_HIT_NORMAL_DAMAGE_MAX = 2309,
  ELF_ULTIMATE_SKILL_INTERVAL_TIME_MIN = 2310,
  ELF_HIT_INTERVAL_TIME_MIN = 2311,
  SERVER_ELF_ID = 2312,
  ELF_ID_2 = 2401,
  ELF_LEVEL_2 = 2402,
  ELF_COMBAT_2 = 2403,
  ELF_ATTACK_2 = 2404,
  ELF_SP_MAX_2 = 2405,
  ELF_ULTIMATE_SKILL_TIMES_2 = 2406,
  ELF_SP_USE_2 = 2407,
  ELF_HIT_CRITICAL_DAMAGE_MAX_2 = 2408,
  ELF_HIT_NORMAL_DAMAGE_MAX_2 = 2409,
  ELF_ULTIMATE_SKILL_INTERVAL_TIME_MIN_2 = 2410,
  ELF_HIT_INTERVAL_TIME_MIN_2 = 2411,
  SERVER_ELF_ID_2 = 2412,
  ELF_ID_3 = 2501,
  ELF_LEVEL_3 = 2502,
  ELF_COMBAT_3 = 2503,
  ELF_ATTACK_3 = 2504,
  ELF_SP_MAX_3 = 2505,
  ELF_ULTIMATE_SKILL_TIMES_3 = 2506,
  ELF_SP_USE_3 = 2507,
  ELF_HIT_CRITICAL_DAMAGE_MAX_3 = 2508,
  ELF_HIT_NORMAL_DAMAGE_MAX_3 = 2509,
  ELF_ULTIMATE_SKILL_INTERVAL_TIME_MIN_3 = 2510,
  ELF_HIT_INTERVAL_TIME_MIN_3 = 2511,
  SERVER_ELF_ID_3 = 2512,
  IS_MP_VOICE_USED = 3001,
  MP_VOICE_USE_TIME = 3002,
  SEALED_EVENT_ID = 4001,
  UNRECOGNIZED = -1,
}

export interface StageDropDisplayInfo {
  stageId: number;
  dropItemIdList: number[];
  firstDropItemIdList: number[];
  doubleDrop: boolean;
  bonusDropItemIdList: number[];
  battleBuffList: string[];
  bonusEquipNeedList: number[];
  battleDisplayId: number;
  battleAttrList: string[];
  firstDropItemDataList: RewardItemData[];
}

export interface StageEndReq {
  body: Buffer;
  sign: string;
}

export enum StageEndReq_CmdId {
  CMD_ID = 45,
  UNRECOGNIZED = -1,
}

export interface StageEndReqBody {
  stageId: number;
  endStatus: StageEndStatus;
  isMvp: boolean;
  avatarExpReward: number;
  scoinReward: number;
  challengeIndexList: number[];
  dropItemList: DropItem[];
  cheatDataList: StageCheatData[];
  cheatType: number;
  stagePassTime: number;
  maxComboNum: number;
  score: number;
  clientAverageRtt: number;
  clientMaxRtt: number;
  beHitTimes: number;
  teamId: number;
  mvpScore: number;
  avatarList: ChallengeModeAvatar[];
  evadeTimes: number;
  evadeSuccessTimes: number;
  bossDamage: number;
  battleScore: number;
  rank: number;
  mpStageRecord: MpStageRecord | undefined;
  dungeonsEvaluation: number;
  fightInfo: StageFightInfo | undefined;
  mpStageDamageInfo: MpStageDamageInfo | undefined;
  securityCmdReply: Buffer;
  buffIdList: number[];
  stageEndFloor: number;
  godWarStatus: GodWarStatus | undefined;
  scDlcStatus: ScDLCStatus | undefined;
}

export interface StageEndRsp {
  retcode: StageEndRsp_Retcode;
  stageId: number;
  playerExpReward: number;
  avatarExpReward: number;
  scoinReward: number;
  challengeList: StageChallengeData[];
  friendsPointAdd: number;
  progress: number;
  specialChallengeList: StageSpecialChallengeData[];
  mvpReward: MpStageMvpReward | undefined;
  mpDropItemList: DropItem[];
  mpExpReward: number;
  expConvertScoin: number;
  bondAddFriendsPoint: number;
  buffReward: AccountBuffReward | undefined;
  worldBossScore: number;
  rankScoin: number;
  lineEnhanceRewardData: RewardData | undefined;
  dungeonsEvaluation: number;
  dungeonsDropItemList: DropItem[];
  endStatus: StageEndStatus;
  bonusScore: number;
  bonusDropList: DropItem[];
  gratuityDropList: DropItem[];
  extraRewardDataList: RewardData[];
  extraDropList: DropItem[];
  isNewMaxScore: boolean;
  themeWantedDropItemList: DropItem[];
  themeWantedShowExtraDropItemList: DropItem[];
  isThemeWantedExtraDropTakenByFirstPass: boolean;
  godWarChallengeScore: number;
}

export enum StageEndRsp_CmdId {
  CMD_ID = 46,
  UNRECOGNIZED = -1,
}

export enum StageEndRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  STAGE_ERROR = 2,
  DROP_ERROR = 3,
  CHALLENGE_ERROR = 4,
  STAGE_TIME_ERROR = 5,
  ALREADY_OPEN_DUNGEONS = 6,
  NOT_MEET_FAST = 22,
  COST_MATERIAL_LACK = 40,
  NOT_IN_TEAM = 62,
  SLG_BATTLE_NOT_OPEN = 63,
  UNRECOGNIZED = -1,
}

export interface StageEventData {
  beginTime: number;
  endTime: number;
  chapterId: number;
  unlockLevel: number;
}

export interface StageFightInfo {
  damage: number;
  elfDamage: number;
  score: number;
}

export interface StageInnerAvatarData {
  avatarId: number;
  avatarLevel: number;
  avatarStar: number;
  totalOutput: number;
  noRestrictOutput: number;
  doRestrictOutput: number;
  beRestrictOutput: number;
  totalInput: number;
  battleTime: number;
  totalTime: number;
  enterTimes: number;
  leaveTimes: number;
  doBreakTimes: number;
  beBreakTimes: number;
  doHitTimes: number;
  beHitTimes: number;
  exskillTimes: number;
  evadeTimes: number;
  evadeEffectTimes: number;
  attackSpRecover: number;
  totalSpRecover: number;
  dps: number;
  specialAttackTimes: number;
  evadeSuccessTimes: number;
  weaponActiveSkill: number;
  stageId: number;
  normalOutput: number;
  ultraOutput: number;
  switchinOutput: number;
  branchOutput: number;
  chargeOutput: number;
  hpCost: number;
  hpRecover: number;
  spCost: number;
  shieldDamage: number;
  avatarSubStar: number;
  isPlayerAvatar: boolean;
}

export interface StageInnerDataReportReq {
  avatarList: StageInnerAvatarData[];
  monsterList: StageInnerMonsterData[];
  rotateCameraTimes: number;
  elfList: StageInnerElfData[];
  stageId: number;
}

export enum StageInnerDataReportReq_CmdId {
  CMD_ID = 131,
  UNRECOGNIZED = -1,
}

export interface StageInnerDataReportRsp {
  retcode: StageInnerDataReportRsp_Retcode;
}

export enum StageInnerDataReportRsp_CmdId {
  CMD_ID = 132,
  UNRECOGNIZED = -1,
}

export enum StageInnerDataReportRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface StageInnerElfData {
  elfId: number;
  elfStar: number;
  elfLevel: number;
  attackTimes: number;
  hitTimes: number;
  totalOutput: number;
  normalOutput: number;
  ultraOutput: number;
  totalSpRecover: number;
  skillUseTimes: number;
}

export interface StageInnerMonsterData {
  monsterName: string;
  monsterType: string;
  monsterLevel: number;
  monsterNum: number;
  avgOutput: number;
  avgLiveTime: number;
  dps: number;
  hitAvatarTimes: number;
  breakAvatarTimes: number;
}

export interface StageRecommendAvatar {
  id: string;
  recommendAvatarList: RecommendAvatar[];
  type: AvatarRecommendType;
}

export interface StageSpecialChallengeData {
  challengeIndex: number;
  dropItem: DropItem | undefined;
}

export interface StageSwitchData {
  stageId: number;
}

export interface StaminaExchangeReq {
}

export enum StaminaExchangeReq_CmdId {
  CMD_ID = 18,
  UNRECOGNIZED = -1,
}

export interface StaminaExchangeRsp {
  retcode: StaminaExchangeRsp_Retcode;
  hcoinCost: number;
  staminaGet: number;
}

export enum StaminaExchangeRsp_CmdId {
  CMD_ID = 19,
  UNRECOGNIZED = -1,
}

export enum StaminaExchangeRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HCOIN_LACK = 2,
  TIMES_LACK = 3,
  STAMINA_FULL = 4,
  UNRECOGNIZED = -1,
}

export interface StartFarmProduceReq {
  slotId: number;
  produceMaterialId: number;
}

export enum StartFarmProduceReq_CmdId {
  CMD_ID = 1389,
  UNRECOGNIZED = -1,
}

export interface StartFarmProduceRsp {
  retcode: StartFarmProduceRsp_Retcode;
  slotId: number;
  produceMaterialId: number;
  slotDetail: FarmSlotDetail | undefined;
}

export enum StartFarmProduceRsp_CmdId {
  CMD_ID = 1390,
  UNRECOGNIZED = -1,
}

export enum StartFarmProduceRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SLOT_LOCKED = 2,
  SLOT_IN_PRODUCE = 3,
  EQUIPMENT_MATERIAL_LIMIT = 4,
  PRODUCE_MATERIAL_LIMIT = 5,
  PRODUCE_TIMES_LIMIT = 6,
  UNRECOGNIZED = -1,
}

export interface StartNextRoundExaminationReq {
}

export enum StartNextRoundExaminationReq_CmdId {
  CMD_ID = 4327,
  UNRECOGNIZED = -1,
}

export interface StartNextRoundExaminationRsp {
  retcode: StartNextRoundExaminationRsp_Retcode;
}

export enum StartNextRoundExaminationRsp_CmdId {
  CMD_ID = 4328,
  UNRECOGNIZED = -1,
}

export enum StartNextRoundExaminationRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_FINISHED = 2,
  UNRECOGNIZED = -1,
}

export interface StartRoomMatchReq {
  roomMode: RoomMode;
}

export enum StartRoomMatchReq_CmdId {
  CMD_ID = 3165,
  UNRECOGNIZED = -1,
}

export interface StartRoomMatchRsp {
  retcode: StartRoomMatchRsp_Retcode;
}

export enum StartRoomMatchRsp_CmdId {
  CMD_ID = 3166,
  UNRECOGNIZED = -1,
}

export enum StartRoomMatchRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  TOO_FREQUENT = 2,
  ALREADY_IN_MATCH = 3,
  IS_IN_BATTLE = 4,
  IN_CD = 5,
  TIMES_LACK = 6,
  STAGE_NOT_IN_SCHEDULE = 7,
  IS_NOT_READY = 8,
  NO_SCHEDULE = 9,
  UNRECOGNIZED = -1,
}

export interface StartSlotMachineReq {
  activityId: number;
}

export enum StartSlotMachineReq_CmdId {
  CMD_ID = 4317,
  UNRECOGNIZED = -1,
}

export interface StartSlotMachineRsp {
  retcode: StartSlotMachineRsp_Retcode;
  activityId: number;
  boxItemId: number;
}

export enum StartSlotMachineRsp_CmdId {
  CMD_ID = 4318,
  UNRECOGNIZED = -1,
}

export enum StartSlotMachineRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_OPEN = 2,
  MATERIAL_LACK = 3,
  UNRECOGNIZED = -1,
}

export interface StepCompensation {
  stepId: number;
  stepRewardId: number;
  missionList: StepMissionCompensation[];
}

export interface StepMissionCompensation {
  missionId: number;
  rewardId: number;
}

export interface Stigmata {
  uniqueId: number;
  id: number;
  level: number;
  exp: number;
  isProtected: boolean;
  isAffixIdentify: boolean;
  cancelProtectTime: number;
  slotNum: number;
  runeList: StigmataRune[];
  waitSelectRuneList: StigmataRune[];
  refineValue: number;
  promoteTimes: number;
  titleLevel: number;
  titleExp: number;
  titleId: number;
  waitSelectRuneGroupList: StigmataRuneGroup[];
}

export interface StigmataDetailData {
  id: number;
  level: number;
  runeList: StigmataRune[];
  titleLevel: number;
  titleExp: number;
  titleId: number;
  uniqueId: number;
}

export interface StigmataRune {
  runeId: number;
  strengthPercent: number;
}

export interface StigmataRuneGroup {
  uniqueId: number;
  runeList: StigmataRune[];
}

export interface Subscription {
  subsId: number;
  expiresTime: number;
}

export interface SubscriptionStatusNotify {
  subsList: Subscription[];
}

export enum SubscriptionStatusNotify_CmdId {
  CMD_ID = 1496,
  UNRECOGNIZED = -1,
}

export interface SupportActivitySupportReq {
}

export enum SupportActivitySupportReq_CmdId {
  CMD_ID = 4334,
  UNRECOGNIZED = -1,
}

export interface SupportActivitySupportRsp {
  retcode: SupportActivitySupportRsp_Retcode;
  supportIndex: number;
}

export enum SupportActivitySupportRsp_CmdId {
  CMD_ID = 4335,
  UNRECOGNIZED = -1,
}

export enum SupportActivitySupportRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  IN_CD_TIME = 3,
  HAS_SUPPORT = 4,
  UNRECOGNIZED = -1,
}

export interface SupportActivityTakeGlobalRewardReq {
}

export enum SupportActivityTakeGlobalRewardReq_CmdId {
  CMD_ID = 4338,
  UNRECOGNIZED = -1,
}

export interface SupportActivityTakeGlobalRewardRsp {
  retcode: SupportActivityTakeGlobalRewardRsp_Retcode;
  rewardData: RewardData | undefined;
}

export enum SupportActivityTakeGlobalRewardRsp_CmdId {
  CMD_ID = 4339,
  UNRECOGNIZED = -1,
}

export enum SupportActivityTakeGlobalRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  HAS_TAKE = 3,
  UNRECOGNIZED = -1,
}

export interface SupportActivityTakeShareRewardReq {
}

export enum SupportActivityTakeShareRewardReq_CmdId {
  CMD_ID = 4336,
  UNRECOGNIZED = -1,
}

export interface SupportActivityTakeShareRewardRsp {
  retcode: SupportActivityTakeShareRewardRsp_Retcode;
  rewardData: RewardData | undefined;
}

export enum SupportActivityTakeShareRewardRsp_CmdId {
  CMD_ID = 4337,
  UNRECOGNIZED = -1,
}

export enum SupportActivityTakeShareRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  HAS_TAKE = 3,
  NOT_SUPPORT = 4,
  UNRECOGNIZED = -1,
}

export interface SupportData {
  supportIndex: number;
  isTakeShareReward: boolean;
  supportEndTime: number;
  supportBeginTime: number;
  countDownTime: number;
}

export interface SurveyData {
  id: number;
  url: string;
}

export interface SweepCurrency {
  pointId: number;
  addNum: number;
}

export interface SwitchAvatarSubSkillReq {
  avatarId: number;
  skillId: number;
  subSkillId: number;
}

export enum SwitchAvatarSubSkillReq_CmdId {
  CMD_ID = 253,
  UNRECOGNIZED = -1,
}

export interface SwitchAvatarSubSkillRsp {
  retcode: SwitchAvatarSubSkillRsp_Retcode;
}

export enum SwitchAvatarSubSkillRsp_CmdId {
  CMD_ID = 254,
  UNRECOGNIZED = -1,
}

export enum SwitchAvatarSubSkillRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_NOT_EXIST = 2,
  SKILL_NOT_EXIST = 3,
  SUB_SKILL_NOT_EXIST = 4,
  SUB_SKILL_CAN_NOT_SWITCH = 5,
  UNRECOGNIZED = -1,
}

export interface SwitchChangeDataNotify {
  opType: FeatureSwitchOpType;
  dataList: SwitchData[];
}

export enum SwitchChangeDataNotify_CmdId {
  CMD_ID = 3701,
  UNRECOGNIZED = -1,
}

export interface SwitchData {
  type: FeatureSwitchType;
  data: Buffer;
  minLevel: number;
  maxLevel: number;
}

export interface SwitchDataNotify {
  dataList: SwitchData[];
}

export enum SwitchDataNotify_CmdId {
  CMD_ID = 3700,
  UNRECOGNIZED = -1,
}

export interface SwitchDLCAvatarTalentReq {
  avatarId: number;
  talentId: number;
}

export enum SwitchDLCAvatarTalentReq_CmdId {
  CMD_ID = 3588,
  UNRECOGNIZED = -1,
}

export interface SwitchDLCAvatarTalentRsp {
  retcode: SwitchDLCAvatarTalentRsp_Retcode;
}

export enum SwitchDLCAvatarTalentRsp_CmdId {
  CMD_ID = 3589,
  UNRECOGNIZED = -1,
}

export enum SwitchDLCAvatarTalentRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_NOT_EXIST = 2,
  TALENT_NOT_EXIST = 3,
  TALENT_CAN_NOT_SWITCH = 4,
  UNRECOGNIZED = -1,
}

export interface SwitchDynamicHardLvReq {
}

export enum SwitchDynamicHardLvReq_CmdId {
  CMD_ID = 239,
  UNRECOGNIZED = -1,
}

export interface SwitchDynamicHardLvRsp {
  retcode: SwitchDynamicHardLvRsp_Retcode;
  isDynamicHardLv: boolean;
}

export enum SwitchDynamicHardLvRsp_CmdId {
  CMD_ID = 240,
  UNRECOGNIZED = -1,
}

export enum SwitchDynamicHardLvRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface SwitchExtraStoryLineEnhanceReq {
}

export enum SwitchExtraStoryLineEnhanceReq_CmdId {
  CMD_ID = 1039,
  UNRECOGNIZED = -1,
}

export interface SwitchExtraStoryLineEnhanceRsp {
  retcode: SwitchExtraStoryLineEnhanceRsp_Retcode;
  isOpenEnhance: boolean;
}

export enum SwitchExtraStoryLineEnhanceRsp_CmdId {
  CMD_ID = 1040,
  UNRECOGNIZED = -1,
}

export enum SwitchExtraStoryLineEnhanceRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface SwitchExtraStoryLockedAvatarBindEquipReq {
  mode: AvatarBindEquipMode;
}

export enum SwitchExtraStoryLockedAvatarBindEquipReq_CmdId {
  CMD_ID = 1002,
  UNRECOGNIZED = -1,
}

export interface SwitchExtraStoryLockedAvatarBindEquipRsp {
  retcode: SwitchExtraStoryLockedAvatarBindEquipRsp_Retcode;
  succCnt: number;
  mode: AvatarBindEquipMode;
}

export enum SwitchExtraStoryLockedAvatarBindEquipRsp_CmdId {
  CMD_ID = 1003,
  UNRECOGNIZED = -1,
}

export enum SwitchExtraStoryLockedAvatarBindEquipRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface SwitchMemberStatusReq {
  status: LobbyMemberStatus;
}

export enum SwitchMemberStatusReq_CmdId {
  CMD_ID = 309,
  UNRECOGNIZED = -1,
}

export interface SwitchMemberStatusRsp {
  retcode: SwitchMemberStatusRsp_Retcode;
}

export enum SwitchMemberStatusRsp_CmdId {
  CMD_ID = 310,
  UNRECOGNIZED = -1,
}

export enum SwitchMemberStatusRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_LOBBY = 2,
  STATUS_ERROR = 3,
  IS_LEADER = 4,
  UNRECOGNIZED = -1,
}

export interface SyncChapterActivityDataNotify {
  chapterId: number;
  chapterActivity: ChapterActivity | undefined;
}

export enum SyncChapterActivityDataNotify_CmdId {
  CMD_ID = 4204,
  UNRECOGNIZED = -1,
}

export interface SyncDLCAvatarNotify {
  avatarList: DLCAvatar[];
}

export enum SyncDLCAvatarNotify_CmdId {
  CMD_ID = 3556,
  UNRECOGNIZED = -1,
}

export interface SyncDutyNotify {
  dailyDutyPoint: number;
  hasTakeDailyDutyIdList: number[];
  weeklyDutyPoint: number;
  hasTakeWeeklyDutyIdList: number[];
}

export enum SyncDutyNotify_CmdId {
  CMD_ID = 969,
  UNRECOGNIZED = -1,
}

export interface SyncElfDataNotify {
  elfList: Elf[];
}

export enum SyncElfDataNotify_CmdId {
  CMD_ID = 2102,
  UNRECOGNIZED = -1,
}

export interface SyncElfFragmentNotify {
  elfFragmentList: ElfFragment[];
}

export enum SyncElfFragmentNotify_CmdId {
  CMD_ID = 2103,
  UNRECOGNIZED = -1,
}

export interface SyncElfTalentNotify {
  elfTalentList: ElfTalent[];
}

export enum SyncElfTalentNotify_CmdId {
  CMD_ID = 2104,
  UNRECOGNIZED = -1,
}

export interface SyncGratuityStageReq {
  stageUniqueId: number;
  messageList: GratuityStageMessage[];
}

export enum SyncGratuityStageReq_CmdId {
  CMD_ID = 4112,
  UNRECOGNIZED = -1,
}

export interface SyncGratuityStageRsp {
  retcode: SyncGratuityStageRsp_Retcode;
  stage: GratuityStage | undefined;
  messageList: GratuityStageMessage[];
}

export enum SyncGratuityStageRsp_CmdId {
  CMD_ID = 4113,
  UNRECOGNIZED = -1,
}

export enum SyncGratuityStageRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface SyncMatrixCurEventNotify {
  pos: MatrixGridPos | undefined;
  eventId: number;
  realEventParam: number;
}

export enum SyncMatrixCurEventNotify_CmdId {
  CMD_ID = 2334,
  UNRECOGNIZED = -1,
}

export interface SyncMatrixFloorNotify {
  floorId: number;
  floorBriefInfo: MatrixFloorBriefInfo | undefined;
  floorMapInfo: MatrixFloorMapInfo | undefined;
}

export enum SyncMatrixFloorNotify_CmdId {
  CMD_ID = 2328,
  UNRECOGNIZED = -1,
}

export interface SyncMatrixNotify {
  floorBriefInfoList: MatrixFloorBriefInfo[];
  curFloorId: number;
}

export enum SyncMatrixNotify_CmdId {
  CMD_ID = 2329,
  UNRECOGNIZED = -1,
}

export interface SyncPictureActivityScoreNotify {
  activityId: number;
  score: number;
}

export enum SyncPictureActivityScoreNotify_CmdId {
  CMD_ID = 4272,
  UNRECOGNIZED = -1,
}

export interface SyncRoomDataNotify {
  playerRoomStatus: PlayerRoomStatus | undefined;
  memberList: RoomMember[];
  roomInfo: RoomInfo | undefined;
}

export enum SyncRoomDataNotify_CmdId {
  CMD_ID = 3152,
  UNRECOGNIZED = -1,
}

export interface SyncRoomMatchDataNotify {
  roomMode: RoomMode;
  isInMatching: boolean;
  matchStartTime: number;
  estimateMatchCostTime: number;
  reason: SyncRoomMatchDataNotify_Reason;
}

export enum SyncRoomMatchDataNotify_CmdId {
  CMD_ID = 3169,
  UNRECOGNIZED = -1,
}

export enum SyncRoomMatchDataNotify_Reason {
  SUCC = 0,
  CANCEL = 1,
  TIMEOUT = 2,
  MATCH_SUCC = 3,
  UNRECOGNIZED = -1,
}

export interface SyncRpgTaleSiteNotify {
  siteList: RpgTaleSite[];
  taleId: number;
}

export enum SyncRpgTaleSiteNotify_CmdId {
  CMD_ID = 2302,
  UNRECOGNIZED = -1,
}

export interface SyncThemeDataNotify {
  theme: ThemeData | undefined;
}

export enum SyncThemeDataNotify_CmdId {
  CMD_ID = 4246,
  UNRECOGNIZED = -1,
}

export interface SyncTimeReq {
  seq: number;
}

export enum SyncTimeReq_CmdId {
  CMD_ID = 803,
  UNRECOGNIZED = -1,
}

export interface SyncTimeRsp {
  retcode: SyncTimeRsp_Retcode;
  curTime: number;
  seq: number;
}

export enum SyncTimeRsp_CmdId {
  CMD_ID = 804,
  UNRECOGNIZED = -1,
}

export enum SyncTimeRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface SyncTvtBattleInfoNotify {
  battleInfo: TvtBattleInfo | undefined;
}

export enum SyncTvtBattleInfoNotify_CmdId {
  CMD_ID = 3350,
  UNRECOGNIZED = -1,
}

export interface SyncTvtBattleStageMessageNotify {
  messageList: TvtBattleStageMessage[];
}

export enum SyncTvtBattleStageMessageNotify_CmdId {
  CMD_ID = 3356,
  UNRECOGNIZED = -1,
}

export interface SyncTvtMemberInRoomNotify {
  memberList: TvtMember[];
}

export enum SyncTvtMemberInRoomNotify_CmdId {
  CMD_ID = 3304,
  UNRECOGNIZED = -1,
}

export interface SyncVirtualGachaStatusNotify {
  groupId: number;
  gacha: VirtualGacha | undefined;
}

export enum SyncVirtualGachaStatusNotify_CmdId {
  CMD_ID = 3517,
  UNRECOGNIZED = -1,
}

export interface TakeActivityChallengeRewardReq {
  activityId: number;
  challengeNumIndex: number;
}

export enum TakeActivityChallengeRewardReq_CmdId {
  CMD_ID = 460,
  UNRECOGNIZED = -1,
}

export interface TakeActivityChallengeRewardRsp {
  retcode: TakeActivityChallengeRewardRsp_Retcode;
  activityId: number;
  challengeNumIndex: number;
  rewardList: RewardData[];
}

export enum TakeActivityChallengeRewardRsp_CmdId {
  CMD_ID = 461,
  UNRECOGNIZED = -1,
}

export enum TakeActivityChallengeRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKE = 2,
  CHALLENGE_NUM_LACK = 3,
  UNRECOGNIZED = -1,
}

export interface TakeAdventureCompensationReq {
  typeList: CompensationType[];
}

export enum TakeAdventureCompensationReq_CmdId {
  CMD_ID = 3918,
  UNRECOGNIZED = -1,
}

export interface TakeAdventureCompensationRsp {
  retcode: TakeAdventureCompensationRsp_Retcode;
  typeList: CompensationType[];
  itemList: RewardItemData[];
}

export enum TakeAdventureCompensationRsp_CmdId {
  CMD_ID = 3919,
  UNRECOGNIZED = -1,
}

export enum TakeAdventureCompensationRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKE = 2,
  UNRECOGNIZED = -1,
}

export interface TakeAdventureLevelRewardReq {
}

export enum TakeAdventureLevelRewardReq_CmdId {
  CMD_ID = 3908,
  UNRECOGNIZED = -1,
}

export interface TakeAdventureLevelRewardRsp {
  retcode: TakeAdventureLevelRewardRsp_Retcode;
  hasTakeRewardLevel: number;
  rewardList: RewardData[];
}

export enum TakeAdventureLevelRewardRsp_CmdId {
  CMD_ID = 3909,
  UNRECOGNIZED = -1,
}

export enum TakeAdventureLevelRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKE = 2,
  UNRECOGNIZED = -1,
}

export interface TakeAdventureQuestRewardReq {
  poolId: number;
}

export enum TakeAdventureQuestRewardReq_CmdId {
  CMD_ID = 3904,
  UNRECOGNIZED = -1,
}

export interface TakeAdventureQuestRewardRsp {
  retcode: TakeAdventureQuestRewardRsp_Retcode;
  poolId: number;
  dropItemList: DropItem[];
  questId: number;
}

export enum TakeAdventureQuestRewardRsp_CmdId {
  CMD_ID = 3905,
  UNRECOGNIZED = -1,
}

export enum TakeAdventureQuestRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_QUEST = 2,
  HAS_TAKE = 3,
  NOT_END = 4,
  UNRECOGNIZED = -1,
}

export interface TakeAdventureStorySweepRewardReq {
  sweepId: number;
  isTakeAll: boolean;
  sweepGroupTypeList: number[];
}

export enum TakeAdventureStorySweepRewardReq_CmdId {
  CMD_ID = 3916,
  UNRECOGNIZED = -1,
}

export interface TakeAdventureStorySweepRewardRsp {
  retcode: TakeAdventureStorySweepRewardRsp_Retcode;
  sweepId: number;
  siegeStageId: number;
  dropItemList: DropItem[];
  playerExpReward: number;
  expConvertScoin: number;
  scoinReward: number;
  rankScoin: number;
  isTakeAll: boolean;
  sweepGroupTypeList: number[];
}

export enum TakeAdventureStorySweepRewardRsp_CmdId {
  CMD_ID = 3917,
  UNRECOGNIZED = -1,
}

export enum TakeAdventureStorySweepRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_EXIST = 2,
  NOT_FINISHED = 3,
  UNRECOGNIZED = -1,
}

export interface TakeArmadaAchievementReq {
  id: number;
}

export enum TakeArmadaAchievementReq_CmdId {
  CMD_ID = 2801,
  UNRECOGNIZED = -1,
}

export interface TakeArmadaAchievementRsp {
  retcode: TakeArmadaAchievementRsp_Retcode;
  id: number;
  rewardData: RewardData | undefined;
  takeAchievementIdList: number[];
}

export enum TakeArmadaAchievementRsp_CmdId {
  CMD_ID = 2802,
  UNRECOGNIZED = -1,
}

export enum TakeArmadaAchievementRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  NOT_REACH = 3,
  HAS_TAKE = 4,
  ALREADY_DISSOLVE = 5,
  UNRECOGNIZED = -1,
}

export interface TakeArmadaReunionRewardReq {
  rewardId: number;
}

export enum TakeArmadaReunionRewardReq_CmdId {
  CMD_ID = 2837,
  UNRECOGNIZED = -1,
}

export interface TakeArmadaReunionRewardRsp {
  retcode: TakeArmadaReunionRewardRsp_Retcode;
  rewardId: number;
  rewardData: RewardData | undefined;
  rewardList: ChatworldDishReward[];
}

export enum TakeArmadaReunionRewardRsp_CmdId {
  CMD_ID = 2838,
  UNRECOGNIZED = -1,
}

export enum TakeArmadaReunionRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  NOT_IN_ARMADA = 3,
  HAVE_TAKEN = 4,
  QUIT_SHORT = 5,
  IN_CD_TIME = 6,
  UNRECOGNIZED = -1,
}

export interface TakeArmadaStageRewardReq {
}

export enum TakeArmadaStageRewardReq_CmdId {
  CMD_ID = 2675,
  UNRECOGNIZED = -1,
}

export interface TakeArmadaStageRewardRsp {
  retcode: TakeArmadaStageRewardRsp_Retcode;
  rewardIdList: number[];
  rewardList: RewardData[];
  killRewardMaterialId: number;
  killRewardMaterialNum: number;
}

export enum TakeArmadaStageRewardRsp_CmdId {
  CMD_ID = 2676,
  UNRECOGNIZED = -1,
}

export enum TakeArmadaStageRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  TIME_INVALID = 3,
  NO_BOSS = 4,
  HAS_TAKE = 5,
  NOT_FIGHT = 6,
  BOSS_NOT_FINISH = 7,
  UNRECOGNIZED = -1,
}

export interface TakeArmadaStageScoreActivityRewardReq {
  type: ArmadaStageScoreActivityRewardType;
}

export enum TakeArmadaStageScoreActivityRewardReq_CmdId {
  CMD_ID = 2823,
  UNRECOGNIZED = -1,
}

export interface TakeArmadaStageScoreActivityRewardRsp {
  retcode: TakeArmadaStageScoreActivityRewardRsp_Retcode;
  type: ArmadaStageScoreActivityRewardType;
  rewardList: RewardData[];
  scoreList: ArmadaStageScorePlayerScore[];
}

export enum TakeArmadaStageScoreActivityRewardRsp_CmdId {
  CMD_ID = 2824,
  UNRECOGNIZED = -1,
}

export enum TakeArmadaStageScoreActivityRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  HAS_TAKE = 3,
  NOT_FINISH_STAGE = 4,
  UNRECOGNIZED = -1,
}

export interface TakeAvatarMissionDailyRewardReq {
}

export enum TakeAvatarMissionDailyRewardReq_CmdId {
  CMD_ID = 3004,
  UNRECOGNIZED = -1,
}

export interface TakeAvatarMissionDailyRewardRsp {
  retcode: TakeAvatarMissionDailyRewardRsp_Retcode;
  reward: RewardData | undefined;
}

export enum TakeAvatarMissionDailyRewardRsp_CmdId {
  CMD_ID = 3005,
  UNRECOGNIZED = -1,
}

export enum TakeAvatarMissionDailyRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  HAVE_TAKEN = 3,
  LACK_CONTRACT_POINT = 4,
  UNRECOGNIZED = -1,
}

export interface TakeAvatarMissionPhaseRewardReq {
  days: number;
}

export enum TakeAvatarMissionPhaseRewardReq_CmdId {
  CMD_ID = 3006,
  UNRECOGNIZED = -1,
}

export interface TakeAvatarMissionPhaseRewardRsp {
  retcode: TakeAvatarMissionPhaseRewardRsp_Retcode;
  activityId: number;
  days: number;
  reward: RewardData | undefined;
}

export enum TakeAvatarMissionPhaseRewardRsp_CmdId {
  CMD_ID = 3007,
  UNRECOGNIZED = -1,
}

export enum TakeAvatarMissionPhaseRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  HAVE_TAKEN = 3,
  LACK_DAYS = 4,
  NO_REWARD = 5,
  UNRECOGNIZED = -1,
}

export interface TakeBattlePassLevelRewardReq {
}

export enum TakeBattlePassLevelRewardReq_CmdId {
  CMD_ID = 3754,
  UNRECOGNIZED = -1,
}

export interface TakeBattlePassLevelRewardRsp {
  retcode: TakeBattlePassLevelRewardRsp_Retcode;
  basicRewardList: RewardData[];
  advancedRewardList: RewardData[];
  luxuryRewardList: RewardData[];
}

export enum TakeBattlePassLevelRewardRsp_CmdId {
  CMD_ID = 3755,
  UNRECOGNIZED = -1,
}

export enum TakeBattlePassLevelRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  HAS_TAKE = 3,
  FEATURE_CLOSED = 4,
  UNRECOGNIZED = -1,
}

export interface TakeBattlePassPhaseExpReq {
}

export enum TakeBattlePassPhaseExpReq_CmdId {
  CMD_ID = 3758,
  UNRECOGNIZED = -1,
}

export interface TakeBattlePassPhaseExpRsp {
  retcode: TakeBattlePassPhaseExpRsp_Retcode;
  addExp: number;
  addThemeExp: number;
}

export enum TakeBattlePassPhaseExpRsp_CmdId {
  CMD_ID = 3759,
  UNRECOGNIZED = -1,
}

export enum TakeBattlePassPhaseExpRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  HAS_TAKE = 3,
  UNRECOGNIZED = -1,
}

export interface TakeBattlePassThemeLevelRewardReq {
}

export enum TakeBattlePassThemeLevelRewardReq_CmdId {
  CMD_ID = 3762,
  UNRECOGNIZED = -1,
}

export interface TakeBattlePassThemeLevelRewardRsp {
  retcode: TakeBattlePassThemeLevelRewardRsp_Retcode;
  rewardList: RewardData[];
}

export enum TakeBattlePassThemeLevelRewardRsp_CmdId {
  CMD_ID = 3763,
  UNRECOGNIZED = -1,
}

export enum TakeBattlePassThemeLevelRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKE = 2,
  NOT_OPEN = 3,
  FEATURE_CLOSED = 4,
  UNRECOGNIZED = -1,
}

export interface TakeBulletinScoreActivityRewardReq {
  activityId: number;
}

export enum TakeBulletinScoreActivityRewardReq_CmdId {
  CMD_ID = 4165,
  UNRECOGNIZED = -1,
}

export interface TakeBulletinScoreActivityRewardRsp {
  retcode: TakeBulletinScoreActivityRewardRsp_Retcode;
  activityId: number;
  rewardList: RewardData[];
}

export enum TakeBulletinScoreActivityRewardRsp_CmdId {
  CMD_ID = 4166,
  UNRECOGNIZED = -1,
}

export enum TakeBulletinScoreActivityRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKE_ALL = 2,
  UNRECOGNIZED = -1,
}

export interface TakeCardProductBonusRewardReq {
}

export enum TakeCardProductBonusRewardReq_CmdId {
  CMD_ID = 1146,
  UNRECOGNIZED = -1,
}

export interface TakeCardProductBonusRewardRsp {
  retcode: TakeCardProductBonusRewardRsp_Retcode;
  cardProductRewardList: CardProductReward[];
}

export enum TakeCardProductBonusRewardRsp_CmdId {
  CMD_ID = 1147,
  UNRECOGNIZED = -1,
}

export enum TakeCardProductBonusRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface TakeCardProductDailyRewardReq {
}

export enum TakeCardProductDailyRewardReq_CmdId {
  CMD_ID = 1144,
  UNRECOGNIZED = -1,
}

export interface TakeCardProductDailyRewardRsp {
  retcode: TakeCardProductDailyRewardRsp_Retcode;
  cardProductRewardList: CardProductReward[];
}

export enum TakeCardProductDailyRewardRsp_CmdId {
  CMD_ID = 1145,
  UNRECOGNIZED = -1,
}

export enum TakeCardProductDailyRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface TakeChallengeStepCompensationReq {
  compensationId: number;
}

export enum TakeChallengeStepCompensationReq_CmdId {
  CMD_ID = 1678,
  UNRECOGNIZED = -1,
}

export interface TakeChallengeStepCompensationRsp {
  retcode: TakeChallengeStepCompensationRsp_Retcode;
  rewardList: RewardData[];
}

export enum TakeChallengeStepCompensationRsp_CmdId {
  CMD_ID = 1679,
  UNRECOGNIZED = -1,
}

export enum TakeChallengeStepCompensationRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKEN = 2,
  LEVEL_LACK = 3,
  NO_REWARD = 4,
  UNRECOGNIZED = -1,
}

export interface TakeChapterActivityLevelRewardReq {
  chapterId: number;
  level: number;
  isTakeAll: boolean;
}

export enum TakeChapterActivityLevelRewardReq_CmdId {
  CMD_ID = 4202,
  UNRECOGNIZED = -1,
}

export interface TakeChapterActivityLevelRewardRsp {
  retcode: TakeChapterActivityLevelRewardRsp_Retcode;
  chapterId: number;
  levelList: number[];
  rewardList: RewardData[];
  isTakeAll: boolean;
}

export enum TakeChapterActivityLevelRewardRsp_CmdId {
  CMD_ID = 4203,
  UNRECOGNIZED = -1,
}

export enum TakeChapterActivityLevelRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LACK_LEVEL = 2,
  HAVE_TAKE = 3,
  NO_REWARD = 4,
  UNRECOGNIZED = -1,
}

export interface TakeChapterChallengeRewardReq {
  chapterId: number;
  challengeNumIndex: number;
}

export enum TakeChapterChallengeRewardReq_CmdId {
  CMD_ID = 967,
  UNRECOGNIZED = -1,
}

export interface TakeChapterChallengeRewardRsp {
  retcode: TakeChapterChallengeRewardRsp_Retcode;
  chapterId: number;
  challengeNumIndex: number;
  rewardList: RewardData[];
}

export enum TakeChapterChallengeRewardRsp_CmdId {
  CMD_ID = 968,
  UNRECOGNIZED = -1,
}

export enum TakeChapterChallengeRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKE = 2,
  CHALLENGE_NUM_LACK = 3,
  REWARD_INVALID = 4,
  UNRECOGNIZED = -1,
}

export interface TakeChapterCompensationReq {
  chapterId: number;
}

export enum TakeChapterCompensationReq_CmdId {
  CMD_ID = 1674,
  UNRECOGNIZED = -1,
}

export interface TakeChapterCompensationRsp {
  retcode: TakeChapterCompensationRsp_Retcode;
  rewardList: RewardData[];
}

export enum TakeChapterCompensationRsp_CmdId {
  CMD_ID = 1675,
  UNRECOGNIZED = -1,
}

export enum TakeChapterCompensationRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKEN = 2,
  NO_REWARD = 3,
  CHAPTER_NOT_FINISH = 4,
  UNRECOGNIZED = -1,
}

export interface TakeChatRedEnvelopePlayer {
  uid: number;
  nickname: string;
  scoinNum: number;
  dropItem: DropItem | undefined;
  material: Material | undefined;
}

export interface TakeChatRedEnvelopeReq {
  channel: number;
  senderUid: number;
  redEnvelopeId: number;
  itemId: number;
  armadaId: number;
  isSenderNpc: boolean;
  nickname: string;
}

export enum TakeChatRedEnvelopeReq_CmdId {
  CMD_ID = 1165,
  UNRECOGNIZED = -1,
}

export interface TakeChatRedEnvelopeRsp {
  retcode: TakeChatRedEnvelopeRsp_Retcode;
  channel: number;
  senderUid: number;
  senderNickname: string;
  itemId: number;
  takeScoin: number;
  dropItemList: DropItem[];
  msg: string;
  redEnvelopeId: number;
  dropId: number;
  takeHcoin: number;
  isSenderNpc: boolean;
  takeMaterial: Material | undefined;
  isTakeOver: boolean;
}

export enum TakeChatRedEnvelopeRsp_CmdId {
  CMD_ID = 1166,
  UNRECOGNIZED = -1,
}

export enum TakeChatRedEnvelopeRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKEN = 2,
  OVER = 3,
  LACK_TIMES = 4,
  LACK_LEVEL = 5,
  EXPIRE_TIME = 6,
  TAKE_BY_OTHERS = 7,
  NO_CHATROOM = 8,
  NOT_IN_ARMADA = 9,
  NOT_IN_WORLD_CHATROOM = 10,
  UNRECOGNIZED = -1,
}

export interface TakeClientMailAttachmentReq {
  mailKeyList: ClientMailKey[];
  isShowAttachment: boolean;
}

export enum TakeClientMailAttachmentReq_CmdId {
  CMD_ID = 3802,
  UNRECOGNIZED = -1,
}

export interface TakeClientMailAttachmentRsp {
  retcode: TakeClientMailAttachmentRsp_Retcode;
  succMailKeyList: ClientMailKey[];
  isShowAttachment: boolean;
  mailAttachment: MailAttachment | undefined;
  isTakeAll: boolean;
  failMailList: ClientMailAttachmentItem[];
}

export enum TakeClientMailAttachmentRsp_CmdId {
  CMD_ID = 3803,
  UNRECOGNIZED = -1,
}

export enum TakeClientMailAttachmentRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  REPEATED_REQ = 2,
  PART_FAIL = 3,
  UNRECOGNIZED = -1,
}

export interface TakeConsignedRewardReq {
  reliableId: number;
}

export enum TakeConsignedRewardReq_CmdId {
  CMD_ID = 523,
  UNRECOGNIZED = -1,
}

export interface TakeConsignedRewardRsp {
  retcode: TakeConsignedRewardRsp_Retcode;
  rewardList: RewardData[];
  reliableId: number;
}

export enum TakeConsignedRewardRsp_CmdId {
  CMD_ID = 524,
  UNRECOGNIZED = -1,
}

export enum TakeConsignedRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ARMADA = 2,
  REWARD_TAKEN = 3,
  UNRECOGNIZED = -1,
}

export interface TakeContinuousRechargeRewardReq {
  progress: number;
}

export enum TakeContinuousRechargeRewardReq_CmdId {
  CMD_ID = 4169,
  UNRECOGNIZED = -1,
}

export interface TakeContinuousRechargeRewardRsp {
  retcode: TakeContinuousRechargeRewardRsp_Retcode;
  reward: RewardData | undefined;
}

export enum TakeContinuousRechargeRewardRsp_CmdId {
  CMD_ID = 4170,
  UNRECOGNIZED = -1,
}

export enum TakeContinuousRechargeRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  PROGRESS_LACK = 3,
  HAS_TAKE = 4,
  UNRECOGNIZED = -1,
}

export interface TakeDailyCompensationRewardReq {
}

export enum TakeDailyCompensationRewardReq_CmdId {
  CMD_ID = 564,
  UNRECOGNIZED = -1,
}

export interface TakeDailyCompensationRewardRsp {
  retcode: TakeDailyCompensationRewardRsp_Retcode;
  rewardList: RewardData[];
}

export enum TakeDailyCompensationRewardRsp_CmdId {
  CMD_ID = 565,
  UNRECOGNIZED = -1,
}

export enum TakeDailyCompensationRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface TakeDLCLevelRewardReq {
}

export enum TakeDLCLevelRewardReq_CmdId {
  CMD_ID = 3561,
  UNRECOGNIZED = -1,
}

export interface TakeDLCLevelRewardRsp {
  retcode: TakeDLCLevelRewardRsp_Retcode;
  rewardList: RewardData[];
}

export enum TakeDLCLevelRewardRsp_CmdId {
  CMD_ID = 3562,
  UNRECOGNIZED = -1,
}

export enum TakeDLCLevelRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_REWARD = 2,
  UNRECOGNIZED = -1,
}

export interface TakeDLCTowerRankRewardNotify {
  rewardData: RewardData | undefined;
  rank: number;
  score: number;
}

export enum TakeDLCTowerRankRewardNotify_CmdId {
  CMD_ID = 3573,
  UNRECOGNIZED = -1,
}

export interface TakeDormLikesDropReq {
}

export enum TakeDormLikesDropReq_CmdId {
  CMD_ID = 1008,
  UNRECOGNIZED = -1,
}

export interface TakeDormLikesDropRsp {
  retcode: TakeDormLikesDropRsp_Retcode;
  dropItemList: DropItem[];
  yesterdayBeLikedNum: number;
}

export enum TakeDormLikesDropRsp_CmdId {
  CMD_ID = 1009,
  UNRECOGNIZED = -1,
}

export enum TakeDormLikesDropRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LEVEL_LIMIT = 2,
  NO_DROP = 3,
  HAVE_TAKEN = 4,
  UNRECOGNIZED = -1,
}

export interface TakeDutyRewardReq {
  dutyType: DutyType;
  dutyIdList: number[];
}

export enum TakeDutyRewardReq_CmdId {
  CMD_ID = 288,
  UNRECOGNIZED = -1,
}

export interface TakeDutyRewardRsp {
  retcode: TakeDutyRewardRsp_Retcode;
  dutyType: DutyType;
  rewardList: RewardData[];
  dutyIdList: number[];
}

export enum TakeDutyRewardRsp_CmdId {
  CMD_ID = 289,
  UNRECOGNIZED = -1,
}

export enum TakeDutyRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKE = 2,
  LEVEL_LACK = 3,
  DUTY_POINT_LACK = 4,
  UNRECOGNIZED = -1,
}

export interface TakeEliteChapterCompensationReq {
  chapterId: number;
}

export enum TakeEliteChapterCompensationReq_CmdId {
  CMD_ID = 1638,
  UNRECOGNIZED = -1,
}

export interface TakeEliteChapterCompensationRsp {
  retcode: TakeEliteChapterCompensationRsp_Retcode;
  rn: RewardData[];
}

export enum TakeEliteChapterCompensationRsp_CmdId {
  CMD_ID = 1639,
  UNRECOGNIZED = -1,
}

export enum TakeEliteChapterCompensationRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKEN = 2,
  NO_REWARD = 3,
  CHAPTER_NOT_FINISH = 4,
  UNRECOGNIZED = -1,
}

export interface TakeEndlessBaseRewardReq {
  type: EndlessType;
}

export enum TakeEndlessBaseRewardReq_CmdId {
  CMD_ID = 3417,
  UNRECOGNIZED = -1,
}

export interface TakeEndlessBaseRewardRsp {
  retcode: TakeEndlessBaseRewardRsp_Retcode;
  rewardProgress: number;
  rewardList: RewardData[];
  rewardIdList: number[];
  type: EndlessType;
}

export enum TakeEndlessBaseRewardRsp_CmdId {
  CMD_ID = 3418,
  UNRECOGNIZED = -1,
}

export enum TakeEndlessBaseRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_REWARD = 2,
  NOT_JOIN = 3,
  UNRECOGNIZED = -1,
}

export interface TakeExBossRankRewardNotify {
  rewardList: RewardData[];
  rank: number;
  score: number;
}

export enum TakeExBossRankRewardNotify_CmdId {
  CMD_ID = 516,
  UNRECOGNIZED = -1,
}

export interface TakeExBossScoreRewardNotify {
  rewardList: RewardData[];
}

export enum TakeExBossScoreRewardNotify_CmdId {
  CMD_ID = 533,
  UNRECOGNIZED = -1,
}

export interface TakeExtraStoryChallengeModeChapterRewardReq {
  chapterId: number;
  difficulty: number;
}

export enum TakeExtraStoryChallengeModeChapterRewardReq_CmdId {
  CMD_ID = 807,
  UNRECOGNIZED = -1,
}

export interface TakeExtraStoryChallengeModeChapterRewardRsp {
  retcode: TakeExtraStoryChallengeModeChapterRewardRsp_Retcode;
  chapterReward: RewardData | undefined;
}

export enum TakeExtraStoryChallengeModeChapterRewardRsp_CmdId {
  CMD_ID = 808,
  UNRECOGNIZED = -1,
}

export enum TakeExtraStoryChallengeModeChapterRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  LEVEL_LIMIT = 3,
  DIFFICULTY_NOT_OPEN = 4,
  NOT_FINISHED = 5,
  HAS_TAKEN = 6,
  NO_CHAPTER_REWARD = 7,
  UNRECOGNIZED = -1,
}

export interface TakeExtraStoryLineStoryFinishRewardReq {
  lineId: number;
}

export enum TakeExtraStoryLineStoryFinishRewardReq_CmdId {
  CMD_ID = 836,
  UNRECOGNIZED = -1,
}

export interface TakeExtraStoryLineStoryFinishRewardRsp {
  retcode: TakeExtraStoryLineStoryFinishRewardRsp_Retcode;
  lineId: number;
  rewardData: RewardData | undefined;
}

export enum TakeExtraStoryLineStoryFinishRewardRsp_CmdId {
  CMD_ID = 837,
  UNRECOGNIZED = -1,
}

export enum TakeExtraStoryLineStoryFinishRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_FINISH = 2,
  HAS_TAKEN = 3,
  UNRECOGNIZED = -1,
}

export interface TakeFlopRewardReq {
  activityId: number;
  rewardIndex: number;
}

export enum TakeFlopRewardReq_CmdId {
  CMD_ID = 4171,
  UNRECOGNIZED = -1,
}

export interface TakeFlopRewardRsp {
  retcode: TakeFlopRewardRsp_Retcode;
  activityId: number;
  rewardIndex: number;
  rewardList: RewardData[];
}

export enum TakeFlopRewardRsp_CmdId {
  CMD_ID = 4172,
  UNRECOGNIZED = -1,
}

export enum TakeFlopRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  LOCK = 3,
  HAS_TAKE = 4,
  UNRECOGNIZED = -1,
}

export interface TakeFoundationRewardReq {
  productName: string;
  level: number;
}

export enum TakeFoundationRewardReq_CmdId {
  CMD_ID = 963,
  UNRECOGNIZED = -1,
}

export interface TakeFoundationRewardRsp {
  retcode: TakeFoundationRewardRsp_Retcode;
  rewardList: RewardData[];
  productName: string;
  hasTakeRewardLevelList: number[];
}

export enum TakeFoundationRewardRsp_CmdId {
  CMD_ID = 964,
  UNRECOGNIZED = -1,
}

export enum TakeFoundationRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_BUY = 2,
  LEVEL_LACK = 3,
  HAS_TAKE = 4,
  PRODUCT_INVALID = 5,
  UNRECOGNIZED = -1,
}

export interface TakeGalInteractTriggerEventReq {
  avatarId: number;
  eventId: number;
}

export enum TakeGalInteractTriggerEventReq_CmdId {
  CMD_ID = 815,
  UNRECOGNIZED = -1,
}

export interface TakeGalInteractTriggerEventRsp {
  retcode: TakeGalInteractTriggerEventRsp_Retcode;
  avatarId: number;
  eventId: number;
  rewardData: RewardData | undefined;
  dropItem: DropItem | undefined;
}

export enum TakeGalInteractTriggerEventRsp_CmdId {
  CMD_ID = 816,
  UNRECOGNIZED = -1,
}

export enum TakeGalInteractTriggerEventRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_SUCH_AVATAR = 2,
  EVENT_ID_ERROR = 3,
  UNRECOGNIZED = -1,
}

export interface TakeGeneralActivityScoreRewardReq {
  activityId: number;
  scoreId: number;
}

export enum TakeGeneralActivityScoreRewardReq_CmdId {
  CMD_ID = 4034,
  UNRECOGNIZED = -1,
}

export interface TakeGeneralActivityScoreRewardRsp {
  retcode: TakeGeneralActivityScoreRewardRsp_Retcode;
  rewardData: RewardData | undefined;
  activityId: number;
  scoreId: number;
}

export enum TakeGeneralActivityScoreRewardRsp_CmdId {
  CMD_ID = 4035,
  UNRECOGNIZED = -1,
}

export enum TakeGeneralActivityScoreRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKEN = 2,
  NOT_REACH = 3,
  NOT_OPEN = 4,
  UNRECOGNIZED = -1,
}

export interface TakeGobackFundRewardReq {
  progressId: number;
}

export enum TakeGobackFundRewardReq_CmdId {
  CMD_ID = 1653,
  UNRECOGNIZED = -1,
}

export interface TakeGobackFundRewardRsp {
  retcode: TakeGobackFundRewardRsp_Retcode;
  rewardData: RewardData | undefined;
}

export enum TakeGobackFundRewardRsp_CmdId {
  CMD_ID = 1654,
  UNRECOGNIZED = -1,
}

export enum TakeGobackFundRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ALREADY_TAKEN = 2,
  NO_REWARD = 3,
  FUND_LOCKED = 4,
  UNRECOGNIZED = -1,
}

export interface TakeGobackLoginRewardReq {
  takeDays: number;
  rewardType: number;
  rewardList: number[];
}

export enum TakeGobackLoginRewardReq_CmdId {
  CMD_ID = 366,
  UNRECOGNIZED = -1,
}

export interface TakeGobackLoginRewardRsp {
  retcode: TakeGobackLoginRewardRsp_Retcode;
  takeDays: number;
  rewardList: RewardData[];
  rewardType: number;
  rewardIdList: number[];
}

export enum TakeGobackLoginRewardRsp_CmdId {
  CMD_ID = 367,
  UNRECOGNIZED = -1,
}

export enum TakeGobackLoginRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKE = 2,
  LOGIN_DAYS_LACK = 3,
  NOT_GOBACK = 4,
  REWARD_TYPE_ERROR = 5,
  SELECT_REWARD_ERROR = 6,
  UNRECOGNIZED = -1,
}

export interface TakeGobackScoreRewardReq {
  scoreId: number;
}

export enum TakeGobackScoreRewardReq_CmdId {
  CMD_ID = 1448,
  UNRECOGNIZED = -1,
}

export interface TakeGobackScoreRewardRsp {
  retcode: TakeGobackScoreRewardRsp_Retcode;
  scoreId: number;
  rewardList: RewardData[];
  score: number;
}

export enum TakeGobackScoreRewardRsp_CmdId {
  CMD_ID = 1449,
  UNRECOGNIZED = -1,
}

export enum TakeGobackScoreRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SCORE_LACK = 2,
  NOT_GOBACK = 3,
  HAS_TAKE = 4,
  UNRECOGNIZED = -1,
}

export interface TakeInviteActivityInviterProgressRewardReq {
  activityType: InviterActivityType;
}

export enum TakeInviteActivityInviterProgressRewardReq_CmdId {
  CMD_ID = 1692,
  UNRECOGNIZED = -1,
}

export interface TakeInviteActivityInviterProgressRewardRsp {
  retcode: TakeInviteActivityInviterProgressRewardRsp_Retcode;
  activityType: InviterActivityType;
  takenRewardProgress: number;
  rewardData: RewardData | undefined;
}

export enum TakeInviteActivityInviterProgressRewardRsp_CmdId {
  CMD_ID = 1693,
  UNRECOGNIZED = -1,
}

export enum TakeInviteActivityInviterProgressRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_REWARD = 2,
  FEATURE_CLOSED = 3,
  UNRECOGNIZED = -1,
}

export interface TakeLoginActivityRewardReq {
  id: number;
  takeDays: number;
  rewardType: LoginActivityRewardType;
}

export enum TakeLoginActivityRewardReq_CmdId {
  CMD_ID = 4194,
  UNRECOGNIZED = -1,
}

export interface TakeLoginActivityRewardRsp {
  retcode: TakeLoginActivityRewardRsp_Retcode;
  id: number;
  takeDays: number;
  rewardList: RewardData[];
  rewardType: LoginActivityRewardType;
}

export enum TakeLoginActivityRewardRsp_CmdId {
  CMD_ID = 4195,
  UNRECOGNIZED = -1,
}

export enum TakeLoginActivityRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LEVEL_LACK = 2,
  HAS_TAKE = 3,
  LOGIN_DAYS_LACK = 4,
  NOT_NEWBIE = 5,
  DURATION_END = 6,
  UNRECOGNIZED = -1,
}

export interface TakeLoginMissionRewardReq {
  activityId: number;
}

export enum TakeLoginMissionRewardReq_CmdId {
  CMD_ID = 4301,
  UNRECOGNIZED = -1,
}

export interface TakeLoginMissionRewardRsp {
  retcode: TakeLoginMissionRewardRsp_Retcode;
  activityId: number;
  rewardList: RewardData[];
}

export enum TakeLoginMissionRewardRsp_CmdId {
  CMD_ID = 4302,
  UNRECOGNIZED = -1,
}

export enum TakeLoginMissionRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_FINISHED = 2,
  HAS_TAKE = 3,
  UNRECOGNIZED = -1,
}

export interface TakeMissionGroupRewardReq {
  groupId: number;
}

export enum TakeMissionGroupRewardReq_CmdId {
  CMD_ID = 4348,
  UNRECOGNIZED = -1,
}

export interface TakeMissionGroupRewardRsp {
  retcode: TakeMissionGroupRewardRsp_Retcode;
  rewardData: RewardData | undefined;
}

export enum TakeMissionGroupRewardRsp_CmdId {
  CMD_ID = 4349,
  UNRECOGNIZED = -1,
}

export enum TakeMissionGroupRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKEN = 2,
  NO_REWARD = 3,
  NOT_FINISH = 4,
  UNRECOGNIZED = -1,
}

export interface TakeMissionStepCompensationReq {
}

export enum TakeMissionStepCompensationReq_CmdId {
  CMD_ID = 1634,
  UNRECOGNIZED = -1,
}

export interface TakeMissionStepCompensationRsp {
  retcode: TakeMissionStepCompensationRsp_Retcode;
  rewardList: RewardData[];
}

export enum TakeMissionStepCompensationRsp_CmdId {
  CMD_ID = 1635,
  UNRECOGNIZED = -1,
}

export enum TakeMissionStepCompensationRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKEN = 2,
  NO_REWARD = 3,
  UNRECOGNIZED = -1,
}

export interface TakeMissionThemeRewardReq {
  themeId: number;
  missionId: number;
}

export enum TakeMissionThemeRewardReq_CmdId {
  CMD_ID = 4209,
  UNRECOGNIZED = -1,
}

export interface TakeMissionThemeRewardRsp {
  retcode: TakeMissionThemeRewardRsp_Retcode;
  themeId: number;
  missionId: number;
  rewardData: RewardData | undefined;
}

export enum TakeMissionThemeRewardRsp_CmdId {
  CMD_ID = 4210,
  UNRECOGNIZED = -1,
}

export enum TakeMissionThemeRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MISSION_NOT_FINISH = 2,
  ALREADY_TAKEN = 3,
  EQUIPMENT_FULL = 4,
  EQUIPMENT_MATERIAL_LIMIT = 5,
  EQUIPMENT_FRAGMENT_LIMIT = 6,
  UNRECOGNIZED = -1,
}

export interface TakeMosaicActivityRewardReq {
  activityId: number;
}

export enum TakeMosaicActivityRewardReq_CmdId {
  CMD_ID = 4342,
  UNRECOGNIZED = -1,
}

export interface TakeMosaicActivityRewardRsp {
  retcode: TakeMosaicActivityRewardRsp_Retcode;
  activityId: number;
  rewardData: RewardData | undefined;
}

export enum TakeMosaicActivityRewardRsp_CmdId {
  CMD_ID = 4343,
  UNRECOGNIZED = -1,
}

export enum TakeMosaicActivityRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKE = 2,
  NOT_FINISHED = 3,
  NOT_OPEN = 4,
  UNRECOGNIZED = -1,
}

export interface TakeNewbieActivityLevelRewardReq {
  level: number;
}

export enum TakeNewbieActivityLevelRewardReq_CmdId {
  CMD_ID = 4256,
  UNRECOGNIZED = -1,
}

export interface TakeNewbieActivityLevelRewardRsp {
  retcode: TakeNewbieActivityLevelRewardRsp_Retcode;
  level: number;
  rewardData: RewardData | undefined;
}

export enum TakeNewbieActivityLevelRewardRsp_CmdId {
  CMD_ID = 4257,
  UNRECOGNIZED = -1,
}

export enum TakeNewbieActivityLevelRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_NEWBIE = 2,
  HAVE_TAKEN = 3,
  NO_REWARD = 4,
  LEVEL_LIMIT = 5,
  UNRECOGNIZED = -1,
}

export interface TakeNewbieChallengeRewardReq {
}

export enum TakeNewbieChallengeRewardReq_CmdId {
  CMD_ID = 4285,
  UNRECOGNIZED = -1,
}

export interface TakeNewbieChallengeRewardRsp {
  retcode: TakeNewbieChallengeRewardRsp_Retcode;
  reward: RewardData | undefined;
}

export enum TakeNewbieChallengeRewardRsp_CmdId {
  CMD_ID = 4286,
  UNRECOGNIZED = -1,
}

export enum TakeNewbieChallengeRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LEVEL_LACK = 2,
  MATERIAL_LACK = 3,
  HAS_TAKE = 4,
  UNRECOGNIZED = -1,
}

export interface TakeNewbiePrivilegeRewardReq {
}

export enum TakeNewbiePrivilegeRewardReq_CmdId {
  CMD_ID = 1640,
  UNRECOGNIZED = -1,
}

export interface TakeNewbiePrivilegeRewardRsp {
  retcode: TakeNewbiePrivilegeRewardRsp_Retcode;
  rewardList: RewardData[];
}

export enum TakeNewbiePrivilegeRewardRsp_CmdId {
  CMD_ID = 1641,
  UNRECOGNIZED = -1,
}

export enum TakeNewbiePrivilegeRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKEN = 2,
  NO_REWARD = 3,
  UNRECOGNIZED = -1,
}

export interface TakeOfflineResourceBoxReq {
  resourceType: number;
  boxId: number;
  boxNum: number;
}

export enum TakeOfflineResourceBoxReq_CmdId {
  CMD_ID = 4213,
  UNRECOGNIZED = -1,
}

export interface TakeOfflineResourceBoxRsp {
  retcode: TakeOfflineResourceBoxRsp_Retcode;
  rewardDataList: RewardData[];
  offlineResourceData: OfflineResource | undefined;
}

export enum TakeOfflineResourceBoxRsp_CmdId {
  CMD_ID = 4214,
  UNRECOGNIZED = -1,
}

export enum TakeOfflineResourceBoxRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_SCHEDULE = 2,
  EQUIPMENT_FULL = 3,
  EQUIPMENT_MATERIAL_LIMIT = 4,
  STAMINA_LACK = 5,
  HCOIN_LACK = 6,
  MATERIAL_LACK = 7,
  BOX_LACK = 8,
  UNRECOGNIZED = -1,
}

export interface TakeOnlineRewardReq {
  id: number;
}

export enum TakeOnlineRewardReq_CmdId {
  CMD_ID = 4198,
  UNRECOGNIZED = -1,
}

export interface TakeOnlineRewardRsp {
  retcode: TakeOnlineRewardRsp_Retcode;
  rewardData: RewardData | undefined;
  id: number;
}

export enum TakeOnlineRewardRsp_CmdId {
  CMD_ID = 4199,
  UNRECOGNIZED = -1,
}

export enum TakeOnlineRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_OPEN = 2,
  LEVEL_NOT_SATISFY = 3,
  NOT_REACH = 4,
  HAS_TAKE = 5,
  UNRECOGNIZED = -1,
}

export interface TakeOverlapActivityRewardReq {
  activityId: number;
  id: number;
}

export enum TakeOverlapActivityRewardReq_CmdId {
  CMD_ID = 4217,
  UNRECOGNIZED = -1,
}

export interface TakeOverlapActivityRewardRsp {
  retcode: TakeOverlapActivityRewardRsp_Retcode;
  activityId: number;
  id: number;
  rewardData: RewardData | undefined;
}

export enum TakeOverlapActivityRewardRsp_CmdId {
  CMD_ID = 4218,
  UNRECOGNIZED = -1,
}

export enum TakeOverlapActivityRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  HAS_TAKEN = 3,
  NOT_FINISH = 4,
  UNRECOGNIZED = -1,
}

export interface TakeRaffleRewardReq {
  raffleIdList: number[];
}

export enum TakeRaffleRewardReq_CmdId {
  CMD_ID = 3894,
  UNRECOGNIZED = -1,
}

export interface TakeRaffleRewardRsp {
  retcode: TakeRaffleRewardRsp_Retcode;
  raffleIdList: number[];
  rewardData: RewardData | undefined;
}

export enum TakeRaffleRewardRsp_CmdId {
  CMD_ID = 3895,
  UNRECOGNIZED = -1,
}

export enum TakeRaffleRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAVE_TAKEN = 2,
  NOT_OPEN = 3,
  NOT_DRAW = 4,
  NOT_EXIST = 5,
  UNRECOGNIZED = -1,
}

export interface TakeReclaimLevelRewardReq {
  level: number;
}

export enum TakeReclaimLevelRewardReq_CmdId {
  CMD_ID = 1169,
  UNRECOGNIZED = -1,
}

export interface TakeReclaimLevelRewardRsp {
  retcode: TakeReclaimLevelRewardRsp_Retcode;
  level: number;
  rewardList: RewardData[];
}

export enum TakeReclaimLevelRewardRsp_CmdId {
  CMD_ID = 1170,
  UNRECOGNIZED = -1,
}

export enum TakeReclaimLevelRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LACK_LEVEL = 2,
  HAVE_TAKE = 3,
  NO_REWARD = 4,
  UNRECOGNIZED = -1,
}

export interface TakeRestaurantOrderReq {
  activityId: number;
}

export enum TakeRestaurantOrderReq_CmdId {
  CMD_ID = 5868,
  UNRECOGNIZED = -1,
}

export interface TakeRestaurantOrderRsp {
  retcode: TakeRestaurantOrderRsp_Retcode;
  activityId: number;
}

export enum TakeRestaurantOrderRsp_CmdId {
  CMD_ID = 5869,
  UNRECOGNIZED = -1,
}

export enum TakeRestaurantOrderRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ORDER_LIST_EMPTY = 2,
  UNRECOGNIZED = -1,
}

export interface TakeRewardLineActivityRewardReq {
  id: number;
}

export enum TakeRewardLineActivityRewardReq_CmdId {
  CMD_ID = 5892,
  UNRECOGNIZED = -1,
}

export interface TakeRewardLineActivityRewardRsp {
  retcode: TakeRewardLineActivityRewardRsp_Retcode;
  rewardDataList: RewardData[];
}

export enum TakeRewardLineActivityRewardRsp_CmdId {
  CMD_ID = 5893,
  UNRECOGNIZED = -1,
}

export enum TakeRewardLineActivityRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  CLOSED = 2,
  NO_REWARD = 3,
  ACTIVITY_NOT_EXIST = 4,
  UNRECOGNIZED = -1,
}

export interface TakeRollRewardReq {
  avatarId: number;
  rewardGroupId: number;
}

export enum TakeRollRewardReq_CmdId {
  CMD_ID = 645,
  UNRECOGNIZED = -1,
}

export interface TakeRollRewardRsp {
  retcode: TakeRollRewardRsp_Retcode;
  rewardList: RewardData[];
}

export enum TakeRollRewardRsp_CmdId {
  CMD_ID = 646,
  UNRECOGNIZED = -1,
}

export enum TakeRollRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_ERROR = 2,
  REWARD_ERROR = 3,
  PROGRESS_LACK = 4,
  REWARD_HAS_TAKE = 5,
  UNRECOGNIZED = -1,
}

export interface TakeRpgTaleCollectionRewardReq {
  taleId: number;
}

export enum TakeRpgTaleCollectionRewardReq_CmdId {
  CMD_ID = 2309,
  UNRECOGNIZED = -1,
}

export interface TakeRpgTaleCollectionRewardRsp {
  retcode: TakeRpgTaleCollectionRewardRsp_Retcode;
  collectionCountList: number[];
  rewardDataList: RewardData[];
  rewardTakenCollectionCountList: number[];
  taleId: number;
}

export enum TakeRpgTaleCollectionRewardRsp_CmdId {
  CMD_ID = 2310,
  UNRECOGNIZED = -1,
}

export enum TakeRpgTaleCollectionRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NUM_LACK = 2,
  NO_REWARD = 3,
  TIME_LIMIT = 4,
  HAVE_TAKE = 5,
  UNRECOGNIZED = -1,
}

export interface TakeScDLCChallengeRewardReq {
}

export enum TakeScDLCChallengeRewardReq_CmdId {
  CMD_ID = 6328,
  UNRECOGNIZED = -1,
}

export interface TakeScDLCChallengeRewardRsp {
  retcode: TakeScDLCChallengeRewardRsp_Retcode;
  rewardList: RewardData[];
}

export enum TakeScDLCChallengeRewardRsp_CmdId {
  CMD_ID = 6329,
  UNRECOGNIZED = -1,
}

export enum TakeScDLCChallengeRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_REWARD = 2,
  UNRECOGNIZED = -1,
}

export interface TakeScDLCDailyQuestRewardReq {
  questId: number;
}

export enum TakeScDLCDailyQuestRewardReq_CmdId {
  CMD_ID = 6324,
  UNRECOGNIZED = -1,
}

export interface TakeScDLCDailyQuestRewardRsp {
  retcode: TakeScDLCDailyQuestRewardRsp_Retcode;
  questId: number;
  rewardData: RewardData | undefined;
}

export enum TakeScDLCDailyQuestRewardRsp_CmdId {
  CMD_ID = 6325,
  UNRECOGNIZED = -1,
}

export enum TakeScDLCDailyQuestRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  QUEST_NOT_EXIST = 2,
  NOT_FINISH = 3,
  UNRECOGNIZED = -1,
}

export interface TakeShareRewardReq {
  shareId: number;
}

export enum TakeShareRewardReq_CmdId {
  CMD_ID = 4237,
  UNRECOGNIZED = -1,
}

export interface TakeShareRewardRsp {
  retcode: TakeShareRewardRsp_Retcode;
  shareId: number;
  rewardList: RewardData[];
}

export enum TakeShareRewardRsp_CmdId {
  CMD_ID = 4238,
  UNRECOGNIZED = -1,
}

export enum TakeShareRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  INVALID_SHARE_ID = 2,
  HAVE_TAKEN = 3,
  UNRECOGNIZED = -1,
}

export interface TakeSlotMachineProgressRewardReq {
  activityId: number;
}

export enum TakeSlotMachineProgressRewardReq_CmdId {
  CMD_ID = 4319,
  UNRECOGNIZED = -1,
}

export interface TakeSlotMachineProgressRewardRsp {
  retcode: TakeSlotMachineProgressRewardRsp_Retcode;
  activityId: number;
  rewardList: RewardData[];
}

export enum TakeSlotMachineProgressRewardRsp_CmdId {
  CMD_ID = 4320,
  UNRECOGNIZED = -1,
}

export enum TakeSlotMachineProgressRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACTIVITY_NOT_OPEN = 2,
  NO_REWARD = 3,
  UNRECOGNIZED = -1,
}

export interface TakeStageActChallengeRewardReq {
  actId: number;
  difficulty: number;
  challengeNumIndex: number;
  challengeNumIndexList: number[];
}

export enum TakeStageActChallengeRewardReq_CmdId {
  CMD_ID = 458,
  UNRECOGNIZED = -1,
}

export interface TakeStageActChallengeRewardRsp {
  retcode: TakeStageActChallengeRewardRsp_Retcode;
  actId: number;
  difficulty: number;
  challengeNumIndex: number;
  rewardList: RewardData[];
  succChallengeNumIndexList: number[];
  failChallengeNumIndexList: number[];
}

export enum TakeStageActChallengeRewardRsp_CmdId {
  CMD_ID = 459,
  UNRECOGNIZED = -1,
}

export enum TakeStageActChallengeRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKE = 2,
  CHALLENGE_NUM_LACK = 3,
  PART_FAIL = 4,
  UNRECOGNIZED = -1,
}

export interface TakeTechCollectRewardReq {
  mapId: number;
}

export enum TakeTechCollectRewardReq_CmdId {
  CMD_ID = 540,
  UNRECOGNIZED = -1,
}

export interface TakeTechCollectRewardRsp {
  retcode: TakeTechCollectRewardRsp_Retcode;
  rewardList: RewardData[];
  mapId: number;
}

export enum TakeTechCollectRewardRsp_CmdId {
  CMD_ID = 541,
  UNRECOGNIZED = -1,
}

export enum TakeTechCollectRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  TECH_LEVEL_LIMIT = 2,
  IN_CD_TIME = 3,
  UNRECOGNIZED = -1,
}

export interface TakeTowerRaidRewardReq {
}

export enum TakeTowerRaidRewardReq_CmdId {
  CMD_ID = 4187,
  UNRECOGNIZED = -1,
}

export interface TakeTowerRaidRewardRsp {
  retcode: TakeTowerRaidRewardRsp_Retcode;
  scheduleId: number;
  activityId: number;
  hardLevel: number;
  rewardList: RewardData[];
  rating: TowerRaidRating;
  dropItemList: DropItem[];
}

export enum TakeTowerRaidRewardRsp_CmdId {
  CMD_ID = 4188,
  UNRECOGNIZED = -1,
}

export enum TakeTowerRaidRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAVE_TAKE = 2,
  NOT_FINISH = 3,
  UNRECOGNIZED = -1,
}

export interface TakeTradingCardRewardReq {
}

export enum TakeTradingCardRewardReq_CmdId {
  CMD_ID = 4264,
  UNRECOGNIZED = -1,
}

export interface TakeTradingCardRewardRsp {
  retcode: TakeTradingCardRewardRsp_Retcode;
  rewardData: RewardData | undefined;
  tradeNum: number;
}

export enum TakeTradingCardRewardRsp_CmdId {
  CMD_ID = 4265,
  UNRECOGNIZED = -1,
}

export enum TakeTradingCardRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  NOT_JOIN_ARMADA = 3,
  TRADE_NUM_LIMIT = 4,
  LACK_MATERIAL = 5,
  UNRECOGNIZED = -1,
}

export interface TakeVersionActivityMissionRewardReq {
  configId: number;
  moduleId: number;
}

export enum TakeVersionActivityMissionRewardReq_CmdId {
  CMD_ID = 4227,
  UNRECOGNIZED = -1,
}

export interface TakeVersionActivityMissionRewardRsp {
  retcode: TakeVersionActivityMissionRewardRsp_Retcode;
  rewardData: RewardData | undefined;
  configId: number;
  moduleId: number;
}

export enum TakeVersionActivityMissionRewardRsp_CmdId {
  CMD_ID = 4228,
  UNRECOGNIZED = -1,
}

export enum TakeVersionActivityMissionRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  NOT_FINISH = 3,
  HAS_TAKEN = 4,
  UNRECOGNIZED = -1,
}

export interface TakeVersionActivityRewardReq {
  id: number;
}

export enum TakeVersionActivityRewardReq_CmdId {
  CMD_ID = 4225,
  UNRECOGNIZED = -1,
}

export interface TakeVersionActivityRewardRsp {
  retcode: TakeVersionActivityRewardRsp_Retcode;
  rewardScore: number;
  rewardList: RewardData[];
}

export enum TakeVersionActivityRewardRsp_CmdId {
  CMD_ID = 4226,
  UNRECOGNIZED = -1,
}

export enum TakeVersionActivityRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  NO_REWARD = 3,
  UNRECOGNIZED = -1,
}

export interface TakeWeekDayActivityCompensationReq {
}

export enum TakeWeekDayActivityCompensationReq_CmdId {
  CMD_ID = 1668,
  UNRECOGNIZED = -1,
}

export interface TakeWeekDayActivityCompensationRsp {
  retcode: TakeWeekDayActivityCompensationRsp_Retcode;
  rewardDataList: RewardData[];
}

export enum TakeWeekDayActivityCompensationRsp_CmdId {
  CMD_ID = 1669,
  UNRECOGNIZED = -1,
}

export enum TakeWeekDayActivityCompensationRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKEN = 2,
  LEVEL_LACK = 3,
  UNRECOGNIZED = -1,
}

export interface TakeWeekDayActivityReturnCoinReq {
}

export enum TakeWeekDayActivityReturnCoinReq_CmdId {
  CMD_ID = 1034,
  UNRECOGNIZED = -1,
}

export interface TakeWeekDayActivityReturnCoinRsp {
  retcode: TakeWeekDayActivityReturnCoinRsp_Retcode;
  num: number;
  isCoinFullAfterTaken: boolean;
}

export enum TakeWeekDayActivityReturnCoinRsp_CmdId {
  CMD_ID = 1035,
  UNRECOGNIZED = -1,
}

export enum TakeWeekDayActivityReturnCoinRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_RETURN = 2,
  COIN_LIMIT = 3,
  UNRECOGNIZED = -1,
}

export interface TakeWeeklyRoutineRewardReq {
  weeklyRoutineRewardId: number;
}

export enum TakeWeeklyRoutineRewardReq_CmdId {
  CMD_ID = 4231,
  UNRECOGNIZED = -1,
}

export interface TakeWeeklyRoutineRewardRsp {
  retcode: TakeWeeklyRoutineRewardRsp_Retcode;
  weeklyRoutineRewardId: number;
  rewardData: RewardData | undefined;
}

export enum TakeWeeklyRoutineRewardRsp_CmdId {
  CMD_ID = 4232,
  UNRECOGNIZED = -1,
}

export enum TakeWeeklyRoutineRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ROUTINE_CONTRIBUTION_LACK = 2,
  HAS_TAKE = 3,
  UNRECOGNIZED = -1,
}

export interface TakeWikiRatingRewardReq {
  ratingId: number;
  ratingScore: number;
  cgList: number[];
}

export enum TakeWikiRatingRewardReq_CmdId {
  CMD_ID = 1195,
  UNRECOGNIZED = -1,
}

export interface TakeWikiRatingRewardRsp {
  retcode: TakeWikiRatingRewardRsp_Retcode;
  rewardList: RewardData[];
  ratingId: number;
}

export enum TakeWikiRatingRewardRsp_CmdId {
  CMD_ID = 1196,
  UNRECOGNIZED = -1,
}

export enum TakeWikiRatingRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TKAE = 3,
  SCORE_LACK = 4,
  UNRECOGNIZED = -1,
}

export interface TeamAssaultActivityBeginReq {
  activityId: number;
  avatarIdList: number[];
}

export enum TeamAssaultActivityBeginReq_CmdId {
  CMD_ID = 4020,
  UNRECOGNIZED = -1,
}

export interface TeamAssaultActivityBeginRsp {
  retcode: TeamAssaultActivityBeginRsp_Retcode;
}

export enum TeamAssaultActivityBeginRsp_CmdId {
  CMD_ID = 4021,
  UNRECOGNIZED = -1,
}

export enum TeamAssaultActivityBeginRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  REPEAT_REQ = 3,
  LACK_TIMES = 4,
  AVATAR_RESTRICT = 5,
  UNRECOGNIZED = -1,
}

export interface TeamAssaultActivityBossBeginReq {
  activityId: number;
  bossIdx: number;
  avatarIdList: number[];
}

export enum TeamAssaultActivityBossBeginReq_CmdId {
  CMD_ID = 4024,
  UNRECOGNIZED = -1,
}

export interface TeamAssaultActivityBossBeginRsp {
  retcode: TeamAssaultActivityBossBeginRsp_Retcode;
  clientData: string;
}

export enum TeamAssaultActivityBossBeginRsp_CmdId {
  CMD_ID = 4025,
  UNRECOGNIZED = -1,
}

export enum TeamAssaultActivityBossBeginRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  ORDER_ERROR = 3,
  AVATAR_ERROR = 4,
  AVATAR_RESTRICT = 5,
  UNRECOGNIZED = -1,
}

export interface TeamAssaultActivityBossEndReq {
  activityId: number;
  bossIdx: number;
  passTime: number;
  hpPercentage: number;
  cheatType: number;
  cheatDataList: StageCheatData[];
  clientData: string;
}

export enum TeamAssaultActivityBossEndReq_CmdId {
  CMD_ID = 4026,
  UNRECOGNIZED = -1,
}

export interface TeamAssaultActivityBossEndRsp {
  retcode: TeamAssaultActivityBossEndRsp_Retcode;
  bossIdx: number;
  score: number;
  activityScore: number;
}

export enum TeamAssaultActivityBossEndRsp_CmdId {
  CMD_ID = 4027,
  UNRECOGNIZED = -1,
}

export enum TeamAssaultActivityBossEndRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  ORDER_ERROR = 3,
  CHEAT_ERROR = 4,
  UNRECOGNIZED = -1,
}

export interface TeamAssaultActivityEndReq {
  activityId: number;
}

export enum TeamAssaultActivityEndReq_CmdId {
  CMD_ID = 4022,
  UNRECOGNIZED = -1,
}

export interface TeamAssaultActivityEndRsp {
  retcode: TeamAssaultActivityEndRsp_Retcode;
}

export enum TeamAssaultActivityEndRsp_CmdId {
  CMD_ID = 4023,
  UNRECOGNIZED = -1,
}

export enum TeamAssaultActivityEndRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  UNRECOGNIZED = -1,
}

export interface TeamAssaultActivityInfo {
  enterTimes: number;
  avatarIdList: number[];
  scoreList: number[];
  bossIdx: number;
  passTimeList: number[];
}

export interface TeamAssaultActivityResetReq {
  activityId: number;
}

export enum TeamAssaultActivityResetReq_CmdId {
  CMD_ID = 4028,
  UNRECOGNIZED = -1,
}

export interface TeamAssaultActivityResetRsp {
  retcode: TeamAssaultActivityResetRsp_Retcode;
}

export enum TeamAssaultActivityResetRsp_CmdId {
  CMD_ID = 4029,
  UNRECOGNIZED = -1,
}

export enum TeamAssaultActivityResetRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  LACK_TIMES = 4,
  NOT_NEED = 5,
  UNRECOGNIZED = -1,
}

export interface TeamLeaderChangeNotify {
  teamId: number;
  oldLeader: number;
  newLeader: number;
  isTimeout: boolean;
}

export enum TeamLeaderChangeNotify_CmdId {
  CMD_ID = 371,
  UNRECOGNIZED = -1,
}

export interface ThemeData {
  themeId: number;
  beginTime: number;
  endTime: number;
  bonusDropTimes: number;
  totalBonusScore: number;
}

export interface ThemeWantedActivity {
  scheduleId: number;
  activityId: number;
  openStageGroupIdList: number[];
  stageGroupInfoList: ThemeWantedStageGroupInfo[];
  takenWeeklyAssistMaterialList: Material[];
  endTime: number;
}

export interface ThemeWantedBuyExtraDropReq {
}

export enum ThemeWantedBuyExtraDropReq_CmdId {
  CMD_ID = 5792,
  UNRECOGNIZED = -1,
}

export interface ThemeWantedBuyExtraDropRsp {
  retcode: ThemeWantedBuyExtraDropRsp_Retcode;
  dropItemList: DropItem[];
}

export enum ThemeWantedBuyExtraDropRsp_CmdId {
  CMD_ID = 5793,
  UNRECOGNIZED = -1,
}

export enum ThemeWantedBuyExtraDropRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MATERIAL_LACK = 2,
  ACTIVITY_NOT_OPEN = 3,
  FEATURE_CLOSED = 4,
  UNRECOGNIZED = -1,
}

export interface ThemeWantedRefreshTicketReq {
}

export enum ThemeWantedRefreshTicketReq_CmdId {
  CMD_ID = 5794,
  UNRECOGNIZED = -1,
}

export interface ThemeWantedRefreshTicketRsp {
  retcode: ThemeWantedRefreshTicketRsp_Retcode;
}

export enum ThemeWantedRefreshTicketRsp_CmdId {
  CMD_ID = 5795,
  UNRECOGNIZED = -1,
}

export enum ThemeWantedRefreshTicketRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface ThemeWantedStageGroupInfo {
  stageGroupId: number;
  progress: number;
  notPassProgressList: number[];
  unlockMpProgressList: number[];
}

export interface ThemeWantedSwitchData {
}

export interface TileEnterReq {
  towerId: number;
  floorId: number;
}

export enum TileEnterReq_CmdId {
  CMD_ID = 4906,
  UNRECOGNIZED = -1,
}

export interface TileEnterRsp {
  retcode: TileEnterRsp_Retcode;
}

export enum TileEnterRsp_CmdId {
  CMD_ID = 4907,
  UNRECOGNIZED = -1,
}

export enum TileEnterRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LOCKED = 2,
  UNRECOGNIZED = -1,
}

export interface TileEntity {
  uniqueId: number;
  entityType: number;
  position: number;
  direction: number;
  resetTag: number;
  playerInfo: TilePlayerInfo | undefined;
  npcInfo: TileNpcInfo | undefined;
}

export interface TileEntityOpNotify {
  towerId: number;
  floorId: number;
  entityOpList: TileEntityOpNotify_TileEntityOp[];
}

export enum TileEntityOpNotify_CmdId {
  CMD_ID = 4914,
  UNRECOGNIZED = -1,
}

export interface TileEntityOpNotify_StatusOp {
  status: number;
}

export interface TileEntityOpNotify_MoveOp {
  pathCellIdList: number[];
  moveType: TileMoveType;
  direction: number;
}

export interface TileEntityOpNotify_UpdateCellOp {
  cellList: TileMapCell[];
  triggerList: TileTrigger[];
}

export interface TileEntityOpNotify_UpdateEntityOp {
  createEntityList: TileEntity[];
  deleteEntityList: number[];
}

export interface TileEntityOpNotify_TileEntityOp {
  uniqueId: number;
  move: TileEntityOpNotify_MoveOp | undefined;
  waitSelectPath: TileWaitSelectPath | undefined;
  updateCell: TileEntityOpNotify_UpdateCellOp | undefined;
  updateEntity: TileEntityOpNotify_UpdateEntityOp | undefined;
  status: TileEntityOpNotify_StatusOp | undefined;
}

export interface TileFloor {
  floorId: number;
  floorStatus: TileFloorStatus;
}

export interface TileGetTowerReq {
  towerId: number;
}

export enum TileGetTowerReq_CmdId {
  CMD_ID = 4904,
  UNRECOGNIZED = -1,
}

export interface TileGetTowerRsp {
  retcode: TileGetTowerRsp_Retcode;
  curFloorId: number;
  finishedDialogIdList: number[];
  settledEventIdList: number[];
  floorList: TileFloor[];
  towerId: number;
}

export enum TileGetTowerRsp_CmdId {
  CMD_ID = 4905,
  UNRECOGNIZED = -1,
}

export enum TileGetTowerRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface TileLoadSavedPositionReq {
  towerId: number;
  floorId: number;
}

export enum TileLoadSavedPositionReq_CmdId {
  CMD_ID = 4921,
  UNRECOGNIZED = -1,
}

export interface TileLoadSavedPositionRsp {
  retcode: TileLoadSavedPositionRsp_Retcode;
  position: number;
}

export enum TileLoadSavedPositionRsp_CmdId {
  CMD_ID = 4922,
  UNRECOGNIZED = -1,
}

export enum TileLoadSavedPositionRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_SAVED = 2,
  UNRECOGNIZED = -1,
}

export interface TileMap {
  mapId: number;
  width: number;
  height: number;
  cellList: TileMapCell[];
  triggerList: TileTrigger[];
  entityList: TileEntity[];
  markList: TileMark[];
}

export interface TileMapCell {
  cellId: number;
  ground: TileMapCell_CellLayer | undefined;
  decoration: TileMapCell_CellLayer | undefined;
  barrier: number;
  fog: number;
  terrain: number;
}

export interface TileMapCell_CellLayer {
  modelId: number;
  direction: number;
}

export interface TileMapUpdateNotify {
  towerId: number;
  floorId: number;
  cellList: TileMapCell[];
  entityList: TileEntity[];
}

export enum TileMapUpdateNotify_CmdId {
  CMD_ID = 4923,
  UNRECOGNIZED = -1,
}

export interface TileMark {
  markId: number;
  markValue: number;
}

export interface TileNpcInfo {
  id: number;
}

export interface TilePlayerInfo {
  uid: number;
  nickname: string;
  avatarId: number;
}

export interface TileReportSavedPositionReq {
  towerId: number;
  floorId: number;
  position: number;
}

export enum TileReportSavedPositionReq_CmdId {
  CMD_ID = 4919,
  UNRECOGNIZED = -1,
}

export interface TileReportSavedPositionRsp {
  retcode: TileReportSavedPositionRsp_Retcode;
}

export enum TileReportSavedPositionRsp_CmdId {
  CMD_ID = 4920,
  UNRECOGNIZED = -1,
}

export enum TileReportSavedPositionRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  POSITION_ERROR = 2,
  UNRECOGNIZED = -1,
}

export interface TileResetFloorReq {
  towerId: number;
  floorIdList: number[];
}

export enum TileResetFloorReq_CmdId {
  CMD_ID = 4912,
  UNRECOGNIZED = -1,
}

export interface TileResetFloorRsp {
  retcode: TileResetFloorRsp_Retcode;
  towerId: number;
  floorIdList: number[];
}

export enum TileResetFloorRsp_CmdId {
  CMD_ID = 4913,
  UNRECOGNIZED = -1,
}

export enum TileResetFloorRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface TileResetRegionReq {
  towerId: number;
  floorId: number;
  resetTag: number;
}

export enum TileResetRegionReq_CmdId {
  CMD_ID = 4917,
  UNRECOGNIZED = -1,
}

export interface TileResetRegionRsp {
  retcode: TileResetRegionRsp_Retcode;
}

export enum TileResetRegionRsp_CmdId {
  CMD_ID = 4918,
  UNRECOGNIZED = -1,
}

export enum TileResetRegionRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface TileSaveProgressReq {
  towerId: number;
  finishedDialogIdList: number[];
}

export enum TileSaveProgressReq_CmdId {
  CMD_ID = 4908,
  UNRECOGNIZED = -1,
}

export interface TileSaveProgressRsp {
  retcode: TileSaveProgressRsp_Retcode;
  finishedDialogIdList: number[];
}

export enum TileSaveProgressRsp_CmdId {
  CMD_ID = 4909,
  UNRECOGNIZED = -1,
}

export enum TileSaveProgressRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface TileSelectPathReq {
  towerId: number;
  nextPathCellId: number;
}

export enum TileSelectPathReq_CmdId {
  CMD_ID = 4915,
  UNRECOGNIZED = -1,
}

export interface TileSelectPathRsp {
  retcode: TileSelectPathRsp_Retcode;
  towerId: number;
  nextPathCellId: number;
}

export enum TileSelectPathRsp_CmdId {
  CMD_ID = 4916,
  UNRECOGNIZED = -1,
}

export enum TileSelectPathRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_CANDIDATE = 2,
  UNRECOGNIZED = -1,
}

export interface TileTrigger {
  id: number;
  isActive: boolean;
  position: number;
}

export interface TileUpdateMapReq {
  towerId: number;
  floorId: number;
  cellList: TileMapCell[];
  triggerList: TileTrigger[];
  createEntityList: TileEntity[];
  moveEntityList: TileUpdateMapReq_MoveEntity[];
  deleteEntityList: number[];
  markList: TileMark[];
  outerValueList: TileUpdateMapReq_OuterValue[];
}

export enum TileUpdateMapReq_CmdId {
  CMD_ID = 4902,
  UNRECOGNIZED = -1,
}

export interface TileUpdateMapReq_MoveEntity {
  uniqueId: number;
  toPosition: number;
  pathCellIdList: number[];
  direction: number;
  savedPosition: number;
}

export interface TileUpdateMapReq_OuterValue {
  type: TileUpdateMapReq_OuterValue_Type;
  key: number;
  value: number;
}

export enum TileUpdateMapReq_OuterValue_Type {
  NONE = 0,
  RPG_OVERALL = 1,
  UNRECOGNIZED = -1,
}

export interface TileUpdateMapRsp {
  retcode: TileUpdateMapRsp_Retcode;
  createdEntityList: TileEntity[];
}

export enum TileUpdateMapRsp_CmdId {
  CMD_ID = 4903,
  UNRECOGNIZED = -1,
}

export enum TileUpdateMapRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface TileWaitSelectPath {
  candidatePathCellIdList: number[];
  leftStepNum: number;
}

export interface TimeLimitAddUpReward {
  addUpValueNeed: number;
  rewardId: number;
  isRewardGet: boolean;
}

export interface TimeLimitAddUpRewardGrantNotify {
  type: TimeLimitAddUpType;
  addUpValueNeed: number;
  reward: RewardData | undefined;
}

export enum TimeLimitAddUpRewardGrantNotify_CmdId {
  CMD_ID = 257,
  UNRECOGNIZED = -1,
}

export interface TimeLimitAddUpUpdateNotify {
  addUpValue: number;
}

export enum TimeLimitAddUpUpdateNotify_CmdId {
  CMD_ID = 258,
  UNRECOGNIZED = -1,
}

export interface TowerRaidAvatar {
  avatarId: number;
  enterTimes: number;
  weaponId: number;
  stigmataIdList: number[];
}

export interface TowerRaidBossStage {
  stageId: number;
  bossLeftHp: number;
}

export interface TowerRaidLockAvatarNotify {
  avatarList: TowerRaidAvatar[];
}

export enum TowerRaidLockAvatarNotify_CmdId {
  CMD_ID = 4191,
  UNRECOGNIZED = -1,
}

export interface TownActivity {
  townId: number;
  towerId: number;
  gameRound: number;
  avatarList: TownAvatar[];
  brickIdList: number[];
  nextBrickRound: number;
  buildingList: TownBuilding[];
  validBuildingIdList: number[];
  monsterList: TownMonster[];
  eventList: TownEvent[];
  boss: TownBoss | undefined;
  buffList: TownBuff[];
  triggerList: TownPassByTrigger[];
  challengeList: TownChallenge[];
  finishedTowerIdList: number[];
  isGameEnd: boolean;
  pathList: TownPath[];
  transactionStr: string;
}

export interface TownActivityAlterPathReq {
  head: TownCommonHead | undefined;
  position: number;
}

export enum TownActivityAlterPathReq_CmdId {
  CMD_ID = 6478,
  UNRECOGNIZED = -1,
}

export interface TownActivityAlterPathRsp {
  retcode: TownActivityAlterPathRsp_Retcode;
  head: TownCommonHead | undefined;
  position: number;
  nextPosition: number;
}

export enum TownActivityAlterPathRsp_CmdId {
  CMD_ID = 6479,
  UNRECOGNIZED = -1,
}

export enum TownActivityAlterPathRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_ALTER = 2,
  NOT_MEET_CONDITION = 3,
  UNRECOGNIZED = -1,
}

export interface TownActivityAttackEnemyBuffNotify {
  head: TownCommonHead | undefined;
  attackList: TownActivityAttackEnemyBuffNotify_Attack[];
  dropItemList: DropItem[];
}

export enum TownActivityAttackEnemyBuffNotify_CmdId {
  CMD_ID = 6480,
  UNRECOGNIZED = -1,
}

export interface TownActivityAttackEnemyBuffNotify_Attack {
  buildingUniqueId: number;
  skillId: number;
  attackedUniqueIdList: number[];
}

export interface TownActivityBattleReq {
  head: TownCommonHead | undefined;
  endStatus: TownActivityBattleReq_BattleEndStatus;
  avatarResultList: TownActivityBattleReq_AvatarBattleResult[];
  monsterResult: TownActivityBattleReq_MonsterBattleResult | undefined;
}

export enum TownActivityBattleReq_CmdId {
  CMD_ID = 6456,
  UNRECOGNIZED = -1,
}

export enum TownActivityBattleReq_BattleEndStatus {
  WIN = 1,
  ALL_DEAD = 2,
  UNRECOGNIZED = -1,
}

export interface TownActivityBattleReq_AvatarBattleResult {
  avatarId: number;
  leftHpRatio: number;
}

export interface TownActivityBattleReq_MonsterBattleResult {
  monsterUniqueId: number;
  leftHpRatio: number;
}

export interface TownActivityBattleRsp {
  retcode: TownActivityBattleRsp_Retcode;
  head: TownCommonHead | undefined;
  dropItemList: DropItem[];
}

export enum TownActivityBattleRsp_CmdId {
  CMD_ID = 6457,
  UNRECOGNIZED = -1,
}

export enum TownActivityBattleRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_ERROR = 2,
  AVATAR_TEAM_NUM_ERROR = 3,
  POSITION_ERROR = 4,
  MONSTER_NOT_EXIST = 5,
  UNRECOGNIZED = -1,
}

export interface TownActivityBossAttackNotify {
  head: TownCommonHead | undefined;
  attackedPositionList: number[];
}

export enum TownActivityBossAttackNotify_CmdId {
  CMD_ID = 6465,
  UNRECOGNIZED = -1,
}

export interface TownActivityBuildReq {
  head: TownCommonHead | undefined;
  useBrickIndex: number;
  useBrickPosition: number;
  targetBuildingId: number;
  targetBuildingPosition: number;
  direction: number;
  consumeBuildingUniqueIdList: number[];
}

export enum TownActivityBuildReq_CmdId {
  CMD_ID = 6454,
  UNRECOGNIZED = -1,
}

export interface TownActivityBuildRsp {
  retcode: TownActivityBuildRsp_Retcode;
  head: TownCommonHead | undefined;
}

export enum TownActivityBuildRsp_CmdId {
  CMD_ID = 6455,
  UNRECOGNIZED = -1,
}

export enum TownActivityBuildRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  INVALID_BRICK = 2,
  BLUEPRINT_ERROR = 3,
  INVALID_POSITION = 4,
  LIMIT = 5,
  UNRECOGNIZED = -1,
}

export interface TownActivityCheckInOptionalReq {
  head: TownCommonHead | undefined;
  buildingUniqueId: number;
  avatarId: number;
}

export enum TownActivityCheckInOptionalReq_CmdId {
  CMD_ID = 6474,
  UNRECOGNIZED = -1,
}

export interface TownActivityCheckInOptionalRsp {
  retcode: TownActivityCheckInOptionalRsp_Retcode;
  head: TownCommonHead | undefined;
}

export enum TownActivityCheckInOptionalRsp_CmdId {
  CMD_ID = 6475,
  UNRECOGNIZED = -1,
}

export enum TownActivityCheckInOptionalRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_LIST = 2,
  CHECKED_IN = 3,
  UNRECOGNIZED = -1,
}

export interface TownActivityEndNotify {
  head: TownCommonHead | undefined;
  status: TownActivityEndNotify_Status;
  challengeList: TownChallenge[];
  challengeRewardData: RewardData | undefined;
  talentPointItem: GenericItemNum | undefined;
}

export enum TownActivityEndNotify_CmdId {
  CMD_ID = 6464,
  UNRECOGNIZED = -1,
}

export enum TownActivityEndNotify_Status {
  WIN = 0,
  LOSE = 1,
  ABANDON = 2,
  UNRECOGNIZED = -1,
}

export interface TownActivityGetDataReq {
  townId: number;
}

export enum TownActivityGetDataReq_CmdId {
  CMD_ID = 6450,
  UNRECOGNIZED = -1,
}

export interface TownActivityGetDataRsp {
  retcode: TownActivityGetDataRsp_Retcode;
  town: TownActivity | undefined;
}

export enum TownActivityGetDataRsp_CmdId {
  CMD_ID = 6451,
  UNRECOGNIZED = -1,
}

export enum TownActivityGetDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface TownActivityGetShopReq {
  head: TownCommonHead | undefined;
  buildingUniqueId: number;
}

export enum TownActivityGetShopReq_CmdId {
  CMD_ID = 6466,
  UNRECOGNIZED = -1,
}

export interface TownActivityGetShopRsp {
  retcode: TownActivityGetShopRsp_Retcode;
  head: TownCommonHead | undefined;
  buildingUniqueId: number;
  goodsList: TownActivityGetShopRsp_ShopGoods[];
}

export enum TownActivityGetShopRsp_CmdId {
  CMD_ID = 6467,
  UNRECOGNIZED = -1,
}

export enum TownActivityGetShopRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface TownActivityGetShopRsp_ShopGoods {
  goodsId: number;
  materialId: number;
  leftBuyTimes: number;
  costMaterialId: number;
  costNum: number;
  limitType: number;
}

export interface TownActivityHealAvatarReq {
  head: TownCommonHead | undefined;
  avatarId: number;
}

export enum TownActivityHealAvatarReq_CmdId {
  CMD_ID = 6460,
  UNRECOGNIZED = -1,
}

export interface TownActivityHealAvatarRsp {
  retcode: TownActivityHealAvatarRsp_Retcode;
  head: TownCommonHead | undefined;
}

export enum TownActivityHealAvatarRsp_CmdId {
  CMD_ID = 6461,
  UNRECOGNIZED = -1,
}

export enum TownActivityHealAvatarRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface TownActivityMaterialUseReq {
  head: TownCommonHead | undefined;
  materialId: number;
  targetParam: number;
}

export enum TownActivityMaterialUseReq_CmdId {
  CMD_ID = 6470,
  UNRECOGNIZED = -1,
}

export interface TownActivityMaterialUseRsp {
  retcode: TownActivityMaterialUseRsp_Retcode;
  head: TownCommonHead | undefined;
  materialId: number;
}

export enum TownActivityMaterialUseRsp_CmdId {
  CMD_ID = 6471,
  UNRECOGNIZED = -1,
}

export enum TownActivityMaterialUseRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MATERIAL_LACK = 2,
  NOT_USABLE = 3,
  INVALID_TARGET = 4,
  FORBID = 5,
  UNRECOGNIZED = -1,
}

export interface TownActivityRefreshBrickReq {
  head: TownCommonHead | undefined;
}

export enum TownActivityRefreshBrickReq_CmdId {
  CMD_ID = 6481,
  UNRECOGNIZED = -1,
}

export interface TownActivityRefreshBrickRsp {
  retcode: TownActivityRefreshBrickRsp_Retcode;
  head: TownCommonHead | undefined;
}

export enum TownActivityRefreshBrickRsp_CmdId {
  CMD_ID = 6482,
  UNRECOGNIZED = -1,
}

export enum TownActivityRefreshBrickRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LACK_COIN = 2,
  NO_BRICK = 3,
  UNRECOGNIZED = -1,
}

export interface TownActivityResetReq {
  townId: number;
}

export enum TownActivityResetReq_CmdId {
  CMD_ID = 6476,
  UNRECOGNIZED = -1,
}

export interface TownActivityResetRsp {
  retcode: TownActivityResetRsp_Retcode;
  townId: number;
}

export enum TownActivityResetRsp_CmdId {
  CMD_ID = 6477,
  UNRECOGNIZED = -1,
}

export enum TownActivityResetRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface TownActivitySaveReq {
  head: TownCommonHead | undefined;
}

export enum TownActivitySaveReq_CmdId {
  CMD_ID = 6452,
  UNRECOGNIZED = -1,
}

export interface TownActivitySaveRsp {
  retcode: TownActivitySaveRsp_Retcode;
  head: TownCommonHead | undefined;
}

export enum TownActivitySaveRsp_CmdId {
  CMD_ID = 6453,
  UNRECOGNIZED = -1,
}

export enum TownActivitySaveRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface TownActivitySellBrickReq {
  head: TownCommonHead | undefined;
  sellBrickIndex: number;
}

export enum TownActivitySellBrickReq_CmdId {
  CMD_ID = 6462,
  UNRECOGNIZED = -1,
}

export interface TownActivitySellBrickRsp {
  retcode: TownActivitySellBrickRsp_Retcode;
  head: TownCommonHead | undefined;
  returnMaterialList: Material[];
}

export enum TownActivitySellBrickRsp_CmdId {
  CMD_ID = 6463,
  UNRECOGNIZED = -1,
}

export enum TownActivitySellBrickRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  CAN_NOT_SELL = 2,
  UNRECOGNIZED = -1,
}

export interface TownActivitySellBuildingReq {
  head: TownCommonHead | undefined;
  sellBuildingUniqueId: number;
}

export enum TownActivitySellBuildingReq_CmdId {
  CMD_ID = 6458,
  UNRECOGNIZED = -1,
}

export interface TownActivitySellBuildingRsp {
  retcode: TownActivitySellBuildingRsp_Retcode;
  head: TownCommonHead | undefined;
  returnMaterialList: Material[];
}

export enum TownActivitySellBuildingRsp_CmdId {
  CMD_ID = 6459,
  UNRECOGNIZED = -1,
}

export enum TownActivitySellBuildingRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  CAN_NOT_SELL = 2,
  UNRECOGNIZED = -1,
}

export interface TownActivityShopBuyReq {
  head: TownCommonHead | undefined;
  shopBuildingUniqueId: number;
  goodsId: number;
}

export enum TownActivityShopBuyReq_CmdId {
  CMD_ID = 6468,
  UNRECOGNIZED = -1,
}

export interface TownActivityShopBuyRsp {
  retcode: TownActivityShopBuyRsp_Retcode;
  head: TownCommonHead | undefined;
  goodsId: number;
  leftBuyTimes: number;
}

export enum TownActivityShopBuyRsp_CmdId {
  CMD_ID = 6469,
  UNRECOGNIZED = -1,
}

export enum TownActivityShopBuyRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  COIN_LACK = 2,
  SOLD = 3,
  FORBID = 4,
  UNRECOGNIZED = -1,
}

export interface TownActivitySpeedUpHealReq {
  head: TownCommonHead | undefined;
  avatarId: number;
}

export enum TownActivitySpeedUpHealReq_CmdId {
  CMD_ID = 6472,
  UNRECOGNIZED = -1,
}

export interface TownActivitySpeedUpHealRsp {
  retcode: TownActivitySpeedUpHealRsp_Retcode;
  head: TownCommonHead | undefined;
}

export enum TownActivitySpeedUpHealRsp_CmdId {
  CMD_ID = 6473,
  UNRECOGNIZED = -1,
}

export enum TownActivitySpeedUpHealRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_HEALING = 2,
  LACK_MATERIAL = 3,
  UNRECOGNIZED = -1,
}

export interface TownAvatar {
  avatarId: number;
  tileUniqueId: number;
  leftStep: number;
  tilePosition: number;
  leftHpRatio: number;
  status: TownAvatar_Status;
  statusBeginRound: number;
  checkInBuildingUniqueId: number;
  buffList: TownBuff[];
  speedUpHealTimes: number;
}

export enum TownAvatar_Status {
  NORMAL = 0,
  HEALING = 1,
  DEAD = 2,
  UNRECOGNIZED = -1,
}

export interface TownBoss {
  monsterId: number;
  uniqueId: number;
  strength: number;
  leftHpRatio: number;
  bornRound: number;
  nextBossBornRound: number;
  nextBossMonsterId: number;
}

export interface TownBuff {
  buffId: number;
  buffNum: number;
  leftDurationNum: number;
}

export interface TownBuilding {
  uniqueId: number;
  buildingId: number;
  position: number;
  occupyPositionList: number[];
  skillTriggerTimesList: TownBuilding_SkillTriggerTimes[];
  leftHp: number;
  activatedDurationSkillIdList: number[];
  waitingAvatarIdList: number[];
  nextIntervalSkillRound: number;
}

export interface TownBuilding_SkillTriggerTimes {
  skillId: number;
  triggerTimes: number;
}

export interface TownChallenge {
  challengeId: number;
  status: TownChallenge_Status;
  value: number;
  towerId: number;
}

export enum TownChallenge_Status {
  NONE = 0,
  DOING = 1,
  FINISH = 2,
  CLOSE = 3,
  UNRECOGNIZED = -1,
}

export interface TownCommonHead {
  townId: number;
  towerId: number;
  gameRound: number;
}

export interface TownEvent {
  position: number;
  eventId: number;
}

export interface TownMonster {
  uniqueId: number;
  monsterId: number;
  position: number;
  strength: number;
  leftHpRatio: number;
}

export interface TownPassByTrigger {
  position: number;
  skillId: number;
  buildingUniqueId: number;
}

export interface TownPath {
  position: number;
  nextPosition: number;
}

export interface TransferArmadaLeaderReq {
  targetUid: number;
}

export enum TransferArmadaLeaderReq_CmdId {
  CMD_ID = 2619,
  UNRECOGNIZED = -1,
}

export interface TransferArmadaLeaderRsp {
  retcode: TransferArmadaLeaderRsp_Retcode;
}

export enum TransferArmadaLeaderRsp_CmdId {
  CMD_ID = 2620,
  UNRECOGNIZED = -1,
}

export enum TransferArmadaLeaderRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_GRANTED = 2,
  NOT_IN_ARMADA = 3,
  TARGET_NOT_IN_ARMADA = 4,
  LEVEL_LACK = 5,
  UNRECOGNIZED = -1,
}

export interface TrialAvatar {
  sampleId: number;
  endTime: number;
  isFirstShow: boolean;
}

export interface TrialWarship {
  sampleId: number;
  endTime: number;
}

export interface TriggerBurdenAlleviationReq {
  alleviationId: number;
  paraList: number[];
}

export enum TriggerBurdenAlleviationReq_CmdId {
  CMD_ID = 4354,
  UNRECOGNIZED = -1,
}

export interface TriggerBurdenAlleviationRsp {
  retcode: TriggerBurdenAlleviationRsp_Retcode;
  alleviationId: number;
  paraList: number[];
  rewardData: RewardData | undefined;
  dropItemList: DropItem[];
}

export enum TriggerBurdenAlleviationRsp_CmdId {
  CMD_ID = 4355,
  UNRECOGNIZED = -1,
}

export enum TriggerBurdenAlleviationRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  PLAYER_LEVEL_LIMIT = 3,
  TIMES_LIMIT = 4,
  STAMINA_LACK = 5,
  STAGE_NOT_EXIST = 6,
  EQUIPMENT_FULL = 7,
  NO_ENTER_TIMES = 8,
  EXTRA_MATERIAL_LACK = 9,
  RAID_IS_PASS = 10,
  WEEKDAY_STAGE_ID_NOT_MATCH = 11,
  ACTIVITY_NOT_OPEN = 12,
  UNRECOGNIZED = -1,
}

export interface TriggerOpenworldEndlessTrapReq {
  uniqueId: number;
  itemId: number;
}

export enum TriggerOpenworldEndlessTrapReq_CmdId {
  CMD_ID = 3428,
  UNRECOGNIZED = -1,
}

export interface TriggerOpenworldEndlessTrapRsp {
  retcode: TriggerOpenworldEndlessTrapRsp_Retcode;
}

export enum TriggerOpenworldEndlessTrapRsp_CmdId {
  CMD_ID = 3429,
  UNRECOGNIZED = -1,
}

export enum TriggerOpenworldEndlessTrapRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_JOIN = 2,
  UNRECOGNIZED = -1,
}

export interface TriggerRecommendGoodsNotify {
  recommendId: number;
  shopGoodsScheduleIdList: number[];
  triggerRecommendGoodsTime: number;
}

export enum TriggerRecommendGoodsNotify_CmdId {
  CMD_ID = 1538,
  UNRECOGNIZED = -1,
}

export interface TriggerRpgTaleEventReq {
  taleId: number;
  contentIdList: number[];
}

export enum TriggerRpgTaleEventReq_CmdId {
  CMD_ID = 2313,
  UNRECOGNIZED = -1,
}

export interface TriggerRpgTaleEventRsp {
  retcode: TriggerRpgTaleEventRsp_Retcode;
  taleId: number;
}

export enum TriggerRpgTaleEventRsp_CmdId {
  CMD_ID = 2314,
  UNRECOGNIZED = -1,
}

export enum TriggerRpgTaleEventRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NO_EVENT = 2,
  UNRECOGNIZED = -1,
}

export interface TriggerRpgTaleStageEventReq {
  triggerId: number;
  taleId: number;
}

export enum TriggerRpgTaleStageEventReq_CmdId {
  CMD_ID = 2317,
  UNRECOGNIZED = -1,
}

export interface TriggerRpgTaleStageEventRsp {
  retcode: TriggerRpgTaleStageEventRsp_Retcode;
  eventData: RpgTaleEvent | undefined;
  taleId: number;
}

export enum TriggerRpgTaleStageEventRsp_CmdId {
  CMD_ID = 2318,
  UNRECOGNIZED = -1,
}

export enum TriggerRpgTaleStageEventRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface TvtActivity {
  curScheduleId: number;
  openTime: number;
  closeTime: number;
  tvtDivision: number;
  tvtStar: number;
  winStreak: number;
  hasTakeDivisionUpRewardList: number[];
  totalBattleNum: number;
  totalWin: number;
  maxWinStreak: number;
  mvpNum: number;
  hasTakeMissionGroupRewardList: number[];
  openTimePeriodList: TvtActivity_OpenTimePeriod[];
  type: number;
}

export interface TvtActivity_OpenTimePeriod {
  openDayTime: number;
  closeDayTime: number;
}

export interface TvtBattleBeginNotify {
  battleId: number;
  battleStageId: number;
  transactionStr: string;
  battleInfo: TvtBattleInfo | undefined;
  lhsMemberList: TvtMember[];
  rhsMemberList: TvtMember[];
  isRobotMatch: boolean;
}

export enum TvtBattleBeginNotify_CmdId {
  CMD_ID = 3352,
  UNRECOGNIZED = -1,
}

export interface TvtBattleClientReportNotify {
  reportType: string;
  reportValue: string;
}

export enum TvtBattleClientReportNotify_CmdId {
  CMD_ID = 3358,
  UNRECOGNIZED = -1,
}

export interface TvtBattleConfirmNotify {
}

export enum TvtBattleConfirmNotify_CmdId {
  CMD_ID = 3361,
  UNRECOGNIZED = -1,
}

export interface TvtBattleEndNotify {
}

export enum TvtBattleEndNotify_CmdId {
  CMD_ID = 3353,
  UNRECOGNIZED = -1,
}

export interface TvtBattleHistory {
  battleResult: TvtBattleResult | undefined;
}

export interface TvtBattleInfo {
  battleId: number;
  battleStageId: number;
  phase: TvtBattleInfo_BattlePhase;
  phaseBeginTime: number;
  phaseEndTime: number;
  lhsMemberList: TvtBattleMember[];
  rhsMemberList: TvtBattleMember[];
  isRobotMatch: boolean;
  battleType: number;
  battleHardLevelGroup: number;
  battleHardLevel: number;
}

export enum TvtBattleInfo_BattlePhase {
  PHASE_INVALID = 0,
  PHASE_CONFIRM = 1,
  PHASE_PREPARE = 2,
  PHASE_FIGHT = 3,
  PHASE_FINISH = 4,
  UNRECOGNIZED = -1,
}

export interface TvtBattleMember {
  uid: number;
  regionName: string;
  isPrepared: boolean;
  memberStatus: TvtBattleMemberStatus;
  isConfirmed: boolean;
}

export interface TvtBattleMemberPrepareNotify {
  isCancelPrepare: boolean;
}

export enum TvtBattleMemberPrepareNotify_CmdId {
  CMD_ID = 3351,
  UNRECOGNIZED = -1,
}

export interface TvtBattleResult {
  battleStageId: number;
  beginTime: number;
  battleStatus: TvtBattleResult_BattleStatus;
  lhsMemberStatList: TvtMemberStat[];
  rhsMemberStatList: TvtMemberStat[];
  battleType: number;
  isRobotMatch: boolean;
  endTime: number;
}

export enum TvtBattleResult_BattleStatus {
  INVALID = 0,
  LEFT_WIN = 1,
  RIGHT_WIN = 2,
  UNRECOGNIZED = -1,
}

export interface TvtBattleRobotSettleNotify {
  battleResult: TvtBattleResult | undefined;
}

export enum TvtBattleRobotSettleNotify_CmdId {
  CMD_ID = 3363,
  UNRECOGNIZED = -1,
}

export interface TvtBattleSettleNotify {
  transactionStr: string;
  battleId: number;
  battleResult: TvtBattleResult | undefined;
}

export enum TvtBattleSettleNotify_CmdId {
  CMD_ID = 3354,
  UNRECOGNIZED = -1,
}

export interface TvtBattleStageMessage {
  messageId: number;
  fromUid: number;
  itemMsg: TvtBattleStageMessage_ItemMessage | undefined;
  avatarHpMsg: TvtBattleStageMessage_AvatarHpMesssage | undefined;
  playerMsg: TvtBattleStageMessage_PlayerMessage | undefined;
  bossDamageMsg: TvtBattleStageMessage_BossDamageMessage | undefined;
  stageScoinMsg: TvtBattleStageMessage_StageScoinMessage | undefined;
  clientDefineMsg: TvtBattleStageMessage_ClientDefineMessage | undefined;
  roundScoreMsg: TvtBattleStageMessage_RoundScoreMessage | undefined;
}

export enum TvtBattleStageMessage_MessageType {
  MESSAGE_ITEM = 1,
  MESSAGE_AVATAR_HP = 2,
  MESSAGE_PLAYER_WAVE = 3,
  MESSAGE_BOSS_DAMAGE = 4,
  MESSAGE_STAGE_SCOIN = 5,
  MESSAGE_CLIENT_DEFINE = 6,
  MESSAGE_ROUND_SCORE = 7,
  UNRECOGNIZED = -1,
}

export interface TvtBattleStageMessage_ItemMessage {
  itemId: number;
  targetUidList: number[];
  level: number;
}

export interface TvtBattleStageMessage_AvatarHpMesssage {
  avatarHpList: number[];
  avatarIdList: number[];
}

export interface TvtBattleStageMessage_PlayerMessage {
  playerValue: number;
  progress: number;
}

export interface TvtBattleStageMessage_BossDamageMessage {
  clientAddDamage: number;
  clientTotalDamage: number;
  clientSetLeftHp: number;
  serverSetLhsBossHp: number;
  serverSetRhsBossHp: number;
  lhsFinalKillPlayerUid: number;
  rhsFinalKillPlayerUid: number;
}

export interface TvtBattleStageMessage_StageScoinMessage {
  clientAddScoin: number;
  clientTotalScoin: number;
}

export interface TvtBattleStageMessage_ClientDefineMessage {
  type: number;
  paraUintList: number[];
}

export interface TvtBattleStageMessage_RoundScoreMessage {
  clientAddScore: number;
  leftTotalScore: number;
  rightTotalScore: number;
  leftWinTimes: number;
  rightWinTimes: number;
  round: number;
}

export interface TvtCard {
  cardId: number;
  cardLevel: number;
}

export interface TvtCardGetDataReq {
}

export enum TvtCardGetDataReq_CmdId {
  CMD_ID = 3309,
  UNRECOGNIZED = -1,
}

export interface TvtCardGetDataRsp {
  retcode: TvtCardGetDataRsp_Retcode;
  cardList: TvtCard[];
  suiteList: TvtCardSuite[];
  selectedSuiteIdx: number;
  isTakeSeasonReturn: boolean;
}

export enum TvtCardGetDataRsp_CmdId {
  CMD_ID = 3310,
  UNRECOGNIZED = -1,
}

export enum TvtCardGetDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LOCKED = 2,
  UNRECOGNIZED = -1,
}

export interface TvtCardLevelUpReq {
  cardId: number;
}

export enum TvtCardLevelUpReq_CmdId {
  CMD_ID = 3311,
  UNRECOGNIZED = -1,
}

export interface TvtCardLevelUpRsp {
  retcode: TvtCardLevelUpRsp_Retcode;
}

export enum TvtCardLevelUpRsp_CmdId {
  CMD_ID = 3312,
  UNRECOGNIZED = -1,
}

export enum TvtCardLevelUpRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LACK_MATERIAL = 2,
  LOCKED = 3,
  MAX_LEVEL = 4,
  UNRECOGNIZED = -1,
}

export interface TvtCardSuite {
  cardIdList: number[];
}

export interface TvtCardTakeSeasonReturnReq {
}

export enum TvtCardTakeSeasonReturnReq_CmdId {
  CMD_ID = 3315,
  UNRECOGNIZED = -1,
}

export interface TvtCardTakeSeasonReturnRsp {
  retcode: TvtCardTakeSeasonReturnRsp_Retcode;
  returnItemList: RewardItemData[];
}

export enum TvtCardTakeSeasonReturnRsp_CmdId {
  CMD_ID = 3316,
  UNRECOGNIZED = -1,
}

export enum TvtCardTakeSeasonReturnRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LOCKED = 2,
  HAS_TAKE = 3,
  UNRECOGNIZED = -1,
}

export interface TvtCardTransformMaterialReq {
  materialIdList: number[];
}

export enum TvtCardTransformMaterialReq_CmdId {
  CMD_ID = 3317,
  UNRECOGNIZED = -1,
}

export interface TvtCardTransformMaterialRsp {
  retcode: TvtCardTransformMaterialRsp_Retcode;
  transformedMaterialList: Material[];
  itemList: GenericItemNum[];
}

export enum TvtCardTransformMaterialRsp_CmdId {
  CMD_ID = 3318,
  UNRECOGNIZED = -1,
}

export enum TvtCardTransformMaterialRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LOCKED = 2,
  UNRECOGNIZED = -1,
}

export interface TvtCardUpdateSuiteReq {
  suiteList: TvtCardSuite[];
  selectedSuiteIdx: number;
}

export enum TvtCardUpdateSuiteReq_CmdId {
  CMD_ID = 3313,
  UNRECOGNIZED = -1,
}

export interface TvtCardUpdateSuiteRsp {
  retcode: TvtCardUpdateSuiteRsp_Retcode;
}

export enum TvtCardUpdateSuiteRsp_CmdId {
  CMD_ID = 3314,
  UNRECOGNIZED = -1,
}

export enum TvtCardUpdateSuiteRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LOCKED = 2,
  UNRECOGNIZED = -1,
}

export interface TvtEnterShopReq {
}

export enum TvtEnterShopReq_CmdId {
  CMD_ID = 3359,
  UNRECOGNIZED = -1,
}

export interface TvtEnterShopRsp {
  retcode: TvtEnterShopRsp_Retcode;
  enterShopOrder: number;
}

export enum TvtEnterShopRsp_CmdId {
  CMD_ID = 3360,
  UNRECOGNIZED = -1,
}

export enum TvtEnterShopRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_BATTLE = 2,
  UNRECOGNIZED = -1,
}

export interface TvtGetStageScheduleReq {
  type: number;
}

export enum TvtGetStageScheduleReq_CmdId {
  CMD_ID = 3307,
  UNRECOGNIZED = -1,
}

export interface TvtGetStageScheduleRsp {
  retcode: TvtGetStageScheduleRsp_Retcode;
  type: number;
  scheduleList: TvtStageSchedule[];
}

export enum TvtGetStageScheduleRsp_CmdId {
  CMD_ID = 3308,
  UNRECOGNIZED = -1,
}

export enum TvtGetStageScheduleRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_SCHEDULE = 2,
  UNRECOGNIZED = -1,
}

export interface TvtMember {
  uid: number;
  regionName: string;
  nickname: string;
  level: number;
  headAvatarId: number;
  frameId: number;
  dressId: number;
  division: number;
  divisionStar: number;
  winStreak: number;
  eloScore: number;
  eloScorePara: number;
  battleCombat: number;
  customHeadId: number;
  winAddStar: number;
  loseDelStar: number;
  cardList: TvtCard[];
  lineupInfo: LineupBriefInfo | undefined;
  isRobot: boolean;
  robotMatchProb: number;
  voiceId: number;
  laneOrder: number;
  lastLaneOrder: number;
}

export interface TvtMemberStat {
  member: TvtMember | undefined;
  totalScore: number;
  isMvp: boolean;
  oldDivision: number;
  oldDivisionStar: number;
  battlePointsInStage: number;
  stageScoinNum: number;
  isTeamMatch: boolean;
}

export interface TvtStageSchedule {
  dayBeginTime: number;
  dayEndTime: number;
  stageIdList: number[];
}

export interface TvtTakeMissionGroupRewardReq {
  missionGroupId: number;
}

export enum TvtTakeMissionGroupRewardReq_CmdId {
  CMD_ID = 3305,
  UNRECOGNIZED = -1,
}

export interface TvtTakeMissionGroupRewardRsp {
  retcode: TvtTakeMissionGroupRewardRsp_Retcode;
  rewardList: RewardData[];
}

export enum TvtTakeMissionGroupRewardRsp_CmdId {
  CMD_ID = 3306,
  UNRECOGNIZED = -1,
}

export enum TvtTakeMissionGroupRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_SCHEDULE = 2,
  MISSION_NOT_FINISH = 3,
  HAS_TAKEN = 4,
  UNRECOGNIZED = -1,
}

export interface TvtUpdateLineupInfoNotify {
  avatarIdList: number[];
  elfIdList: number[];
}

export enum TvtUpdateLineupInfoNotify_CmdId {
  CMD_ID = 3362,
  UNRECOGNIZED = -1,
}

export interface UltraEndlessBriefDataNotify {
  mainData: UltraEndlessMainData | undefined;
}

export enum UltraEndlessBriefDataNotify_CmdId {
  CMD_ID = 5210,
  UNRECOGNIZED = -1,
}

export interface UltraEndlessClientReportNotify {
  clientReportType: UltraEndlessClientReportNotify_ClientReportType;
  clientTransactionStr: string;
  reportMsg: string;
}

export enum UltraEndlessClientReportNotify_CmdId {
  CMD_ID = 5219,
  UNRECOGNIZED = -1,
}

export enum UltraEndlessClientReportNotify_ClientReportType {
  CLIENT_REPORT_TYPE_NONE = 0,
  CLIENT_REPORT_TYPE_STAGE_BEGIN = 1,
  UNRECOGNIZED = -1,
}

export interface UltraEndlessCommonNotify {
  eventType: UltraEndlessCommonNotify_EventType;
}

export enum UltraEndlessCommonNotify_CmdId {
  CMD_ID = 5298,
  UNRECOGNIZED = -1,
}

export enum UltraEndlessCommonNotify_EventType {
  EVENT_NONE = 0,
  EVENT_IN_SETTLE = 1,
  UNRECOGNIZED = -1,
}

export interface UltraEndlessEnterSiteReq {
  siteId: number;
}

export enum UltraEndlessEnterSiteReq_CmdId {
  CMD_ID = 5211,
  UNRECOGNIZED = -1,
}

export interface UltraEndlessEnterSiteRsp {
  retcode: UltraEndlessEnterSiteRsp_Retcode;
  siteId: number;
}

export enum UltraEndlessEnterSiteRsp_CmdId {
  CMD_ID = 5212,
  UNRECOGNIZED = -1,
}

export enum UltraEndlessEnterSiteRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_SCHEDULE = 2,
  PRE_NOT_FINISH = 3,
  ALREADY_FINISH = 4,
  UNRECOGNIZED = -1,
}

export interface UltraEndlessFirstJoinRewardNotify {
  medalReward: RewardData | undefined;
  promoteReward: RewardData | undefined;
}

export enum UltraEndlessFirstJoinRewardNotify_CmdId {
  CMD_ID = 5220,
  UNRECOGNIZED = -1,
}

export interface UltraEndlessFloor {
  floor: number;
  maxScore: number;
}

export interface UltraEndlessGetMainDataReq {
  playerLevel: number;
}

export enum UltraEndlessGetMainDataReq_CmdId {
  CMD_ID = 5202,
  UNRECOGNIZED = -1,
}

export interface UltraEndlessGetMainDataRsp {
  retcode: UltraEndlessGetMainDataRsp_Retcode;
  scheduleId: number;
  groupLevel: number;
  topGroupLevel: number;
  cupNum: number;
  mainData: UltraEndlessMainData | undefined;
  lastSettleInfo: UltraEndlessSettleInfo | undefined;
  isJustJoin: boolean;
  dynamicHardLevel: number;
  endlessPlayerList: UltraEndlessPlayer[];
  briefDataList: PlayerFriendBriefData[];
}

export enum UltraEndlessGetMainDataRsp_CmdId {
  CMD_ID = 5203,
  UNRECOGNIZED = -1,
}

export enum UltraEndlessGetMainDataRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  PLAYER_LEVEL_LACK = 2,
  NOT_OPEN = 3,
  IN_OLD_ENDLESS = 4,
  FEATURE_CLOSED = 5,
  UNRECOGNIZED = -1,
}

export interface UltraEndlessGetTopRankReq {
  scheduleId: number;
}

export enum UltraEndlessGetTopRankReq_CmdId {
  CMD_ID = 5200,
  UNRECOGNIZED = -1,
}

export interface UltraEndlessGetTopRankRsp {
  retcode: UltraEndlessGetTopRankRsp_Retcode;
  scheduleId: number;
  rankData: RankShowData | undefined;
}

export enum UltraEndlessGetTopRankRsp_CmdId {
  CMD_ID = 5201,
  UNRECOGNIZED = -1,
}

export enum UltraEndlessGetTopRankRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface UltraEndlessLastSettleRewardNotify {
  settleInfo: UltraEndlessSettleInfo | undefined;
  settleRewardData: RewardData | undefined;
  groupLevelRewardData: RewardData | undefined;
}

export enum UltraEndlessLastSettleRewardNotify_CmdId {
  CMD_ID = 5205,
  UNRECOGNIZED = -1,
}

export interface UltraEndlessMainData {
  scheduleId: number;
  effectTime: number;
  beginTime: number;
  endTime: number;
  closeTime: number;
  lastScheduleId: number;
  siteList: UltraEndlessSite[];
  lastSettleTopRankScheduleId: number;
  curSeasonId: number;
  lastSettleSeasonId: number;
}

export interface UltraEndlessPlayer {
  uid: number;
  groupLevel: number;
  cupNum: number;
  maxStageScore: number;
  scoreUpdateTime: number;
  lineupInfo: LineupBriefInfo | undefined;
}

export interface UltraEndlessReportSiteFloorReq {
  siteId: number;
  floor: number;
  score: number;
  costTime: number;
  totalCostTime: number;
  avatarIdList: number[];
  elfIdList: number[];
  isUpFloor: boolean;
}

export enum UltraEndlessReportSiteFloorReq_CmdId {
  CMD_ID = 5206,
  UNRECOGNIZED = -1,
}

export interface UltraEndlessReportSiteFloorRsp {
  retcode: UltraEndlessReportSiteFloorRsp_Retcode;
  siteId: number;
  floor: number;
  isUpFloor: boolean;
}

export enum UltraEndlessReportSiteFloorRsp_CmdId {
  CMD_ID = 5207,
  UNRECOGNIZED = -1,
}

export enum UltraEndlessReportSiteFloorRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  PRE_NOT_FINISH = 2,
  NOT_IN_SCHEDULE = 3,
  UNRECOGNIZED = -1,
}

export interface UltraEndlessSettleInfo {
  scheduleId: number;
  groupLevel: number;
  maxStageScore: number;
  groupMemberNum: number;
  rank: number;
  cupNumBefore: number;
  cupNumAfterScheduleSettle: number;
  cupNumAfterSeasonSettle: number;
  cupNumBeforeSeasonSettle: number;
  cupNum: number;
  oldEndlessSettleList: OldEndlessPlayerSettle[];
  mmrScore: number;
  bufferCupBeforeScheduleSettle: number;
  bufferCup: number;
}

export interface UltraEndlessSite {
  siteId: number;
  floorList: UltraEndlessFloor[];
  maxScoreCostTime: number;
}

export interface UltraEndlessTopRankRewardReq {
}

export enum UltraEndlessTopRankRewardReq_CmdId {
  CMD_ID = 5215,
  UNRECOGNIZED = -1,
}

export interface UltraEndlessTopRankRewardRsp {
  retcode: UltraEndlessTopRankRewardRsp_Retcode;
  scheduleId: number;
  rank: number;
  rewardData: RewardData | undefined;
}

export enum UltraEndlessTopRankRewardRsp_CmdId {
  CMD_ID = 5216,
  UNRECOGNIZED = -1,
}

export enum UltraEndlessTopRankRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_RANK = 2,
  ALREADY_TAKEN = 3,
  UNRECOGNIZED = -1,
}

export interface UnbindAccountReq {
  accountType: number;
  accountUid: string;
  accountToken: string;
  token: string;
}

export enum UnbindAccountReq_CmdId {
  CMD_ID = 961,
  UNRECOGNIZED = -1,
}

export interface UnbindAccountRsp {
  retcode: UnbindAccountRsp_Retcode;
}

export enum UnbindAccountRsp_CmdId {
  CMD_ID = 962,
  UNRECOGNIZED = -1,
}

export enum UnbindAccountRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ACCOUNT_VERIFY_ERROR = 2,
  ACCOUNT_TYPE_ERROR = 3,
  NOT_BIND = 4,
  IS_LOGIN = 5,
  UNRECOGNIZED = -1,
}

export interface UniqueGachaData {
  ticketHcoinCost: number;
  ticketMaterialId: number;
  leftGachaTimes: number;
  selectItemPool: UniqueGachaSelectItemPool | undefined;
}

export interface UniqueGachaSelectItemPool {
  selectItemList: number[];
}

export interface UnlockAvatarSkillReq {
  avatarId: number;
  skillId: number;
}

export enum UnlockAvatarSkillReq_CmdId {
  CMD_ID = 88,
  UNRECOGNIZED = -1,
}

export interface UnlockAvatarSkillRsp {
  retcode: UnlockAvatarSkillRsp_Retcode;
}

export enum UnlockAvatarSkillRsp_CmdId {
  CMD_ID = 89,
  UNRECOGNIZED = -1,
}

export enum UnlockAvatarSkillRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_NOT_EXIST = 2,
  HAS_UNLOCK = 3,
  AVATAR_LEVEL_LACK = 4,
  AVATAR_STAR_LACK = 5,
  MATERIAL_LACK = 6,
  UNRECOGNIZED = -1,
}

export interface UnlockDeviceSecurityPasswordReq {
  password: string;
}

export enum UnlockDeviceSecurityPasswordReq_CmdId {
  CMD_ID = 5027,
  UNRECOGNIZED = -1,
}

export interface UnlockDeviceSecurityPasswordRsp {
  retcode: UnlockDeviceSecurityPasswordRsp_Retcode;
  securityPasswordInfo: SecurityPasswordInfo | undefined;
}

export enum UnlockDeviceSecurityPasswordRsp_CmdId {
  CMD_ID = 5028,
  UNRECOGNIZED = -1,
}

export enum UnlockDeviceSecurityPasswordRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  TOO_MANY_FAILS = 2,
  WRONG_PASSWORD = 3,
  UNRECOGNIZED = -1,
}

export interface UnlockDLCPhotoReq {
  uniqueMonsterId: number;
}

export enum UnlockDLCPhotoReq_CmdId {
  CMD_ID = 3586,
  UNRECOGNIZED = -1,
}

export interface UnlockDLCPhotoRsp {
  retcode: UnlockDLCPhotoRsp_Retcode;
}

export enum UnlockDLCPhotoRsp_CmdId {
  CMD_ID = 3587,
  UNRECOGNIZED = -1,
}

export enum UnlockDLCPhotoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface UnlockDormHouseReq {
  houseId: number;
}

export enum UnlockDormHouseReq_CmdId {
  CMD_ID = 609,
  UNRECOGNIZED = -1,
}

export interface UnlockDormHouseRsp {
  retcode: UnlockDormHouseRsp_Retcode;
  house: DormHouse | undefined;
}

export enum UnlockDormHouseRsp_CmdId {
  CMD_ID = 610,
  UNRECOGNIZED = -1,
}

export enum UnlockDormHouseRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  REPEAT_UNLOCK = 2,
  MATERIAL_LIMIT = 3,
  LEVEL_LIMIT = 4,
  UNRECOGNIZED = -1,
}

export interface UnlockFarmSlotReq {
  slotId: number;
}

export enum UnlockFarmSlotReq_CmdId {
  CMD_ID = 1387,
  UNRECOGNIZED = -1,
}

export interface UnlockFarmSlotRsp {
  retcode: UnlockFarmSlotRsp_Retcode;
  slotId: number;
}

export enum UnlockFarmSlotRsp_CmdId {
  CMD_ID = 1388,
  UNRECOGNIZED = -1,
}

export enum UnlockFarmSlotRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  FARM_LEVEL_LACK = 2,
  MATERIAL_LACK = 3,
  UNRECOGNIZED = -1,
}

export interface UnlockFurnitureReq {
  furnitureId: number;
}

export enum UnlockFurnitureReq_CmdId {
  CMD_ID = 680,
  UNRECOGNIZED = -1,
}

export interface UnlockFurnitureRsp {
  retcode: UnlockFurnitureRsp_Retcode;
}

export enum UnlockFurnitureRsp_CmdId {
  CMD_ID = 681,
  UNRECOGNIZED = -1,
}

export enum UnlockFurnitureRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNLOCK_FORBID = 2,
  HAS_UNLOCK = 3,
  HCOIN_LACK = 4,
  SCOIN_LACK = 5,
  MATERIAL_LACK = 6,
  UNRECOGNIZED = -1,
}

export interface UnlockGobackFundReq {
}

export enum UnlockGobackFundReq_CmdId {
  CMD_ID = 1651,
  UNRECOGNIZED = -1,
}

export interface UnlockGobackFundRsp {
  retcode: UnlockGobackFundRsp_Retcode;
}

export enum UnlockGobackFundRsp_CmdId {
  CMD_ID = 1652,
  UNRECOGNIZED = -1,
}

export enum UnlockGobackFundRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ALREADY_UNLOCKED = 2,
  MCOIN_LACK = 3,
  UNRECOGNIZED = -1,
}

export interface UnlockPrivilegeReq {
  privilegeId: number;
}

export enum UnlockPrivilegeReq_CmdId {
  CMD_ID = 1642,
  UNRECOGNIZED = -1,
}

export interface UnlockPrivilegeRsp {
  retcode: UnlockPrivilegeRsp_Retcode;
}

export enum UnlockPrivilegeRsp_CmdId {
  CMD_ID = 1643,
  UNRECOGNIZED = -1,
}

export enum UnlockPrivilegeRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LEVEL_LACK = 2,
  NEWBIE_SCHEDULE_ERROR = 3,
  NEWBIE_DAY_LACK = 4,
  BUY_TIMES_LACK = 5,
  MCOIN_LACK = 6,
  UNRECOGNIZED = -1,
}

export interface UnlockRpgTaleSiteReq {
  siteId: number;
  taleId: number;
  isOnlyCheck: boolean;
}

export enum UnlockRpgTaleSiteReq_CmdId {
  CMD_ID = 2307,
  UNRECOGNIZED = -1,
}

export interface UnlockRpgTaleSiteRsp {
  retcode: UnlockRpgTaleSiteRsp_Retcode;
  siteId: number;
  taleId: number;
  limitFlagList: RpgTaleFlag[];
  isOnlyCheck: boolean;
}

export enum UnlockRpgTaleSiteRsp_CmdId {
  CMD_ID = 2308,
  UNRECOGNIZED = -1,
}

export enum UnlockRpgTaleSiteRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNLOCKED = 2,
  MATERIAL_NOT_ENOUGH = 3,
  FLAG_LIMIT = 4,
  UNRECOGNIZED = -1,
}

export interface UpdateAssistantAvatarIdReq {
  avatarId: number;
}

export enum UpdateAssistantAvatarIdReq_CmdId {
  CMD_ID = 271,
  UNRECOGNIZED = -1,
}

export interface UpdateAssistantAvatarIdRsp {
  retcode: UpdateAssistantAvatarIdRsp_Retcode;
}

export enum UpdateAssistantAvatarIdRsp_CmdId {
  CMD_ID = 272,
  UNRECOGNIZED = -1,
}

export enum UpdateAssistantAvatarIdRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_NOT_EXIST = 2,
  UNRECOGNIZED = -1,
}

export interface UpdateAvatarTeamNotify {
  team: AvatarTeam | undefined;
}

export enum UpdateAvatarTeamNotify_CmdId {
  CMD_ID = 49,
  UNRECOGNIZED = -1,
}

export interface UpdateClientSettingNotify {
  id: number;
  data: Buffer;
}

export enum UpdateClientSettingNotify_CmdId {
  CMD_ID = 5002,
  UNRECOGNIZED = -1,
}

export interface UpdateClientSettingReq {
  clientSettingType: number;
  isWeeklyGuideSwitchOn: boolean;
  snsShowPriviledgeList: SnsShowPriviledge[];
  avatarArtifactSwitch: AvatarArtifactSwitch | undefined;
  masterPupilTagSwitch: MasterPupilTagSwitch | undefined;
}

export enum UpdateClientSettingReq_CmdId {
  CMD_ID = 1271,
  UNRECOGNIZED = -1,
}

export interface UpdateCustomAvatarTeamReq {
  team: CustomAvatarTeam | undefined;
}

export enum UpdateCustomAvatarTeamReq_CmdId {
  CMD_ID = 269,
  UNRECOGNIZED = -1,
}

export interface UpdateCustomAvatarTeamRsp {
  retcode: UpdateCustomAvatarTeamRsp_Retcode;
}

export enum UpdateCustomAvatarTeamRsp_CmdId {
  CMD_ID = 270,
  UNRECOGNIZED = -1,
}

export enum UpdateCustomAvatarTeamRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  TEAM_ID_ERROR = 2,
  AVATAR_ID_ERROR = 3,
  AVATAR_NUM_ERROR = 4,
  SENSITIVE_WORDS = 5,
  NAME_LEN_ERROR = 6,
  UNRECOGNIZED = -1,
}

export interface UpdateEquipmentProtectedStatusReq {
  isProtected: boolean;
  weaponUniqueIdList: number[];
  stigmataUniqueIdList: number[];
}

export enum UpdateEquipmentProtectedStatusReq_CmdId {
  CMD_ID = 74,
  UNRECOGNIZED = -1,
}

export interface UpdateEquipmentProtectedStatusRsp {
  retcode: UpdateEquipmentProtectedStatusRsp_Retcode;
}

export enum UpdateEquipmentProtectedStatusRsp_CmdId {
  CMD_ID = 75,
  UNRECOGNIZED = -1,
}

export enum UpdateEquipmentProtectedStatusRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  EQUIPMENT_NOT_EXIST = 2,
  UNRECOGNIZED = -1,
}

export interface UpdateLobbyLineupReq {
  avatarId: number;
  memberInfo: MpTeamMemberInfo | undefined;
  avatarTrialId: number;
  reclaimAvatarId: number;
  reclaimAvatarInfo: ReclaimMpAvatar | undefined;
  elfId: number;
  backupAvatarIdList: number[];
  scDlcAvatarId: number;
  scDlcAvatarInfo: ScDLCMpAvatar | undefined;
}

export enum UpdateLobbyLineupReq_CmdId {
  CMD_ID = 307,
  UNRECOGNIZED = -1,
}

export interface UpdateLobbyLineupRsp {
  retcode: UpdateLobbyLineupRsp_Retcode;
  avatarId: number;
  avatarTrialId: number;
  reclaimAvatarId: number;
  elfId: number;
  backupAvatarIdList: number[];
}

export enum UpdateLobbyLineupRsp_CmdId {
  CMD_ID = 308,
  UNRECOGNIZED = -1,
}

export enum UpdateLobbyLineupRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_LOBBY = 2,
  AVATAR_NOT_EXIST = 3,
  STATUS_ERROR = 4,
  SERVER_BUSY = 5,
  ELF_NOT_EXIST = 6,
  UNRECOGNIZED = -1,
}

export interface UpdateLobbySettingReq {
  teamName: string;
  teamDescription: string;
  minLevel: number;
  lobbyEnterType: LobbyEnterType;
  maxLevel: number;
}

export enum UpdateLobbySettingReq_CmdId {
  CMD_ID = 1365,
  UNRECOGNIZED = -1,
}

export interface UpdateLobbySettingRsp {
  retcode: UpdateLobbySettingRsp_Retcode;
}

export enum UpdateLobbySettingRsp_CmdId {
  CMD_ID = 1366,
  UNRECOGNIZED = -1,
}

export enum UpdateLobbySettingRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_LOBBY = 2,
  NOT_LEADER = 3,
  TEAM_NAME_ERROR = 4,
  UNRECOGNIZED = -1,
}

export interface UpdateMissionProgressReq {
  finishWay: MissionFinishWay;
  finishPara: number;
  finishParaStr: string;
  progressAdd: number;
  stageId: number;
}

export enum UpdateMissionProgressReq_CmdId {
  CMD_ID = 117,
  UNRECOGNIZED = -1,
}

export interface UpdateMissionProgressRsp {
  retcode: UpdateMissionProgressRsp_Retcode;
}

export enum UpdateMissionProgressRsp_CmdId {
  CMD_ID = 118,
  UNRECOGNIZED = -1,
}

export enum UpdateMissionProgressRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  FINISH_WAY_ERROR = 2,
  PLAYER_STATUS_ERROR = 3,
  UNRECOGNIZED = -1,
}

export interface UpdateRogueStageAvatarPositionReq {
  avatarIdList: number[];
}

export enum UpdateRogueStageAvatarPositionReq_CmdId {
  CMD_ID = 286,
  UNRECOGNIZED = -1,
}

export interface UpdateRogueStageAvatarPositionRsp {
  retcode: UpdateRogueStageAvatarPositionRsp_Retcode;
}

export enum UpdateRogueStageAvatarPositionRsp_CmdId {
  CMD_ID = 287,
  UNRECOGNIZED = -1,
}

export enum UpdateRogueStageAvatarPositionRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_JOIN_ARMADA = 2,
  NOT_INIT = 3,
  AVATAR_ERROR = 4,
  UNRECOGNIZED = -1,
}

export interface UpdateRoomInfoReq {
  roomInfo: RoomInfo | undefined;
}

export enum UpdateRoomInfoReq_CmdId {
  CMD_ID = 3171,
  UNRECOGNIZED = -1,
}

export interface UpdateRoomInfoRsp {
  retcode: UpdateRoomInfoRsp_Retcode;
}

export enum UpdateRoomInfoRsp_CmdId {
  CMD_ID = 3172,
  UNRECOGNIZED = -1,
}

export enum UpdateRoomInfoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_IN_ROOM = 2,
  IN_MATCH = 3,
  NOT_LEADER = 4,
  STAGE_NOT_IN_SCHEDULE = 5,
  TOO_FREQUENT = 6,
  UNRECOGNIZED = -1,
}

export interface UpdateScDLCFeverSuiteReq {
  suiteId: number;
  suiteName: string;
  skillChipIdList: number[];
}

export enum UpdateScDLCFeverSuiteReq_CmdId {
  CMD_ID = 6304,
  UNRECOGNIZED = -1,
}

export interface UpdateScDLCFeverSuiteRsp {
  retcode: UpdateScDLCFeverSuiteRsp_Retcode;
}

export enum UpdateScDLCFeverSuiteRsp_CmdId {
  CMD_ID = 6305,
  UNRECOGNIZED = -1,
}

export enum UpdateScDLCFeverSuiteRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  SENSITIVE_WORDS = 2,
  SLOT_LACK = 3,
  INVALID_SKILL_CHIP = 4,
  NAME_FORMAT_ERROR = 5,
  UNRECOGNIZED = -1,
}

export interface UpdateTowerRaidBossReq {
  stageId: number;
  bossLeftHp: number;
}

export enum UpdateTowerRaidBossReq_CmdId {
  CMD_ID = 4189,
  UNRECOGNIZED = -1,
}

export interface UpdateTowerRaidBossRsp {
  retcode: UpdateTowerRaidBossRsp_Retcode;
  stageId: number;
  bossLeftHp: number;
}

export enum UpdateTowerRaidBossRsp_CmdId {
  CMD_ID = 4190,
  UNRECOGNIZED = -1,
}

export enum UpdateTowerRaidBossRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_BEGIN = 2,
  STAGE_ERROR = 3,
  UNRECOGNIZED = -1,
}

export interface UpgradeMissionThemeReq {
  themeId: number;
}

export enum UpgradeMissionThemeReq_CmdId {
  CMD_ID = 4207,
  UNRECOGNIZED = -1,
}

export interface UpgradeMissionThemeRsp {
  retcode: UpgradeMissionThemeRsp_Retcode;
  themeId: number;
  rewardData: RewardData | undefined;
}

export enum UpgradeMissionThemeRsp_CmdId {
  CMD_ID = 4208,
  UNRECOGNIZED = -1,
}

export enum UpgradeMissionThemeRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  HCOIN_LACK = 3,
  MCOIN_LACK = 4,
  MATERIAL_LACK = 5,
  UNRECOGNIZED = -1,
}

export interface UrgencyMsgNotify {
  msg: string;
  clientSetting: SettingDict | undefined;
}

export enum UrgencyMsgNotify_CmdId {
  CMD_ID = 187,
  UNRECOGNIZED = -1,
}

export interface UseMaterialReq {
  materialId: number;
  num: number;
  parameter: number;
  simulateMagic: number;
  consumeItemList: EquipmentItemList | undefined;
}

export enum UseMaterialReq_CmdId {
  CMD_ID = 251,
  UNRECOGNIZED = -1,
}

export interface UseMaterialRsp {
  retcode: UseMaterialRsp_Retcode;
  giftRewardList: RewardData[];
  dropItemList: DropItem[];
  materialId: number;
  num: number;
  overflowItemId: number;
}

export enum UseMaterialRsp_CmdId {
  CMD_ID = 252,
  UNRECOGNIZED = -1,
}

export enum UseMaterialRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MATERIAL_LACK = 2,
  EQUIPMENT_FULL = 3,
  EQUIPMENT_MATERIAL_LIMIT = 4,
  EQUIPMENT_FRAGMENT_LIMIT = 5,
  STAMINA_FULL = 6,
  LEVEL_LACK = 7,
  EXTRA_STORY_CLOSED = 8,
  EQUIPMENT_EXPIRE = 9,
  BUFF_MATERIAL_FAIL = 10,
  ACTIVATE_AVATAR_REPEATE_FAIL = 11,
  ACTIVATE_AVATAR_LEVEL_LIMIT = 12,
  NO_ARMADA = 13,
  MATRIX_CLOSE = 14,
  EXPLORE_POWER_LIMIT = 15,
  INVALID_NUM = 16,
  TEAM_NOT_EXIST = 17,
  TEAM_FULL_ENERGE = 18,
  VITALITY_FULL = 19,
  FEATURE_CLOSED = 20,
  ACTIVITY_NOT_OPEN = 21,
  AVATAR_NEED = 22,
  CONSUME_ITEM_NOT_EXIST = 23,
  CONSUME_ITEM_IN_USE = 24,
  CONSUME_ITEM_REPEAT = 25,
  CONSUME_ITEM_PROTECTED = 26,
  COST_GACHA_TICKET = 27,
  COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 28,
  COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 29,
  CONSUME_ITEM_IN_FACILITY = 30,
  CONSUME_ITEM_GRAND_KEY = 31,
  CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 32,
  UNRECOGNIZED = -1,
}

export interface UseOpenworldEndlessItemReq {
  itemId: number;
  targetUid: number;
  invasion: OpenworldInvasionItem | undefined;
  itemNum: number;
}

export enum UseOpenworldEndlessItemReq_CmdId {
  CMD_ID = 3422,
  UNRECOGNIZED = -1,
}

export interface UseOpenworldEndlessItemRsp {
  retcode: UseOpenworldEndlessItemRsp_Retcode;
  newInvasionId: number;
  itemId: number;
  battleId: number;
  effectItemList: OpenworldEndlessItem[];
  oldInvaisonId: number;
  targetId: number;
  invasionBuffNum: number;
}

export enum UseOpenworldEndlessItemRsp_CmdId {
  CMD_ID = 3423,
  UNRECOGNIZED = -1,
}

export enum UseOpenworldEndlessItemRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ITEM_LACK = 2,
  INVASION_AVATAR_ERROR = 3,
  TARGET_ERROR = 4,
  TARGET_GROUP_ERROR = 5,
  OUT_OF_RANGE = 6,
  INVASION_FULL = 7,
  INVASION_ID_ERROR = 8,
  ENDLESS_STATUS_ERROR = 9,
  NOT_JOIN = 10,
  TRAP_FULL = 11,
  UNRECOGNIZED = -1,
}

export interface UseReclaimItemReq {
  itemId: number;
  num: number;
}

export enum UseReclaimItemReq_CmdId {
  CMD_ID = 1181,
  UNRECOGNIZED = -1,
}

export interface UseReclaimItemRsp {
  retcode: UseReclaimItemRsp_Retcode;
  expAdded: number;
}

export enum UseReclaimItemRsp_CmdId {
  CMD_ID = 1182,
  UNRECOGNIZED = -1,
}

export enum UseReclaimItemRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  ITEM_ERROR = 2,
  ITEM_LACK = 3,
  UNRECOGNIZED = -1,
}

export interface UserRankData {
  uid: number;
  score: number;
  rank: number;
  nickName: string;
  armadaId: number;
  armadaName: string;
  avatarId: number;
  dressId: number;
  frameId: number;
  houseName: string;
  customHeadId: number;
  isLogoff: boolean;
  avatarInfoList: AvatarBriefInfo[];
  elfInfoList: ElfBriefInfo[];
  dlcName: string;
  weeklyReportEndlessInfo: UserRankWeeklyReportEndless | undefined;
  weeklyReportExBossInfo: UserRankWeeklyReportExBoss | undefined;
  ultraEndlessGroupLevel: number;
  weeklyReportUltraEndlessInfo: UserRankWeeklyReportUltraEndless | undefined;
  slgBattleInfo: UserRankSlgBattle | undefined;
  monsterInfoList: RanchMonsterBriefInfo[];
  monsterCardRankInfo: MonsterCardActivityRankInfo | undefined;
}

export interface UserRankSlgBattle {
  countryId: number;
}

export interface UserRankWeeklyReportEndless {
  finalBossId: number;
  rewardType: EndlessRewardType;
  battleConfigId: number;
}

export interface UserRankWeeklyReportExBoss {
  finishedBossInfoList: FinishedExBossInfo[];
  rankPercent: number;
}

export interface UserRankWeeklyReportUltraEndless {
  groupLevel: number;
  cupNumBefore: number;
  cupNumAfterScheduleSettle: number;
  battleConfigId: number;
}

export interface VerifyGoogleOrderNotify {
  channel: VerifyGoogleOrderNotify_GoogleType;
  param: string;
}

export enum VerifyGoogleOrderNotify_CmdId {
  CMD_ID = 247,
  UNRECOGNIZED = -1,
}

export enum VerifyGoogleOrderNotify_GoogleType {
  GOOGLE_JAPAN = 1,
  GOOGLE_TW = 2,
  GOOGLE_KR = 3,
  GOOGLE_OVERSEAS = 4,
  GOOGLE_GLOBAL = 5,
  UNRECOGNIZED = -1,
}

export interface VerifyItunesOrderNotify {
  receiptData: string;
  deviceUuid: string;
  isAutoReissue: boolean;
  currencyCode: string;
  priceAmount: string;
}

export enum VerifyItunesOrderNotify_CmdId {
  CMD_ID = 82,
  UNRECOGNIZED = -1,
}

export interface VerifyMyCardOrderNotify {
  authCode: string;
  productName: string;
}

export enum VerifyMyCardOrderNotify_CmdId {
  CMD_ID = 370,
  UNRECOGNIZED = -1,
}

export interface VerifySamSungOrderNotify {
  purchaseId: string;
}

export enum VerifySamSungOrderNotify_CmdId {
  CMD_ID = 1581,
  UNRECOGNIZED = -1,
}

export interface VerifySteamOrderNotify {
  orderId: string;
}

export enum VerifySteamOrderNotify_CmdId {
  CMD_ID = 1650,
  UNRECOGNIZED = -1,
}

export interface VersionActivityData {
  id: number;
  beginTime: number;
  endTime: number;
  isTakeReward: boolean;
}

export interface VideoPopupData {
  id: number;
  beginTime: number;
  endTime: number;
  middleImagePath: string;
  videoIcon: string;
  videoLink: string;
  videoLinkOpenType: number;
  maxTimes: number;
}

export interface VipReward {
  vipLevel: number;
  payHcoin: number;
  rewardIdList: number[];
  rewardBatch: number;
  specialRewardIdList: number[];
  isSpecialShineList: number[];
  takenRewardIdList: number[];
}

export interface VirtualAvatar {
  virtualAvatarId: number;
  virtualWeaponId: number;
  virtualStigmataId1: number;
  virtualStigmataId2: number;
  virtualStigmataId3: number;
  virtualBuffId: number;
}

export interface VirtualAvatarGroup {
  groupId: number;
  virtualAvatarList: VirtualAvatar[];
  virtualWeaponIdList: number[];
  virtualStigmataIdList: number[];
  virtualAvatarTeamList: number[];
  virtualRoleList: VirtualTrainRole[];
  isLocked: boolean;
}

export interface VirtualAvatarGroupBriefData {
  groupId: number;
  chapterId: number;
}

export interface VirtualAvatarGroupChangeNotify {
  virtualAvatarGroup: VirtualAvatarGroup | undefined;
}

export enum VirtualAvatarGroupChangeNotify_CmdId {
  CMD_ID = 3512,
  UNRECOGNIZED = -1,
}

export interface VirtualGacha {
  boxId: number;
  status: VirtualGacha_Status;
  poolList: VirtualGachaPool[];
}

export enum VirtualGacha_Status {
  NORMAL = 0,
  EMPTY = 1,
  UNRECOGNIZED = -1,
}

export interface VirtualGachaPool {
  poolId: number;
  gachaTimes: number;
  totalTimes: number;
}

export interface VirtualGachaReq {
  boxId: number;
}

export enum VirtualGachaReq_CmdId {
  CMD_ID = 3508,
  UNRECOGNIZED = -1,
}

export interface VirtualGachaRsp {
  retcode: VirtualGachaRsp_Retcode;
  itemId: number;
  candidateItemIdList: number[];
  gachaStatus: VirtualGacha | undefined;
}

export enum VirtualGachaRsp_CmdId {
  CMD_ID = 3509,
  UNRECOGNIZED = -1,
}

export enum VirtualGachaRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  WAIT_CHOOSE = 2,
  MATERIAL_LACK = 3,
  EMPTY = 4,
  UNRECOGNIZED = -1,
}

export interface VirtualTrainCommon {
}

export enum VirtualTrainCommon_GroupType {
  GROUP_CHAPTER = 1,
  GROUP_RPG_TALE = 2,
  UNRECOGNIZED = -1,
}

export enum VirtualTrainCommon_ItemType {
  ITEM_NONE = 0,
  ITEM_AVATAR = 1,
  ITEM_WEAPON = 2,
  ITEM_STIGMATA = 3,
  ITEM_BUFF = 4,
  UNRECOGNIZED = -1,
}

export enum VirtualTrainCommon_VirtualAvatarType {
  VIRTUAL_AVATAR_NONE = 0,
  VIRTUAL_AVATAR_NORMAL = 1,
  VIRTUAL_AVATAR_QAVATAR = 2,
  UNRECOGNIZED = -1,
}

export interface VirtualTrainCustom {
  customId: number;
  level: number;
  choosedIndex: number;
  maxIndex: number;
}

export interface VirtualTrainDirectGachaNotify {
  groupId: number;
  itemId: number;
}

export enum VirtualTrainDirectGachaNotify_CmdId {
  CMD_ID = 3513,
  UNRECOGNIZED = -1,
}

export interface VirtualTrainEvoReq {
  groupId: number;
  evoAvatarId: number;
  isQuickEvo: boolean;
}

export enum VirtualTrainEvoReq_CmdId {
  CMD_ID = 3522,
  UNRECOGNIZED = -1,
}

export interface VirtualTrainEvoRsp {
  retcode: VirtualTrainEvoRsp_Retcode;
  groupId: number;
  evoAvatarId: number;
}

export enum VirtualTrainEvoRsp_CmdId {
  CMD_ID = 3523,
  UNRECOGNIZED = -1,
}

export enum VirtualTrainEvoRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  AVATAR_NOT_EXIST = 2,
  NO_NEXT_AVATAR = 3,
  CAN_NOT_EVO = 4,
  MATERIAL_LACK = 5,
  EVO_LIMIT = 6,
  UNRECOGNIZED = -1,
}

export interface VirtualTrainItemDrop {
  itemId: number;
  itemNum: number;
  splitMaterialList: Material[];
}

export interface VirtualTrainItemDropNotify {
  groupId: number;
  dropSrcType: VirtualTrainItemDropNotify_DropSrcType;
  itemDropList: VirtualTrainItemDrop[];
  stageId: number;
}

export enum VirtualTrainItemDropNotify_CmdId {
  CMD_ID = 3524,
  UNRECOGNIZED = -1,
}

export enum VirtualTrainItemDropNotify_DropSrcType {
  DROP_SRC_NONE = 0,
  DROP_SRC_RPG_STAGE = 1,
  DROP_SRC_RPG_MISSION = 2,
  DROP_SRC_RPG_QAVATAR = 3,
  DROP_SRC_GM = 10,
  UNRECOGNIZED = -1,
}

export interface VirtualTrainRole {
  virtualRoleId: number;
  customList: VirtualTrainCustom[];
}

export interface VirtualTrainRoleCustomChooseReq {
  groupId: number;
  virtualRoleId: number;
  customId: number;
  index: number;
}

export enum VirtualTrainRoleCustomChooseReq_CmdId {
  CMD_ID = 3520,
  UNRECOGNIZED = -1,
}

export interface VirtualTrainRoleCustomChooseRsp {
  retcode: VirtualTrainRoleCustomChooseRsp_Retcode;
}

export enum VirtualTrainRoleCustomChooseRsp_CmdId {
  CMD_ID = 3521,
  UNRECOGNIZED = -1,
}

export enum VirtualTrainRoleCustomChooseRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  LOCKED = 2,
  ROLE_NOT_EXIST = 3,
  UNRECOGNIZED = -1,
}

export interface VirtualTrainRoleCustomLevelUpReq {
  groupId: number;
  virtualRoleId: number;
  customId: number;
}

export enum VirtualTrainRoleCustomLevelUpReq_CmdId {
  CMD_ID = 3518,
  UNRECOGNIZED = -1,
}

export interface VirtualTrainRoleCustomLevelUpRsp {
  retcode: VirtualTrainRoleCustomLevelUpRsp_Retcode;
  groupId: number;
  virtualRoleId: number;
  customId: number;
  level: number;
}

export enum VirtualTrainRoleCustomLevelUpRsp_CmdId {
  CMD_ID = 3519,
  UNRECOGNIZED = -1,
}

export enum VirtualTrainRoleCustomLevelUpRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  MATERIAL_NOT_ENOUGH = 2,
  LEVEL_MAX = 3,
  ROLE_NOT_EXIST = 4,
  STAGE_NOT_FINISH = 5,
  PRE_CUSTOM_LEVEL_LACK = 6,
  UNRECOGNIZED = -1,
}

export interface WaitDelMaterialData {
  materialId: number;
  num: number;
}

export interface WantedMirrorRecoveryReq {
  consumeItemList: EquipmentItemList | undefined;
}

export enum WantedMirrorRecoveryReq_CmdId {
  CMD_ID = 1517,
  UNRECOGNIZED = -1,
}

export interface WantedMirrorRecoveryRsp {
  retcode: WantedMirrorRecoveryRsp_Retcode;
  rewardData: RewardData | undefined;
}

export enum WantedMirrorRecoveryRsp_CmdId {
  CMD_ID = 1518,
  UNRECOGNIZED = -1,
}

export enum WantedMirrorRecoveryRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  NOT_OPEN = 2,
  LOCK = 3,
  CONSUME_ITEM_NOT_EXIST = 4,
  CONSUME_ITEM_IN_USE = 5,
  CONSUME_ITEM_REPEAT = 6,
  CONSUME_ITEM_PROTECTED = 7,
  COST_GACHA_TICKET = 8,
  COST_SENIOR_EQUIP_FROM_NEW_DEVICE = 9,
  COST_SENIOR_EQUIP_CANCEL_PROTECT_TOO_SOON = 10,
  CONSUME_ITEM_GRAND_KEY = 11,
  CONSUME_ITEM_IN_FACILITY = 12,
  LACK_TICKET = 13,
  CONSUME_ITEM_PROTECTED_BY_SECURITY_PASSWORD = 14,
  UNRECOGNIZED = -1,
}

export interface WareHouseDemand {
  id: number;
  uid: number;
}

export interface WarshipAvatarData {
  warshipFirstAvatarId: number;
  warshipSecondAvatarId: number;
}

export interface WarshipComponent {
  type: number;
  componentId: number;
}

export interface WarshipItemReturnMaterialNotify {
  warshipItemId: number;
  convertNum: number;
  returnMaterialId: number;
  returnMaterialNum: number;
}

export enum WarshipItemReturnMaterialNotify_CmdId {
  CMD_ID = 5462,
  UNRECOGNIZED = -1,
}

export interface WarshipThemeData {
  warshipId: number;
  componentList: WarshipComponent[];
  bgmPlayMode: number;
  isWeatherFixed: boolean;
  weatherIdx: number;
}

export interface WatchReplayReq {
  key: string;
}

export enum WatchReplayReq_CmdId {
  CMD_ID = 5406,
  UNRECOGNIZED = -1,
}

export interface WatchReplayRsp {
  retcode: WatchReplayRsp_Retcode;
}

export enum WatchReplayRsp_CmdId {
  CMD_ID = 5407,
  UNRECOGNIZED = -1,
}

export enum WatchReplayRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface Weapon {
  uniqueId: number;
  id: number;
  level: number;
  exp: number;
  isProtected: boolean;
  cancelProtectTime: number;
  isExtracted: boolean;
  subWeaponId: number;
  quantumBranchList: number[];
}

export interface WeaponDetailData {
  id: number;
  level: number;
  uniqueId: number;
  subWeaponId: number;
}

export interface WeaponInfo {
  weaponId: number;
  subWeaponId: number;
}

export interface WebActivity {
  activityId: number;
  showType: number;
}

export interface WeekDayActivity {
  activityId: number;
  stageIdList: number[];
  enterTimes: number;
  beginTime: number;
  endTime: number;
  activityEndTime: number;
  exchangeTimes: number;
  mpRaidNextRefreshTime: number;
  mpRaidResetTimes: number;
  mpMemberTodayEnterTimes: number;
  challengeRewardGrantedList: number[];
  activityBeginTime: number;
  forceOpenTime: number;
  mpRaidScoreSum: number;
  isGetMpRaidSpecialReward: boolean;
  raidScoreRewardList: number[];
  scheduleId: number;
}

export interface WeekDayActivityStageCompensation {
  stageId: number;
  isFirstWin: boolean;
  challengeRewardList: number[];
}

export interface WeekDayActivitySweepReq {
  stageIdList: number[];
}

export enum WeekDayActivitySweepReq_CmdId {
  CMD_ID = 1664,
  UNRECOGNIZED = -1,
}

export interface WeekDayActivitySweepRsp {
  retcode: WeekDayActivitySweepRsp_Retcode;
  rewardData: RewardData | undefined;
  dropItemList: DropItem[];
}

export enum WeekDayActivitySweepRsp_CmdId {
  CMD_ID = 1665,
  UNRECOGNIZED = -1,
}

export enum WeekDayActivitySweepRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  UNRECOGNIZED = -1,
}

export interface WeeklyReportBlockZone {
  totalScore: number;
  rewardIdList: number[];
}

export interface WeeklyReportEndless {
  endlessType: EndlessType;
  beginTime: number;
  groupLevel: number;
  finalBossId: number;
  score: number;
  lineupInfo: LineupBriefInfo | undefined;
  rewardProgress: number;
  rewardType: EndlessRewardType;
  singleModeScore: number;
  battleConfigId: number;
  singleModeActivityId: number;
  endTime: number;
  greedyRewardData: RewardData | undefined;
  greedyMaxFinishFloor: number;
}

export interface WeeklyReportExBoss {
  scheduleId: number;
  rankId: number;
  timesScore: number;
  bossGroupList: WeeklyReportExBossGroup[];
  rankPercent: number;
  rank: number;
  beginTime: number;
  endTime: number;
  rewardIdList: number[];
}

export interface WeeklyReportExBossGroup {
  bossGroupId: number;
  finishedBossInfo: FinishedExBossInfo | undefined;
}

export interface WeeklyReportUltraEndless {
  scheduleId: number;
  groupLevel: number;
  maxStageScore: number;
  groupMemberNum: number;
  rank: number;
  cupNumBeforeScheduleBegin: number;
  cupNumAfterScheduleSettle: number;
  topRank: number;
  topRankRewardId: number;
  groupLevelRewardId: number;
  lineupInfo: LineupBriefInfo | undefined;
  maxMissionNum: number;
  finishedMissionNum: number;
  missionRewardList: number[];
  beginTime: number;
  endTime: number;
  battleConfigId: number;
}

export interface WeeklyRoutineMission {
  missionId: number;
  curContribution: number;
  weeklyContribution: number;
  missionFinishTimes: number;
}

export interface WikiDetailData {
  wikiDetailType: number;
  wikiDetailNumGet: number;
  wikiDetailScore: number;
  wikiDetailNumTotal: number;
}

export interface WikiTakeActivitySuitRewardReq {
  suitId: number;
}

export enum WikiTakeActivitySuitRewardReq_CmdId {
  CMD_ID = 1592,
  UNRECOGNIZED = -1,
}

export interface WikiTakeActivitySuitRewardRsp {
  retcode: WikiTakeActivitySuitRewardRsp_Retcode;
  suitId: number;
  reward: RewardData | undefined;
}

export enum WikiTakeActivitySuitRewardRsp_CmdId {
  CMD_ID = 1593,
  UNRECOGNIZED = -1,
}

export enum WikiTakeActivitySuitRewardRsp_Retcode {
  SUCC = 0,
  FAIL = 1,
  HAS_TAKE = 2,
  NOT_GET = 3,
  UNRECOGNIZED = -1,
}

export interface WishWellData {
  leftTimes: number;
  setId: number;
  materialId: number;
  materialNum: number;
  equipNeedNum: number;
  equipList: WishWellData_Equip[];
  maxWishTimes: number;
}

export interface WishWellData_Equip {
  equipId: number;
  equipLevel: number;
}

export interface WorldMapData {
  worldMapId: number;
  beginTime: number;
  endTime: number;
  highLightMinLevel: number;
  highLightMaxLevel: number;
  weight: number;
  advanceTime: number;
  id: number;
}
